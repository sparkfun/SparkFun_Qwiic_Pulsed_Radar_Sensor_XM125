
out/example_diagnostic_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000190  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007a08  08000190  08000190  00010190  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003be8  08007b98  08007b98  00017b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b780  0800b780  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  0800b780  0800b780  0001b780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b788  0800b788  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800b788  0800b788  0001b788  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  0800b790  0800b790  0001b790  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800b798  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003d4  20000090  0800b828  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00001604  20000464  0800b828  00020464  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .comment      0000004c  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004066  00000000  00000000  0002010c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000b9f  00000000  00000000  00024172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0000250f  00000000  00000000  00024d11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000158  00000000  00000000  00027220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000002d8  00000000  00000000  00027378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001699  00000000  00000000  00027650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00001008  00000000  00000000  00028ce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000a4c  00000000  00000000  00029cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000090 	.word	0x20000090
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007b80 	.word	0x08007b80

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000094 	.word	0x20000094
 80001cc:	08007b80 	.word	0x08007b80

080001d0 <HAL_NVIC_SetPriority.constprop.0>:
 80001d0:	4b14      	ldr	r3, [pc, #80]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 80001d2:	68db      	ldr	r3, [r3, #12]
 80001d4:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80001d8:	b410      	push	{r4}
 80001da:	f1c3 0407 	rsb	r4, r3, #7
 80001de:	1d1a      	adds	r2, r3, #4
 80001e0:	2c04      	cmp	r4, #4
 80001e2:	bf28      	it	cs
 80001e4:	2404      	movcs	r4, #4
 80001e6:	2a06      	cmp	r2, #6
 80001e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80001ec:	fa02 f204 	lsl.w	r2, r2, r4
 80001f0:	bf8c      	ite	hi
 80001f2:	3b03      	subhi	r3, #3
 80001f4:	2300      	movls	r3, #0
 80001f6:	ea21 0102 	bic.w	r1, r1, r2
 80001fa:	4099      	lsls	r1, r3
 80001fc:	1c43      	adds	r3, r0, #1
 80001fe:	d00a      	beq.n	8000216 <HAL_NVIC_SetPriority.constprop.0+0x46>
 8000200:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8000204:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8000208:	0109      	lsls	r1, r1, #4
 800020a:	b2c9      	uxtb	r1, r1
 800020c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8000210:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000214:	4770      	bx	lr
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 8000218:	0109      	lsls	r1, r1, #4
 800021a:	b2c9      	uxtb	r1, r1
 800021c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8000220:	e7f6      	b.n	8000210 <HAL_NVIC_SetPriority.constprop.0+0x40>
 8000222:	bf00      	nop
 8000224:	e000ed00 	.word	0xe000ed00

08000228 <UART_WaitOnFlagUntilTimeout.constprop.0>:
 8000228:	b4f0      	push	{r4, r5, r6, r7}
 800022a:	6805      	ldr	r5, [r0, #0]
 800022c:	4f29      	ldr	r7, [pc, #164]	; (80002d4 <UART_WaitOnFlagUntilTimeout.constprop.0+0xac>)
 800022e:	4606      	mov	r6, r0
 8000230:	e001      	b.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000232:	1c58      	adds	r0, r3, #1
 8000234:	d106      	bne.n	8000244 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1c>
 8000236:	69ec      	ldr	r4, [r5, #28]
 8000238:	ea31 0004 	bics.w	r0, r1, r4
 800023c:	d1f9      	bne.n	8000232 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800023e:	2000      	movs	r0, #0
 8000240:	bcf0      	pop	{r4, r5, r6, r7}
 8000242:	4770      	bx	lr
 8000244:	6838      	ldr	r0, [r7, #0]
 8000246:	1a80      	subs	r0, r0, r2
 8000248:	4283      	cmp	r3, r0
 800024a:	d327      	bcc.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024c:	b333      	cbz	r3, 800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024e:	6828      	ldr	r0, [r5, #0]
 8000250:	0744      	lsls	r4, r0, #29
 8000252:	d5f0      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000254:	69e8      	ldr	r0, [r5, #28]
 8000256:	0500      	lsls	r0, r0, #20
 8000258:	d5ed      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 800025a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800025e:	622b      	str	r3, [r5, #32]
 8000260:	e855 3f00 	ldrex	r3, [r5]
 8000264:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8000268:	e845 3200 	strex	r2, r3, [r5]
 800026c:	2a00      	cmp	r2, #0
 800026e:	d1f7      	bne.n	8000260 <UART_WaitOnFlagUntilTimeout.constprop.0+0x38>
 8000270:	6832      	ldr	r2, [r6, #0]
 8000272:	f102 0308 	add.w	r3, r2, #8
 8000276:	e853 3f00 	ldrex	r3, [r3]
 800027a:	f023 0301 	bic.w	r3, r3, #1
 800027e:	f102 0008 	add.w	r0, r2, #8
 8000282:	e840 3100 	strex	r1, r3, [r0]
 8000286:	2900      	cmp	r1, #0
 8000288:	d1f3      	bne.n	8000272 <UART_WaitOnFlagUntilTimeout.constprop.0+0x4a>
 800028a:	2320      	movs	r3, #32
 800028c:	67b3      	str	r3, [r6, #120]	; 0x78
 800028e:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 8000292:	67f3      	str	r3, [r6, #124]	; 0x7c
 8000294:	2003      	movs	r0, #3
 8000296:	f8c6 3080 	str.w	r3, [r6, #128]	; 0x80
 800029a:	e7d1      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 800029c:	e855 3f00 	ldrex	r3, [r5]
 80002a0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80002a4:	e845 3200 	strex	r2, r3, [r5]
 80002a8:	2a00      	cmp	r2, #0
 80002aa:	d1f7      	bne.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 80002ac:	6832      	ldr	r2, [r6, #0]
 80002ae:	f102 0308 	add.w	r3, r2, #8
 80002b2:	e853 3f00 	ldrex	r3, [r3]
 80002b6:	f023 0301 	bic.w	r3, r3, #1
 80002ba:	f102 0008 	add.w	r0, r2, #8
 80002be:	e840 3100 	strex	r1, r3, [r0]
 80002c2:	2900      	cmp	r1, #0
 80002c4:	d1f3      	bne.n	80002ae <UART_WaitOnFlagUntilTimeout.constprop.0+0x86>
 80002c6:	2320      	movs	r3, #32
 80002c8:	67b3      	str	r3, [r6, #120]	; 0x78
 80002ca:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 80002ce:	2003      	movs	r0, #3
 80002d0:	67f3      	str	r3, [r6, #124]	; 0x7c
 80002d2:	e7b5      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 80002d4:	200000ac 	.word	0x200000ac

080002d8 <HAL_DMA_Init.constprop.0>:
 80002d8:	4603      	mov	r3, r0
 80002da:	4a21      	ldr	r2, [pc, #132]	; (8000360 <HAL_DMA_Init.constprop.0+0x88>)
 80002dc:	6800      	ldr	r0, [r0, #0]
 80002de:	4290      	cmp	r0, r2
 80002e0:	bf95      	itete	ls
 80002e2:	4a20      	ldrls	r2, [pc, #128]	; (8000364 <HAL_DMA_Init.constprop.0+0x8c>)
 80002e4:	4a20      	ldrhi	r2, [pc, #128]	; (8000368 <HAL_DMA_Init.constprop.0+0x90>)
 80002e6:	4921      	ldrls	r1, [pc, #132]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 80002e8:	4921      	ldrhi	r1, [pc, #132]	; (8000370 <HAL_DMA_Init.constprop.0+0x98>)
 80002ea:	b430      	push	{r4, r5}
 80002ec:	4402      	add	r2, r0
 80002ee:	6419      	str	r1, [r3, #64]	; 0x40
 80002f0:	2114      	movs	r1, #20
 80002f2:	fbb2 f2f1 	udiv	r2, r2, r1
 80002f6:	0092      	lsls	r2, r2, #2
 80002f8:	645a      	str	r2, [r3, #68]	; 0x44
 80002fa:	2202      	movs	r2, #2
 80002fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8000300:	6801      	ldr	r1, [r0, #0]
 8000302:	689d      	ldr	r5, [r3, #8]
 8000304:	e9d3 2405 	ldrd	r2, r4, [r3, #20]
 8000308:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800030c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8000310:	432a      	orrs	r2, r5
 8000312:	430a      	orrs	r2, r1
 8000314:	4322      	orrs	r2, r4
 8000316:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800031a:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 800031e:	6002      	str	r2, [r0, #0]
 8000320:	d014      	beq.n	800034c <HAL_DMA_Init.constprop.0+0x74>
 8000322:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8000324:	4a11      	ldr	r2, [pc, #68]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 8000326:	4291      	cmp	r1, r2
 8000328:	bf08      	it	eq
 800032a:	4912      	ldreq	r1, [pc, #72]	; (8000374 <HAL_DMA_Init.constprop.0+0x9c>)
 800032c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800032e:	bf18      	it	ne
 8000330:	4911      	ldrne	r1, [pc, #68]	; (8000378 <HAL_DMA_Init.constprop.0+0xa0>)
 8000332:	f002 001c 	and.w	r0, r2, #28
 8000336:	240f      	movs	r4, #15
 8000338:	680a      	ldr	r2, [r1, #0]
 800033a:	4084      	lsls	r4, r0
 800033c:	ea22 0204 	bic.w	r2, r2, r4
 8000340:	600a      	str	r2, [r1, #0]
 8000342:	685a      	ldr	r2, [r3, #4]
 8000344:	680c      	ldr	r4, [r1, #0]
 8000346:	4082      	lsls	r2, r0
 8000348:	4322      	orrs	r2, r4
 800034a:	600a      	str	r2, [r1, #0]
 800034c:	2000      	movs	r0, #0
 800034e:	2201      	movs	r2, #1
 8000350:	63d8      	str	r0, [r3, #60]	; 0x3c
 8000352:	f883 0024 	strb.w	r0, [r3, #36]	; 0x24
 8000356:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800035a:	bc30      	pop	{r4, r5}
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	40020407 	.word	0x40020407
 8000364:	bffdfff8 	.word	0xbffdfff8
 8000368:	bffdfbf8 	.word	0xbffdfbf8
 800036c:	40020000 	.word	0x40020000
 8000370:	40020400 	.word	0x40020400
 8000374:	400200a8 	.word	0x400200a8
 8000378:	400204a8 	.word	0x400204a8

0800037c <HAL_RTC_SetAlarm_IT.constprop.0>:
 800037c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000380:	4c65      	ldr	r4, [pc, #404]	; (8000518 <HAL_RTC_SetAlarm_IT.constprop.0+0x19c>)
 8000382:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8000386:	2b01      	cmp	r3, #1
 8000388:	f000 80c2 	beq.w	8000510 <HAL_RTC_SetAlarm_IT.constprop.0+0x194>
 800038c:	6861      	ldr	r1, [r4, #4]
 800038e:	2201      	movs	r2, #1
 8000390:	2302      	movs	r3, #2
 8000392:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8000396:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800039a:	688e      	ldr	r6, [r1, #8]
 800039c:	7802      	ldrb	r2, [r0, #0]
 800039e:	6a05      	ldr	r5, [r0, #32]
 80003a0:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80003a4:	bf16      	itet	ne
 80003a6:	78c6      	ldrbne	r6, [r0, #3]
 80003a8:	70c6      	strbeq	r6, [r0, #3]
 80003aa:	05b6      	lslne	r6, r6, #22
 80003ac:	2a09      	cmp	r2, #9
 80003ae:	d909      	bls.n	80003c4 <HAL_RTC_SetAlarm_IT.constprop.0+0x48>
 80003b0:	2300      	movs	r3, #0
 80003b2:	3a0a      	subs	r2, #10
 80003b4:	b2d2      	uxtb	r2, r2
 80003b6:	2a09      	cmp	r2, #9
 80003b8:	f103 0301 	add.w	r3, r3, #1
 80003bc:	d8f9      	bhi.n	80003b2 <HAL_RTC_SetAlarm_IT.constprop.0+0x36>
 80003be:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
 80003c2:	b2d2      	uxtb	r2, r2
 80003c4:	7843      	ldrb	r3, [r0, #1]
 80003c6:	2b09      	cmp	r3, #9
 80003c8:	ea4f 4202 	mov.w	r2, r2, lsl #16
 80003cc:	d909      	bls.n	80003e2 <HAL_RTC_SetAlarm_IT.constprop.0+0x66>
 80003ce:	2700      	movs	r7, #0
 80003d0:	3b0a      	subs	r3, #10
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	2b09      	cmp	r3, #9
 80003d6:	f107 0701 	add.w	r7, r7, #1
 80003da:	d8f9      	bhi.n	80003d0 <HAL_RTC_SetAlarm_IT.constprop.0+0x54>
 80003dc:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f890 e002 	ldrb.w	lr, [r0, #2]
 80003e6:	f1be 0f09 	cmp.w	lr, #9
 80003ea:	ea4f 2803 	mov.w	r8, r3, lsl #8
 80003ee:	d90d      	bls.n	800040c <HAL_RTC_SetAlarm_IT.constprop.0+0x90>
 80003f0:	2700      	movs	r7, #0
 80003f2:	f1ae 0e0a 	sub.w	lr, lr, #10
 80003f6:	fa5f fe8e 	uxtb.w	lr, lr
 80003fa:	f1be 0f09 	cmp.w	lr, #9
 80003fe:	f107 0701 	add.w	r7, r7, #1
 8000402:	d8f6      	bhi.n	80003f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x76>
 8000404:	ea4e 1e07 	orr.w	lr, lr, r7, lsl #4
 8000408:	fa5f fe8e 	uxtb.w	lr, lr
 800040c:	f890 c024 	ldrb.w	ip, [r0, #36]	; 0x24
 8000410:	f1bc 0f09 	cmp.w	ip, #9
 8000414:	d90d      	bls.n	8000432 <HAL_RTC_SetAlarm_IT.constprop.0+0xb6>
 8000416:	2700      	movs	r7, #0
 8000418:	f1ac 0c0a 	sub.w	ip, ip, #10
 800041c:	fa5f fc8c 	uxtb.w	ip, ip
 8000420:	f1bc 0f09 	cmp.w	ip, #9
 8000424:	f107 0701 	add.w	r7, r7, #1
 8000428:	d8f6      	bhi.n	8000418 <HAL_RTC_SetAlarm_IT.constprop.0+0x9c>
 800042a:	ea4c 1c07 	orr.w	ip, ip, r7, lsl #4
 800042e:	fa5f fc8c 	uxtb.w	ip, ip
 8000432:	6943      	ldr	r3, [r0, #20]
 8000434:	6847      	ldr	r7, [r0, #4]
 8000436:	431d      	orrs	r5, r3
 8000438:	432e      	orrs	r6, r5
 800043a:	4332      	orrs	r2, r6
 800043c:	ea48 0302 	orr.w	r3, r8, r2
 8000440:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8000442:	69c6      	ldr	r6, [r0, #28]
 8000444:	25ca      	movs	r5, #202	; 0xca
 8000446:	2053      	movs	r0, #83	; 0x53
 8000448:	624d      	str	r5, [r1, #36]	; 0x24
 800044a:	ea43 0e0e 	orr.w	lr, r3, lr
 800044e:	6248      	str	r0, [r1, #36]	; 0x24
 8000450:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8000454:	ea4e 630c 	orr.w	r3, lr, ip, lsl #24
 8000458:	688a      	ldr	r2, [r1, #8]
 800045a:	ea46 0607 	orr.w	r6, r6, r7
 800045e:	d039      	beq.n	80004d4 <HAL_RTC_SetAlarm_IT.constprop.0+0x158>
 8000460:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000464:	608a      	str	r2, [r1, #8]
 8000466:	68ca      	ldr	r2, [r1, #12]
 8000468:	b2d2      	uxtb	r2, r2
 800046a:	f462 7220 	orn	r2, r2, #640	; 0x280
 800046e:	60ca      	str	r2, [r1, #12]
 8000470:	6825      	ldr	r5, [r4, #0]
 8000472:	e004      	b.n	800047e <HAL_RTC_SetAlarm_IT.constprop.0+0x102>
 8000474:	6820      	ldr	r0, [r4, #0]
 8000476:	1b40      	subs	r0, r0, r5
 8000478:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800047c:	d820      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 800047e:	68ca      	ldr	r2, [r1, #12]
 8000480:	f012 0202 	ands.w	r2, r2, #2
 8000484:	d0f6      	beq.n	8000474 <HAL_RTC_SetAlarm_IT.constprop.0+0xf8>
 8000486:	620b      	str	r3, [r1, #32]
 8000488:	648e      	str	r6, [r1, #72]	; 0x48
 800048a:	688b      	ldr	r3, [r1, #8]
 800048c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000490:	608b      	str	r3, [r1, #8]
 8000492:	688b      	ldr	r3, [r1, #8]
 8000494:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000498:	608b      	str	r3, [r1, #8]
 800049a:	4b20      	ldr	r3, [pc, #128]	; (800051c <HAL_RTC_SetAlarm_IT.constprop.0+0x1a0>)
 800049c:	681a      	ldr	r2, [r3, #0]
 800049e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	689a      	ldr	r2, [r3, #8]
 80004a6:	26ff      	movs	r6, #255	; 0xff
 80004a8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004ac:	2501      	movs	r5, #1
 80004ae:	2000      	movs	r0, #0
 80004b0:	609a      	str	r2, [r3, #8]
 80004b2:	624e      	str	r6, [r1, #36]	; 0x24
 80004b4:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80004b8:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80004bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004c0:	2303      	movs	r3, #3
 80004c2:	20ff      	movs	r0, #255	; 0xff
 80004c4:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80004c8:	6248      	str	r0, [r1, #36]	; 0x24
 80004ca:	4618      	mov	r0, r3
 80004cc:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80004d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80004d8:	608a      	str	r2, [r1, #8]
 80004da:	68ca      	ldr	r2, [r1, #12]
 80004dc:	b2d2      	uxtb	r2, r2
 80004de:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80004e2:	60ca      	str	r2, [r1, #12]
 80004e4:	6825      	ldr	r5, [r4, #0]
 80004e6:	e004      	b.n	80004f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x176>
 80004e8:	6820      	ldr	r0, [r4, #0]
 80004ea:	1b40      	subs	r0, r0, r5
 80004ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80004f0:	d8e6      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 80004f2:	68ca      	ldr	r2, [r1, #12]
 80004f4:	f012 0201 	ands.w	r2, r2, #1
 80004f8:	d0f6      	beq.n	80004e8 <HAL_RTC_SetAlarm_IT.constprop.0+0x16c>
 80004fa:	61cb      	str	r3, [r1, #28]
 80004fc:	644e      	str	r6, [r1, #68]	; 0x44
 80004fe:	688b      	ldr	r3, [r1, #8]
 8000500:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000504:	608b      	str	r3, [r1, #8]
 8000506:	688b      	ldr	r3, [r1, #8]
 8000508:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800050c:	608b      	str	r3, [r1, #8]
 800050e:	e7c4      	b.n	800049a <HAL_RTC_SetAlarm_IT.constprop.0+0x11e>
 8000510:	2002      	movs	r0, #2
 8000512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000516:	bf00      	nop
 8000518:	200000ac 	.word	0x200000ac
 800051c:	40010400 	.word	0x40010400

08000520 <HAL_RTC_WaitForSynchro.constprop.0>:
 8000520:	4909      	ldr	r1, [pc, #36]	; (8000548 <HAL_RTC_WaitForSynchro.constprop.0+0x28>)
 8000522:	684a      	ldr	r2, [r1, #4]
 8000524:	68d3      	ldr	r3, [r2, #12]
 8000526:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800052a:	60d3      	str	r3, [r2, #12]
 800052c:	6808      	ldr	r0, [r1, #0]
 800052e:	e004      	b.n	800053a <HAL_RTC_WaitForSynchro.constprop.0+0x1a>
 8000530:	680b      	ldr	r3, [r1, #0]
 8000532:	1a1b      	subs	r3, r3, r0
 8000534:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000538:	d804      	bhi.n	8000544 <HAL_RTC_WaitForSynchro.constprop.0+0x24>
 800053a:	68d3      	ldr	r3, [r2, #12]
 800053c:	069b      	lsls	r3, r3, #26
 800053e:	d5f7      	bpl.n	8000530 <HAL_RTC_WaitForSynchro.constprop.0+0x10>
 8000540:	2000      	movs	r0, #0
 8000542:	4770      	bx	lr
 8000544:	2003      	movs	r0, #3
 8000546:	4770      	bx	lr
 8000548:	200000ac 	.word	0x200000ac

0800054c <RTC_ExitInitMode.constprop.0>:
 800054c:	b508      	push	{r3, lr}
 800054e:	4b11      	ldr	r3, [pc, #68]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 8000550:	68da      	ldr	r2, [r3, #12]
 8000552:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000556:	60da      	str	r2, [r3, #12]
 8000558:	689a      	ldr	r2, [r3, #8]
 800055a:	0692      	lsls	r2, r2, #26
 800055c:	d403      	bmi.n	8000566 <RTC_ExitInitMode.constprop.0+0x1a>
 800055e:	f7ff ffdf 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000562:	b988      	cbnz	r0, 8000588 <RTC_ExitInitMode.constprop.0+0x3c>
 8000564:	bd08      	pop	{r3, pc}
 8000566:	689a      	ldr	r2, [r3, #8]
 8000568:	f022 0220 	bic.w	r2, r2, #32
 800056c:	609a      	str	r2, [r3, #8]
 800056e:	f7ff ffd7 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000572:	b118      	cbz	r0, 800057c <RTC_ExitInitMode.constprop.0+0x30>
 8000574:	4b08      	ldr	r3, [pc, #32]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 8000576:	2003      	movs	r0, #3
 8000578:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800057c:	4a05      	ldr	r2, [pc, #20]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 800057e:	6893      	ldr	r3, [r2, #8]
 8000580:	f043 0320 	orr.w	r3, r3, #32
 8000584:	6093      	str	r3, [r2, #8]
 8000586:	bd08      	pop	{r3, pc}
 8000588:	4b03      	ldr	r3, [pc, #12]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 800058a:	2003      	movs	r0, #3
 800058c:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8000590:	bd08      	pop	{r3, pc}
 8000592:	bf00      	nop
 8000594:	40002800 	.word	0x40002800
 8000598:	200000ac 	.word	0x200000ac

0800059c <RTC_EnterInitMode.constprop.0>:
 800059c:	490e      	ldr	r1, [pc, #56]	; (80005d8 <RTC_EnterInitMode.constprop.0+0x3c>)
 800059e:	684a      	ldr	r2, [r1, #4]
 80005a0:	68d0      	ldr	r0, [r2, #12]
 80005a2:	f010 0040 	ands.w	r0, r0, #64	; 0x40
 80005a6:	d001      	beq.n	80005ac <RTC_EnterInitMode.constprop.0+0x10>
 80005a8:	2000      	movs	r0, #0
 80005aa:	4770      	bx	lr
 80005ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80005b0:	b430      	push	{r4, r5}
 80005b2:	60d3      	str	r3, [r2, #12]
 80005b4:	680c      	ldr	r4, [r1, #0]
 80005b6:	2503      	movs	r5, #3
 80005b8:	e009      	b.n	80005ce <RTC_EnterInitMode.constprop.0+0x32>
 80005ba:	2803      	cmp	r0, #3
 80005bc:	d00a      	beq.n	80005d4 <RTC_EnterInitMode.constprop.0+0x38>
 80005be:	680b      	ldr	r3, [r1, #0]
 80005c0:	1b1b      	subs	r3, r3, r4
 80005c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80005c6:	bf84      	itt	hi
 80005c8:	f881 5025 	strbhi.w	r5, [r1, #37]	; 0x25
 80005cc:	2003      	movhi	r0, #3
 80005ce:	68d3      	ldr	r3, [r2, #12]
 80005d0:	065b      	lsls	r3, r3, #25
 80005d2:	d5f2      	bpl.n	80005ba <RTC_EnterInitMode.constprop.0+0x1e>
 80005d4:	bc30      	pop	{r4, r5}
 80005d6:	4770      	bx	lr
 80005d8:	200000ac 	.word	0x200000ac

080005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80005dc:	b4f0      	push	{r4, r5, r6, r7}
 80005de:	4b31      	ldr	r3, [pc, #196]	; (80006a4 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xc8>)
 80005e0:	4e31      	ldr	r6, [pc, #196]	; (80006a8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xcc>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6805      	ldr	r5, [r0, #0]
 80005e6:	b082      	sub	sp, #8
 80005e8:	2400      	movs	r4, #0
 80005ea:	f88d 4003 	strb.w	r4, [sp, #3]
 80005ee:	6834      	ldr	r4, [r6, #0]
 80005f0:	6837      	ldr	r7, [r6, #0]
 80005f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80005f6:	f1c4 0464 	rsb	r4, r4, #100	; 0x64
 80005fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80005fe:	4422      	add	r2, r4
 8000600:	0d1b      	lsrs	r3, r3, #20
 8000602:	fb02 f303 	mul.w	r3, r2, r3
 8000606:	9301      	str	r3, [sp, #4]
 8000608:	68ab      	ldr	r3, [r5, #8]
 800060a:	4219      	tst	r1, r3
 800060c:	d10a      	bne.n	8000624 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x48>
 800060e:	e02c      	b.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000610:	9c01      	ldr	r4, [sp, #4]
 8000612:	9b01      	ldr	r3, [sp, #4]
 8000614:	3b01      	subs	r3, #1
 8000616:	9301      	str	r3, [sp, #4]
 8000618:	68ab      	ldr	r3, [r5, #8]
 800061a:	2c00      	cmp	r4, #0
 800061c:	bf08      	it	eq
 800061e:	2200      	moveq	r2, #0
 8000620:	4219      	tst	r1, r3
 8000622:	d022      	beq.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000624:	f5b1 6fc0 	cmp.w	r1, #1536	; 0x600
 8000628:	d105      	bne.n	8000636 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5a>
 800062a:	7b2b      	ldrb	r3, [r5, #12]
 800062c:	b2db      	uxtb	r3, r3
 800062e:	f88d 3003 	strb.w	r3, [sp, #3]
 8000632:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8000636:	6833      	ldr	r3, [r6, #0]
 8000638:	1bdb      	subs	r3, r3, r7
 800063a:	429a      	cmp	r2, r3
 800063c:	d8e8      	bhi.n	8000610 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x34>
 800063e:	686b      	ldr	r3, [r5, #4]
 8000640:	6842      	ldr	r2, [r0, #4]
 8000642:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8000646:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800064a:	606b      	str	r3, [r5, #4]
 800064c:	d01a      	beq.n	8000684 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa8>
 800064e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000650:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000654:	d00d      	beq.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 8000656:	2201      	movs	r2, #1
 8000658:	2300      	movs	r3, #0
 800065a:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 800065e:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8000662:	2003      	movs	r0, #3
 8000664:	b002      	add	sp, #8
 8000666:	bcf0      	pop	{r4, r5, r6, r7}
 8000668:	4770      	bx	lr
 800066a:	2000      	movs	r0, #0
 800066c:	b002      	add	sp, #8
 800066e:	bcf0      	pop	{r4, r5, r6, r7}
 8000670:	4770      	bx	lr
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000678:	602b      	str	r3, [r5, #0]
 800067a:	682b      	ldr	r3, [r5, #0]
 800067c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000680:	602b      	str	r3, [r5, #0]
 8000682:	e7e8      	b.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 8000684:	6883      	ldr	r3, [r0, #8]
 8000686:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800068a:	d002      	beq.n	8000692 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xb6>
 800068c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000690:	d1dd      	bne.n	800064e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x72>
 8000692:	682b      	ldr	r3, [r5, #0]
 8000694:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000698:	602b      	str	r3, [r5, #0]
 800069a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800069c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80006a0:	d1d9      	bne.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 80006a2:	e7e6      	b.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 80006a4:	20000000 	.word	0x20000000
 80006a8:	200000ac 	.word	0x200000ac

080006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80006ac:	b470      	push	{r4, r5, r6}
 80006ae:	4d29      	ldr	r5, [pc, #164]	; (8000754 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80006b0:	4b29      	ldr	r3, [pc, #164]	; (8000758 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 80006b2:	682a      	ldr	r2, [r5, #0]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6804      	ldr	r4, [r0, #0]
 80006b8:	682e      	ldr	r6, [r5, #0]
 80006ba:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
 80006be:	4411      	add	r1, r2
 80006c0:	b083      	sub	sp, #12
 80006c2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80006c6:	fb01 f303 	mul.w	r3, r1, r3
 80006ca:	9301      	str	r3, [sp, #4]
 80006cc:	68a3      	ldr	r3, [r4, #8]
 80006ce:	061a      	lsls	r2, r3, #24
 80006d0:	d50d      	bpl.n	80006ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x42>
 80006d2:	682b      	ldr	r3, [r5, #0]
 80006d4:	1b9b      	subs	r3, r3, r6
 80006d6:	428b      	cmp	r3, r1
 80006d8:	d20d      	bcs.n	80006f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4a>
 80006da:	9a01      	ldr	r2, [sp, #4]
 80006dc:	9b01      	ldr	r3, [sp, #4]
 80006de:	3b01      	subs	r3, #1
 80006e0:	9301      	str	r3, [sp, #4]
 80006e2:	68a3      	ldr	r3, [r4, #8]
 80006e4:	2a00      	cmp	r2, #0
 80006e6:	bf08      	it	eq
 80006e8:	2100      	moveq	r1, #0
 80006ea:	061b      	lsls	r3, r3, #24
 80006ec:	d4f1      	bmi.n	80006d2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 80006ee:	2000      	movs	r0, #0
 80006f0:	b003      	add	sp, #12
 80006f2:	bc70      	pop	{r4, r5, r6}
 80006f4:	4770      	bx	lr
 80006f6:	6863      	ldr	r3, [r4, #4]
 80006f8:	6842      	ldr	r2, [r0, #4]
 80006fa:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80006fe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8000702:	6063      	str	r3, [r4, #4]
 8000704:	d016      	beq.n	8000734 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
 8000706:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000708:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800070c:	d009      	beq.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800070e:	2201      	movs	r2, #1
 8000710:	2300      	movs	r3, #0
 8000712:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 8000716:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800071a:	2003      	movs	r0, #3
 800071c:	b003      	add	sp, #12
 800071e:	bc70      	pop	{r4, r5, r6}
 8000720:	4770      	bx	lr
 8000722:	6823      	ldr	r3, [r4, #0]
 8000724:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000728:	6023      	str	r3, [r4, #0]
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	e7ec      	b.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000734:	6883      	ldr	r3, [r0, #8]
 8000736:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800073a:	d002      	beq.n	8000742 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
 800073c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000740:	d1e1      	bne.n	8000706 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x5a>
 8000742:	6823      	ldr	r3, [r4, #0]
 8000744:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800074c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000750:	d1dd      	bne.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000752:	e7e6      	b.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8000754:	200000ac 	.word	0x200000ac
 8000758:	20000000 	.word	0x20000000

0800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>:
 800075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000760:	4604      	mov	r4, r0
 8000762:	b087      	sub	sp, #28
 8000764:	2500      	movs	r5, #0
 8000766:	eb04 0e41 	add.w	lr, r4, r1, lsl #1
 800076a:	9002      	str	r0, [sp, #8]
 800076c:	9205      	str	r2, [sp, #20]
 800076e:	4610      	mov	r0, r2
 8000770:	f8df b1c4 	ldr.w	fp, [pc, #452]	; 8000938 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1dc>
 8000774:	9104      	str	r1, [sp, #16]
 8000776:	9303      	str	r3, [sp, #12]
 8000778:	f1ae 0e22 	sub.w	lr, lr, #34	; 0x22
 800077c:	1ea2      	subs	r2, r4, #2
 800077e:	462f      	mov	r7, r5
 8000780:	9500      	str	r5, [sp, #0]
 8000782:	46aa      	mov	sl, r5
 8000784:	9501      	str	r5, [sp, #4]
 8000786:	f04f 0c01 	mov.w	ip, #1
 800078a:	f240 29ee 	movw	r9, #750	; 0x2ee
 800078e:	e013      	b.n	80007b8 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x5c>
 8000790:	9d01      	ldr	r5, [sp, #4]
 8000792:	bb7d      	cbnz	r5, 80007f4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x98>
 8000794:	4553      	cmp	r3, sl
 8000796:	dd34      	ble.n	8000802 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xa6>
 8000798:	469a      	mov	sl, r3
 800079a:	2501      	movs	r5, #1
 800079c:	9e00      	ldr	r6, [sp, #0]
 800079e:	4276      	negs	r6, r6
 80007a0:	42b3      	cmp	r3, r6
 80007a2:	bfbc      	itt	lt
 80007a4:	eba8 0304 	sublt.w	r3, r8, r4
 80007a8:	9300      	strlt	r3, [sp, #0]
 80007aa:	428f      	cmp	r7, r1
 80007ac:	bf38      	it	cc
 80007ae:	460f      	movcc	r7, r1
 80007b0:	4596      	cmp	lr, r2
 80007b2:	f100 0002 	add.w	r0, r0, #2
 80007b6:	d02a      	beq.n	800080e <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb2>
 80007b8:	8c54      	ldrh	r4, [r2, #34]	; 0x22
 80007ba:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 80007be:	1a63      	subs	r3, r4, r1
 80007c0:	f503 4600 	add.w	r6, r3, #32768	; 0x8000
 80007c4:	f5b6 3f80 	cmp.w	r6, #65536	; 0x10000
 80007c8:	bf38      	it	cc
 80007ca:	8003      	strhcc	r3, [r0, #0]
 80007cc:	4688      	mov	r8, r1
 80007ce:	bf2c      	ite	cs
 80007d0:	f04f 0c00 	movcs.w	ip, #0
 80007d4:	8811      	ldrhcc	r1, [r2, #0]
 80007d6:	454b      	cmp	r3, r9
 80007d8:	dcda      	bgt.n	8000790 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x34>
 80007da:	459a      	cmp	sl, r3
 80007dc:	bfb8      	it	lt
 80007de:	469a      	movlt	sl, r3
 80007e0:	455b      	cmp	r3, fp
 80007e2:	dadb      	bge.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 80007e4:	2d00      	cmp	r5, #0
 80007e6:	bf12      	itee	ne
 80007e8:	462e      	movne	r6, r5
 80007ea:	2601      	moveq	r6, #1
 80007ec:	f04f 0c00 	moveq.w	ip, #0
 80007f0:	9601      	str	r6, [sp, #4]
 80007f2:	e7d3      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 80007f4:	4553      	cmp	r3, sl
 80007f6:	dd06      	ble.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 80007f8:	9d01      	ldr	r5, [sp, #4]
 80007fa:	469a      	mov	sl, r3
 80007fc:	f04f 0c00 	mov.w	ip, #0
 8000800:	e7cc      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 8000802:	2501      	movs	r5, #1
 8000804:	e7ca      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 8000806:	9d01      	ldr	r5, [sp, #4]
 8000808:	f04f 0c00 	mov.w	ip, #0
 800080c:	e7c6      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 800080e:	f1bc 0f00 	cmp.w	ip, #0
 8000812:	d105      	bne.n	8000820 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xc4>
 8000814:	2300      	movs	r3, #0
 8000816:	9301      	str	r3, [sp, #4]
 8000818:	9801      	ldr	r0, [sp, #4]
 800081a:	b007      	add	sp, #28
 800081c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000820:	2d00      	cmp	r5, #0
 8000822:	d0f7      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000824:	9b01      	ldr	r3, [sp, #4]
 8000826:	2b00      	cmp	r3, #0
 8000828:	d0f4      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800082a:	9b04      	ldr	r3, [sp, #16]
 800082c:	9e05      	ldr	r6, [sp, #20]
 800082e:	9704      	str	r7, [sp, #16]
 8000830:	f04f 0900 	mov.w	r9, #0
 8000834:	f1a3 0e38 	sub.w	lr, r3, #56	; 0x38
 8000838:	3626      	adds	r6, #38	; 0x26
 800083a:	46c8      	mov	r8, r9
 800083c:	46cc      	mov	ip, r9
 800083e:	464d      	mov	r5, r9
 8000840:	464f      	mov	r7, r9
 8000842:	f936 3f02 	ldrsh.w	r3, [r6, #2]!
 8000846:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800084a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800084e:	4630      	mov	r0, r6
 8000850:	4631      	mov	r1, r6
 8000852:	2214      	movs	r2, #20
 8000854:	f931 bd02 	ldrsh.w	fp, [r1, #-2]!
 8000858:	f930 4f02 	ldrsh.w	r4, [r0, #2]!
 800085c:	fb02 330b 	mla	r3, r2, fp, r3
 8000860:	f1a2 0b04 	sub.w	fp, r2, #4
 8000864:	3a01      	subs	r2, #1
 8000866:	fb0b 3304 	mla	r3, fp, r4, r3
 800086a:	d1f3      	bne.n	8000854 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xf8>
 800086c:	4563      	cmp	r3, ip
 800086e:	dc5b      	bgt.n	8000928 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1cc>
 8000870:	4543      	cmp	r3, r8
 8000872:	da01      	bge.n	8000878 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x11c>
 8000874:	4698      	mov	r8, r3
 8000876:	46a9      	mov	r9, r5
 8000878:	3501      	adds	r5, #1
 800087a:	4575      	cmp	r5, lr
 800087c:	d1e1      	bne.n	8000842 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xe6>
 800087e:	4b2c      	ldr	r3, [pc, #176]	; (8000930 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d4>)
 8000880:	459c      	cmp	ip, r3
 8000882:	4638      	mov	r0, r7
 8000884:	9f04      	ldr	r7, [sp, #16]
 8000886:	ddc5      	ble.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000888:	4b2a      	ldr	r3, [pc, #168]	; (8000934 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d8>)
 800088a:	4598      	cmp	r8, r3
 800088c:	dac2      	bge.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800088e:	f1ba 0f00 	cmp.w	sl, #0
 8000892:	d0bf      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000894:	9b00      	ldr	r3, [sp, #0]
 8000896:	2b00      	cmp	r3, #0
 8000898:	d0bc      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800089a:	9b02      	ldr	r3, [sp, #8]
 800089c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800089e:	881b      	ldrh	r3, [r3, #0]
 80008a0:	013f      	lsls	r7, r7, #4
 80008a2:	011b      	lsls	r3, r3, #4
 80008a4:	b141      	cbz	r1, 80008b8 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x15c>
 80008a6:	42bb      	cmp	r3, r7
 80008a8:	d204      	bcs.n	80008b4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x158>
 80008aa:	43da      	mvns	r2, r3
 80008ac:	4452      	add	r2, sl
 80008ae:	443a      	add	r2, r7
 80008b0:	fbb2 f2fa 	udiv	r2, r2, sl
 80008b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80008b6:	600a      	str	r2, [r1, #0]
 80008b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80008ba:	2a00      	cmp	r2, #0
 80008bc:	d0ac      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008be:	9a03      	ldr	r2, [sp, #12]
 80008c0:	2a00      	cmp	r2, #0
 80008c2:	d0a9      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008c4:	4602      	mov	r2, r0
 80008c6:	9902      	ldr	r1, [sp, #8]
 80008c8:	321c      	adds	r2, #28
 80008ca:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80008ce:	ebb3 1f01 	cmp.w	r3, r1, lsl #4
 80008d2:	ea4f 1001 	mov.w	r0, r1, lsl #4
 80008d6:	d205      	bcs.n	80008e4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x188>
 80008d8:	43db      	mvns	r3, r3
 80008da:	4453      	add	r3, sl
 80008dc:	4403      	add	r3, r0
 80008de:	fbb3 f3fa 	udiv	r3, r3, sl
 80008e2:	1ad2      	subs	r2, r2, r3
 80008e4:	9b02      	ldr	r3, [sp, #8]
 80008e6:	f109 091c 	add.w	r9, r9, #28
 80008ea:	f833 3019 	ldrh.w	r3, [r3, r9, lsl #1]
 80008ee:	ebb7 1f03 	cmp.w	r7, r3, lsl #4
 80008f2:	ea4f 1103 	mov.w	r1, r3, lsl #4
 80008f6:	d907      	bls.n	8000908 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1ac>
 80008f8:	9800      	ldr	r0, [sp, #0]
 80008fa:	1e43      	subs	r3, r0, #1
 80008fc:	443b      	add	r3, r7
 80008fe:	1a5b      	subs	r3, r3, r1
 8000900:	fbb3 f3f0 	udiv	r3, r3, r0
 8000904:	eba9 0903 	sub.w	r9, r9, r3
 8000908:	2a00      	cmp	r2, #0
 800090a:	db83      	blt.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800090c:	f1b9 0f00 	cmp.w	r9, #0
 8000910:	db80      	blt.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000912:	454a      	cmp	r2, r9
 8000914:	f73f af7e 	bgt.w	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000918:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800091a:	eba9 0902 	sub.w	r9, r9, r2
 800091e:	f8c3 9000 	str.w	r9, [r3]
 8000922:	9b03      	ldr	r3, [sp, #12]
 8000924:	601a      	str	r2, [r3, #0]
 8000926:	e777      	b.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 8000928:	469c      	mov	ip, r3
 800092a:	462f      	mov	r7, r5
 800092c:	e7a4      	b.n	8000878 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x11c>
 800092e:	bf00      	nop
 8000930:	000186a0 	.word	0x000186a0
 8000934:	fffe7960 	.word	0xfffe7960
 8000938:	fffffd12 	.word	0xfffffd12

0800093c <acc_diagnostic_log_array.constprop.0>:
 800093c:	4b03      	ldr	r3, [pc, #12]	; (800094c <acc_diagnostic_log_array.constprop.0+0x10>)
 800093e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000940:	b113      	cbz	r3, 8000948 <acc_diagnostic_log_array.constprop.0+0xc>
 8000942:	68db      	ldr	r3, [r3, #12]
 8000944:	4902      	ldr	r1, [pc, #8]	; (8000950 <acc_diagnostic_log_array.constprop.0+0x14>)
 8000946:	4718      	bx	r3
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop
 800094c:	200000ac 	.word	0x200000ac
 8000950:	0800af24 	.word	0x0800af24

08000954 <acc_cal_algorithms_phase_unwrap.constprop.0>:
 8000954:	b470      	push	{r4, r5, r6}
 8000956:	4e12      	ldr	r6, [pc, #72]	; (80009a0 <acc_cal_algorithms_phase_unwrap.constprop.0+0x4c>)
 8000958:	4d12      	ldr	r5, [pc, #72]	; (80009a4 <acc_cal_algorithms_phase_unwrap.constprop.0+0x50>)
 800095a:	f100 04bc 	add.w	r4, r0, #188	; 0xbc
 800095e:	2100      	movs	r1, #0
 8000960:	6843      	ldr	r3, [r0, #4]
 8000962:	440b      	add	r3, r1
 8000964:	4602      	mov	r2, r0
 8000966:	f840 3f04 	str.w	r3, [r0, #4]!
 800096a:	6812      	ldr	r2, [r2, #0]
 800096c:	1a9a      	subs	r2, r3, r2
 800096e:	42b2      	cmp	r2, r6
 8000970:	dd09      	ble.n	8000986 <acc_cal_algorithms_phase_unwrap.constprop.0+0x32>
 8000972:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8000976:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 800097a:	3b7e      	subs	r3, #126	; 0x7e
 800097c:	f5a1 21c9 	sub.w	r1, r1, #411648	; 0x64800
 8000980:	6003      	str	r3, [r0, #0]
 8000982:	397e      	subs	r1, #126	; 0x7e
 8000984:	1a9a      	subs	r2, r3, r2
 8000986:	42aa      	cmp	r2, r5
 8000988:	da06      	bge.n	8000998 <acc_cal_algorithms_phase_unwrap.constprop.0+0x44>
 800098a:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 800098e:	337e      	adds	r3, #126	; 0x7e
 8000990:	f501 21c9 	add.w	r1, r1, #411648	; 0x64800
 8000994:	6003      	str	r3, [r0, #0]
 8000996:	317e      	adds	r1, #126	; 0x7e
 8000998:	4284      	cmp	r4, r0
 800099a:	d1e1      	bne.n	8000960 <acc_cal_algorithms_phase_unwrap.constprop.0+0xc>
 800099c:	bc70      	pop	{r4, r5, r6}
 800099e:	4770      	bx	lr
 80009a0:	0003243f 	.word	0x0003243f
 80009a4:	fffcdbc1 	.word	0xfffcdbc1

080009a8 <diagnostic_log_data_i16.part.0>:
 80009a8:	4b05      	ldr	r3, [pc, #20]	; (80009c0 <diagnostic_log_data_i16.part.0+0x18>)
 80009aa:	4a06      	ldr	r2, [pc, #24]	; (80009c4 <diagnostic_log_data_i16.part.0+0x1c>)
 80009ac:	4906      	ldr	r1, [pc, #24]	; (80009c8 <diagnostic_log_data_i16.part.0+0x20>)
 80009ae:	b410      	push	{r4}
 80009b0:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80009b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80009b4:	46a4      	mov	ip, r4
 80009b6:	2002      	movs	r0, #2
 80009b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009bc:	4760      	bx	ip
 80009be:	bf00      	nop
 80009c0:	200000ac 	.word	0x200000ac
 80009c4:	0800b618 	.word	0x0800b618
 80009c8:	0800a42c 	.word	0x0800a42c

080009cc <acc_diagnostic_log_data_i16>:
 80009cc:	4b02      	ldr	r3, [pc, #8]	; (80009d8 <acc_diagnostic_log_data_i16+0xc>)
 80009ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009d0:	b10b      	cbz	r3, 80009d6 <acc_diagnostic_log_data_i16+0xa>
 80009d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009d4:	4718      	bx	r3
 80009d6:	4770      	bx	lr
 80009d8:	200000ac 	.word	0x200000ac

080009dc <acc_diagnostic_log_data_u16>:
 80009dc:	4b02      	ldr	r3, [pc, #8]	; (80009e8 <acc_diagnostic_log_data_u16+0xc>)
 80009de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009e0:	b10b      	cbz	r3, 80009e6 <acc_diagnostic_log_data_u16+0xa>
 80009e2:	6a1b      	ldr	r3, [r3, #32]
 80009e4:	4718      	bx	r3
 80009e6:	4770      	bx	lr
 80009e8:	200000ac 	.word	0x200000ac

080009ec <acc_diagnostic_log_scalar>:
 80009ec:	4b02      	ldr	r3, [pc, #8]	; (80009f8 <acc_diagnostic_log_scalar+0xc>)
 80009ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009f0:	b10b      	cbz	r3, 80009f6 <acc_diagnostic_log_scalar+0xa>
 80009f2:	695b      	ldr	r3, [r3, #20]
 80009f4:	4718      	bx	r3
 80009f6:	4770      	bx	lr
 80009f8:	200000ac 	.word	0x200000ac

080009fc <acc_diagnostic_log_set_scope>:
 80009fc:	4b02      	ldr	r3, [pc, #8]	; (8000a08 <acc_diagnostic_log_set_scope+0xc>)
 80009fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a00:	b10b      	cbz	r3, 8000a06 <acc_diagnostic_log_set_scope+0xa>
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	4718      	bx	r3
 8000a06:	4770      	bx	lr
 8000a08:	200000ac 	.word	0x200000ac

08000a0c <adl_add_value_to_buffer>:
 8000a0c:	4b18      	ldr	r3, [pc, #96]	; (8000a70 <adl_add_value_to_buffer+0x64>)
 8000a0e:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000a74 <adl_add_value_to_buffer+0x68>
 8000a12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a16:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8000a18:	1873      	adds	r3, r6, r1
 8000a1a:	1e5c      	subs	r4, r3, #1
 8000a1c:	46a6      	mov	lr, r4
 8000a1e:	2200      	movs	r2, #0
 8000a20:	fbac 7500 	umull	r7, r5, ip, r0
 8000a24:	08ed      	lsrs	r5, r5, #3
 8000a26:	eb05 0785 	add.w	r7, r5, r5, lsl #2
 8000a2a:	eba0 0747 	sub.w	r7, r0, r7, lsl #1
 8000a2e:	4680      	mov	r8, r0
 8000a30:	3730      	adds	r7, #48	; 0x30
 8000a32:	f1b8 0f09 	cmp.w	r8, #9
 8000a36:	4628      	mov	r0, r5
 8000a38:	f80e 7f01 	strb.w	r7, [lr, #1]!
 8000a3c:	4615      	mov	r5, r2
 8000a3e:	f102 0201 	add.w	r2, r2, #1
 8000a42:	d8ed      	bhi.n	8000a20 <adl_add_value_to_buffer+0x14>
 8000a44:	2000      	movs	r0, #0
 8000a46:	5498      	strb	r0, [r3, r2]
 8000a48:	4610      	mov	r0, r2
 8000a4a:	4418      	add	r0, r3
 8000a4c:	eb03 0355 	add.w	r3, r3, r5, lsr #1
 8000a50:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8000a54:	f810 7d01 	ldrb.w	r7, [r0, #-1]!
 8000a58:	7027      	strb	r7, [r4, #0]
 8000a5a:	429c      	cmp	r4, r3
 8000a5c:	7005      	strb	r5, [r0, #0]
 8000a5e:	d1f7      	bne.n	8000a50 <adl_add_value_to_buffer+0x44>
 8000a60:	4411      	add	r1, r2
 8000a62:	1c48      	adds	r0, r1, #1
 8000a64:	222c      	movs	r2, #44	; 0x2c
 8000a66:	2300      	movs	r3, #0
 8000a68:	5472      	strb	r2, [r6, r1]
 8000a6a:	5433      	strb	r3, [r6, r0]
 8000a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a70:	200000ac 	.word	0x200000ac
 8000a74:	cccccccd 	.word	0xcccccccd

08000a78 <diagnostic_log_scalar>:
 8000a78:	b510      	push	{r4, lr}
 8000a7a:	4a07      	ldr	r2, [pc, #28]	; (8000a98 <diagnostic_log_scalar+0x20>)
 8000a7c:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000a80:	2c01      	cmp	r4, #1
 8000a82:	b082      	sub	sp, #8
 8000a84:	d906      	bls.n	8000a94 <diagnostic_log_scalar+0x1c>
 8000a86:	9100      	str	r1, [sp, #0]
 8000a88:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000a8a:	4904      	ldr	r1, [pc, #16]	; (8000a9c <diagnostic_log_scalar+0x24>)
 8000a8c:	4a04      	ldr	r2, [pc, #16]	; (8000aa0 <diagnostic_log_scalar+0x28>)
 8000a8e:	4603      	mov	r3, r0
 8000a90:	2002      	movs	r0, #2
 8000a92:	47a0      	blx	r4
 8000a94:	b002      	add	sp, #8
 8000a96:	bd10      	pop	{r4, pc}
 8000a98:	200000ac 	.word	0x200000ac
 8000a9c:	0800a42c 	.word	0x0800a42c
 8000aa0:	0800a430 	.word	0x0800a430

08000aa4 <diagnostic_log_array_sub_name>:
 8000aa4:	b530      	push	{r4, r5, lr}
 8000aa6:	4c08      	ldr	r4, [pc, #32]	; (8000ac8 <diagnostic_log_array_sub_name+0x24>)
 8000aa8:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000aac:	2d01      	cmp	r5, #1
 8000aae:	b083      	sub	sp, #12
 8000ab0:	d907      	bls.n	8000ac2 <diagnostic_log_array_sub_name+0x1e>
 8000ab2:	e9cd 1200 	strd	r1, r2, [sp]
 8000ab6:	4603      	mov	r3, r0
 8000ab8:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000aba:	4a04      	ldr	r2, [pc, #16]	; (8000acc <diagnostic_log_array_sub_name+0x28>)
 8000abc:	4904      	ldr	r1, [pc, #16]	; (8000ad0 <diagnostic_log_array_sub_name+0x2c>)
 8000abe:	2002      	movs	r0, #2
 8000ac0:	47a0      	blx	r4
 8000ac2:	b003      	add	sp, #12
 8000ac4:	bd30      	pop	{r4, r5, pc}
 8000ac6:	bf00      	nop
 8000ac8:	200000ac 	.word	0x200000ac
 8000acc:	0800a444 	.word	0x0800a444
 8000ad0:	0800a42c 	.word	0x0800a42c

08000ad4 <diagnostic_log_array>:
 8000ad4:	b510      	push	{r4, lr}
 8000ad6:	4a07      	ldr	r2, [pc, #28]	; (8000af4 <diagnostic_log_array+0x20>)
 8000ad8:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000adc:	2c01      	cmp	r4, #1
 8000ade:	b082      	sub	sp, #8
 8000ae0:	d906      	bls.n	8000af0 <diagnostic_log_array+0x1c>
 8000ae2:	9100      	str	r1, [sp, #0]
 8000ae4:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000ae6:	4904      	ldr	r1, [pc, #16]	; (8000af8 <diagnostic_log_array+0x24>)
 8000ae8:	4a04      	ldr	r2, [pc, #16]	; (8000afc <diagnostic_log_array+0x28>)
 8000aea:	4603      	mov	r3, r0
 8000aec:	2002      	movs	r0, #2
 8000aee:	47a0      	blx	r4
 8000af0:	b002      	add	sp, #8
 8000af2:	bd10      	pop	{r4, pc}
 8000af4:	200000ac 	.word	0x200000ac
 8000af8:	0800a42c 	.word	0x0800a42c
 8000afc:	0800a45c 	.word	0x0800a45c

08000b00 <diagnostic_log_set_parameter>:
 8000b00:	b510      	push	{r4, lr}
 8000b02:	4a07      	ldr	r2, [pc, #28]	; (8000b20 <diagnostic_log_set_parameter+0x20>)
 8000b04:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000b08:	2c01      	cmp	r4, #1
 8000b0a:	b082      	sub	sp, #8
 8000b0c:	d906      	bls.n	8000b1c <diagnostic_log_set_parameter+0x1c>
 8000b0e:	9100      	str	r1, [sp, #0]
 8000b10:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b12:	4904      	ldr	r1, [pc, #16]	; (8000b24 <diagnostic_log_set_parameter+0x24>)
 8000b14:	4a04      	ldr	r2, [pc, #16]	; (8000b28 <diagnostic_log_set_parameter+0x28>)
 8000b16:	4603      	mov	r3, r0
 8000b18:	2002      	movs	r0, #2
 8000b1a:	47a0      	blx	r4
 8000b1c:	b002      	add	sp, #8
 8000b1e:	bd10      	pop	{r4, pc}
 8000b20:	200000ac 	.word	0x200000ac
 8000b24:	0800a42c 	.word	0x0800a42c
 8000b28:	0800a470 	.word	0x0800a470

08000b2c <diagnostic_log_declare_parameter>:
 8000b2c:	b530      	push	{r4, r5, lr}
 8000b2e:	4c08      	ldr	r4, [pc, #32]	; (8000b50 <diagnostic_log_declare_parameter+0x24>)
 8000b30:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000b34:	2d01      	cmp	r5, #1
 8000b36:	b083      	sub	sp, #12
 8000b38:	d907      	bls.n	8000b4a <diagnostic_log_declare_parameter+0x1e>
 8000b3a:	e9cd 1200 	strd	r1, r2, [sp]
 8000b3e:	4603      	mov	r3, r0
 8000b40:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000b42:	4a04      	ldr	r2, [pc, #16]	; (8000b54 <diagnostic_log_declare_parameter+0x28>)
 8000b44:	4904      	ldr	r1, [pc, #16]	; (8000b58 <diagnostic_log_declare_parameter+0x2c>)
 8000b46:	2002      	movs	r0, #2
 8000b48:	47a0      	blx	r4
 8000b4a:	b003      	add	sp, #12
 8000b4c:	bd30      	pop	{r4, r5, pc}
 8000b4e:	bf00      	nop
 8000b50:	200000ac 	.word	0x200000ac
 8000b54:	0800a480 	.word	0x0800a480
 8000b58:	0800a42c 	.word	0x0800a42c

08000b5c <diagnostic_log_set_scope>:
 8000b5c:	4a07      	ldr	r2, [pc, #28]	; (8000b7c <diagnostic_log_set_scope+0x20>)
 8000b5e:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8000b62:	2901      	cmp	r1, #1
 8000b64:	d909      	bls.n	8000b7a <diagnostic_log_set_scope+0x1e>
 8000b66:	b410      	push	{r4}
 8000b68:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b6a:	4905      	ldr	r1, [pc, #20]	; (8000b80 <diagnostic_log_set_scope+0x24>)
 8000b6c:	4a05      	ldr	r2, [pc, #20]	; (8000b84 <diagnostic_log_set_scope+0x28>)
 8000b6e:	4603      	mov	r3, r0
 8000b70:	46a4      	mov	ip, r4
 8000b72:	2002      	movs	r0, #2
 8000b74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b78:	4760      	bx	ip
 8000b7a:	4770      	bx	lr
 8000b7c:	200000ac 	.word	0x200000ac
 8000b80:	0800a42c 	.word	0x0800a42c
 8000b84:	0800a498 	.word	0x0800a498

08000b88 <acc_utils_transfer_buffer_to_uint32>:
 8000b88:	b17a      	cbz	r2, 8000baa <acc_utils_transfer_buffer_to_uint32+0x22>
 8000b8a:	b410      	push	{r4}
 8000b8c:	3904      	subs	r1, #4
 8000b8e:	eb00 0482 	add.w	r4, r0, r2, lsl #2
 8000b92:	8802      	ldrh	r2, [r0, #0]
 8000b94:	8843      	ldrh	r3, [r0, #2]
 8000b96:	3004      	adds	r0, #4
 8000b98:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b9c:	4284      	cmp	r4, r0
 8000b9e:	f841 3f04 	str.w	r3, [r1, #4]!
 8000ba2:	d1f6      	bne.n	8000b92 <acc_utils_transfer_buffer_to_uint32+0xa>
 8000ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ba8:	4770      	bx	lr
 8000baa:	4770      	bx	lr

08000bac <acc_confprogram_copy>:
 8000bac:	b152      	cbz	r2, 8000bc4 <acc_confprogram_copy+0x18>
 8000bae:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8000bb2:	3804      	subs	r0, #4
 8000bb4:	f850 3f04 	ldr.w	r3, [r0, #4]!
 8000bb8:	804b      	strh	r3, [r1, #2]
 8000bba:	0c1b      	lsrs	r3, r3, #16
 8000bbc:	800b      	strh	r3, [r1, #0]
 8000bbe:	3104      	adds	r1, #4
 8000bc0:	4291      	cmp	r1, r2
 8000bc2:	d1f7      	bne.n	8000bb4 <acc_confprogram_copy+0x8>
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <acc_cpd_pll_divisors_calculate>:
 8000bc8:	edd0 7a00 	vldr	s15, [r0]
 8000bcc:	ed9f 6a61 	vldr	s12, [pc, #388]	; 8000d54 <acc_cpd_pll_divisors_calculate+0x18c>
 8000bd0:	eddf 6a61 	vldr	s13, [pc, #388]	; 8000d58 <acc_cpd_pll_divisors_calculate+0x190>
 8000bd4:	ee86 7a27 	vdiv.f32	s14, s12, s15
 8000bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bda:	4606      	mov	r6, r0
 8000bdc:	b083      	sub	sp, #12
 8000bde:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8000be2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000be6:	eef4 7ae6 	vcmpe.f32	s15, s13
 8000bea:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000bf2:	ee17 3a10 	vmov	r3, s14
 8000bf6:	b29c      	uxth	r4, r3
 8000bf8:	dc06      	bgt.n	8000c08 <acc_cpd_pll_divisors_calculate+0x40>
 8000bfa:	ed9f 7a58 	vldr	s14, [pc, #352]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x194>
 8000bfe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c06:	d571      	bpl.n	8000cec <acc_cpd_pll_divisors_calculate+0x124>
 8000c08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c10:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c14:	bf4c      	ite	mi
 8000c16:	4b53      	ldrmi	r3, [pc, #332]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000c18:	4b53      	ldrpl	r3, [pc, #332]	; (8000d68 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000c1a:	ed9f 6a51 	vldr	s12, [pc, #324]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c1e:	eddf 6a53 	vldr	s13, [pc, #332]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c22:	4d53      	ldr	r5, [pc, #332]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000c24:	4953      	ldr	r1, [pc, #332]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c26:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8000c28:	bf48      	it	mi
 8000c2a:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c32:	2000      	movs	r0, #0
 8000c34:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000c38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c40:	ee17 2a10 	vmov	r2, s14
 8000c44:	bf4c      	ite	mi
 8000c46:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000c4a:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000c4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000c52:	9200      	str	r2, [sp, #0]
 8000c54:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000c58:	4a47      	ldr	r2, [pc, #284]	; (8000d78 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000c5a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000c5e:	3c10      	subs	r4, #16
 8000c60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000c64:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000c68:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000c6c:	edcd 7a01 	vstr	s15, [sp, #4]
 8000c70:	47b8      	blx	r7
 8000c72:	2cef      	cmp	r4, #239	; 0xef
 8000c74:	d937      	bls.n	8000ce6 <acc_cpd_pll_divisors_calculate+0x11e>
 8000c76:	edd6 7a00 	vldr	s15, [r6]
 8000c7a:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c7e:	ed9f 6a38 	vldr	s12, [pc, #224]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c82:	eddf 6a3a 	vldr	s13, [pc, #232]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c86:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8000c88:	493a      	ldr	r1, [pc, #232]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c92:	bf48      	it	mi
 8000c94:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c9c:	bf4c      	ite	mi
 8000c9e:	4b31      	ldrmi	r3, [pc, #196]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000ca0:	4b31      	ldrpl	r3, [pc, #196]	; (8000d68 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000ca2:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000ca6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cae:	ee17 2a10 	vmov	r2, s14
 8000cb2:	bf4c      	ite	mi
 8000cb4:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000cb8:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000cbc:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000cc0:	9200      	str	r2, [sp, #0]
 8000cc2:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000cc6:	4a2c      	ldr	r2, [pc, #176]	; (8000d78 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000cc8:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000ccc:	2000      	movs	r0, #0
 8000cce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cd2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000cd6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000cda:	edcd 7a01 	vstr	s15, [sp, #4]
 8000cde:	47a0      	blx	r4
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	b003      	add	sp, #12
 8000ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ce6:	2000      	movs	r0, #0
 8000ce8:	b003      	add	sp, #12
 8000cea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cec:	f1a4 0310 	sub.w	r3, r4, #16
 8000cf0:	b29b      	uxth	r3, r3
 8000cf2:	2bef      	cmp	r3, #239	; 0xef
 8000cf4:	d901      	bls.n	8000cfa <acc_cpd_pll_divisors_calculate+0x132>
 8000cf6:	4d1e      	ldr	r5, [pc, #120]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000cf8:	e7bf      	b.n	8000c7a <acc_cpd_pll_divisors_calculate+0xb2>
 8000cfa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cfe:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8000d7c <acc_cpd_pll_divisors_calculate+0x1b4>
 8000d02:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8000d80 <acc_cpd_pll_divisors_calculate+0x1b8>
 8000d06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000d0a:	2c3f      	cmp	r4, #63	; 0x3f
 8000d0c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000d10:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000d14:	ee17 2a90 	vmov	r2, s15
 8000d18:	810a      	strh	r2, [r1, #8]
 8000d1a:	d912      	bls.n	8000d42 <acc_cpd_pll_divisors_calculate+0x17a>
 8000d1c:	2cbf      	cmp	r4, #191	; 0xbf
 8000d1e:	f04f 0301 	mov.w	r3, #1
 8000d22:	bf98      	it	ls
 8000d24:	f1a4 0240 	subls.w	r2, r4, #64	; 0x40
 8000d28:	804b      	strh	r3, [r1, #2]
 8000d2a:	bf8c      	ite	hi
 8000d2c:	08e2      	lsrhi	r2, r4, #3
 8000d2e:	f3c2 02cf 	ubfxls	r2, r2, #3, #16
 8000d32:	f004 0307 	and.w	r3, r4, #7
 8000d36:	808a      	strh	r2, [r1, #4]
 8000d38:	80cb      	strh	r3, [r1, #6]
 8000d3a:	2001      	movs	r0, #1
 8000d3c:	800c      	strh	r4, [r1, #0]
 8000d3e:	b003      	add	sp, #12
 8000d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d42:	2200      	movs	r2, #0
 8000d44:	2c2f      	cmp	r4, #47	; 0x2f
 8000d46:	bf88      	it	hi
 8000d48:	4623      	movhi	r3, r4
 8000d4a:	808b      	strh	r3, [r1, #4]
 8000d4c:	804a      	strh	r2, [r1, #2]
 8000d4e:	80ca      	strh	r2, [r1, #6]
 8000d50:	e7f3      	b.n	8000d3a <acc_cpd_pll_divisors_calculate+0x172>
 8000d52:	bf00      	nop
 8000d54:	4f1502f9 	.word	0x4f1502f9
 8000d58:	4c989680 	.word	0x4c989680
 8000d5c:	4b989680 	.word	0x4b989680
 8000d60:	350637bd 	.word	0x350637bd
 8000d64:	0800a4a8 	.word	0x0800a4a8
 8000d68:	0800af24 	.word	0x0800af24
 8000d6c:	49742400 	.word	0x49742400
 8000d70:	200000ac 	.word	0x200000ac
 8000d74:	0800a4d8 	.word	0x0800a4d8
 8000d78:	0800a4ac 	.word	0x0800a4ac
 8000d7c:	b55b38e8 	.word	0xb55b38e8
 8000d80:	427c0000 	.word	0x427c0000

08000d84 <acc_confprogram_modify_runif>:
 8000d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d88:	eb00 0542 	add.w	r5, r0, r2, lsl #1
 8000d8c:	b084      	sub	sp, #16
 8000d8e:	4616      	mov	r6, r2
 8000d90:	460f      	mov	r7, r1
 8000d92:	2201      	movs	r2, #1
 8000d94:	4628      	mov	r0, r5
 8000d96:	a903      	add	r1, sp, #12
 8000d98:	4698      	mov	r8, r3
 8000d9a:	f7ff fef5 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8000d9e:	9c03      	ldr	r4, [sp, #12]
 8000da0:	4b12      	ldr	r3, [pc, #72]	; (8000dec <acc_confprogram_modify_runif+0x68>)
 8000da2:	f024 040f 	bic.w	r4, r4, #15
 8000da6:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8000daa:	9402      	str	r4, [sp, #8]
 8000dac:	f1b8 0f00 	cmp.w	r8, #0
 8000db0:	d012      	beq.n	8000dd8 <acc_confprogram_modify_runif+0x54>
 8000db2:	433c      	orrs	r4, r7
 8000db4:	2a03      	cmp	r2, #3
 8000db6:	9402      	str	r4, [sp, #8]
 8000db8:	d906      	bls.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000dba:	9700      	str	r7, [sp, #0]
 8000dbc:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8000dbe:	4a0c      	ldr	r2, [pc, #48]	; (8000df0 <acc_confprogram_modify_runif+0x6c>)
 8000dc0:	490c      	ldr	r1, [pc, #48]	; (8000df4 <acc_confprogram_modify_runif+0x70>)
 8000dc2:	0873      	lsrs	r3, r6, #1
 8000dc4:	2004      	movs	r0, #4
 8000dc6:	47a0      	blx	r4
 8000dc8:	4629      	mov	r1, r5
 8000dca:	2201      	movs	r2, #1
 8000dcc:	a802      	add	r0, sp, #8
 8000dce:	f7ff feed 	bl	8000bac <acc_confprogram_copy>
 8000dd2:	b004      	add	sp, #16
 8000dd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000dd8:	2a03      	cmp	r2, #3
 8000dda:	d9f5      	bls.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000ddc:	9700      	str	r7, [sp, #0]
 8000dde:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8000de0:	4a05      	ldr	r2, [pc, #20]	; (8000df8 <acc_confprogram_modify_runif+0x74>)
 8000de2:	4904      	ldr	r1, [pc, #16]	; (8000df4 <acc_confprogram_modify_runif+0x70>)
 8000de4:	0873      	lsrs	r3, r6, #1
 8000de6:	2004      	movs	r0, #4
 8000de8:	47a0      	blx	r4
 8000dea:	e7ed      	b.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000dec:	200000ac 	.word	0x200000ac
 8000df0:	0800a4ec 	.word	0x0800a4ec
 8000df4:	0800a524 	.word	0x0800a524
 8000df8:	0800a530 	.word	0x0800a530

08000dfc <acc_confprogram_patch_offset>:
 8000dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e00:	f8df a138 	ldr.w	sl, [pc, #312]	; 8000f3c <acc_confprogram_patch_offset+0x140>
 8000e04:	f89a 4048 	ldrb.w	r4, [sl, #72]	; 0x48
 8000e08:	b087      	sub	sp, #28
 8000e0a:	2c03      	cmp	r4, #3
 8000e0c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8000e10:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8000e14:	4681      	mov	r9, r0
 8000e16:	460f      	mov	r7, r1
 8000e18:	4693      	mov	fp, r2
 8000e1a:	461e      	mov	r6, r3
 8000e1c:	d908      	bls.n	8000e30 <acc_confprogram_patch_offset+0x34>
 8000e1e:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8000e22:	4a42      	ldr	r2, [pc, #264]	; (8000f2c <acc_confprogram_patch_offset+0x130>)
 8000e24:	4942      	ldr	r1, [pc, #264]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000e26:	f8cd 8000 	str.w	r8, [sp]
 8000e2a:	462b      	mov	r3, r5
 8000e2c:	2004      	movs	r0, #4
 8000e2e:	47a0      	blx	r4
 8000e30:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8000e34:	8871      	ldrh	r1, [r6, #2]
 8000e36:	b359      	cbz	r1, 8000e90 <acc_confprogram_patch_offset+0x94>
 8000e38:	44bb      	add	fp, r7
 8000e3a:	2500      	movs	r5, #0
 8000e3c:	6873      	ldr	r3, [r6, #4]
 8000e3e:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8000e42:	0062      	lsls	r2, r4, #1
 8000e44:	b292      	uxth	r2, r2
 8000e46:	42ba      	cmp	r2, r7
 8000e48:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8000e4c:	d31d      	bcc.n	8000e8a <acc_confprogram_patch_offset+0x8e>
 8000e4e:	455a      	cmp	r2, fp
 8000e50:	da1b      	bge.n	8000e8a <acc_confprogram_patch_offset+0x8e>
 8000e52:	2801      	cmp	r0, #1
 8000e54:	d00c      	beq.n	8000e70 <acc_confprogram_patch_offset+0x74>
 8000e56:	2802      	cmp	r0, #2
 8000e58:	d035      	beq.n	8000ec6 <acc_confprogram_patch_offset+0xca>
 8000e5a:	b1e8      	cbz	r0, 8000e98 <acc_confprogram_patch_offset+0x9c>
 8000e5c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8000e60:	4a34      	ldr	r2, [pc, #208]	; (8000f34 <acc_confprogram_patch_offset+0x138>)
 8000e62:	4933      	ldr	r1, [pc, #204]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000e64:	2000      	movs	r0, #0
 8000e66:	4798      	blx	r3
 8000e68:	2000      	movs	r0, #0
 8000e6a:	b007      	add	sp, #28
 8000e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e70:	f1b8 0300 	subs.w	r3, r8, #0
 8000e74:	eba2 0207 	sub.w	r2, r2, r7
 8000e78:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e7c:	b292      	uxth	r2, r2
 8000e7e:	bf18      	it	ne
 8000e80:	2301      	movne	r3, #1
 8000e82:	4648      	mov	r0, r9
 8000e84:	f7ff ff7e 	bl	8000d84 <acc_confprogram_modify_runif>
 8000e88:	8871      	ldrh	r1, [r6, #2]
 8000e8a:	3501      	adds	r5, #1
 8000e8c:	42a9      	cmp	r1, r5
 8000e8e:	d8d5      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000e90:	2001      	movs	r0, #1
 8000e92:	b007      	add	sp, #28
 8000e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e98:	f3c4 5344 	ubfx	r3, r4, #21, #5
 8000e9c:	2101      	movs	r1, #1
 8000e9e:	4099      	lsls	r1, r3
 8000ea0:	1bd2      	subs	r2, r2, r7
 8000ea2:	4588      	cmp	r8, r1
 8000ea4:	fa1f fc82 	uxth.w	ip, r2
 8000ea8:	d31c      	bcc.n	8000ee4 <acc_confprogram_patch_offset+0xe8>
 8000eaa:	3901      	subs	r1, #1
 8000eac:	e9cd 8100 	strd	r8, r1, [sp]
 8000eb0:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8000eb4:	4a20      	ldr	r2, [pc, #128]	; (8000f38 <acc_confprogram_patch_offset+0x13c>)
 8000eb6:	491e      	ldr	r1, [pc, #120]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000eb8:	9002      	str	r0, [sp, #8]
 8000eba:	4663      	mov	r3, ip
 8000ebc:	47a0      	blx	r4
 8000ebe:	9802      	ldr	r0, [sp, #8]
 8000ec0:	b007      	add	sp, #28
 8000ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ec6:	1bd2      	subs	r2, r2, r7
 8000ec8:	fab8 f388 	clz	r3, r8
 8000ecc:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000ed0:	b292      	uxth	r2, r2
 8000ed2:	095b      	lsrs	r3, r3, #5
 8000ed4:	4648      	mov	r0, r9
 8000ed6:	f7ff ff55 	bl	8000d84 <acc_confprogram_modify_runif>
 8000eda:	8871      	ldrh	r1, [r6, #2]
 8000edc:	3501      	adds	r5, #1
 8000ede:	42a9      	cmp	r1, r5
 8000ee0:	d8ac      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000ee2:	e7d5      	b.n	8000e90 <acc_confprogram_patch_offset+0x94>
 8000ee4:	eb09 004c 	add.w	r0, r9, ip, lsl #1
 8000ee8:	2201      	movs	r2, #1
 8000eea:	a904      	add	r1, sp, #16
 8000eec:	9303      	str	r3, [sp, #12]
 8000eee:	9002      	str	r0, [sp, #8]
 8000ef0:	f7ff fe4a 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8000ef4:	9b03      	ldr	r3, [sp, #12]
 8000ef6:	9802      	ldr	r0, [sp, #8]
 8000ef8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000efc:	f1c3 0320 	rsb	r3, r3, #32
 8000f00:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8000f04:	fa22 f303 	lsr.w	r3, r2, r3
 8000f08:	9a04      	ldr	r2, [sp, #16]
 8000f0a:	40a3      	lsls	r3, r4
 8000f0c:	ea22 0203 	bic.w	r2, r2, r3
 8000f10:	fa08 f404 	lsl.w	r4, r8, r4
 8000f14:	4601      	mov	r1, r0
 8000f16:	4314      	orrs	r4, r2
 8000f18:	a805      	add	r0, sp, #20
 8000f1a:	2201      	movs	r2, #1
 8000f1c:	9405      	str	r4, [sp, #20]
 8000f1e:	f7ff fe45 	bl	8000bac <acc_confprogram_copy>
 8000f22:	8871      	ldrh	r1, [r6, #2]
 8000f24:	3501      	adds	r5, #1
 8000f26:	42a9      	cmp	r1, r5
 8000f28:	d888      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000f2a:	e7b1      	b.n	8000e90 <acc_confprogram_patch_offset+0x94>
 8000f2c:	0800ad28 	.word	0x0800ad28
 8000f30:	0800a524 	.word	0x0800a524
 8000f34:	0800a59c 	.word	0x0800a59c
 8000f38:	0800a564 	.word	0x0800a564
 8000f3c:	200000ac 	.word	0x200000ac

08000f40 <acc_rss_integration_mem_free>:
 8000f40:	b110      	cbz	r0, 8000f48 <acc_rss_integration_mem_free+0x8>
 8000f42:	4b02      	ldr	r3, [pc, #8]	; (8000f4c <acc_rss_integration_mem_free+0xc>)
 8000f44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000f46:	4718      	bx	r3
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	200000ac 	.word	0x200000ac

08000f50 <acc_rss_integration_mem_alloc_debug>:
 8000f50:	b538      	push	{r3, r4, r5, lr}
 8000f52:	4d06      	ldr	r5, [pc, #24]	; (8000f6c <acc_rss_integration_mem_alloc_debug+0x1c>)
 8000f54:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8000f56:	4798      	blx	r3
 8000f58:	4604      	mov	r4, r0
 8000f5a:	b108      	cbz	r0, 8000f60 <acc_rss_integration_mem_alloc_debug+0x10>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	bd38      	pop	{r3, r4, r5, pc}
 8000f60:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8000f62:	4a03      	ldr	r2, [pc, #12]	; (8000f70 <acc_rss_integration_mem_alloc_debug+0x20>)
 8000f64:	4903      	ldr	r1, [pc, #12]	; (8000f74 <acc_rss_integration_mem_alloc_debug+0x24>)
 8000f66:	4798      	blx	r3
 8000f68:	4620      	mov	r0, r4
 8000f6a:	bd38      	pop	{r3, r4, r5, pc}
 8000f6c:	200000ac 	.word	0x200000ac
 8000f70:	0800a5c0 	.word	0x0800a5c0
 8000f74:	0800a5d0 	.word	0x0800a5d0

08000f78 <acc_rss_integration_sensor_device_transfer>:
 8000f78:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000fe0 <acc_rss_integration_sensor_device_transfer+0x68>
 8000f7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f80:	f8dc 5044 	ldr.w	r5, [ip, #68]	; 0x44
 8000f84:	b11d      	cbz	r5, 8000f8e <acc_rss_integration_sensor_device_transfer+0x16>
 8000f86:	462b      	mov	r3, r5
 8000f88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f8c:	4718      	bx	r3
 8000f8e:	b312      	cbz	r2, 8000fd6 <acc_rss_integration_sensor_device_transfer+0x5e>
 8000f90:	0052      	lsls	r2, r2, #1
 8000f92:	f1a1 0802 	sub.w	r8, r1, #2
 8000f96:	f1a2 0902 	sub.w	r9, r2, #2
 8000f9a:	460e      	mov	r6, r1
 8000f9c:	469a      	mov	sl, r3
 8000f9e:	4607      	mov	r7, r0
 8000fa0:	4449      	add	r1, r9
 8000fa2:	4644      	mov	r4, r8
 8000fa4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8000fa8:	ba6d      	rev16	r5, r5
 8000faa:	428c      	cmp	r4, r1
 8000fac:	8025      	strh	r5, [r4, #0]
 8000fae:	d1f9      	bne.n	8000fa4 <acc_rss_integration_sensor_device_transfer+0x2c>
 8000fb0:	f8dc 403c 	ldr.w	r4, [ip, #60]	; 0x3c
 8000fb4:	4638      	mov	r0, r7
 8000fb6:	4631      	mov	r1, r6
 8000fb8:	47a0      	blx	r4
 8000fba:	f1ba 0f00 	cmp.w	sl, #0
 8000fbe:	d101      	bne.n	8000fc4 <acc_rss_integration_sensor_device_transfer+0x4c>
 8000fc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fc4:	444e      	add	r6, r9
 8000fc6:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8000fca:	ba5b      	rev16	r3, r3
 8000fcc:	45b0      	cmp	r8, r6
 8000fce:	f8a8 3000 	strh.w	r3, [r8]
 8000fd2:	d1f8      	bne.n	8000fc6 <acc_rss_integration_sensor_device_transfer+0x4e>
 8000fd4:	e7f4      	b.n	8000fc0 <acc_rss_integration_sensor_device_transfer+0x48>
 8000fd6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fda:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
 8000fde:	4718      	bx	r3
 8000fe0:	200000ac 	.word	0x200000ac

08000fe4 <acc_sensor_a121_conf_write_instr>:
 8000fe4:	b570      	push	{r4, r5, r6, lr}
 8000fe6:	2501      	movs	r5, #1
 8000fe8:	b084      	sub	sp, #16
 8000fea:	f441 43a0 	orr.w	r3, r1, #20480	; 0x5000
 8000fee:	4604      	mov	r4, r0
 8000ff0:	4616      	mov	r6, r2
 8000ff2:	a903      	add	r1, sp, #12
 8000ff4:	462a      	mov	r2, r5
 8000ff6:	a801      	add	r0, sp, #4
 8000ff8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8000ffc:	9601      	str	r6, [sp, #4]
 8000ffe:	f8ad 500a 	strh.w	r5, [sp, #10]
 8001002:	f7ff fdd3 	bl	8000bac <acc_confprogram_copy>
 8001006:	4620      	mov	r0, r4
 8001008:	a902      	add	r1, sp, #8
 800100a:	2300      	movs	r3, #0
 800100c:	2204      	movs	r2, #4
 800100e:	f7ff ffb3 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8001012:	b004      	add	sp, #16
 8001014:	bd70      	pop	{r4, r5, r6, pc}
 8001016:	bf00      	nop

08001018 <acc_confprogram_modify_runif_sensor.constprop.0>:
 8001018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800101a:	4614      	mov	r4, r2
 800101c:	b083      	sub	sp, #12
 800101e:	f851 5024 	ldr.w	r5, [r1, r4, lsl #2]
 8001022:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001026:	f025 050f 	bic.w	r5, r5, #15
 800102a:	4606      	mov	r6, r0
 800102c:	b1a2      	cbz	r2, 8001058 <acc_confprogram_modify_runif_sensor.constprop.0+0x40>
 800102e:	4a10      	ldr	r2, [pc, #64]	; (8001070 <acc_confprogram_modify_runif_sensor.constprop.0+0x58>)
 8001030:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8001034:	2903      	cmp	r1, #3
 8001036:	ea45 0503 	orr.w	r5, r5, r3
 800103a:	d906      	bls.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 800103c:	9300      	str	r3, [sp, #0]
 800103e:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8001040:	490c      	ldr	r1, [pc, #48]	; (8001074 <acc_confprogram_modify_runif_sensor.constprop.0+0x5c>)
 8001042:	4a0d      	ldr	r2, [pc, #52]	; (8001078 <acc_confprogram_modify_runif_sensor.constprop.0+0x60>)
 8001044:	4623      	mov	r3, r4
 8001046:	2004      	movs	r0, #4
 8001048:	47b8      	blx	r7
 800104a:	462a      	mov	r2, r5
 800104c:	4621      	mov	r1, r4
 800104e:	4630      	mov	r0, r6
 8001050:	b003      	add	sp, #12
 8001052:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8001056:	e7c5      	b.n	8000fe4 <acc_sensor_a121_conf_write_instr>
 8001058:	4b05      	ldr	r3, [pc, #20]	; (8001070 <acc_confprogram_modify_runif_sensor.constprop.0+0x58>)
 800105a:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 800105e:	2a03      	cmp	r2, #3
 8001060:	d9f3      	bls.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 8001062:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8001064:	4a05      	ldr	r2, [pc, #20]	; (800107c <acc_confprogram_modify_runif_sensor.constprop.0+0x64>)
 8001066:	4903      	ldr	r1, [pc, #12]	; (8001074 <acc_confprogram_modify_runif_sensor.constprop.0+0x5c>)
 8001068:	4623      	mov	r3, r4
 800106a:	2004      	movs	r0, #4
 800106c:	47b8      	blx	r7
 800106e:	e7ec      	b.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 8001070:	200000ac 	.word	0x200000ac
 8001074:	0800a524 	.word	0x0800a524
 8001078:	0800a4ec 	.word	0x0800a4ec
 800107c:	0800a5e0 	.word	0x0800a5e0

08001080 <acc_sensor_a121_buffer_write.constprop.0>:
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4c1d      	ldr	r4, [pc, #116]	; (80010fc <acc_sensor_a121_buffer_write.constprop.0+0x7c>)
 8001086:	8e24      	ldrh	r4, [r4, #48]	; 0x30
 8001088:	b085      	sub	sp, #20
 800108a:	3c06      	subs	r4, #6
 800108c:	9202      	str	r2, [sp, #8]
 800108e:	08a2      	lsrs	r2, r4, #2
 8001090:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 8001094:	9201      	str	r2, [sp, #4]
 8001096:	9303      	str	r3, [sp, #12]
 8001098:	b363      	cbz	r3, 80010f4 <acc_sensor_a121_buffer_write.constprop.0+0x74>
 800109a:	4682      	mov	sl, r0
 800109c:	460f      	mov	r7, r1
 800109e:	f101 0b06 	add.w	fp, r1, #6
 80010a2:	4699      	mov	r9, r3
 80010a4:	2500      	movs	r5, #0
 80010a6:	9b01      	ldr	r3, [sp, #4]
 80010a8:	807d      	strh	r5, [r7, #2]
 80010aa:	454b      	cmp	r3, r9
 80010ac:	bf28      	it	cs
 80010ae:	464b      	movcs	r3, r9
 80010b0:	005c      	lsls	r4, r3, #1
 80010b2:	461e      	mov	r6, r3
 80010b4:	1e63      	subs	r3, r4, #1
 80010b6:	80bb      	strh	r3, [r7, #4]
 80010b8:	9b02      	ldr	r3, [sp, #8]
 80010ba:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80010be:	eb03 0085 	add.w	r0, r3, r5, lsl #2
 80010c2:	803a      	strh	r2, [r7, #0]
 80010c4:	3403      	adds	r4, #3
 80010c6:	4632      	mov	r2, r6
 80010c8:	4659      	mov	r1, fp
 80010ca:	f7ff fd6f 	bl	8000bac <acc_confprogram_copy>
 80010ce:	4622      	mov	r2, r4
 80010d0:	2300      	movs	r3, #0
 80010d2:	4639      	mov	r1, r7
 80010d4:	4650      	mov	r0, sl
 80010d6:	f7ff ff4f 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80010da:	e9d8 2300 	ldrd	r2, r3, [r8]
 80010de:	3301      	adds	r3, #1
 80010e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80010e4:	e9c8 4300 	strd	r4, r3, [r8]
 80010e8:	9b03      	ldr	r3, [sp, #12]
 80010ea:	4435      	add	r5, r6
 80010ec:	429d      	cmp	r5, r3
 80010ee:	eba9 0906 	sub.w	r9, r9, r6
 80010f2:	d3d8      	bcc.n	80010a6 <acc_sensor_a121_buffer_write.constprop.0+0x26>
 80010f4:	b005      	add	sp, #20
 80010f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80010fa:	bf00      	nop
 80010fc:	200000ac 	.word	0x200000ac

08001100 <acc_sensor_reg_field_write>:
 8001100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001104:	b082      	sub	sp, #8
 8001106:	461d      	mov	r5, r3
 8001108:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800110c:	f8bd 4028 	ldrh.w	r4, [sp, #40]	; 0x28
 8001110:	f8ad 3000 	strh.w	r3, [sp]
 8001114:	2700      	movs	r7, #0
 8001116:	468a      	mov	sl, r1
 8001118:	4691      	mov	r9, r2
 800111a:	4669      	mov	r1, sp
 800111c:	2301      	movs	r3, #1
 800111e:	2203      	movs	r2, #3
 8001120:	4680      	mov	r8, r0
 8001122:	f8ad 7002 	strh.w	r7, [sp, #2]
 8001126:	f8ad 7004 	strh.w	r7, [sp, #4]
 800112a:	f7ff ff25 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 800112e:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 8001132:	fa04 f10a 	lsl.w	r1, r4, sl
 8001136:	4071      	eors	r1, r6
 8001138:	ea01 0409 	and.w	r4, r1, r9
 800113c:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
 8001140:	4640      	mov	r0, r8
 8001142:	463b      	mov	r3, r7
 8001144:	4669      	mov	r1, sp
 8001146:	4074      	eors	r4, r6
 8001148:	2202      	movs	r2, #2
 800114a:	f8ad 5000 	strh.w	r5, [sp]
 800114e:	f8ad 4002 	strh.w	r4, [sp, #2]
 8001152:	f7ff ff11 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8001156:	b002      	add	sp, #8
 8001158:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800115c <acc_sensor_protocol_a121_init_interrupts>:
 800115c:	b530      	push	{r4, r5, lr}
 800115e:	b083      	sub	sp, #12
 8001160:	2500      	movs	r5, #0
 8001162:	4629      	mov	r1, r5
 8001164:	9500      	str	r5, [sp, #0]
 8001166:	237b      	movs	r3, #123	; 0x7b
 8001168:	22ff      	movs	r2, #255	; 0xff
 800116a:	4604      	mov	r4, r0
 800116c:	f7ff ffc8 	bl	8001100 <acc_sensor_reg_field_write>
 8001170:	2101      	movs	r1, #1
 8001172:	4620      	mov	r0, r4
 8001174:	9100      	str	r1, [sp, #0]
 8001176:	238b      	movs	r3, #139	; 0x8b
 8001178:	2202      	movs	r2, #2
 800117a:	f7ff ffc1 	bl	8001100 <acc_sensor_reg_field_write>
 800117e:	9500      	str	r5, [sp, #0]
 8001180:	4620      	mov	r0, r4
 8001182:	238b      	movs	r3, #139	; 0x8b
 8001184:	2280      	movs	r2, #128	; 0x80
 8001186:	2107      	movs	r1, #7
 8001188:	f7ff ffba 	bl	8001100 <acc_sensor_reg_field_write>
 800118c:	b003      	add	sp, #12
 800118e:	bd30      	pop	{r4, r5, pc}

08001190 <acc_sensor_reg_write>:
 8001190:	b530      	push	{r4, r5, lr}
 8001192:	b083      	sub	sp, #12
 8001194:	f441 5480 	orr.w	r4, r1, #4096	; 0x1000
 8001198:	4615      	mov	r5, r2
 800119a:	2300      	movs	r3, #0
 800119c:	2202      	movs	r2, #2
 800119e:	a901      	add	r1, sp, #4
 80011a0:	f8ad 4004 	strh.w	r4, [sp, #4]
 80011a4:	f8ad 5006 	strh.w	r5, [sp, #6]
 80011a8:	f7ff fee6 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80011ac:	b003      	add	sp, #12
 80011ae:	bd30      	pop	{r4, r5, pc}

080011b0 <acc_sensor_reg_read>:
 80011b0:	b530      	push	{r4, r5, lr}
 80011b2:	b083      	sub	sp, #12
 80011b4:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
 80011b8:	4614      	mov	r4, r2
 80011ba:	2500      	movs	r5, #0
 80011bc:	f8ad 1000 	strh.w	r1, [sp]
 80011c0:	2301      	movs	r3, #1
 80011c2:	2203      	movs	r2, #3
 80011c4:	4669      	mov	r1, sp
 80011c6:	f8ad 5002 	strh.w	r5, [sp, #2]
 80011ca:	f8ad 5004 	strh.w	r5, [sp, #4]
 80011ce:	f7ff fed3 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80011d2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80011d6:	8023      	strh	r3, [r4, #0]
 80011d8:	b003      	add	sp, #12
 80011da:	bd30      	pop	{r4, r5, pc}

080011dc <acc_sensor_protocol_a121_run_program>:
 80011dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011de:	4f19      	ldr	r7, [pc, #100]	; (8001244 <acc_sensor_protocol_a121_run_program+0x68>)
 80011e0:	f897 2048 	ldrb.w	r2, [r7, #72]	; 0x48
 80011e4:	2a03      	cmp	r2, #3
 80011e6:	b085      	sub	sp, #20
 80011e8:	4604      	mov	r4, r0
 80011ea:	460e      	mov	r6, r1
 80011ec:	d906      	bls.n	80011fc <acc_sensor_protocol_a121_run_program+0x20>
 80011ee:	9100      	str	r1, [sp, #0]
 80011f0:	4603      	mov	r3, r0
 80011f2:	6c3d      	ldr	r5, [r7, #64]	; 0x40
 80011f4:	4a14      	ldr	r2, [pc, #80]	; (8001248 <acc_sensor_protocol_a121_run_program+0x6c>)
 80011f6:	4915      	ldr	r1, [pc, #84]	; (800124c <acc_sensor_protocol_a121_run_program+0x70>)
 80011f8:	2004      	movs	r0, #4
 80011fa:	47a8      	blx	r5
 80011fc:	f10d 020e 	add.w	r2, sp, #14
 8001200:	2500      	movs	r5, #0
 8001202:	211c      	movs	r1, #28
 8001204:	4620      	mov	r0, r4
 8001206:	f8ad 500e 	strh.w	r5, [sp, #14]
 800120a:	f7ff ffd1 	bl	80011b0 <acc_sensor_reg_read>
 800120e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8001212:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8001216:	d008      	beq.n	800122a <acc_sensor_protocol_a121_run_program+0x4e>
 8001218:	4628      	mov	r0, r5
 800121a:	6c3e      	ldr	r6, [r7, #64]	; 0x40
 800121c:	4a0c      	ldr	r2, [pc, #48]	; (8001250 <acc_sensor_protocol_a121_run_program+0x74>)
 800121e:	490b      	ldr	r1, [pc, #44]	; (800124c <acc_sensor_protocol_a121_run_program+0x70>)
 8001220:	4623      	mov	r3, r4
 8001222:	47b0      	blx	r6
 8001224:	4628      	mov	r0, r5
 8001226:	b005      	add	sp, #20
 8001228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800122a:	4620      	mov	r0, r4
 800122c:	211b      	movs	r1, #27
 800122e:	f7ff ffaf 	bl	8001190 <acc_sensor_reg_write>
 8001232:	4620      	mov	r0, r4
 8001234:	f446 6200 	orr.w	r2, r6, #2048	; 0x800
 8001238:	211b      	movs	r1, #27
 800123a:	f7ff ffa9 	bl	8001190 <acc_sensor_reg_write>
 800123e:	2001      	movs	r0, #1
 8001240:	b005      	add	sp, #20
 8001242:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001244:	200000ac 	.word	0x200000ac
 8001248:	0800a610 	.word	0x0800a610
 800124c:	0800a634 	.word	0x0800a634
 8001250:	0800a64c 	.word	0x0800a64c

08001254 <acc_sensor_protocol_a121_prepare_load>:
 8001254:	b570      	push	{r4, r5, r6, lr}
 8001256:	b082      	sub	sp, #8
 8001258:	f10d 0206 	add.w	r2, sp, #6
 800125c:	2400      	movs	r4, #0
 800125e:	2137      	movs	r1, #55	; 0x37
 8001260:	4605      	mov	r5, r0
 8001262:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001266:	f7ff ffa3 	bl	80011b0 <acc_sensor_reg_read>
 800126a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800126e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8001272:	b9b3      	cbnz	r3, 80012a2 <acc_sensor_protocol_a121_prepare_load+0x4e>
 8001274:	f10d 0206 	add.w	r2, sp, #6
 8001278:	2400      	movs	r4, #0
 800127a:	211c      	movs	r1, #28
 800127c:	4628      	mov	r0, r5
 800127e:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001282:	f7ff ff95 	bl	80011b0 <acc_sensor_reg_read>
 8001286:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800128a:	051b      	lsls	r3, r3, #20
 800128c:	d515      	bpl.n	80012ba <acc_sensor_protocol_a121_prepare_load+0x66>
 800128e:	4b0e      	ldr	r3, [pc, #56]	; (80012c8 <acc_sensor_protocol_a121_prepare_load+0x74>)
 8001290:	4a0e      	ldr	r2, [pc, #56]	; (80012cc <acc_sensor_protocol_a121_prepare_load+0x78>)
 8001292:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8001294:	490e      	ldr	r1, [pc, #56]	; (80012d0 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 8001296:	4620      	mov	r0, r4
 8001298:	462b      	mov	r3, r5
 800129a:	47b0      	blx	r6
 800129c:	4620      	mov	r0, r4
 800129e:	b002      	add	sp, #8
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
 80012a2:	4b09      	ldr	r3, [pc, #36]	; (80012c8 <acc_sensor_protocol_a121_prepare_load+0x74>)
 80012a4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80012a8:	2a00      	cmp	r2, #0
 80012aa:	d0e3      	beq.n	8001274 <acc_sensor_protocol_a121_prepare_load+0x20>
 80012ac:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80012ae:	4a09      	ldr	r2, [pc, #36]	; (80012d4 <acc_sensor_protocol_a121_prepare_load+0x80>)
 80012b0:	4907      	ldr	r1, [pc, #28]	; (80012d0 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 80012b2:	462b      	mov	r3, r5
 80012b4:	2001      	movs	r0, #1
 80012b6:	47a0      	blx	r4
 80012b8:	e7dc      	b.n	8001274 <acc_sensor_protocol_a121_prepare_load+0x20>
 80012ba:	4628      	mov	r0, r5
 80012bc:	f7ff ff4e 	bl	800115c <acc_sensor_protocol_a121_init_interrupts>
 80012c0:	2001      	movs	r0, #1
 80012c2:	b002      	add	sp, #8
 80012c4:	bd70      	pop	{r4, r5, r6, pc}
 80012c6:	bf00      	nop
 80012c8:	200000ac 	.word	0x200000ac
 80012cc:	0800a6a8 	.word	0x0800a6a8
 80012d0:	0800a634 	.word	0x0800a634
 80012d4:	0800a67c 	.word	0x0800a67c

080012d8 <acc_sensor_a121_load_confmem>:
 80012d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012dc:	4e17      	ldr	r6, [pc, #92]	; (800133c <acc_sensor_a121_load_confmem+0x64>)
 80012de:	f896 7048 	ldrb.w	r7, [r6, #72]	; 0x48
 80012e2:	f103 0902 	add.w	r9, r3, #2
 80012e6:	2f03      	cmp	r7, #3
 80012e8:	b083      	sub	sp, #12
 80012ea:	461c      	mov	r4, r3
 80012ec:	4682      	mov	sl, r0
 80012ee:	460d      	mov	r5, r1
 80012f0:	4690      	mov	r8, r2
 80012f2:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 80012f6:	d906      	bls.n	8001306 <acc_sensor_a121_load_confmem+0x2e>
 80012f8:	9100      	str	r1, [sp, #0]
 80012fa:	4603      	mov	r3, r0
 80012fc:	6c37      	ldr	r7, [r6, #64]	; 0x40
 80012fe:	4a10      	ldr	r2, [pc, #64]	; (8001340 <acc_sensor_a121_load_confmem+0x68>)
 8001300:	4910      	ldr	r1, [pc, #64]	; (8001344 <acc_sensor_a121_load_confmem+0x6c>)
 8001302:	2004      	movs	r0, #4
 8001304:	47b8      	blx	r7
 8001306:	8e33      	ldrh	r3, [r6, #48]	; 0x30
 8001308:	459b      	cmp	fp, r3
 800130a:	d907      	bls.n	800131c <acc_sensor_a121_load_confmem+0x44>
 800130c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800130e:	4a0e      	ldr	r2, [pc, #56]	; (8001348 <acc_sensor_a121_load_confmem+0x70>)
 8001310:	490c      	ldr	r1, [pc, #48]	; (8001344 <acc_sensor_a121_load_confmem+0x6c>)
 8001312:	2000      	movs	r0, #0
 8001314:	b003      	add	sp, #12
 8001316:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800131a:	4718      	bx	r3
 800131c:	f445 45a0 	orr.w	r5, r5, #20480	; 0x5000
 8001320:	3c01      	subs	r4, #1
 8001322:	f029 4200 	bic.w	r2, r9, #2147483648	; 0x80000000
 8001326:	4641      	mov	r1, r8
 8001328:	4650      	mov	r0, sl
 800132a:	2300      	movs	r3, #0
 800132c:	f8a8 5000 	strh.w	r5, [r8]
 8001330:	f8a8 4002 	strh.w	r4, [r8, #2]
 8001334:	b003      	add	sp, #12
 8001336:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800133a:	e61d      	b.n	8000f78 <acc_rss_integration_sensor_device_transfer>
 800133c:	200000ac 	.word	0x200000ac
 8001340:	0800a6d8 	.word	0x0800a6d8
 8001344:	0800a700 	.word	0x0800a700
 8001348:	0800a714 	.word	0x0800a714

0800134c <acc_cpd_assembly_test_load_program>:
 800134c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001350:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 8001500 <acc_cpd_assembly_test_load_program+0x1b4>
 8001354:	b091      	sub	sp, #68	; 0x44
 8001356:	f8ba 7030 	ldrh.w	r7, [sl, #48]	; 0x30
 800135a:	9104      	str	r1, [sp, #16]
 800135c:	4615      	mov	r5, r2
 800135e:	461e      	mov	r6, r3
 8001360:	9007      	str	r0, [sp, #28]
 8001362:	f7ff ff77 	bl	8001254 <acc_sensor_protocol_a121_prepare_load>
 8001366:	4604      	mov	r4, r0
 8001368:	b918      	cbnz	r0, 8001372 <acc_cpd_assembly_test_load_program+0x26>
 800136a:	4620      	mov	r0, r4
 800136c:	b011      	add	sp, #68	; 0x44
 800136e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001372:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001376:	2b03      	cmp	r3, #3
 8001378:	d905      	bls.n	8001386 <acc_cpd_assembly_test_load_program+0x3a>
 800137a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 800137e:	4a5b      	ldr	r2, [pc, #364]	; (80014ec <acc_cpd_assembly_test_load_program+0x1a0>)
 8001380:	495b      	ldr	r1, [pc, #364]	; (80014f0 <acc_cpd_assembly_test_load_program+0x1a4>)
 8001382:	2004      	movs	r0, #4
 8001384:	4798      	blx	r3
 8001386:	edd6 7a00 	vldr	s15, [r6]
 800138a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800138e:	a90d      	add	r1, sp, #52	; 0x34
 8001390:	a80c      	add	r0, sp, #48	; 0x30
 8001392:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
 8001396:	f7ff fc17 	bl	8000bc8 <acc_cpd_pll_divisors_calculate>
 800139a:	4604      	mov	r4, r0
 800139c:	2800      	cmp	r0, #0
 800139e:	d0e4      	beq.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 80013a0:	6833      	ldr	r3, [r6, #0]
 80013a2:	4a54      	ldr	r2, [pc, #336]	; (80014f4 <acc_cpd_assembly_test_load_program+0x1a8>)
 80013a4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80013a8:	9108      	str	r1, [sp, #32]
 80013aa:	fba2 2303 	umull	r2, r3, r2, r3
 80013ae:	0c9b      	lsrs	r3, r3, #18
 80013b0:	086d      	lsrs	r5, r5, #1
 80013b2:	087f      	lsrs	r7, r7, #1
 80013b4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80013b8:	42bd      	cmp	r5, r7
 80013ba:	9305      	str	r3, [sp, #20]
 80013bc:	4b4e      	ldr	r3, [pc, #312]	; (80014f8 <acc_cpd_assembly_test_load_program+0x1ac>)
 80013be:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80013c2:	9109      	str	r1, [sp, #36]	; 0x24
 80013c4:	bf28      	it	cs
 80013c6:	463d      	movcs	r5, r7
 80013c8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 80013cc:	910a      	str	r1, [sp, #40]	; 0x28
 80013ce:	3d02      	subs	r5, #2
 80013d0:	f603 3834 	addw	r8, r3, #2868	; 0xb34
 80013d4:	9b04      	ldr	r3, [sp, #16]
 80013d6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80013da:	910b      	str	r1, [sp, #44]	; 0x2c
 80013dc:	f025 0201 	bic.w	r2, r5, #1
 80013e0:	f240 579a 	movw	r7, #1434	; 0x59a
 80013e4:	9206      	str	r2, [sp, #24]
 80013e6:	fa1f fb82 	uxth.w	fp, r2
 80013ea:	1d1e      	adds	r6, r3, #4
 80013ec:	2500      	movs	r5, #0
 80013ee:	9703      	str	r7, [sp, #12]
 80013f0:	9b06      	ldr	r3, [sp, #24]
 80013f2:	9a03      	ldr	r2, [sp, #12]
 80013f4:	f5c5 69b3 	rsb	r9, r5, #1432	; 0x598
 80013f8:	f109 0902 	add.w	r9, r9, #2
 80013fc:	454b      	cmp	r3, r9
 80013fe:	bf98      	it	ls
 8001400:	465a      	movls	r2, fp
 8001402:	4b3d      	ldr	r3, [pc, #244]	; (80014f8 <acc_cpd_assembly_test_load_program+0x1ac>)
 8001404:	086c      	lsrs	r4, r5, #1
 8001406:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800140a:	4691      	mov	r9, r2
 800140c:	4631      	mov	r1, r6
 800140e:	0852      	lsrs	r2, r2, #1
 8001410:	f7ff fbcc 	bl	8000bac <acc_confprogram_copy>
 8001414:	9b05      	ldr	r3, [sp, #20]
 8001416:	9301      	str	r3, [sp, #4]
 8001418:	231a      	movs	r3, #26
 800141a:	9300      	str	r3, [sp, #0]
 800141c:	464a      	mov	r2, r9
 800141e:	4643      	mov	r3, r8
 8001420:	4629      	mov	r1, r5
 8001422:	4630      	mov	r0, r6
 8001424:	f7ff fcea 	bl	8000dfc <acc_confprogram_patch_offset>
 8001428:	b958      	cbnz	r0, 8001442 <acc_cpd_assembly_test_load_program+0xf6>
 800142a:	2400      	movs	r4, #0
 800142c:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001430:	2b03      	cmp	r3, #3
 8001432:	d99a      	bls.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 8001434:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8001438:	4a30      	ldr	r2, [pc, #192]	; (80014fc <acc_cpd_assembly_test_load_program+0x1b0>)
 800143a:	492d      	ldr	r1, [pc, #180]	; (80014f0 <acc_cpd_assembly_test_load_program+0x1a4>)
 800143c:	2004      	movs	r0, #4
 800143e:	4798      	blx	r3
 8001440:	e793      	b.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 8001442:	9a08      	ldr	r2, [sp, #32]
 8001444:	2313      	movs	r3, #19
 8001446:	e9cd 3200 	strd	r3, r2, [sp]
 800144a:	4629      	mov	r1, r5
 800144c:	4643      	mov	r3, r8
 800144e:	464a      	mov	r2, r9
 8001450:	4630      	mov	r0, r6
 8001452:	f7ff fcd3 	bl	8000dfc <acc_confprogram_patch_offset>
 8001456:	4686      	mov	lr, r0
 8001458:	f04f 0c11 	mov.w	ip, #17
 800145c:	4643      	mov	r3, r8
 800145e:	464a      	mov	r2, r9
 8001460:	4629      	mov	r1, r5
 8001462:	4630      	mov	r0, r6
 8001464:	f1be 0f00 	cmp.w	lr, #0
 8001468:	d0df      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 800146a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800146c:	e9cd c700 	strd	ip, r7, [sp]
 8001470:	f7ff fcc4 	bl	8000dfc <acc_confprogram_patch_offset>
 8001474:	4686      	mov	lr, r0
 8001476:	f04f 0c12 	mov.w	ip, #18
 800147a:	4643      	mov	r3, r8
 800147c:	464a      	mov	r2, r9
 800147e:	4629      	mov	r1, r5
 8001480:	4630      	mov	r0, r6
 8001482:	f1be 0f00 	cmp.w	lr, #0
 8001486:	d0d0      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 8001488:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800148a:	e9cd c700 	strd	ip, r7, [sp]
 800148e:	f7ff fcb5 	bl	8000dfc <acc_confprogram_patch_offset>
 8001492:	4686      	mov	lr, r0
 8001494:	f04f 0c10 	mov.w	ip, #16
 8001498:	4643      	mov	r3, r8
 800149a:	464a      	mov	r2, r9
 800149c:	4629      	mov	r1, r5
 800149e:	4630      	mov	r0, r6
 80014a0:	f1be 0f00 	cmp.w	lr, #0
 80014a4:	d0c1      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 80014a6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80014a8:	e9cd c700 	strd	ip, r7, [sp]
 80014ac:	f7ff fca6 	bl	8000dfc <acc_confprogram_patch_offset>
 80014b0:	4684      	mov	ip, r0
 80014b2:	4621      	mov	r1, r4
 80014b4:	4664      	mov	r4, ip
 80014b6:	9a04      	ldr	r2, [sp, #16]
 80014b8:	9807      	ldr	r0, [sp, #28]
 80014ba:	464b      	mov	r3, r9
 80014bc:	b16c      	cbz	r4, 80014da <acc_cpd_assembly_test_load_program+0x18e>
 80014be:	445d      	add	r5, fp
 80014c0:	f7ff ff0a 	bl	80012d8 <acc_sensor_a121_load_confmem>
 80014c4:	b2ad      	uxth	r5, r5
 80014c6:	f240 5399 	movw	r3, #1433	; 0x599
 80014ca:	429d      	cmp	r5, r3
 80014cc:	9b03      	ldr	r3, [sp, #12]
 80014ce:	eba3 070b 	sub.w	r7, r3, fp
 80014d2:	d8ab      	bhi.n	800142c <acc_cpd_assembly_test_load_program+0xe0>
 80014d4:	b2bb      	uxth	r3, r7
 80014d6:	9303      	str	r3, [sp, #12]
 80014d8:	e78a      	b.n	80013f0 <acc_cpd_assembly_test_load_program+0xa4>
 80014da:	eb0b 0305 	add.w	r3, fp, r5
 80014de:	b29b      	uxth	r3, r3
 80014e0:	f240 5299 	movw	r2, #1433	; 0x599
 80014e4:	4293      	cmp	r3, r2
 80014e6:	d9a0      	bls.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 80014e8:	e7a0      	b.n	800142c <acc_cpd_assembly_test_load_program+0xe0>
 80014ea:	bf00      	nop
 80014ec:	0800a734 	.word	0x0800a734
 80014f0:	0800a764 	.word	0x0800a764
 80014f4:	431bde83 	.word	0x431bde83
 80014f8:	08007b98 	.word	0x08007b98
 80014fc:	0800a778 	.word	0x0800a778
 8001500:	200000ac 	.word	0x200000ac

08001504 <least_sqr_fit>:
 8001504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001508:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 800150c:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8001510:	b08d      	sub	sp, #52	; 0x34
 8001512:	2600      	movs	r6, #0
 8001514:	4683      	mov	fp, r0
 8001516:	4682      	mov	sl, r0
 8001518:	4680      	mov	r8, r0
 800151a:	4667      	mov	r7, ip
 800151c:	46b1      	mov	r9, r6
 800151e:	a803      	add	r0, sp, #12
 8001520:	ea4f 0589 	mov.w	r5, r9, lsl #2
 8001524:	4686      	mov	lr, r0
 8001526:	ed9f 7a57 	vldr	s14, [pc, #348]	; 8001684 <least_sqr_fit+0x180>
 800152a:	4643      	mov	r3, r8
 800152c:	b16a      	cbz	r2, 800154a <least_sqr_fit+0x46>
 800152e:	199c      	adds	r4, r3, r6
 8001530:	442c      	add	r4, r5
 8001532:	edd4 7a00 	vldr	s15, [r4]
 8001536:	461c      	mov	r4, r3
 8001538:	edd4 6a00 	vldr	s13, [r4]
 800153c:	330c      	adds	r3, #12
 800153e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001542:	42bb      	cmp	r3, r7
 8001544:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001548:	d1f1      	bne.n	800152e <least_sqr_fit+0x2a>
 800154a:	3504      	adds	r5, #4
 800154c:	2d0c      	cmp	r5, #12
 800154e:	ecae 7a01 	vstmia	lr!, {s14}
 8001552:	d1e8      	bne.n	8001526 <least_sqr_fit+0x22>
 8001554:	f109 0901 	add.w	r9, r9, #1
 8001558:	f1b9 0f03 	cmp.w	r9, #3
 800155c:	f100 0010 	add.w	r0, r0, #16
 8001560:	f108 0804 	add.w	r8, r8, #4
 8001564:	f1a6 0604 	sub.w	r6, r6, #4
 8001568:	f107 0704 	add.w	r7, r7, #4
 800156c:	d1d8      	bne.n	8001520 <least_sqr_fit+0x1c>
 800156e:	ed9d 6a04 	vldr	s12, [sp, #16]
 8001572:	eddd 5a05 	vldr	s11, [sp, #20]
 8001576:	eddd 6a08 	vldr	s13, [sp, #32]
 800157a:	4668      	mov	r0, sp
 800157c:	f10b 040c 	add.w	r4, fp, #12
 8001580:	eddf 7a40 	vldr	s15, [pc, #256]	; 8001684 <least_sqr_fit+0x180>
 8001584:	4653      	mov	r3, sl
 8001586:	b13a      	cbz	r2, 8001598 <least_sqr_fit+0x94>
 8001588:	461d      	mov	r5, r3
 800158a:	ed95 7a00 	vldr	s14, [r5]
 800158e:	330c      	adds	r3, #12
 8001590:	4563      	cmp	r3, ip
 8001592:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001596:	d1f7      	bne.n	8001588 <least_sqr_fit+0x84>
 8001598:	f10a 0a04 	add.w	sl, sl, #4
 800159c:	45a2      	cmp	sl, r4
 800159e:	ece0 7a01 	vstmia	r0!, {s15}
 80015a2:	f10c 0c04 	add.w	ip, ip, #4
 80015a6:	d1eb      	bne.n	8001580 <least_sqr_fit+0x7c>
 80015a8:	eddd 7a03 	vldr	s15, [sp, #12]
 80015ac:	eef5 7a40 	vcmp.f32	s15, #0.0
 80015b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015b4:	d010      	beq.n	80015d8 <least_sqr_fit+0xd4>
 80015b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80015ba:	ee87 4a27 	vdiv.f32	s8, s14, s15
 80015be:	eddd 7a07 	vldr	s15, [sp, #28]
 80015c2:	ee66 4a04 	vmul.f32	s9, s12, s8
 80015c6:	ee26 5a24 	vmul.f32	s10, s12, s9
 80015ca:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80015ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80015d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015d6:	d106      	bne.n	80015e6 <least_sqr_fit+0xe2>
 80015d8:	2000      	movs	r0, #0
 80015da:	2300      	movs	r3, #0
 80015dc:	f8cb 3000 	str.w	r3, [fp]
 80015e0:	b00d      	add	sp, #52	; 0x34
 80015e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015e6:	eec7 2a27 	vdiv.f32	s5, s14, s15
 80015ea:	ee65 3a84 	vmul.f32	s7, s11, s8
 80015ee:	ee25 7aa4 	vmul.f32	s14, s11, s9
 80015f2:	ee66 7a23 	vmul.f32	s15, s12, s7
 80015f6:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 80015fa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80015fe:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8001602:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8001606:	ee65 6aa3 	vmul.f32	s13, s11, s7
 800160a:	ee75 6a66 	vsub.f32	s13, s10, s13
 800160e:	ee27 5a27 	vmul.f32	s10, s14, s15
 8001612:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8001616:	eef5 6a40 	vcmp.f32	s13, #0.0
 800161a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800161e:	d0db      	beq.n	80015d8 <least_sqr_fit+0xd4>
 8001620:	ed9d 5a00 	vldr	s10, [sp]
 8001624:	ed9d 3a01 	vldr	s6, [sp, #4]
 8001628:	ed9d 2a02 	vldr	s4, [sp, #8]
 800162c:	ee64 4a85 	vmul.f32	s9, s9, s10
 8001630:	ee63 3a85 	vmul.f32	s7, s7, s10
 8001634:	ee73 4a64 	vsub.f32	s9, s6, s9
 8001638:	2001      	movs	r0, #1
 800163a:	ee67 7aa4 	vmul.f32	s15, s15, s9
 800163e:	2300      	movs	r3, #0
 8001640:	ee72 7a67 	vsub.f32	s15, s4, s15
 8001644:	ee77 3ae3 	vsub.f32	s7, s15, s7
 8001648:	eec3 7aa6 	vdiv.f32	s15, s7, s13
 800164c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001650:	edc1 7a02 	vstr	s15, [r1, #8]
 8001654:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8001658:	ee65 5aa7 	vmul.f32	s11, s11, s15
 800165c:	ee67 7a22 	vmul.f32	s15, s14, s5
 8001660:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001664:	edc1 7a01 	vstr	s15, [r1, #4]
 8001668:	ee35 6a46 	vsub.f32	s12, s10, s12
 800166c:	ee76 5a65 	vsub.f32	s11, s12, s11
 8001670:	ee25 4a84 	vmul.f32	s8, s11, s8
 8001674:	ed81 4a00 	vstr	s8, [r1]
 8001678:	f8cb 3000 	str.w	r3, [fp]
 800167c:	b00d      	add	sp, #52	; 0x34
 800167e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001682:	bf00      	nop
 8001684:	00000000 	.word	0x00000000

08001688 <acc_cal_algorithms_atan2_q16>:
 8001688:	2800      	cmp	r0, #0
 800168a:	bfb8      	it	lt
 800168c:	4240      	neglt	r0, r0
 800168e:	b470      	push	{r4, r5, r6}
 8001690:	bfba      	itte	lt
 8001692:	b200      	sxthlt	r0, r0
 8001694:	2401      	movlt	r4, #1
 8001696:	2400      	movge	r4, #0
 8001698:	2900      	cmp	r1, #0
 800169a:	db3f      	blt.n	800171c <acc_cal_algorithms_atan2_q16+0x94>
 800169c:	4288      	cmp	r0, r1
 800169e:	db38      	blt.n	8001712 <acc_cal_algorithms_atan2_q16+0x8a>
 80016a0:	2200      	movs	r2, #0
 80016a2:	4603      	mov	r3, r0
 80016a4:	b368      	cbz	r0, 8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 80016a6:	4608      	mov	r0, r1
 80016a8:	2600      	movs	r6, #0
 80016aa:	f643 4528 	movw	r5, #15400	; 0x3c28
 80016ae:	0400      	lsls	r0, r0, #16
 80016b0:	fbb0 f1f3 	udiv	r1, r0, r3
 80016b4:	42a9      	cmp	r1, r5
 80016b6:	d94a      	bls.n	800174e <acc_cal_algorithms_atan2_q16+0xc6>
 80016b8:	f246 33d6 	movw	r3, #25558	; 0x63d6
 80016bc:	4299      	cmp	r1, r3
 80016be:	d936      	bls.n	800172e <acc_cal_algorithms_atan2_q16+0xa6>
 80016c0:	f648 0372 	movw	r3, #34930	; 0x8872
 80016c4:	4299      	cmp	r1, r3
 80016c6:	d944      	bls.n	8001752 <acc_cal_algorithms_atan2_q16+0xca>
 80016c8:	f64a 4349 	movw	r3, #44105	; 0xac49
 80016cc:	4299      	cmp	r1, r3
 80016ce:	d942      	bls.n	8001756 <acc_cal_algorithms_atan2_q16+0xce>
 80016d0:	f24d 03a3 	movw	r3, #53411	; 0xd0a3
 80016d4:	4299      	cmp	r1, r3
 80016d6:	d940      	bls.n	800175a <acc_cal_algorithms_atan2_q16+0xd2>
 80016d8:	f24f 734b 	movw	r3, #63307	; 0xf74b
 80016dc:	4299      	cmp	r1, r3
 80016de:	bf98      	it	ls
 80016e0:	2005      	movls	r0, #5
 80016e2:	d925      	bls.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 80016e4:	f24f 754c 	movw	r5, #63308	; 0xf74c
 80016e8:	f248 2333 	movw	r3, #33331	; 0x8233
 80016ec:	f24c 40a3 	movw	r0, #50339	; 0xc4a3
 80016f0:	1b49      	subs	r1, r1, r5
 80016f2:	fb03 f101 	mul.w	r1, r3, r1
 80016f6:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 80016fa:	b116      	cbz	r6, 8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 80016fc:	f5c0 30c9 	rsb	r0, r0, #102912	; 0x19200
 8001700:	301f      	adds	r0, #31
 8001702:	b114      	cbz	r4, 800170a <acc_cal_algorithms_atan2_q16+0x82>
 8001704:	f5c0 3049 	rsb	r0, r0, #205824	; 0x32400
 8001708:	303f      	adds	r0, #63	; 0x3f
 800170a:	b102      	cbz	r2, 800170e <acc_cal_algorithms_atan2_q16+0x86>
 800170c:	4240      	negs	r0, r0
 800170e:	bc70      	pop	{r4, r5, r6}
 8001710:	4770      	bx	lr
 8001712:	460b      	mov	r3, r1
 8001714:	b9c1      	cbnz	r1, 8001748 <acc_cal_algorithms_atan2_q16+0xc0>
 8001716:	4812      	ldr	r0, [pc, #72]	; (8001760 <acc_cal_algorithms_atan2_q16+0xd8>)
 8001718:	460a      	mov	r2, r1
 800171a:	e7f2      	b.n	8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 800171c:	4249      	negs	r1, r1
 800171e:	b209      	sxth	r1, r1
 8001720:	4288      	cmp	r0, r1
 8001722:	f04f 0201 	mov.w	r2, #1
 8001726:	dabc      	bge.n	80016a2 <acc_cal_algorithms_atan2_q16+0x1a>
 8001728:	460b      	mov	r3, r1
 800172a:	4616      	mov	r6, r2
 800172c:	e7bd      	b.n	80016aa <acc_cal_algorithms_atan2_q16+0x22>
 800172e:	2001      	movs	r0, #1
 8001730:	4b0c      	ldr	r3, [pc, #48]	; (8001764 <acc_cal_algorithms_atan2_q16+0xdc>)
 8001732:	eb03 05c0 	add.w	r5, r3, r0, lsl #3
 8001736:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800173a:	f8d5 0c28 	ldr.w	r0, [r5, #3112]	; 0xc28
 800173e:	f8d3 3c5c 	ldr.w	r3, [r3, #3164]	; 0xc5c
 8001742:	f8d5 5c24 	ldr.w	r5, [r5, #3108]	; 0xc24
 8001746:	e7d3      	b.n	80016f0 <acc_cal_algorithms_atan2_q16+0x68>
 8001748:	2200      	movs	r2, #0
 800174a:	2601      	movs	r6, #1
 800174c:	e7ad      	b.n	80016aa <acc_cal_algorithms_atan2_q16+0x22>
 800174e:	2000      	movs	r0, #0
 8001750:	e7ee      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 8001752:	2002      	movs	r0, #2
 8001754:	e7ec      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 8001756:	2003      	movs	r0, #3
 8001758:	e7ea      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 800175a:	2004      	movs	r0, #4
 800175c:	e7e8      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 800175e:	bf00      	nop
 8001760:	0001921f 	.word	0x0001921f
 8001764:	08007b98 	.word	0x08007b98

08001768 <test_interrupt>:
 8001768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800176c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800176e:	b086      	sub	sp, #24
 8001770:	2b00      	cmp	r3, #0
 8001772:	d05c      	beq.n	800182e <test_interrupt+0xc6>
 8001774:	2b01      	cmp	r3, #1
 8001776:	4604      	mov	r4, r0
 8001778:	d068      	beq.n	800184c <test_interrupt+0xe4>
 800177a:	2200      	movs	r2, #0
 800177c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8001780:	07da      	lsls	r2, r3, #31
 8001782:	d402      	bmi.n	800178a <test_interrupt+0x22>
 8001784:	2b0c      	cmp	r3, #12
 8001786:	f240 8093 	bls.w	80018b0 <test_interrupt+0x148>
 800178a:	2600      	movs	r6, #0
 800178c:	6820      	ldr	r0, [r4, #0]
 800178e:	f8ad 600e 	strh.w	r6, [sp, #14]
 8001792:	f10d 020e 	add.w	r2, sp, #14
 8001796:	f240 1113 	movw	r1, #275	; 0x113
 800179a:	f8ad 6010 	strh.w	r6, [sp, #16]
 800179e:	f8ad 6012 	strh.w	r6, [sp, #18]
 80017a2:	f8ad 6014 	strh.w	r6, [sp, #20]
 80017a6:	f7ff fd03 	bl	80011b0 <acc_sensor_reg_read>
 80017aa:	6820      	ldr	r0, [r4, #0]
 80017ac:	aa04      	add	r2, sp, #16
 80017ae:	f44f 718a 	mov.w	r1, #276	; 0x114
 80017b2:	f7ff fcfd 	bl	80011b0 <acc_sensor_reg_read>
 80017b6:	6820      	ldr	r0, [r4, #0]
 80017b8:	f10d 0212 	add.w	r2, sp, #18
 80017bc:	2133      	movs	r1, #51	; 0x33
 80017be:	f7ff fcf7 	bl	80011b0 <acc_sensor_reg_read>
 80017c2:	6820      	ldr	r0, [r4, #0]
 80017c4:	aa05      	add	r2, sp, #20
 80017c6:	2132      	movs	r1, #50	; 0x32
 80017c8:	f7ff fcf2 	bl	80011b0 <acc_sensor_reg_read>
 80017cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80017d0:	2b02      	cmp	r3, #2
 80017d2:	d05e      	beq.n	8001892 <test_interrupt+0x12a>
 80017d4:	2b03      	cmp	r3, #3
 80017d6:	d154      	bne.n	8001882 <test_interrupt+0x11a>
 80017d8:	aa05      	add	r2, sp, #20
 80017da:	6820      	ldr	r0, [r4, #0]
 80017dc:	2132      	movs	r1, #50	; 0x32
 80017de:	f7ff fce7 	bl	80011b0 <acc_sensor_reg_read>
 80017e2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80017e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80017e8:	4293      	cmp	r3, r2
 80017ea:	d07a      	beq.n	80018e2 <test_interrupt+0x17a>
 80017ec:	4d55      	ldr	r5, [pc, #340]	; (8001944 <test_interrupt+0x1dc>)
 80017ee:	9200      	str	r2, [sp, #0]
 80017f0:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80017f2:	4a55      	ldr	r2, [pc, #340]	; (8001948 <test_interrupt+0x1e0>)
 80017f4:	4955      	ldr	r1, [pc, #340]	; (800194c <test_interrupt+0x1e4>)
 80017f6:	4630      	mov	r0, r6
 80017f8:	47a8      	blx	r5
 80017fa:	2504      	movs	r5, #4
 80017fc:	6820      	ldr	r0, [r4, #0]
 80017fe:	aa03      	add	r2, sp, #12
 8001800:	2145      	movs	r1, #69	; 0x45
 8001802:	f7ff fcd5 	bl	80011b0 <acc_sensor_reg_read>
 8001806:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800180a:	2b00      	cmp	r3, #0
 800180c:	f040 8095 	bne.w	800193a <test_interrupt+0x1d2>
 8001810:	4d4c      	ldr	r5, [pc, #304]	; (8001944 <test_interrupt+0x1dc>)
 8001812:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001814:	4a4e      	ldr	r2, [pc, #312]	; (8001950 <test_interrupt+0x1e8>)
 8001816:	494d      	ldr	r1, [pc, #308]	; (800194c <test_interrupt+0x1e4>)
 8001818:	2000      	movs	r0, #0
 800181a:	4798      	blx	r3
 800181c:	2504      	movs	r5, #4
 800181e:	2100      	movs	r1, #0
 8001820:	484c      	ldr	r0, [pc, #304]	; (8001954 <test_interrupt+0x1ec>)
 8001822:	f7ff f8e3 	bl	80009ec <acc_diagnostic_log_scalar>
 8001826:	4628      	mov	r0, r5
 8001828:	b006      	add	sp, #24
 800182a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800182e:	4b45      	ldr	r3, [pc, #276]	; (8001944 <test_interrupt+0x1dc>)
 8001830:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8001834:	2a01      	cmp	r2, #1
 8001836:	d91f      	bls.n	8001878 <test_interrupt+0x110>
 8001838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800183a:	4a47      	ldr	r2, [pc, #284]	; (8001958 <test_interrupt+0x1f0>)
 800183c:	4943      	ldr	r1, [pc, #268]	; (800194c <test_interrupt+0x1e4>)
 800183e:	2002      	movs	r0, #2
 8001840:	4798      	blx	r3
 8001842:	2501      	movs	r5, #1
 8001844:	4628      	mov	r0, r5
 8001846:	b006      	add	sp, #24
 8001848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800184c:	4d3d      	ldr	r5, [pc, #244]	; (8001944 <test_interrupt+0x1dc>)
 800184e:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 8001852:	2b01      	cmp	r3, #1
 8001854:	d904      	bls.n	8001860 <test_interrupt+0xf8>
 8001856:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001858:	4a40      	ldr	r2, [pc, #256]	; (800195c <test_interrupt+0x1f4>)
 800185a:	493c      	ldr	r1, [pc, #240]	; (800194c <test_interrupt+0x1e4>)
 800185c:	2002      	movs	r0, #2
 800185e:	4798      	blx	r3
 8001860:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8001862:	9305      	str	r3, [sp, #20]
 8001864:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8001868:	6820      	ldr	r0, [r4, #0]
 800186a:	ab05      	add	r3, sp, #20
 800186c:	f7ff fd6e 	bl	800134c <acc_cpd_assembly_test_load_program>
 8001870:	bb60      	cbnz	r0, 80018cc <test_interrupt+0x164>
 8001872:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001874:	4a3a      	ldr	r2, [pc, #232]	; (8001960 <test_interrupt+0x1f8>)
 8001876:	e7ce      	b.n	8001816 <test_interrupt+0xae>
 8001878:	2501      	movs	r5, #1
 800187a:	4628      	mov	r0, r5
 800187c:	b006      	add	sp, #24
 800187e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001882:	4d30      	ldr	r5, [pc, #192]	; (8001944 <test_interrupt+0x1dc>)
 8001884:	4a37      	ldr	r2, [pc, #220]	; (8001964 <test_interrupt+0x1fc>)
 8001886:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001888:	4930      	ldr	r1, [pc, #192]	; (800194c <test_interrupt+0x1e4>)
 800188a:	4630      	mov	r0, r6
 800188c:	4798      	blx	r3
 800188e:	2504      	movs	r5, #4
 8001890:	e7b4      	b.n	80017fc <test_interrupt+0x94>
 8001892:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8001896:	f243 0239 	movw	r2, #12345	; 0x3039
 800189a:	4293      	cmp	r3, r2
 800189c:	d01f      	beq.n	80018de <test_interrupt+0x176>
 800189e:	4d29      	ldr	r5, [pc, #164]	; (8001944 <test_interrupt+0x1dc>)
 80018a0:	9200      	str	r2, [sp, #0]
 80018a2:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80018a4:	4a30      	ldr	r2, [pc, #192]	; (8001968 <test_interrupt+0x200>)
 80018a6:	4929      	ldr	r1, [pc, #164]	; (800194c <test_interrupt+0x1e4>)
 80018a8:	4630      	mov	r0, r6
 80018aa:	47a8      	blx	r5
 80018ac:	2504      	movs	r5, #4
 80018ae:	e7a5      	b.n	80017fc <test_interrupt+0x94>
 80018b0:	6800      	ldr	r0, [r0, #0]
 80018b2:	aa03      	add	r2, sp, #12
 80018b4:	2145      	movs	r1, #69	; 0x45
 80018b6:	f7ff fc7b 	bl	80011b0 <acc_sensor_reg_read>
 80018ba:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d0a6      	beq.n	8001810 <test_interrupt+0xa8>
 80018c2:	2502      	movs	r5, #2
 80018c4:	4628      	mov	r0, r5
 80018c6:	b006      	add	sp, #24
 80018c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018cc:	6820      	ldr	r0, [r4, #0]
 80018ce:	f240 1163 	movw	r1, #355	; 0x163
 80018d2:	f7ff fc83 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 80018d6:	2800      	cmp	r0, #0
 80018d8:	d0cb      	beq.n	8001872 <test_interrupt+0x10a>
 80018da:	2502      	movs	r5, #2
 80018dc:	e7f2      	b.n	80018c4 <test_interrupt+0x15c>
 80018de:	2503      	movs	r5, #3
 80018e0:	e78c      	b.n	80017fc <test_interrupt+0x94>
 80018e2:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80018e6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80018ea:	4d16      	ldr	r5, [pc, #88]	; (8001944 <test_interrupt+0x1dc>)
 80018ec:	440a      	add	r2, r1
 80018ee:	f895 1048 	ldrb.w	r1, [r5, #72]	; 0x48
 80018f2:	3201      	adds	r2, #1
 80018f4:	3b03      	subs	r3, #3
 80018f6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80018fa:	2901      	cmp	r1, #1
 80018fc:	fa1f f882 	uxth.w	r8, r2
 8001900:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8001904:	ea4f 0253 	mov.w	r2, r3, lsr #1
 8001908:	d907      	bls.n	800191a <test_interrupt+0x1b2>
 800190a:	f8cd 8000 	str.w	r8, [sp]
 800190e:	b293      	uxth	r3, r2
 8001910:	490e      	ldr	r1, [pc, #56]	; (800194c <test_interrupt+0x1e4>)
 8001912:	4a16      	ldr	r2, [pc, #88]	; (800196c <test_interrupt+0x204>)
 8001914:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8001916:	2002      	movs	r0, #2
 8001918:	47b8      	blx	r7
 800191a:	b14e      	cbz	r6, 8001930 <test_interrupt+0x1c8>
 800191c:	6820      	ldr	r0, [r4, #0]
 800191e:	aa03      	add	r2, sp, #12
 8001920:	2145      	movs	r1, #69	; 0x45
 8001922:	f7ff fc45 	bl	80011b0 <acc_sensor_reg_read>
 8001926:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800192a:	2b00      	cmp	r3, #0
 800192c:	d1c9      	bne.n	80018c2 <test_interrupt+0x15a>
 800192e:	e770      	b.n	8001812 <test_interrupt+0xaa>
 8001930:	480f      	ldr	r0, [pc, #60]	; (8001970 <test_interrupt+0x208>)
 8001932:	4641      	mov	r1, r8
 8001934:	f7ff f85a 	bl	80009ec <acc_diagnostic_log_scalar>
 8001938:	e7f0      	b.n	800191c <test_interrupt+0x1b4>
 800193a:	1eeb      	subs	r3, r5, #3
 800193c:	4259      	negs	r1, r3
 800193e:	4159      	adcs	r1, r3
 8001940:	e76e      	b.n	8001820 <test_interrupt+0xb8>
 8001942:	bf00      	nop
 8001944:	200000ac 	.word	0x200000ac
 8001948:	0800a868 	.word	0x0800a868
 800194c:	0800a7bc 	.word	0x0800a7bc
 8001950:	0800a804 	.word	0x0800a804
 8001954:	0800a8f0 	.word	0x0800a8f0
 8001958:	0800a7a4 	.word	0x0800a7a4
 800195c:	0800a7d0 	.word	0x0800a7d0
 8001960:	0800a7e8 	.word	0x0800a7e8
 8001964:	0800a8cc 	.word	0x0800a8cc
 8001968:	0800a89c 	.word	0x0800a89c
 800196c:	0800a820 	.word	0x0800a820
 8001970:	0800a850 	.word	0x0800a850

08001974 <test_enable_pin>:
 8001974:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001978:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800197a:	b087      	sub	sp, #28
 800197c:	4605      	mov	r5, r0
 800197e:	b183      	cbz	r3, 80019a2 <test_enable_pin+0x2e>
 8001980:	2b01      	cmp	r3, #1
 8001982:	d04f      	beq.n	8001a24 <test_enable_pin+0xb0>
 8001984:	4b3e      	ldr	r3, [pc, #248]	; (8001a80 <test_enable_pin+0x10c>)
 8001986:	4a3f      	ldr	r2, [pc, #252]	; (8001a84 <test_enable_pin+0x110>)
 8001988:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800198a:	493f      	ldr	r1, [pc, #252]	; (8001a88 <test_enable_pin+0x114>)
 800198c:	2000      	movs	r0, #0
 800198e:	4798      	blx	r3
 8001990:	2504      	movs	r5, #4
 8001992:	2100      	movs	r1, #0
 8001994:	483d      	ldr	r0, [pc, #244]	; (8001a8c <test_enable_pin+0x118>)
 8001996:	f7ff f829 	bl	80009ec <acc_diagnostic_log_scalar>
 800199a:	4628      	mov	r0, r5
 800199c:	b007      	add	sp, #28
 800199e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019a2:	4f37      	ldr	r7, [pc, #220]	; (8001a80 <test_enable_pin+0x10c>)
 80019a4:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	d904      	bls.n	80019b6 <test_enable_pin+0x42>
 80019ac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80019ae:	4a38      	ldr	r2, [pc, #224]	; (8001a90 <test_enable_pin+0x11c>)
 80019b0:	4935      	ldr	r1, [pc, #212]	; (8001a88 <test_enable_pin+0x114>)
 80019b2:	2002      	movs	r0, #2
 80019b4:	4798      	blx	r3
 80019b6:	4837      	ldr	r0, [pc, #220]	; (8001a94 <test_enable_pin+0x120>)
 80019b8:	f7ff f820 	bl	80009fc <acc_diagnostic_log_set_scope>
 80019bc:	4b36      	ldr	r3, [pc, #216]	; (8001a98 <test_enable_pin+0x124>)
 80019be:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019c0:	ac06      	add	r4, sp, #24
 80019c2:	f10d 0806 	add.w	r8, sp, #6
 80019c6:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80019ca:	4646      	mov	r6, r8
 80019cc:	242c      	movs	r4, #44	; 0x2c
 80019ce:	4621      	mov	r1, r4
 80019d0:	3401      	adds	r4, #1
 80019d2:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80019d6:	6828      	ldr	r0, [r5, #0]
 80019d8:	b2a4      	uxth	r4, r4
 80019da:	f7ff fbd9 	bl	8001190 <acc_sensor_reg_write>
 80019de:	2c34      	cmp	r4, #52	; 0x34
 80019e0:	d1f5      	bne.n	80019ce <test_enable_pin+0x5a>
 80019e2:	262c      	movs	r6, #44	; 0x2c
 80019e4:	2401      	movs	r4, #1
 80019e6:	f04f 0900 	mov.w	r9, #0
 80019ea:	f10d 0206 	add.w	r2, sp, #6
 80019ee:	4631      	mov	r1, r6
 80019f0:	6828      	ldr	r0, [r5, #0]
 80019f2:	f8ad 9006 	strh.w	r9, [sp, #6]
 80019f6:	3601      	adds	r6, #1
 80019f8:	f7ff fbda 	bl	80011b0 <acc_sensor_reg_read>
 80019fc:	f838 2f02 	ldrh.w	r2, [r8, #2]!
 8001a00:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001a04:	b2b6      	uxth	r6, r6
 8001a06:	429a      	cmp	r2, r3
 8001a08:	bf18      	it	ne
 8001a0a:	2400      	movne	r4, #0
 8001a0c:	2e34      	cmp	r6, #52	; 0x34
 8001a0e:	d1ec      	bne.n	80019ea <test_enable_pin+0x76>
 8001a10:	2c00      	cmp	r4, #0
 8001a12:	d131      	bne.n	8001a78 <test_enable_pin+0x104>
 8001a14:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a16:	4a21      	ldr	r2, [pc, #132]	; (8001a9c <test_enable_pin+0x128>)
 8001a18:	491b      	ldr	r1, [pc, #108]	; (8001a88 <test_enable_pin+0x114>)
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	4798      	blx	r3
 8001a1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a20:	4a1f      	ldr	r2, [pc, #124]	; (8001aa0 <test_enable_pin+0x12c>)
 8001a22:	e7b2      	b.n	800198a <test_enable_pin+0x16>
 8001a24:	4f16      	ldr	r7, [pc, #88]	; (8001a80 <test_enable_pin+0x10c>)
 8001a26:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8001a2a:	2b01      	cmp	r3, #1
 8001a2c:	d904      	bls.n	8001a38 <test_enable_pin+0xc4>
 8001a2e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a30:	4a1c      	ldr	r2, [pc, #112]	; (8001aa4 <test_enable_pin+0x130>)
 8001a32:	4915      	ldr	r1, [pc, #84]	; (8001a88 <test_enable_pin+0x114>)
 8001a34:	2002      	movs	r0, #2
 8001a36:	4798      	blx	r3
 8001a38:	262c      	movs	r6, #44	; 0x2c
 8001a3a:	2401      	movs	r4, #1
 8001a3c:	f04f 0800 	mov.w	r8, #0
 8001a40:	4631      	mov	r1, r6
 8001a42:	6828      	ldr	r0, [r5, #0]
 8001a44:	f8ad 8008 	strh.w	r8, [sp, #8]
 8001a48:	aa02      	add	r2, sp, #8
 8001a4a:	f7ff fbb1 	bl	80011b0 <acc_sensor_reg_read>
 8001a4e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8001a52:	3601      	adds	r6, #1
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	b2b6      	uxth	r6, r6
 8001a58:	bf18      	it	ne
 8001a5a:	2400      	movne	r4, #0
 8001a5c:	2e34      	cmp	r6, #52	; 0x34
 8001a5e:	d1ef      	bne.n	8001a40 <test_enable_pin+0xcc>
 8001a60:	b93c      	cbnz	r4, 8001a72 <test_enable_pin+0xfe>
 8001a62:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a64:	4a10      	ldr	r2, [pc, #64]	; (8001aa8 <test_enable_pin+0x134>)
 8001a66:	4908      	ldr	r1, [pc, #32]	; (8001a88 <test_enable_pin+0x114>)
 8001a68:	4620      	mov	r0, r4
 8001a6a:	4798      	blx	r3
 8001a6c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a6e:	4a0f      	ldr	r2, [pc, #60]	; (8001aac <test_enable_pin+0x138>)
 8001a70:	e78b      	b.n	800198a <test_enable_pin+0x16>
 8001a72:	2101      	movs	r1, #1
 8001a74:	2503      	movs	r5, #3
 8001a76:	e78d      	b.n	8001994 <test_enable_pin+0x20>
 8001a78:	2100      	movs	r1, #0
 8001a7a:	2501      	movs	r5, #1
 8001a7c:	e78a      	b.n	8001994 <test_enable_pin+0x20>
 8001a7e:	bf00      	nop
 8001a80:	200000ac 	.word	0x200000ac
 8001a84:	0800a9b0 	.word	0x0800a9b0
 8001a88:	0800a7bc 	.word	0x0800a7bc
 8001a8c:	0800a9d0 	.word	0x0800a9d0
 8001a90:	0800a908 	.word	0x0800a908
 8001a94:	0800a920 	.word	0x0800a920
 8001a98:	08008810 	.word	0x08008810
 8001a9c:	0800a930 	.word	0x0800a930
 8001aa0:	0800a94c 	.word	0x0800a94c
 8001aa4:	0800a96c 	.word	0x0800a96c
 8001aa8:	0800a984 	.word	0x0800a984
 8001aac:	0800a998 	.word	0x0800a998

08001ab0 <test_basic_read>:
 8001ab0:	b570      	push	{r4, r5, r6, lr}
 8001ab2:	4e19      	ldr	r6, [pc, #100]	; (8001b18 <test_basic_read+0x68>)
 8001ab4:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8001ab8:	2b01      	cmp	r3, #1
 8001aba:	b082      	sub	sp, #8
 8001abc:	4605      	mov	r5, r0
 8001abe:	d904      	bls.n	8001aca <test_basic_read+0x1a>
 8001ac0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001ac2:	4a16      	ldr	r2, [pc, #88]	; (8001b1c <test_basic_read+0x6c>)
 8001ac4:	4916      	ldr	r1, [pc, #88]	; (8001b20 <test_basic_read+0x70>)
 8001ac6:	2002      	movs	r0, #2
 8001ac8:	4798      	blx	r3
 8001aca:	4816      	ldr	r0, [pc, #88]	; (8001b24 <test_basic_read+0x74>)
 8001acc:	2400      	movs	r4, #0
 8001ace:	f7fe ff95 	bl	80009fc <acc_diagnostic_log_set_scope>
 8001ad2:	f10d 0206 	add.w	r2, sp, #6
 8001ad6:	6828      	ldr	r0, [r5, #0]
 8001ad8:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001adc:	4621      	mov	r1, r4
 8001ade:	f7ff fb67 	bl	80011b0 <acc_sensor_reg_read>
 8001ae2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001ae6:	f241 2310 	movw	r3, #4624	; 0x1210
 8001aea:	429a      	cmp	r2, r3
 8001aec:	d00c      	beq.n	8001b08 <test_basic_read+0x58>
 8001aee:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001af0:	4a0d      	ldr	r2, [pc, #52]	; (8001b28 <test_basic_read+0x78>)
 8001af2:	490b      	ldr	r1, [pc, #44]	; (8001b20 <test_basic_read+0x70>)
 8001af4:	4620      	mov	r0, r4
 8001af6:	4798      	blx	r3
 8001af8:	480c      	ldr	r0, [pc, #48]	; (8001b2c <test_basic_read+0x7c>)
 8001afa:	4621      	mov	r1, r4
 8001afc:	f7fe ff76 	bl	80009ec <acc_diagnostic_log_scalar>
 8001b00:	2504      	movs	r5, #4
 8001b02:	4628      	mov	r0, r5
 8001b04:	b002      	add	sp, #8
 8001b06:	bd70      	pop	{r4, r5, r6, pc}
 8001b08:	4808      	ldr	r0, [pc, #32]	; (8001b2c <test_basic_read+0x7c>)
 8001b0a:	2101      	movs	r1, #1
 8001b0c:	f7fe ff6e 	bl	80009ec <acc_diagnostic_log_scalar>
 8001b10:	2503      	movs	r5, #3
 8001b12:	4628      	mov	r0, r5
 8001b14:	b002      	add	sp, #8
 8001b16:	bd70      	pop	{r4, r5, r6, pc}
 8001b18:	200000ac 	.word	0x200000ac
 8001b1c:	0800a9e8 	.word	0x0800a9e8
 8001b20:	0800a7bc 	.word	0x0800a7bc
 8001b24:	0800a9fc 	.word	0x0800a9fc
 8001b28:	0800aa0c 	.word	0x0800aa0c
 8001b2c:	0800aa30 	.word	0x0800aa30

08001b30 <acc_sensor_destroy>:
 8001b30:	b510      	push	{r4, lr}
 8001b32:	b120      	cbz	r0, 8001b3e <acc_sensor_destroy+0xe>
 8001b34:	4b0b      	ldr	r3, [pc, #44]	; (8001b64 <acc_sensor_destroy+0x34>)
 8001b36:	6802      	ldr	r2, [r0, #0]
 8001b38:	429a      	cmp	r2, r3
 8001b3a:	4604      	mov	r4, r0
 8001b3c:	d007      	beq.n	8001b4e <acc_sensor_destroy+0x1e>
 8001b3e:	4b0a      	ldr	r3, [pc, #40]	; (8001b68 <acc_sensor_destroy+0x38>)
 8001b40:	4a0a      	ldr	r2, [pc, #40]	; (8001b6c <acc_sensor_destroy+0x3c>)
 8001b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b44:	490a      	ldr	r1, [pc, #40]	; (8001b70 <acc_sensor_destroy+0x40>)
 8001b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b4a:	2000      	movs	r0, #0
 8001b4c:	4718      	bx	r3
 8001b4e:	6900      	ldr	r0, [r0, #16]
 8001b50:	2300      	movs	r3, #0
 8001b52:	6023      	str	r3, [r4, #0]
 8001b54:	b108      	cbz	r0, 8001b5a <acc_sensor_destroy+0x2a>
 8001b56:	f7ff f9f3 	bl	8000f40 <acc_rss_integration_mem_free>
 8001b5a:	4620      	mov	r0, r4
 8001b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b60:	f7ff b9ee 	b.w	8000f40 <acc_rss_integration_mem_free>
 8001b64:	1337b00e 	.word	0x1337b00e
 8001b68:	200000ac 	.word	0x200000ac
 8001b6c:	0800aa4c 	.word	0x0800aa4c
 8001b70:	0800aa64 	.word	0x0800aa64

08001b74 <UART_DMAAbortOnError>:
 8001b74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001b76:	2200      	movs	r2, #0
 8001b78:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8001b7c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8001b80:	4770      	bx	lr
 8001b82:	bf00      	nop

08001b84 <SPI_DMAError>:
 8001b84:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001b86:	6819      	ldr	r1, [r3, #0]
 8001b88:	684a      	ldr	r2, [r1, #4]
 8001b8a:	f022 0203 	bic.w	r2, r2, #3
 8001b8e:	b410      	push	{r4}
 8001b90:	604a      	str	r2, [r1, #4]
 8001b92:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001b94:	2401      	movs	r4, #1
 8001b96:	f042 0210 	orr.w	r2, r2, #16
 8001b9a:	661a      	str	r2, [r3, #96]	; 0x60
 8001b9c:	f883 405d 	strb.w	r4, [r3, #93]	; 0x5d
 8001ba0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ba4:	4770      	bx	lr
 8001ba6:	bf00      	nop

08001ba8 <SPI_DMAHalfReceiveCplt>:
 8001ba8:	4770      	bx	lr
 8001baa:	bf00      	nop

08001bac <SPI_DMAHalfTransmitReceiveCplt>:
 8001bac:	4770      	bx	lr
 8001bae:	bf00      	nop

08001bb0 <SPI_DMATransmitReceiveCplt>:
 8001bb0:	b570      	push	{r4, r5, r6, lr}
 8001bb2:	6803      	ldr	r3, [r0, #0]
 8001bb4:	4d1b      	ldr	r5, [pc, #108]	; (8001c24 <SPI_DMATransmitReceiveCplt+0x74>)
 8001bb6:	682e      	ldr	r6, [r5, #0]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	069b      	lsls	r3, r3, #26
 8001bbc:	d42e      	bmi.n	8001c1c <SPI_DMATransmitReceiveCplt+0x6c>
 8001bbe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001bc0:	6822      	ldr	r2, [r4, #0]
 8001bc2:	6853      	ldr	r3, [r2, #4]
 8001bc4:	f023 0320 	bic.w	r3, r3, #32
 8001bc8:	6053      	str	r3, [r2, #4]
 8001bca:	4620      	mov	r0, r4
 8001bcc:	4632      	mov	r2, r6
 8001bce:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8001bd2:	f7fe fd03 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001bd6:	b958      	cbnz	r0, 8001bf0 <SPI_DMATransmitReceiveCplt+0x40>
 8001bd8:	4631      	mov	r1, r6
 8001bda:	4620      	mov	r0, r4
 8001bdc:	f7fe fd66 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001be0:	b930      	cbnz	r0, 8001bf0 <SPI_DMATransmitReceiveCplt+0x40>
 8001be2:	4632      	mov	r2, r6
 8001be4:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001be8:	4620      	mov	r0, r4
 8001bea:	f7fe fcf7 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001bee:	b138      	cbz	r0, 8001c00 <SPI_DMATransmitReceiveCplt+0x50>
 8001bf0:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001bf2:	f043 0320 	orr.w	r3, r3, #32
 8001bf6:	6623      	str	r3, [r4, #96]	; 0x60
 8001bf8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001bfa:	f043 0320 	orr.w	r3, r3, #32
 8001bfe:	6623      	str	r3, [r4, #96]	; 0x60
 8001c00:	6821      	ldr	r1, [r4, #0]
 8001c02:	684b      	ldr	r3, [r1, #4]
 8001c04:	2200      	movs	r2, #0
 8001c06:	f023 0303 	bic.w	r3, r3, #3
 8001c0a:	2001      	movs	r0, #1
 8001c0c:	604b      	str	r3, [r1, #4]
 8001c0e:	87e2      	strh	r2, [r4, #62]	; 0x3e
 8001c10:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001c14:	f884 005d 	strb.w	r0, [r4, #93]	; 0x5d
 8001c18:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c1a:	b913      	cbnz	r3, 8001c22 <SPI_DMATransmitReceiveCplt+0x72>
 8001c1c:	2301      	movs	r3, #1
 8001c1e:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
 8001c22:	bd70      	pop	{r4, r5, r6, pc}
 8001c24:	200000ac 	.word	0x200000ac

08001c28 <SPI_DMAReceiveCplt>:
 8001c28:	b538      	push	{r3, r4, r5, lr}
 8001c2a:	4a2e      	ldr	r2, [pc, #184]	; (8001ce4 <SPI_DMAReceiveCplt+0xbc>)
 8001c2c:	6803      	ldr	r3, [r0, #0]
 8001c2e:	6815      	ldr	r5, [r2, #0]
 8001c30:	681b      	ldr	r3, [r3, #0]
 8001c32:	069b      	lsls	r3, r3, #26
 8001c34:	d41f      	bmi.n	8001c76 <SPI_DMAReceiveCplt+0x4e>
 8001c36:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001c38:	6823      	ldr	r3, [r4, #0]
 8001c3a:	68a2      	ldr	r2, [r4, #8]
 8001c3c:	6858      	ldr	r0, [r3, #4]
 8001c3e:	f020 0020 	bic.w	r0, r0, #32
 8001c42:	6058      	str	r0, [r3, #4]
 8001c44:	b1c2      	cbz	r2, 8001c78 <SPI_DMAReceiveCplt+0x50>
 8001c46:	6859      	ldr	r1, [r3, #4]
 8001c48:	6860      	ldr	r0, [r4, #4]
 8001c4a:	f021 0101 	bic.w	r1, r1, #1
 8001c4e:	f5b0 7f82 	cmp.w	r0, #260	; 0x104
 8001c52:	6059      	str	r1, [r3, #4]
 8001c54:	d035      	beq.n	8001cc2 <SPI_DMAReceiveCplt+0x9a>
 8001c56:	4629      	mov	r1, r5
 8001c58:	4620      	mov	r0, r4
 8001c5a:	f7fe fd27 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001c5e:	b9c8      	cbnz	r0, 8001c94 <SPI_DMAReceiveCplt+0x6c>
 8001c60:	6863      	ldr	r3, [r4, #4]
 8001c62:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8001c66:	d01c      	beq.n	8001ca2 <SPI_DMAReceiveCplt+0x7a>
 8001c68:	2301      	movs	r3, #1
 8001c6a:	2200      	movs	r2, #0
 8001c6c:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001c70:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8001c74:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c76:	bd38      	pop	{r3, r4, r5, pc}
 8001c78:	6862      	ldr	r2, [r4, #4]
 8001c7a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8001c7e:	685a      	ldr	r2, [r3, #4]
 8001c80:	d027      	beq.n	8001cd2 <SPI_DMAReceiveCplt+0xaa>
 8001c82:	f022 0201 	bic.w	r2, r2, #1
 8001c86:	605a      	str	r2, [r3, #4]
 8001c88:	4629      	mov	r1, r5
 8001c8a:	4620      	mov	r0, r4
 8001c8c:	f7fe fd0e 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001c90:	2800      	cmp	r0, #0
 8001c92:	d0e5      	beq.n	8001c60 <SPI_DMAReceiveCplt+0x38>
 8001c94:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c96:	f043 0320 	orr.w	r3, r3, #32
 8001c9a:	6623      	str	r3, [r4, #96]	; 0x60
 8001c9c:	2320      	movs	r3, #32
 8001c9e:	6623      	str	r3, [r4, #96]	; 0x60
 8001ca0:	e7e2      	b.n	8001c68 <SPI_DMAReceiveCplt+0x40>
 8001ca2:	68a3      	ldr	r3, [r4, #8]
 8001ca4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001ca8:	d002      	beq.n	8001cb0 <SPI_DMAReceiveCplt+0x88>
 8001caa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001cae:	d1db      	bne.n	8001c68 <SPI_DMAReceiveCplt+0x40>
 8001cb0:	462a      	mov	r2, r5
 8001cb2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001cb6:	4620      	mov	r0, r4
 8001cb8:	f7fe fc90 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001cbc:	2800      	cmp	r0, #0
 8001cbe:	d0d3      	beq.n	8001c68 <SPI_DMAReceiveCplt+0x40>
 8001cc0:	e7e8      	b.n	8001c94 <SPI_DMAReceiveCplt+0x6c>
 8001cc2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8001cc6:	d108      	bne.n	8001cda <SPI_DMAReceiveCplt+0xb2>
 8001cc8:	681a      	ldr	r2, [r3, #0]
 8001cca:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001cce:	601a      	str	r2, [r3, #0]
 8001cd0:	e7c1      	b.n	8001c56 <SPI_DMAReceiveCplt+0x2e>
 8001cd2:	f022 0203 	bic.w	r2, r2, #3
 8001cd6:	605a      	str	r2, [r3, #4]
 8001cd8:	e7bd      	b.n	8001c56 <SPI_DMAReceiveCplt+0x2e>
 8001cda:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8001cde:	d0f3      	beq.n	8001cc8 <SPI_DMAReceiveCplt+0xa0>
 8001ce0:	e7b9      	b.n	8001c56 <SPI_DMAReceiveCplt+0x2e>
 8001ce2:	bf00      	nop
 8001ce4:	200000ac 	.word	0x200000ac

08001ce8 <RCCEx_PLLSAI1_Config>:
 8001ce8:	4a44      	ldr	r2, [pc, #272]	; (8001dfc <RCCEx_PLLSAI1_Config+0x114>)
 8001cea:	68d3      	ldr	r3, [r2, #12]
 8001cec:	b430      	push	{r4, r5}
 8001cee:	079c      	lsls	r4, r3, #30
 8001cf0:	d008      	beq.n	8001d04 <RCCEx_PLLSAI1_Config+0x1c>
 8001cf2:	68d3      	ldr	r3, [r2, #12]
 8001cf4:	6804      	ldr	r4, [r0, #0]
 8001cf6:	f003 0303 	and.w	r3, r3, #3
 8001cfa:	42a3      	cmp	r3, r4
 8001cfc:	d047      	beq.n	8001d8e <RCCEx_PLLSAI1_Config+0xa6>
 8001cfe:	2001      	movs	r0, #1
 8001d00:	bc30      	pop	{r4, r5}
 8001d02:	4770      	bx	lr
 8001d04:	6803      	ldr	r3, [r0, #0]
 8001d06:	2b02      	cmp	r3, #2
 8001d08:	d052      	beq.n	8001db0 <RCCEx_PLLSAI1_Config+0xc8>
 8001d0a:	2b03      	cmp	r3, #3
 8001d0c:	d049      	beq.n	8001da2 <RCCEx_PLLSAI1_Config+0xba>
 8001d0e:	2b01      	cmp	r3, #1
 8001d10:	d1f5      	bne.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001d12:	6812      	ldr	r2, [r2, #0]
 8001d14:	0792      	lsls	r2, r2, #30
 8001d16:	d5f2      	bpl.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001d18:	4d38      	ldr	r5, [pc, #224]	; (8001dfc <RCCEx_PLLSAI1_Config+0x114>)
 8001d1a:	6844      	ldr	r4, [r0, #4]
 8001d1c:	68ea      	ldr	r2, [r5, #12]
 8001d1e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8001d22:	4313      	orrs	r3, r2
 8001d24:	3c01      	subs	r4, #1
 8001d26:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 8001d2a:	60eb      	str	r3, [r5, #12]
 8001d2c:	4c33      	ldr	r4, [pc, #204]	; (8001dfc <RCCEx_PLLSAI1_Config+0x114>)
 8001d2e:	4a34      	ldr	r2, [pc, #208]	; (8001e00 <RCCEx_PLLSAI1_Config+0x118>)
 8001d30:	6823      	ldr	r3, [r4, #0]
 8001d32:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001d36:	6023      	str	r3, [r4, #0]
 8001d38:	6815      	ldr	r5, [r2, #0]
 8001d3a:	e003      	b.n	8001d44 <RCCEx_PLLSAI1_Config+0x5c>
 8001d3c:	6813      	ldr	r3, [r2, #0]
 8001d3e:	1b5b      	subs	r3, r3, r5
 8001d40:	2b02      	cmp	r3, #2
 8001d42:	d839      	bhi.n	8001db8 <RCCEx_PLLSAI1_Config+0xd0>
 8001d44:	6823      	ldr	r3, [r4, #0]
 8001d46:	011b      	lsls	r3, r3, #4
 8001d48:	d4f8      	bmi.n	8001d3c <RCCEx_PLLSAI1_Config+0x54>
 8001d4a:	2900      	cmp	r1, #0
 8001d4c:	d136      	bne.n	8001dbc <RCCEx_PLLSAI1_Config+0xd4>
 8001d4e:	e9d0 5302 	ldrd	r5, r3, [r0, #8]
 8001d52:	6921      	ldr	r1, [r4, #16]
 8001d54:	06db      	lsls	r3, r3, #27
 8001d56:	f021 4178 	bic.w	r1, r1, #4160749568	; 0xf8000000
 8001d5a:	f421 41fe 	bic.w	r1, r1, #32512	; 0x7f00
 8001d5e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001d62:	430b      	orrs	r3, r1
 8001d64:	6123      	str	r3, [r4, #16]
 8001d66:	4925      	ldr	r1, [pc, #148]	; (8001dfc <RCCEx_PLLSAI1_Config+0x114>)
 8001d68:	680b      	ldr	r3, [r1, #0]
 8001d6a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001d6e:	600b      	str	r3, [r1, #0]
 8001d70:	6814      	ldr	r4, [r2, #0]
 8001d72:	e003      	b.n	8001d7c <RCCEx_PLLSAI1_Config+0x94>
 8001d74:	6813      	ldr	r3, [r2, #0]
 8001d76:	1b1b      	subs	r3, r3, r4
 8001d78:	2b02      	cmp	r3, #2
 8001d7a:	d81d      	bhi.n	8001db8 <RCCEx_PLLSAI1_Config+0xd0>
 8001d7c:	680b      	ldr	r3, [r1, #0]
 8001d7e:	011b      	lsls	r3, r3, #4
 8001d80:	d5f8      	bpl.n	8001d74 <RCCEx_PLLSAI1_Config+0x8c>
 8001d82:	6982      	ldr	r2, [r0, #24]
 8001d84:	690b      	ldr	r3, [r1, #16]
 8001d86:	4313      	orrs	r3, r2
 8001d88:	610b      	str	r3, [r1, #16]
 8001d8a:	2000      	movs	r0, #0
 8001d8c:	e7b8      	b.n	8001d00 <RCCEx_PLLSAI1_Config+0x18>
 8001d8e:	2b00      	cmp	r3, #0
 8001d90:	d0b5      	beq.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001d92:	68d3      	ldr	r3, [r2, #12]
 8001d94:	6842      	ldr	r2, [r0, #4]
 8001d96:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8001d9a:	3301      	adds	r3, #1
 8001d9c:	4293      	cmp	r3, r2
 8001d9e:	d1ae      	bne.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001da0:	e7c4      	b.n	8001d2c <RCCEx_PLLSAI1_Config+0x44>
 8001da2:	6814      	ldr	r4, [r2, #0]
 8001da4:	03a4      	lsls	r4, r4, #14
 8001da6:	d4b7      	bmi.n	8001d18 <RCCEx_PLLSAI1_Config+0x30>
 8001da8:	6812      	ldr	r2, [r2, #0]
 8001daa:	0352      	lsls	r2, r2, #13
 8001dac:	d5a7      	bpl.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001dae:	e7b3      	b.n	8001d18 <RCCEx_PLLSAI1_Config+0x30>
 8001db0:	6812      	ldr	r2, [r2, #0]
 8001db2:	0555      	lsls	r5, r2, #21
 8001db4:	d5a3      	bpl.n	8001cfe <RCCEx_PLLSAI1_Config+0x16>
 8001db6:	e7af      	b.n	8001d18 <RCCEx_PLLSAI1_Config+0x30>
 8001db8:	2003      	movs	r0, #3
 8001dba:	e7a1      	b.n	8001d00 <RCCEx_PLLSAI1_Config+0x18>
 8001dbc:	2901      	cmp	r1, #1
 8001dbe:	6923      	ldr	r3, [r4, #16]
 8001dc0:	d00d      	beq.n	8001dde <RCCEx_PLLSAI1_Config+0xf6>
 8001dc2:	6941      	ldr	r1, [r0, #20]
 8001dc4:	6885      	ldr	r5, [r0, #8]
 8001dc6:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001dca:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001dce:	0849      	lsrs	r1, r1, #1
 8001dd0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001dd4:	3901      	subs	r1, #1
 8001dd6:	ea43 6341 	orr.w	r3, r3, r1, lsl #25
 8001dda:	6123      	str	r3, [r4, #16]
 8001ddc:	e7c3      	b.n	8001d66 <RCCEx_PLLSAI1_Config+0x7e>
 8001dde:	6901      	ldr	r1, [r0, #16]
 8001de0:	6885      	ldr	r5, [r0, #8]
 8001de2:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8001de6:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001dea:	0849      	lsrs	r1, r1, #1
 8001dec:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001df0:	3901      	subs	r1, #1
 8001df2:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 8001df6:	6123      	str	r3, [r4, #16]
 8001df8:	e7b5      	b.n	8001d66 <RCCEx_PLLSAI1_Config+0x7e>
 8001dfa:	bf00      	nop
 8001dfc:	40021000 	.word	0x40021000
 8001e00:	200000ac 	.word	0x200000ac

08001e04 <HAL_RCCEx_PeriphCLKConfig>:
 8001e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e06:	6803      	ldr	r3, [r0, #0]
 8001e08:	f413 6700 	ands.w	r7, r3, #2048	; 0x800
 8001e0c:	b083      	sub	sp, #12
 8001e0e:	4604      	mov	r4, r0
 8001e10:	d00c      	beq.n	8001e2c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001e12:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001e14:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001e18:	f000 8132 	beq.w	8002080 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8001e1c:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001e20:	f000 8106 	beq.w	8002030 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001e24:	2900      	cmp	r1, #0
 8001e26:	f000 8123 	beq.w	8002070 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8001e2a:	2701      	movs	r7, #1
 8001e2c:	0398      	lsls	r0, r3, #14
 8001e2e:	d54f      	bpl.n	8001ed0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001e30:	4aa4      	ldr	r2, [pc, #656]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e32:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001e34:	00c9      	lsls	r1, r1, #3
 8001e36:	f140 80ef 	bpl.w	8002018 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8001e3a:	2000      	movs	r0, #0
 8001e3c:	49a2      	ldr	r1, [pc, #648]	; (80020c8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8001e3e:	4da3      	ldr	r5, [pc, #652]	; (80020cc <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 8001e40:	680a      	ldr	r2, [r1, #0]
 8001e42:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e46:	600a      	str	r2, [r1, #0]
 8001e48:	682e      	ldr	r6, [r5, #0]
 8001e4a:	e004      	b.n	8001e56 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8001e4c:	682a      	ldr	r2, [r5, #0]
 8001e4e:	1b92      	subs	r2, r2, r6
 8001e50:	2a02      	cmp	r2, #2
 8001e52:	f200 80f8 	bhi.w	8002046 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001e56:	680a      	ldr	r2, [r1, #0]
 8001e58:	05d2      	lsls	r2, r2, #23
 8001e5a:	d5f7      	bpl.n	8001e4c <HAL_RCCEx_PeriphCLKConfig+0x48>
 8001e5c:	bbaf      	cbnz	r7, 8001eca <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8001e5e:	4a99      	ldr	r2, [pc, #612]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e60:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001e62:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001e66:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8001e6a:	d026      	beq.n	8001eba <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001e6c:	428e      	cmp	r6, r1
 8001e6e:	d024      	beq.n	8001eba <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001e70:	f8d2 6090 	ldr.w	r6, [r2, #144]	; 0x90
 8001e74:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001e78:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8001e7c:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001e80:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001e84:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8001e88:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001e8c:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
 8001e90:	07f1      	lsls	r1, r6, #31
 8001e92:	f8c2 c090 	str.w	ip, [r2, #144]	; 0x90
 8001e96:	d50f      	bpl.n	8001eb8 <HAL_RCCEx_PeriphCLKConfig+0xb4>
 8001e98:	f8d5 c000 	ldr.w	ip, [r5]
 8001e9c:	4611      	mov	r1, r2
 8001e9e:	f241 3688 	movw	r6, #5000	; 0x1388
 8001ea2:	e005      	b.n	8001eb0 <HAL_RCCEx_PeriphCLKConfig+0xac>
 8001ea4:	682a      	ldr	r2, [r5, #0]
 8001ea6:	eba2 020c 	sub.w	r2, r2, ip
 8001eaa:	42b2      	cmp	r2, r6
 8001eac:	f200 80cb 	bhi.w	8002046 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001eb0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001eb4:	0792      	lsls	r2, r2, #30
 8001eb6:	d5f5      	bpl.n	8001ea4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8001eb8:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001eba:	4982      	ldr	r1, [pc, #520]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ebc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001ec0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001ec4:	4332      	orrs	r2, r6
 8001ec6:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8001eca:	2800      	cmp	r0, #0
 8001ecc:	f040 80bf 	bne.w	800204e <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8001ed0:	07d9      	lsls	r1, r3, #31
 8001ed2:	d508      	bpl.n	8001ee6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8001ed4:	497b      	ldr	r1, [pc, #492]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ed6:	6a20      	ldr	r0, [r4, #32]
 8001ed8:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001edc:	f022 0203 	bic.w	r2, r2, #3
 8001ee0:	4302      	orrs	r2, r0
 8001ee2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001ee6:	079a      	lsls	r2, r3, #30
 8001ee8:	d508      	bpl.n	8001efc <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8001eea:	4976      	ldr	r1, [pc, #472]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001eec:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001eee:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001ef2:	f022 020c 	bic.w	r2, r2, #12
 8001ef6:	4302      	orrs	r2, r0
 8001ef8:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001efc:	075e      	lsls	r6, r3, #29
 8001efe:	d508      	bpl.n	8001f12 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8001f00:	4970      	ldr	r1, [pc, #448]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f02:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001f04:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f08:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001f0c:	4302      	orrs	r2, r0
 8001f0e:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f12:	069d      	lsls	r5, r3, #26
 8001f14:	d508      	bpl.n	8001f28 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8001f16:	496b      	ldr	r1, [pc, #428]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f18:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001f1a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f1e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001f22:	4302      	orrs	r2, r0
 8001f24:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f28:	0598      	lsls	r0, r3, #22
 8001f2a:	d508      	bpl.n	8001f3e <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8001f2c:	4965      	ldr	r1, [pc, #404]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f2e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001f30:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f34:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001f38:	4302      	orrs	r2, r0
 8001f3a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f3e:	0559      	lsls	r1, r3, #21
 8001f40:	d508      	bpl.n	8001f54 <HAL_RCCEx_PeriphCLKConfig+0x150>
 8001f42:	4960      	ldr	r1, [pc, #384]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f44:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001f46:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f4a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001f4e:	4302      	orrs	r2, r0
 8001f50:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f54:	065a      	lsls	r2, r3, #25
 8001f56:	d508      	bpl.n	8001f6a <HAL_RCCEx_PeriphCLKConfig+0x166>
 8001f58:	495a      	ldr	r1, [pc, #360]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f5a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001f5c:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f60:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001f64:	4302      	orrs	r2, r0
 8001f66:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f6a:	061e      	lsls	r6, r3, #24
 8001f6c:	d508      	bpl.n	8001f80 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8001f6e:	4955      	ldr	r1, [pc, #340]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f70:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001f72:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f76:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8001f7a:	4302      	orrs	r2, r0
 8001f7c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f80:	05dd      	lsls	r5, r3, #23
 8001f82:	d508      	bpl.n	8001f96 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8001f84:	494f      	ldr	r1, [pc, #316]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f86:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001f88:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f8c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001f90:	4302      	orrs	r2, r0
 8001f92:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f96:	0318      	lsls	r0, r3, #12
 8001f98:	d50e      	bpl.n	8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001f9a:	4a4a      	ldr	r2, [pc, #296]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f9c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8001f9e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001fa2:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001fa6:	430b      	orrs	r3, r1
 8001fa8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001fac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001fb0:	d053      	beq.n	800205a <HAL_RCCEx_PeriphCLKConfig+0x256>
 8001fb2:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001fb6:	d073      	beq.n	80020a0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8001fb8:	6823      	ldr	r3, [r4, #0]
 8001fba:	0359      	lsls	r1, r3, #13
 8001fbc:	d50f      	bpl.n	8001fde <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001fbe:	4a41      	ldr	r2, [pc, #260]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fc0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8001fc2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001fc6:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001fca:	430b      	orrs	r3, r1
 8001fcc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8001fd0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001fd4:	d046      	beq.n	8002064 <HAL_RCCEx_PeriphCLKConfig+0x260>
 8001fd6:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001fda:	d069      	beq.n	80020b0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8001fdc:	6823      	ldr	r3, [r4, #0]
 8001fde:	045a      	lsls	r2, r3, #17
 8001fe0:	d50c      	bpl.n	8001ffc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8001fe2:	4938      	ldr	r1, [pc, #224]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fe4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001fe6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001fea:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
 8001ff4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8001ff8:	d049      	beq.n	800208e <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8001ffa:	6823      	ldr	r3, [r4, #0]
 8001ffc:	041b      	lsls	r3, r3, #16
 8001ffe:	d508      	bpl.n	8002012 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8002000:	4a30      	ldr	r2, [pc, #192]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002002:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8002004:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8002008:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800200c:	430b      	orrs	r3, r1
 800200e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002012:	4638      	mov	r0, r7
 8002014:	b003      	add	sp, #12
 8002016:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002018:	6d91      	ldr	r1, [r2, #88]	; 0x58
 800201a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800201e:	6591      	str	r1, [r2, #88]	; 0x58
 8002020:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8002022:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8002026:	9201      	str	r2, [sp, #4]
 8002028:	9a01      	ldr	r2, [sp, #4]
 800202a:	2001      	movs	r0, #1
 800202c:	e706      	b.n	8001e3c <HAL_RCCEx_PeriphCLKConfig+0x38>
 800202e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002030:	4a24      	ldr	r2, [pc, #144]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002032:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8002036:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 800203a:	4319      	orrs	r1, r3
 800203c:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
 8002040:	6823      	ldr	r3, [r4, #0]
 8002042:	2700      	movs	r7, #0
 8002044:	e6f2      	b.n	8001e2c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8002046:	2703      	movs	r7, #3
 8002048:	2800      	cmp	r0, #0
 800204a:	f43f af41 	beq.w	8001ed0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 800204e:	491d      	ldr	r1, [pc, #116]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002050:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 8002052:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002056:	658a      	str	r2, [r1, #88]	; 0x58
 8002058:	e73a      	b.n	8001ed0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 800205a:	68d3      	ldr	r3, [r2, #12]
 800205c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002060:	60d3      	str	r3, [r2, #12]
 8002062:	e7a9      	b.n	8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8002064:	68d3      	ldr	r3, [r2, #12]
 8002066:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800206a:	60d3      	str	r3, [r2, #12]
 800206c:	6823      	ldr	r3, [r4, #0]
 800206e:	e7b6      	b.n	8001fde <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8002070:	3004      	adds	r0, #4
 8002072:	f7ff fe39 	bl	8001ce8 <RCCEx_PLLSAI1_Config>
 8002076:	4607      	mov	r7, r0
 8002078:	2800      	cmp	r0, #0
 800207a:	d0d8      	beq.n	800202e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800207c:	6823      	ldr	r3, [r4, #0]
 800207e:	e6d5      	b.n	8001e2c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8002080:	4a10      	ldr	r2, [pc, #64]	; (80020c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002082:	68d3      	ldr	r3, [r2, #12]
 8002084:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002088:	60d3      	str	r3, [r2, #12]
 800208a:	6c41      	ldr	r1, [r0, #68]	; 0x44
 800208c:	e7d0      	b.n	8002030 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 800208e:	2102      	movs	r1, #2
 8002090:	1d20      	adds	r0, r4, #4
 8002092:	f7ff fe29 	bl	8001ce8 <RCCEx_PLLSAI1_Config>
 8002096:	6823      	ldr	r3, [r4, #0]
 8002098:	2800      	cmp	r0, #0
 800209a:	d0af      	beq.n	8001ffc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800209c:	4607      	mov	r7, r0
 800209e:	e7ad      	b.n	8001ffc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80020a0:	2101      	movs	r1, #1
 80020a2:	1d20      	adds	r0, r4, #4
 80020a4:	f7ff fe20 	bl	8001ce8 <RCCEx_PLLSAI1_Config>
 80020a8:	2800      	cmp	r0, #0
 80020aa:	bf18      	it	ne
 80020ac:	4607      	movne	r7, r0
 80020ae:	e783      	b.n	8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 80020b0:	2101      	movs	r1, #1
 80020b2:	1d20      	adds	r0, r4, #4
 80020b4:	f7ff fe18 	bl	8001ce8 <RCCEx_PLLSAI1_Config>
 80020b8:	6823      	ldr	r3, [r4, #0]
 80020ba:	2800      	cmp	r0, #0
 80020bc:	d08f      	beq.n	8001fde <HAL_RCCEx_PeriphCLKConfig+0x1da>
 80020be:	4607      	mov	r7, r0
 80020c0:	e78d      	b.n	8001fde <HAL_RCCEx_PeriphCLKConfig+0x1da>
 80020c2:	bf00      	nop
 80020c4:	40021000 	.word	0x40021000
 80020c8:	40007000 	.word	0x40007000
 80020cc:	200000ac 	.word	0x200000ac

080020d0 <RCC_SetFlashLatencyFromMSIRange>:
 80020d0:	491f      	ldr	r1, [pc, #124]	; (8002150 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 80020d2:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 80020d4:	00db      	lsls	r3, r3, #3
 80020d6:	b082      	sub	sp, #8
 80020d8:	d51d      	bpl.n	8002116 <RCC_SetFlashLatencyFromMSIRange+0x46>
 80020da:	4b1e      	ldr	r3, [pc, #120]	; (8002154 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80020e2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80020e6:	d028      	beq.n	800213a <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80020e8:	2880      	cmp	r0, #128	; 0x80
 80020ea:	d812      	bhi.n	8002112 <RCC_SetFlashLatencyFromMSIRange+0x42>
 80020ec:	d02e      	beq.n	800214c <RCC_SetFlashLatencyFromMSIRange+0x7c>
 80020ee:	f1a0 0370 	sub.w	r3, r0, #112	; 0x70
 80020f2:	425a      	negs	r2, r3
 80020f4:	415a      	adcs	r2, r3
 80020f6:	4918      	ldr	r1, [pc, #96]	; (8002158 <RCC_SetFlashLatencyFromMSIRange+0x88>)
 80020f8:	680b      	ldr	r3, [r1, #0]
 80020fa:	f023 0307 	bic.w	r3, r3, #7
 80020fe:	4313      	orrs	r3, r2
 8002100:	600b      	str	r3, [r1, #0]
 8002102:	6808      	ldr	r0, [r1, #0]
 8002104:	f000 0007 	and.w	r0, r0, #7
 8002108:	1a80      	subs	r0, r0, r2
 800210a:	bf18      	it	ne
 800210c:	2001      	movne	r0, #1
 800210e:	b002      	add	sp, #8
 8002110:	4770      	bx	lr
 8002112:	2203      	movs	r2, #3
 8002114:	e7ef      	b.n	80020f6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002116:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002118:	4a0e      	ldr	r2, [pc, #56]	; (8002154 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 800211a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800211e:	658b      	str	r3, [r1, #88]	; 0x58
 8002120:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002122:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002126:	9301      	str	r3, [sp, #4]
 8002128:	9b01      	ldr	r3, [sp, #4]
 800212a:	6813      	ldr	r3, [r2, #0]
 800212c:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 800212e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002132:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002136:	658a      	str	r2, [r1, #88]	; 0x58
 8002138:	e7d3      	b.n	80020e2 <RCC_SetFlashLatencyFromMSIRange+0x12>
 800213a:	2880      	cmp	r0, #128	; 0x80
 800213c:	d904      	bls.n	8002148 <RCC_SetFlashLatencyFromMSIRange+0x78>
 800213e:	28a0      	cmp	r0, #160	; 0xa0
 8002140:	bf8c      	ite	hi
 8002142:	2202      	movhi	r2, #2
 8002144:	2201      	movls	r2, #1
 8002146:	e7d6      	b.n	80020f6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002148:	2200      	movs	r2, #0
 800214a:	e7d4      	b.n	80020f6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 800214c:	2202      	movs	r2, #2
 800214e:	e7d2      	b.n	80020f6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 8002150:	40021000 	.word	0x40021000
 8002154:	40007000 	.word	0x40007000
 8002158:	40022000 	.word	0x40022000

0800215c <HAL_RCC_GetPCLK1Freq>:
 800215c:	4a06      	ldr	r2, [pc, #24]	; (8002178 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800215e:	4b07      	ldr	r3, [pc, #28]	; (800217c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002160:	6892      	ldr	r2, [r2, #8]
 8002162:	4907      	ldr	r1, [pc, #28]	; (8002180 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002164:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002168:	4413      	add	r3, r2
 800216a:	6808      	ldr	r0, [r1, #0]
 800216c:	f893 3c88 	ldrb.w	r3, [r3, #3208]	; 0xc88
 8002170:	f003 031f 	and.w	r3, r3, #31
 8002174:	40d8      	lsrs	r0, r3
 8002176:	4770      	bx	lr
 8002178:	40021000 	.word	0x40021000
 800217c:	08007b98 	.word	0x08007b98
 8002180:	20000000 	.word	0x20000000

08002184 <HAL_RCC_GetSysClockFreq>:
 8002184:	4a26      	ldr	r2, [pc, #152]	; (8002220 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002186:	6893      	ldr	r3, [r2, #8]
 8002188:	68d2      	ldr	r2, [r2, #12]
 800218a:	f013 030c 	ands.w	r3, r3, #12
 800218e:	d008      	beq.n	80021a2 <HAL_RCC_GetSysClockFreq+0x1e>
 8002190:	2b0c      	cmp	r3, #12
 8002192:	d03a      	beq.n	800220a <HAL_RCC_GetSysClockFreq+0x86>
 8002194:	2b04      	cmp	r3, #4
 8002196:	d036      	beq.n	8002206 <HAL_RCC_GetSysClockFreq+0x82>
 8002198:	2b08      	cmp	r3, #8
 800219a:	4822      	ldr	r0, [pc, #136]	; (8002224 <HAL_RCC_GetSysClockFreq+0xa0>)
 800219c:	bf18      	it	ne
 800219e:	2000      	movne	r0, #0
 80021a0:	4770      	bx	lr
 80021a2:	4a1f      	ldr	r2, [pc, #124]	; (8002220 <HAL_RCC_GetSysClockFreq+0x9c>)
 80021a4:	6811      	ldr	r1, [r2, #0]
 80021a6:	0709      	lsls	r1, r1, #28
 80021a8:	bf54      	ite	pl
 80021aa:	f8d2 1094 	ldrpl.w	r1, [r2, #148]	; 0x94
 80021ae:	6811      	ldrmi	r1, [r2, #0]
 80021b0:	4a1d      	ldr	r2, [pc, #116]	; (8002228 <HAL_RCC_GetSysClockFreq+0xa4>)
 80021b2:	bf54      	ite	pl
 80021b4:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
 80021b8:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
 80021bc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80021c0:	f8d2 0c90 	ldr.w	r0, [r2, #3216]	; 0xc90
 80021c4:	b303      	cbz	r3, 8002208 <HAL_RCC_GetSysClockFreq+0x84>
 80021c6:	2b0c      	cmp	r3, #12
 80021c8:	d127      	bne.n	800221a <HAL_RCC_GetSysClockFreq+0x96>
 80021ca:	4b15      	ldr	r3, [pc, #84]	; (8002220 <HAL_RCC_GetSysClockFreq+0x9c>)
 80021cc:	68db      	ldr	r3, [r3, #12]
 80021ce:	f003 0303 	and.w	r3, r3, #3
 80021d2:	2b02      	cmp	r3, #2
 80021d4:	d01f      	beq.n	8002216 <HAL_RCC_GetSysClockFreq+0x92>
 80021d6:	4a13      	ldr	r2, [pc, #76]	; (8002224 <HAL_RCC_GetSysClockFreq+0xa0>)
 80021d8:	2b03      	cmp	r3, #3
 80021da:	bf08      	it	eq
 80021dc:	4610      	moveq	r0, r2
 80021de:	4b10      	ldr	r3, [pc, #64]	; (8002220 <HAL_RCC_GetSysClockFreq+0x9c>)
 80021e0:	68d9      	ldr	r1, [r3, #12]
 80021e2:	68da      	ldr	r2, [r3, #12]
 80021e4:	68db      	ldr	r3, [r3, #12]
 80021e6:	f3c3 6341 	ubfx	r3, r3, #25, #2
 80021ea:	f3c2 2206 	ubfx	r2, r2, #8, #7
 80021ee:	f3c1 1102 	ubfx	r1, r1, #4, #3
 80021f2:	3301      	adds	r3, #1
 80021f4:	3101      	adds	r1, #1
 80021f6:	fb00 f002 	mul.w	r0, r0, r2
 80021fa:	005b      	lsls	r3, r3, #1
 80021fc:	fbb0 f0f1 	udiv	r0, r0, r1
 8002200:	fbb0 f0f3 	udiv	r0, r0, r3
 8002204:	4770      	bx	lr
 8002206:	4809      	ldr	r0, [pc, #36]	; (800222c <HAL_RCC_GetSysClockFreq+0xa8>)
 8002208:	4770      	bx	lr
 800220a:	f002 0203 	and.w	r2, r2, #3
 800220e:	2a01      	cmp	r2, #1
 8002210:	d0c7      	beq.n	80021a2 <HAL_RCC_GetSysClockFreq+0x1e>
 8002212:	2000      	movs	r0, #0
 8002214:	e7d9      	b.n	80021ca <HAL_RCC_GetSysClockFreq+0x46>
 8002216:	4805      	ldr	r0, [pc, #20]	; (800222c <HAL_RCC_GetSysClockFreq+0xa8>)
 8002218:	e7e1      	b.n	80021de <HAL_RCC_GetSysClockFreq+0x5a>
 800221a:	2000      	movs	r0, #0
 800221c:	4770      	bx	lr
 800221e:	bf00      	nop
 8002220:	40021000 	.word	0x40021000
 8002224:	007a1200 	.word	0x007a1200
 8002228:	08007b98 	.word	0x08007b98
 800222c:	00f42400 	.word	0x00f42400

08002230 <HAL_GPIO_Init>:
 8002230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002234:	680c      	ldr	r4, [r1, #0]
 8002236:	b085      	sub	sp, #20
 8002238:	2c00      	cmp	r4, #0
 800223a:	f000 8087 	beq.w	800234c <HAL_GPIO_Init+0x11c>
 800223e:	2300      	movs	r3, #0
 8002240:	f04f 0b01 	mov.w	fp, #1
 8002244:	fa0b fe03 	lsl.w	lr, fp, r3
 8002248:	ea1e 0a04 	ands.w	sl, lr, r4
 800224c:	d079      	beq.n	8002342 <HAL_GPIO_Init+0x112>
 800224e:	684e      	ldr	r6, [r1, #4]
 8002250:	f006 0203 	and.w	r2, r6, #3
 8002254:	1e55      	subs	r5, r2, #1
 8002256:	2d01      	cmp	r5, #1
 8002258:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800225c:	d979      	bls.n	8002352 <HAL_GPIO_Init+0x122>
 800225e:	2a03      	cmp	r2, #3
 8002260:	f040 80bd 	bne.w	80023de <HAL_GPIO_Init+0x1ae>
 8002264:	fa02 f20c 	lsl.w	r2, r2, ip
 8002268:	43d5      	mvns	r5, r2
 800226a:	f8d0 c000 	ldr.w	ip, [r0]
 800226e:	ea0c 0505 	and.w	r5, ip, r5
 8002272:	432a      	orrs	r2, r5
 8002274:	f416 3f40 	tst.w	r6, #196608	; 0x30000
 8002278:	6002      	str	r2, [r0, #0]
 800227a:	d062      	beq.n	8002342 <HAL_GPIO_Init+0x112>
 800227c:	4d5f      	ldr	r5, [pc, #380]	; (80023fc <HAL_GPIO_Init+0x1cc>)
 800227e:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 8002280:	f042 0201 	orr.w	r2, r2, #1
 8002284:	662a      	str	r2, [r5, #96]	; 0x60
 8002286:	6e2d      	ldr	r5, [r5, #96]	; 0x60
 8002288:	f023 0203 	bic.w	r2, r3, #3
 800228c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8002290:	f005 0501 	and.w	r5, r5, #1
 8002294:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8002298:	9503      	str	r5, [sp, #12]
 800229a:	f003 0503 	and.w	r5, r3, #3
 800229e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80022a2:	f8d2 e008 	ldr.w	lr, [r2, #8]
 80022a6:	00ad      	lsls	r5, r5, #2
 80022a8:	270f      	movs	r7, #15
 80022aa:	fa07 fc05 	lsl.w	ip, r7, r5
 80022ae:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80022b2:	ea2e 0e0c 	bic.w	lr, lr, ip
 80022b6:	d016      	beq.n	80022e6 <HAL_GPIO_Init+0xb6>
 80022b8:	4f51      	ldr	r7, [pc, #324]	; (8002400 <HAL_GPIO_Init+0x1d0>)
 80022ba:	42b8      	cmp	r0, r7
 80022bc:	f000 8097 	beq.w	80023ee <HAL_GPIO_Init+0x1be>
 80022c0:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80022c4:	42b8      	cmp	r0, r7
 80022c6:	f000 8095 	beq.w	80023f4 <HAL_GPIO_Init+0x1c4>
 80022ca:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80022ce:	42b8      	cmp	r0, r7
 80022d0:	f000 808a 	beq.w	80023e8 <HAL_GPIO_Init+0x1b8>
 80022d4:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80022d8:	42b8      	cmp	r0, r7
 80022da:	bf0c      	ite	eq
 80022dc:	f04f 0c04 	moveq.w	ip, #4
 80022e0:	f04f 0c07 	movne.w	ip, #7
 80022e4:	e001      	b.n	80022ea <HAL_GPIO_Init+0xba>
 80022e6:	f04f 0c00 	mov.w	ip, #0
 80022ea:	fa0c f505 	lsl.w	r5, ip, r5
 80022ee:	ea45 050e 	orr.w	r5, r5, lr
 80022f2:	6095      	str	r5, [r2, #8]
 80022f4:	4a43      	ldr	r2, [pc, #268]	; (8002404 <HAL_GPIO_Init+0x1d4>)
 80022f6:	6892      	ldr	r2, [r2, #8]
 80022f8:	ea6f 0c0a 	mvn.w	ip, sl
 80022fc:	02f5      	lsls	r5, r6, #11
 80022fe:	4d41      	ldr	r5, [pc, #260]	; (8002404 <HAL_GPIO_Init+0x1d4>)
 8002300:	bf54      	ite	pl
 8002302:	ea0c 0202 	andpl.w	r2, ip, r2
 8002306:	ea4a 0202 	orrmi.w	r2, sl, r2
 800230a:	60aa      	str	r2, [r5, #8]
 800230c:	68ed      	ldr	r5, [r5, #12]
 800230e:	02b2      	lsls	r2, r6, #10
 8002310:	4a3c      	ldr	r2, [pc, #240]	; (8002404 <HAL_GPIO_Init+0x1d4>)
 8002312:	bf54      	ite	pl
 8002314:	ea0c 0505 	andpl.w	r5, ip, r5
 8002318:	ea4a 0505 	orrmi.w	r5, sl, r5
 800231c:	60d5      	str	r5, [r2, #12]
 800231e:	6855      	ldr	r5, [r2, #4]
 8002320:	4a38      	ldr	r2, [pc, #224]	; (8002404 <HAL_GPIO_Init+0x1d4>)
 8002322:	03b7      	lsls	r7, r6, #14
 8002324:	bf54      	ite	pl
 8002326:	ea0c 0505 	andpl.w	r5, ip, r5
 800232a:	ea4a 0505 	orrmi.w	r5, sl, r5
 800232e:	6055      	str	r5, [r2, #4]
 8002330:	6812      	ldr	r2, [r2, #0]
 8002332:	03f5      	lsls	r5, r6, #15
 8002334:	4d33      	ldr	r5, [pc, #204]	; (8002404 <HAL_GPIO_Init+0x1d4>)
 8002336:	bf54      	ite	pl
 8002338:	ea0c 0202 	andpl.w	r2, ip, r2
 800233c:	ea4a 0202 	orrmi.w	r2, sl, r2
 8002340:	602a      	str	r2, [r5, #0]
 8002342:	3301      	adds	r3, #1
 8002344:	fa34 f203 	lsrs.w	r2, r4, r3
 8002348:	f47f af7c 	bne.w	8002244 <HAL_GPIO_Init+0x14>
 800234c:	b005      	add	sp, #20
 800234e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002352:	f8d0 8008 	ldr.w	r8, [r0, #8]
 8002356:	68cf      	ldr	r7, [r1, #12]
 8002358:	2503      	movs	r5, #3
 800235a:	fa05 f50c 	lsl.w	r5, r5, ip
 800235e:	ea28 0805 	bic.w	r8, r8, r5
 8002362:	fa07 f90c 	lsl.w	r9, r7, ip
 8002366:	ea49 0808 	orr.w	r8, r9, r8
 800236a:	f8c0 8008 	str.w	r8, [r0, #8]
 800236e:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8002372:	f3c6 1900 	ubfx	r9, r6, #4, #1
 8002376:	ea28 080e 	bic.w	r8, r8, lr
 800237a:	fa09 fe03 	lsl.w	lr, r9, r3
 800237e:	ea4e 0e08 	orr.w	lr, lr, r8
 8002382:	43ed      	mvns	r5, r5
 8002384:	f8c0 e004 	str.w	lr, [r0, #4]
 8002388:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800238c:	688f      	ldr	r7, [r1, #8]
 800238e:	ea08 0805 	and.w	r8, r8, r5
 8002392:	fa07 fe0c 	lsl.w	lr, r7, ip
 8002396:	ea4e 0e08 	orr.w	lr, lr, r8
 800239a:	2a02      	cmp	r2, #2
 800239c:	f8c0 e00c 	str.w	lr, [r0, #12]
 80023a0:	d002      	beq.n	80023a8 <HAL_GPIO_Init+0x178>
 80023a2:	fa02 f20c 	lsl.w	r2, r2, ip
 80023a6:	e760      	b.n	800226a <HAL_GPIO_Init+0x3a>
 80023a8:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 80023ac:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80023b0:	f003 0e07 	and.w	lr, r3, #7
 80023b4:	f8d8 7020 	ldr.w	r7, [r8, #32]
 80023b8:	9701      	str	r7, [sp, #4]
 80023ba:	690f      	ldr	r7, [r1, #16]
 80023bc:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80023c0:	fa07 f90e 	lsl.w	r9, r7, lr
 80023c4:	270f      	movs	r7, #15
 80023c6:	fa07 fe0e 	lsl.w	lr, r7, lr
 80023ca:	9f01      	ldr	r7, [sp, #4]
 80023cc:	ea27 0e0e 	bic.w	lr, r7, lr
 80023d0:	ea49 0e0e 	orr.w	lr, r9, lr
 80023d4:	fa02 f20c 	lsl.w	r2, r2, ip
 80023d8:	f8c8 e020 	str.w	lr, [r8, #32]
 80023dc:	e745      	b.n	800226a <HAL_GPIO_Init+0x3a>
 80023de:	2503      	movs	r5, #3
 80023e0:	fa05 f50c 	lsl.w	r5, r5, ip
 80023e4:	43ed      	mvns	r5, r5
 80023e6:	e7cf      	b.n	8002388 <HAL_GPIO_Init+0x158>
 80023e8:	f04f 0c03 	mov.w	ip, #3
 80023ec:	e77d      	b.n	80022ea <HAL_GPIO_Init+0xba>
 80023ee:	f04f 0c01 	mov.w	ip, #1
 80023f2:	e77a      	b.n	80022ea <HAL_GPIO_Init+0xba>
 80023f4:	f04f 0c02 	mov.w	ip, #2
 80023f8:	e777      	b.n	80022ea <HAL_GPIO_Init+0xba>
 80023fa:	bf00      	nop
 80023fc:	40021000 	.word	0x40021000
 8002400:	48000400 	.word	0x48000400
 8002404:	40010400 	.word	0x40010400

08002408 <HAL_DMA_IRQHandler>:
 8002408:	b470      	push	{r4, r5, r6}
 800240a:	e9d0 6310 	ldrd	r6, r3, [r0, #64]	; 0x40
 800240e:	2204      	movs	r2, #4
 8002410:	6831      	ldr	r1, [r6, #0]
 8002412:	6805      	ldr	r5, [r0, #0]
 8002414:	f003 031c 	and.w	r3, r3, #28
 8002418:	409a      	lsls	r2, r3
 800241a:	420a      	tst	r2, r1
 800241c:	682c      	ldr	r4, [r5, #0]
 800241e:	d00e      	beq.n	800243e <HAL_DMA_IRQHandler+0x36>
 8002420:	f014 0f04 	tst.w	r4, #4
 8002424:	d00b      	beq.n	800243e <HAL_DMA_IRQHandler+0x36>
 8002426:	682b      	ldr	r3, [r5, #0]
 8002428:	069b      	lsls	r3, r3, #26
 800242a:	d403      	bmi.n	8002434 <HAL_DMA_IRQHandler+0x2c>
 800242c:	682b      	ldr	r3, [r5, #0]
 800242e:	f023 0304 	bic.w	r3, r3, #4
 8002432:	602b      	str	r3, [r5, #0]
 8002434:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8002436:	6072      	str	r2, [r6, #4]
 8002438:	b1cb      	cbz	r3, 800246e <HAL_DMA_IRQHandler+0x66>
 800243a:	bc70      	pop	{r4, r5, r6}
 800243c:	4718      	bx	r3
 800243e:	2202      	movs	r2, #2
 8002440:	409a      	lsls	r2, r3
 8002442:	420a      	tst	r2, r1
 8002444:	d015      	beq.n	8002472 <HAL_DMA_IRQHandler+0x6a>
 8002446:	f014 0f02 	tst.w	r4, #2
 800244a:	d012      	beq.n	8002472 <HAL_DMA_IRQHandler+0x6a>
 800244c:	682b      	ldr	r3, [r5, #0]
 800244e:	0699      	lsls	r1, r3, #26
 8002450:	d406      	bmi.n	8002460 <HAL_DMA_IRQHandler+0x58>
 8002452:	682b      	ldr	r3, [r5, #0]
 8002454:	2101      	movs	r1, #1
 8002456:	f023 030a 	bic.w	r3, r3, #10
 800245a:	602b      	str	r3, [r5, #0]
 800245c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8002460:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002462:	6072      	str	r2, [r6, #4]
 8002464:	2200      	movs	r2, #0
 8002466:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800246a:	2b00      	cmp	r3, #0
 800246c:	d1e5      	bne.n	800243a <HAL_DMA_IRQHandler+0x32>
 800246e:	bc70      	pop	{r4, r5, r6}
 8002470:	4770      	bx	lr
 8002472:	2208      	movs	r2, #8
 8002474:	409a      	lsls	r2, r3
 8002476:	420a      	tst	r2, r1
 8002478:	d0f9      	beq.n	800246e <HAL_DMA_IRQHandler+0x66>
 800247a:	0722      	lsls	r2, r4, #28
 800247c:	d5f7      	bpl.n	800246e <HAL_DMA_IRQHandler+0x66>
 800247e:	682a      	ldr	r2, [r5, #0]
 8002480:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8002482:	f022 020e 	bic.w	r2, r2, #14
 8002486:	602a      	str	r2, [r5, #0]
 8002488:	2201      	movs	r2, #1
 800248a:	fa02 f303 	lsl.w	r3, r2, r3
 800248e:	2400      	movs	r4, #0
 8002490:	6073      	str	r3, [r6, #4]
 8002492:	63c2      	str	r2, [r0, #60]	; 0x3c
 8002494:	f880 4024 	strb.w	r4, [r0, #36]	; 0x24
 8002498:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800249c:	2900      	cmp	r1, #0
 800249e:	d0e6      	beq.n	800246e <HAL_DMA_IRQHandler+0x66>
 80024a0:	bc70      	pop	{r4, r5, r6}
 80024a2:	4708      	bx	r1

080024a4 <HAL_DMA_Start_IT>:
 80024a4:	b4f0      	push	{r4, r5, r6, r7}
 80024a6:	f890 4024 	ldrb.w	r4, [r0, #36]	; 0x24
 80024aa:	2c01      	cmp	r4, #1
 80024ac:	d03d      	beq.n	800252a <HAL_DMA_Start_IT+0x86>
 80024ae:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 80024b2:	2601      	movs	r6, #1
 80024b4:	42b4      	cmp	r4, r6
 80024b6:	b2e5      	uxtb	r5, r4
 80024b8:	f880 6024 	strb.w	r6, [r0, #36]	; 0x24
 80024bc:	d005      	beq.n	80024ca <HAL_DMA_Start_IT+0x26>
 80024be:	2300      	movs	r3, #0
 80024c0:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80024c4:	bcf0      	pop	{r4, r5, r6, r7}
 80024c6:	2002      	movs	r0, #2
 80024c8:	4770      	bx	lr
 80024ca:	6804      	ldr	r4, [r0, #0]
 80024cc:	f8d0 c040 	ldr.w	ip, [r0, #64]	; 0x40
 80024d0:	2702      	movs	r7, #2
 80024d2:	2600      	movs	r6, #0
 80024d4:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 80024d8:	63c6      	str	r6, [r0, #60]	; 0x3c
 80024da:	6c47      	ldr	r7, [r0, #68]	; 0x44
 80024dc:	6826      	ldr	r6, [r4, #0]
 80024de:	f007 071c 	and.w	r7, r7, #28
 80024e2:	f026 0601 	bic.w	r6, r6, #1
 80024e6:	6026      	str	r6, [r4, #0]
 80024e8:	40bd      	lsls	r5, r7
 80024ea:	6886      	ldr	r6, [r0, #8]
 80024ec:	f8cc 5004 	str.w	r5, [ip, #4]
 80024f0:	6063      	str	r3, [r4, #4]
 80024f2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80024f4:	2e10      	cmp	r6, #16
 80024f6:	bf0b      	itete	eq
 80024f8:	60a2      	streq	r2, [r4, #8]
 80024fa:	60a1      	strne	r1, [r4, #8]
 80024fc:	60e1      	streq	r1, [r4, #12]
 80024fe:	60e2      	strne	r2, [r4, #12]
 8002500:	b153      	cbz	r3, 8002518 <HAL_DMA_Start_IT+0x74>
 8002502:	6823      	ldr	r3, [r4, #0]
 8002504:	f043 030e 	orr.w	r3, r3, #14
 8002508:	6023      	str	r3, [r4, #0]
 800250a:	6823      	ldr	r3, [r4, #0]
 800250c:	f043 0301 	orr.w	r3, r3, #1
 8002510:	6023      	str	r3, [r4, #0]
 8002512:	2000      	movs	r0, #0
 8002514:	bcf0      	pop	{r4, r5, r6, r7}
 8002516:	4770      	bx	lr
 8002518:	6823      	ldr	r3, [r4, #0]
 800251a:	f023 0304 	bic.w	r3, r3, #4
 800251e:	6023      	str	r3, [r4, #0]
 8002520:	6823      	ldr	r3, [r4, #0]
 8002522:	f043 030a 	orr.w	r3, r3, #10
 8002526:	6023      	str	r3, [r4, #0]
 8002528:	e7ef      	b.n	800250a <HAL_DMA_Start_IT+0x66>
 800252a:	2002      	movs	r0, #2
 800252c:	bcf0      	pop	{r4, r5, r6, r7}
 800252e:	4770      	bx	lr

08002530 <HAL_NVIC_EnableIRQ.part.0>:
 8002530:	4a04      	ldr	r2, [pc, #16]	; (8002544 <HAL_NVIC_EnableIRQ.part.0+0x14>)
 8002532:	f000 011f 	and.w	r1, r0, #31
 8002536:	2301      	movs	r3, #1
 8002538:	0940      	lsrs	r0, r0, #5
 800253a:	408b      	lsls	r3, r1
 800253c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop
 8002544:	e000e100 	.word	0xe000e100

08002548 <HAL_InitTick>:
 8002548:	b570      	push	{r4, r5, r6, lr}
 800254a:	4d10      	ldr	r5, [pc, #64]	; (800258c <HAL_InitTick+0x44>)
 800254c:	4a10      	ldr	r2, [pc, #64]	; (8002590 <HAL_InitTick+0x48>)
 800254e:	682b      	ldr	r3, [r5, #0]
 8002550:	fba2 2303 	umull	r2, r3, r2, r3
 8002554:	099b      	lsrs	r3, r3, #6
 8002556:	3b01      	subs	r3, #1
 8002558:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800255c:	d20c      	bcs.n	8002578 <HAL_InitTick+0x30>
 800255e:	4a0d      	ldr	r2, [pc, #52]	; (8002594 <HAL_InitTick+0x4c>)
 8002560:	490d      	ldr	r1, [pc, #52]	; (8002598 <HAL_InitTick+0x50>)
 8002562:	6053      	str	r3, [r2, #4]
 8002564:	23f0      	movs	r3, #240	; 0xf0
 8002566:	f881 3023 	strb.w	r3, [r1, #35]	; 0x23
 800256a:	2600      	movs	r6, #0
 800256c:	2307      	movs	r3, #7
 800256e:	280f      	cmp	r0, #15
 8002570:	6096      	str	r6, [r2, #8]
 8002572:	4604      	mov	r4, r0
 8002574:	6013      	str	r3, [r2, #0]
 8002576:	d901      	bls.n	800257c <HAL_InitTick+0x34>
 8002578:	2001      	movs	r0, #1
 800257a:	bd70      	pop	{r4, r5, r6, pc}
 800257c:	4601      	mov	r1, r0
 800257e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002582:	f7fd fe25 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8002586:	606c      	str	r4, [r5, #4]
 8002588:	4630      	mov	r0, r6
 800258a:	bd70      	pop	{r4, r5, r6, pc}
 800258c:	20000000 	.word	0x20000000
 8002590:	10624dd3 	.word	0x10624dd3
 8002594:	e000e010 	.word	0xe000e010
 8002598:	e000ed00 	.word	0xe000ed00

0800259c <__NVIC_SystemReset>:
 800259c:	f3bf 8f4f 	dsb	sy
 80025a0:	4905      	ldr	r1, [pc, #20]	; (80025b8 <__NVIC_SystemReset+0x1c>)
 80025a2:	4b06      	ldr	r3, [pc, #24]	; (80025bc <__NVIC_SystemReset+0x20>)
 80025a4:	68ca      	ldr	r2, [r1, #12]
 80025a6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80025aa:	4313      	orrs	r3, r2
 80025ac:	60cb      	str	r3, [r1, #12]
 80025ae:	f3bf 8f4f 	dsb	sy
 80025b2:	bf00      	nop
 80025b4:	e7fd      	b.n	80025b2 <__NVIC_SystemReset+0x16>
 80025b6:	bf00      	nop
 80025b8:	e000ed00 	.word	0xe000ed00
 80025bc:	05fa0004 	.word	0x05fa0004

080025c0 <acc_integration_sleep_us.constprop.0>:
 80025c0:	b538      	push	{r3, r4, r5, lr}
 80025c2:	4b52      	ldr	r3, [pc, #328]	; (800270c <acc_integration_sleep_us.constprop.0+0x14c>)
 80025c4:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 80025c8:	2100      	movs	r1, #0
 80025ca:	2a01      	cmp	r2, #1
 80025cc:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 80025d0:	f000 808d 	beq.w	80026ee <acc_integration_sleep_us.constprop.0+0x12e>
 80025d4:	685a      	ldr	r2, [r3, #4]
 80025d6:	2153      	movs	r1, #83	; 0x53
 80025d8:	2502      	movs	r5, #2
 80025da:	20ca      	movs	r0, #202	; 0xca
 80025dc:	2401      	movs	r4, #1
 80025de:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 80025e2:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 80025e6:	6250      	str	r0, [r2, #36]	; 0x24
 80025e8:	6251      	str	r1, [r2, #36]	; 0x24
 80025ea:	6891      	ldr	r1, [r2, #8]
 80025ec:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80025f0:	6091      	str	r1, [r2, #8]
 80025f2:	68d1      	ldr	r1, [r2, #12]
 80025f4:	b2c9      	uxtb	r1, r1
 80025f6:	f461 6190 	orn	r1, r1, #1152	; 0x480
 80025fa:	60d1      	str	r1, [r2, #12]
 80025fc:	68d1      	ldr	r1, [r2, #12]
 80025fe:	0649      	lsls	r1, r1, #25
 8002600:	d564      	bpl.n	80026cc <acc_integration_sleep_us.constprop.0+0x10c>
 8002602:	211f      	movs	r1, #31
 8002604:	6151      	str	r1, [r2, #20]
 8002606:	6891      	ldr	r1, [r2, #8]
 8002608:	4841      	ldr	r0, [pc, #260]	; (8002710 <acc_integration_sleep_us.constprop.0+0x150>)
 800260a:	f021 0107 	bic.w	r1, r1, #7
 800260e:	f041 0103 	orr.w	r1, r1, #3
 8002612:	6091      	str	r1, [r2, #8]
 8002614:	6801      	ldr	r1, [r0, #0]
 8002616:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800261a:	6001      	str	r1, [r0, #0]
 800261c:	6881      	ldr	r1, [r0, #8]
 800261e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002622:	6081      	str	r1, [r0, #8]
 8002624:	6891      	ldr	r1, [r2, #8]
 8002626:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800262a:	6091      	str	r1, [r2, #8]
 800262c:	6891      	ldr	r1, [r2, #8]
 800262e:	24ff      	movs	r4, #255	; 0xff
 8002630:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8002634:	2001      	movs	r0, #1
 8002636:	6091      	str	r1, [r2, #8]
 8002638:	6254      	str	r4, [r2, #36]	; 0x24
 800263a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800263e:	f893 1051 	ldrb.w	r1, [r3, #81]	; 0x51
 8002642:	2200      	movs	r2, #0
 8002644:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002648:	2900      	cmp	r1, #0
 800264a:	d15b      	bne.n	8002704 <acc_integration_sleep_us.constprop.0+0x144>
 800264c:	b672      	cpsid	i
 800264e:	f3bf 8f4f 	dsb	sy
 8002652:	f3bf 8f6f 	isb	sy
 8002656:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 800265a:	b902      	cbnz	r2, 800265e <acc_integration_sleep_us.constprop.0+0x9e>
 800265c:	bf30      	wfi
 800265e:	b662      	cpsie	i
 8002660:	f3bf 8f4f 	dsb	sy
 8002664:	f3bf 8f6f 	isb	sy
 8002668:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 800266c:	2a00      	cmp	r2, #0
 800266e:	d0ed      	beq.n	800264c <acc_integration_sleep_us.constprop.0+0x8c>
 8002670:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 8002674:	2100      	movs	r1, #0
 8002676:	2a01      	cmp	r2, #1
 8002678:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 800267c:	d037      	beq.n	80026ee <acc_integration_sleep_us.constprop.0+0x12e>
 800267e:	6858      	ldr	r0, [r3, #4]
 8002680:	2253      	movs	r2, #83	; 0x53
 8002682:	2401      	movs	r4, #1
 8002684:	2502      	movs	r5, #2
 8002686:	21ca      	movs	r1, #202	; 0xca
 8002688:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 800268c:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 8002690:	6241      	str	r1, [r0, #36]	; 0x24
 8002692:	6242      	str	r2, [r0, #36]	; 0x24
 8002694:	6882      	ldr	r2, [r0, #8]
 8002696:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800269a:	6082      	str	r2, [r0, #8]
 800269c:	6882      	ldr	r2, [r0, #8]
 800269e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80026a2:	6082      	str	r2, [r0, #8]
 80026a4:	681c      	ldr	r4, [r3, #0]
 80026a6:	e004      	b.n	80026b2 <acc_integration_sleep_us.constprop.0+0xf2>
 80026a8:	6819      	ldr	r1, [r3, #0]
 80026aa:	1b09      	subs	r1, r1, r4
 80026ac:	f5b1 7f7a 	cmp.w	r1, #1000	; 0x3e8
 80026b0:	d81f      	bhi.n	80026f2 <acc_integration_sleep_us.constprop.0+0x132>
 80026b2:	68c2      	ldr	r2, [r0, #12]
 80026b4:	f012 0204 	ands.w	r2, r2, #4
 80026b8:	d0f6      	beq.n	80026a8 <acc_integration_sleep_us.constprop.0+0xe8>
 80026ba:	24ff      	movs	r4, #255	; 0xff
 80026bc:	2201      	movs	r2, #1
 80026be:	2100      	movs	r1, #0
 80026c0:	6244      	str	r4, [r0, #36]	; 0x24
 80026c2:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80026c6:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80026ca:	bd38      	pop	{r3, r4, r5, pc}
 80026cc:	681c      	ldr	r4, [r3, #0]
 80026ce:	68d1      	ldr	r1, [r2, #12]
 80026d0:	f011 0104 	ands.w	r1, r1, #4
 80026d4:	d195      	bne.n	8002602 <acc_integration_sleep_us.constprop.0+0x42>
 80026d6:	6818      	ldr	r0, [r3, #0]
 80026d8:	1b00      	subs	r0, r0, r4
 80026da:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80026de:	d9f6      	bls.n	80026ce <acc_integration_sleep_us.constprop.0+0x10e>
 80026e0:	24ff      	movs	r4, #255	; 0xff
 80026e2:	2003      	movs	r0, #3
 80026e4:	6254      	str	r4, [r2, #36]	; 0x24
 80026e6:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80026ea:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 80026ee:	f7ff ff55 	bl	800259c <__NVIC_SystemReset>
 80026f2:	24ff      	movs	r4, #255	; 0xff
 80026f4:	2103      	movs	r1, #3
 80026f6:	6244      	str	r4, [r0, #36]	; 0x24
 80026f8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80026fc:	f883 1025 	strb.w	r1, [r3, #37]	; 0x25
 8002700:	f7ff ff4c 	bl	800259c <__NVIC_SystemReset>
 8002704:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002708:	e7b9      	b.n	800267e <acc_integration_sleep_us.constprop.0+0xbe>
 800270a:	bf00      	nop
 800270c:	200000ac 	.word	0x200000ac
 8002710:	40010400 	.word	0x40010400

08002714 <HAL_UART_Init.constprop.0>:
 8002714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002718:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800271a:	b0a1      	sub	sp, #132	; 0x84
 800271c:	4604      	mov	r4, r0
 800271e:	2e00      	cmp	r6, #0
 8002720:	d05e      	beq.n	80027e0 <HAL_UART_Init.constprop.0+0xcc>
 8002722:	6825      	ldr	r5, [r4, #0]
 8002724:	68a3      	ldr	r3, [r4, #8]
 8002726:	6926      	ldr	r6, [r4, #16]
 8002728:	6960      	ldr	r0, [r4, #20]
 800272a:	4ac6      	ldr	r2, [pc, #792]	; (8002a44 <HAL_UART_Init.constprop.0+0x330>)
 800272c:	2124      	movs	r1, #36	; 0x24
 800272e:	67a1      	str	r1, [r4, #120]	; 0x78
 8002730:	6829      	ldr	r1, [r5, #0]
 8002732:	f021 0101 	bic.w	r1, r1, #1
 8002736:	6029      	str	r1, [r5, #0]
 8002738:	4333      	orrs	r3, r6
 800273a:	6829      	ldr	r1, [r5, #0]
 800273c:	4303      	orrs	r3, r0
 800273e:	69e0      	ldr	r0, [r4, #28]
 8002740:	400a      	ands	r2, r1
 8002742:	4303      	orrs	r3, r0
 8002744:	4313      	orrs	r3, r2
 8002746:	602b      	str	r3, [r5, #0]
 8002748:	686b      	ldr	r3, [r5, #4]
 800274a:	68e1      	ldr	r1, [r4, #12]
 800274c:	4abe      	ldr	r2, [pc, #760]	; (8002a48 <HAL_UART_Init.constprop.0+0x334>)
 800274e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002752:	430b      	orrs	r3, r1
 8002754:	606b      	str	r3, [r5, #4]
 8002756:	4295      	cmp	r5, r2
 8002758:	69a3      	ldr	r3, [r4, #24]
 800275a:	68aa      	ldr	r2, [r5, #8]
 800275c:	f000 80ba 	beq.w	80028d4 <HAL_UART_Init.constprop.0+0x1c0>
 8002760:	6a26      	ldr	r6, [r4, #32]
 8002762:	49ba      	ldr	r1, [pc, #744]	; (8002a4c <HAL_UART_Init.constprop.0+0x338>)
 8002764:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 8002768:	4333      	orrs	r3, r6
 800276a:	4313      	orrs	r3, r2
 800276c:	428d      	cmp	r5, r1
 800276e:	60ab      	str	r3, [r5, #8]
 8002770:	d00e      	beq.n	8002790 <HAL_UART_Init.constprop.0+0x7c>
 8002772:	4bb7      	ldr	r3, [pc, #732]	; (8002a50 <HAL_UART_Init.constprop.0+0x33c>)
 8002774:	429d      	cmp	r5, r3
 8002776:	f000 8215 	beq.w	8002ba4 <HAL_UART_Init.constprop.0+0x490>
 800277a:	4bb6      	ldr	r3, [pc, #728]	; (8002a54 <HAL_UART_Init.constprop.0+0x340>)
 800277c:	429d      	cmp	r5, r3
 800277e:	f000 812e 	beq.w	80029de <HAL_UART_Init.constprop.0+0x2ca>
 8002782:	2300      	movs	r3, #0
 8002784:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002788:	2001      	movs	r0, #1
 800278a:	b021      	add	sp, #132	; 0x84
 800278c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002790:	4bb1      	ldr	r3, [pc, #708]	; (8002a58 <HAL_UART_Init.constprop.0+0x344>)
 8002792:	4ab2      	ldr	r2, [pc, #712]	; (8002a5c <HAL_UART_Init.constprop.0+0x348>)
 8002794:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002798:	f003 0303 	and.w	r3, r3, #3
 800279c:	3b01      	subs	r3, #1
 800279e:	2b02      	cmp	r3, #2
 80027a0:	f200 813f 	bhi.w	8002a22 <HAL_UART_Init.constprop.0+0x30e>
 80027a4:	4413      	add	r3, r2
 80027a6:	f893 3cc0 	ldrb.w	r3, [r3, #3264]	; 0xcc0
 80027aa:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80027ae:	f000 8163 	beq.w	8002a78 <HAL_UART_Init.constprop.0+0x364>
 80027b2:	2b08      	cmp	r3, #8
 80027b4:	d8e5      	bhi.n	8002782 <HAL_UART_Init.constprop.0+0x6e>
 80027b6:	a101      	add	r1, pc, #4	; (adr r1, 80027bc <HAL_UART_Init.constprop.0+0xa8>)
 80027b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80027bc:	08002a1d 	.word	0x08002a1d
 80027c0:	08002a2b 	.word	0x08002a2b
 80027c4:	080029db 	.word	0x080029db
 80027c8:	08002783 	.word	0x08002783
 80027cc:	08002a03 	.word	0x08002a03
 80027d0:	08002783 	.word	0x08002783
 80027d4:	08002783 	.word	0x08002783
 80027d8:	08002783 	.word	0x08002783
 80027dc:	08002969 	.word	0x08002969
 80027e0:	f880 6074 	strb.w	r6, [r0, #116]	; 0x74
 80027e4:	225c      	movs	r2, #92	; 0x5c
 80027e6:	a809      	add	r0, sp, #36	; 0x24
 80027e8:	4631      	mov	r1, r6
 80027ea:	e9cd 6604 	strd	r6, r6, [sp, #16]
 80027ee:	e9cd 6606 	strd	r6, r6, [sp, #24]
 80027f2:	9608      	str	r6, [sp, #32]
 80027f4:	f004 faab 	bl	8006d4e <memset>
 80027f8:	6825      	ldr	r5, [r4, #0]
 80027fa:	4b94      	ldr	r3, [pc, #592]	; (8002a4c <HAL_UART_Init.constprop.0+0x338>)
 80027fc:	429d      	cmp	r5, r3
 80027fe:	f000 8200 	beq.w	8002c02 <HAL_UART_Init.constprop.0+0x4ee>
 8002802:	4b93      	ldr	r3, [pc, #588]	; (8002a50 <HAL_UART_Init.constprop.0+0x33c>)
 8002804:	429d      	cmp	r5, r3
 8002806:	d18d      	bne.n	8002724 <HAL_UART_Init.constprop.0+0x10>
 8002808:	a809      	add	r0, sp, #36	; 0x24
 800280a:	2702      	movs	r7, #2
 800280c:	9612      	str	r6, [sp, #72]	; 0x48
 800280e:	9709      	str	r7, [sp, #36]	; 0x24
 8002810:	f7ff faf8 	bl	8001e04 <HAL_RCCEx_PeriphCLKConfig>
 8002814:	4606      	mov	r6, r0
 8002816:	2800      	cmp	r0, #0
 8002818:	f040 821e 	bne.w	8002c58 <HAL_UART_Init.constprop.0+0x544>
 800281c:	4b8e      	ldr	r3, [pc, #568]	; (8002a58 <HAL_UART_Init.constprop.0+0x344>)
 800281e:	4d90      	ldr	r5, [pc, #576]	; (8002a60 <HAL_UART_Init.constprop.0+0x34c>)
 8002820:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002822:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002826:	659a      	str	r2, [r3, #88]	; 0x58
 8002828:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800282a:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 800282e:	9201      	str	r2, [sp, #4]
 8002830:	9a01      	ldr	r2, [sp, #4]
 8002832:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002834:	f042 0201 	orr.w	r2, r2, #1
 8002838:	64da      	str	r2, [r3, #76]	; 0x4c
 800283a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800283c:	9705      	str	r7, [sp, #20]
 800283e:	f003 0301 	and.w	r3, r3, #1
 8002842:	200f      	movs	r0, #15
 8002844:	9300      	str	r3, [sp, #0]
 8002846:	2203      	movs	r2, #3
 8002848:	2307      	movs	r3, #7
 800284a:	a904      	add	r1, sp, #16
 800284c:	9004      	str	r0, [sp, #16]
 800284e:	f105 0954 	add.w	r9, r5, #84	; 0x54
 8002852:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002856:	f8dd c000 	ldr.w	ip, [sp]
 800285a:	9207      	str	r2, [sp, #28]
 800285c:	9308      	str	r3, [sp, #32]
 800285e:	9606      	str	r6, [sp, #24]
 8002860:	f04f 0880 	mov.w	r8, #128	; 0x80
 8002864:	f7ff fce4 	bl	8002230 <HAL_GPIO_Init>
 8002868:	4b7e      	ldr	r3, [pc, #504]	; (8002a64 <HAL_UART_Init.constprop.0+0x350>)
 800286a:	656b      	str	r3, [r5, #84]	; 0x54
 800286c:	4648      	mov	r0, r9
 800286e:	e9c5 6617 	strd	r6, r6, [r5, #92]	; 0x5c
 8002872:	e9c5 661a 	strd	r6, r6, [r5, #104]	; 0x68
 8002876:	e9c5 661c 	strd	r6, r6, [r5, #112]	; 0x70
 800287a:	65af      	str	r7, [r5, #88]	; 0x58
 800287c:	f8c5 8064 	str.w	r8, [r5, #100]	; 0x64
 8002880:	f7fd fd2a 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8002884:	4603      	mov	r3, r0
 8002886:	2800      	cmp	r0, #0
 8002888:	f040 81e6 	bne.w	8002c58 <HAL_UART_Init.constprop.0+0x544>
 800288c:	f105 069c 	add.w	r6, r5, #156	; 0x9c
 8002890:	4975      	ldr	r1, [pc, #468]	; (8002a68 <HAL_UART_Init.constprop.0+0x354>)
 8002892:	f8c4 9070 	str.w	r9, [r4, #112]	; 0x70
 8002896:	2210      	movs	r2, #16
 8002898:	4630      	mov	r0, r6
 800289a:	f8c5 109c 	str.w	r1, [r5, #156]	; 0x9c
 800289e:	e9c5 382a 	strd	r3, r8, [r5, #168]	; 0xa8
 80028a2:	e9c5 332c 	strd	r3, r3, [r5, #176]	; 0xb0
 80028a6:	e9c5 332e 	strd	r3, r3, [r5, #184]	; 0xb8
 80028aa:	67ec      	str	r4, [r5, #124]	; 0x7c
 80028ac:	f8c5 70a0 	str.w	r7, [r5, #160]	; 0xa0
 80028b0:	f8c5 20a4 	str.w	r2, [r5, #164]	; 0xa4
 80028b4:	f7fd fd10 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80028b8:	4601      	mov	r1, r0
 80028ba:	2800      	cmp	r0, #0
 80028bc:	f040 81cc 	bne.w	8002c58 <HAL_UART_Init.constprop.0+0x544>
 80028c0:	66e6      	str	r6, [r4, #108]	; 0x6c
 80028c2:	2026      	movs	r0, #38	; 0x26
 80028c4:	f8c5 40c4 	str.w	r4, [r5, #196]	; 0xc4
 80028c8:	f7fd fc82 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80028cc:	2026      	movs	r0, #38	; 0x26
 80028ce:	f7ff fe2f 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 80028d2:	e726      	b.n	8002722 <HAL_UART_Init.constprop.0+0xe>
 80028d4:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 80028d8:	4313      	orrs	r3, r2
 80028da:	495f      	ldr	r1, [pc, #380]	; (8002a58 <HAL_UART_Init.constprop.0+0x344>)
 80028dc:	60ab      	str	r3, [r5, #8]
 80028de:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 80028e2:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80028e6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80028ea:	f000 8188 	beq.w	8002bfe <HAL_UART_Init.constprop.0+0x4ea>
 80028ee:	d80c      	bhi.n	800290a <HAL_UART_Init.constprop.0+0x1f6>
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	f000 817e 	beq.w	8002bf2 <HAL_UART_Init.constprop.0+0x4de>
 80028f6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80028fa:	f47f af42 	bne.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 80028fe:	f7ff fc41 	bl	8002184 <HAL_RCC_GetSysClockFreq>
 8002902:	2800      	cmp	r0, #0
 8002904:	f000 8081 	beq.w	8002a0a <HAL_UART_Init.constprop.0+0x2f6>
 8002908:	e005      	b.n	8002916 <HAL_UART_Init.constprop.0+0x202>
 800290a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800290e:	f47f af38 	bne.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002912:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8002916:	6862      	ldr	r2, [r4, #4]
 8002918:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800291c:	4283      	cmp	r3, r0
 800291e:	f63f af30 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002922:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 8002926:	f63f af2c 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 800292a:	0856      	lsrs	r6, r2, #1
 800292c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002930:	2700      	movs	r7, #0
 8002932:	fbe3 6700 	umlal	r6, r7, r3, r0
 8002936:	f04f 0800 	mov.w	r8, #0
 800293a:	4643      	mov	r3, r8
 800293c:	4630      	mov	r0, r6
 800293e:	4639      	mov	r1, r7
 8002940:	f002 ffe6 	bl	8005910 <__aeabi_uldivmod>
 8002944:	4b49      	ldr	r3, [pc, #292]	; (8002a6c <HAL_UART_Init.constprop.0+0x358>)
 8002946:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
 800294a:	429a      	cmp	r2, r3
 800294c:	f63f af19 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002950:	6825      	ldr	r5, [r4, #0]
 8002952:	60e8      	str	r0, [r5, #12]
 8002954:	e9c4 8819 	strd	r8, r8, [r4, #100]	; 0x64
 8002958:	e019      	b.n	800298e <HAL_UART_Init.constprop.0+0x27a>
 800295a:	2b30      	cmp	r3, #48	; 0x30
 800295c:	f47f af11 	bne.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002960:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002964:	f000 80a1 	beq.w	8002aaa <HAL_UART_Init.constprop.0+0x396>
 8002968:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800296c:	6863      	ldr	r3, [r4, #4]
 800296e:	f64f 72ef 	movw	r2, #65519	; 0xffef
 8002972:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8002976:	fbb0 f0f3 	udiv	r0, r0, r3
 800297a:	f1a0 0310 	sub.w	r3, r0, #16
 800297e:	4293      	cmp	r3, r2
 8002980:	f63f aeff 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002984:	6825      	ldr	r5, [r4, #0]
 8002986:	2300      	movs	r3, #0
 8002988:	60e8      	str	r0, [r5, #12]
 800298a:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 800298e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002990:	2b00      	cmp	r3, #0
 8002992:	f040 80af 	bne.w	8002af4 <HAL_UART_Init.constprop.0+0x3e0>
 8002996:	686b      	ldr	r3, [r5, #4]
 8002998:	4a31      	ldr	r2, [pc, #196]	; (8002a60 <HAL_UART_Init.constprop.0+0x34c>)
 800299a:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 800299e:	606b      	str	r3, [r5, #4]
 80029a0:	68ab      	ldr	r3, [r5, #8]
 80029a2:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 80029a6:	60ab      	str	r3, [r5, #8]
 80029a8:	682b      	ldr	r3, [r5, #0]
 80029aa:	2100      	movs	r1, #0
 80029ac:	f043 0301 	orr.w	r3, r3, #1
 80029b0:	602b      	str	r3, [r5, #0]
 80029b2:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 80029b6:	6816      	ldr	r6, [r2, #0]
 80029b8:	682b      	ldr	r3, [r5, #0]
 80029ba:	071a      	lsls	r2, r3, #28
 80029bc:	f100 808e 	bmi.w	8002adc <HAL_UART_Init.constprop.0+0x3c8>
 80029c0:	682b      	ldr	r3, [r5, #0]
 80029c2:	075b      	lsls	r3, r3, #29
 80029c4:	f100 80e1 	bmi.w	8002b8a <HAL_UART_Init.constprop.0+0x476>
 80029c8:	2300      	movs	r3, #0
 80029ca:	2220      	movs	r2, #32
 80029cc:	67a2      	str	r2, [r4, #120]	; 0x78
 80029ce:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
 80029d2:	67e2      	str	r2, [r4, #124]	; 0x7c
 80029d4:	4618      	mov	r0, r3
 80029d6:	6623      	str	r3, [r4, #96]	; 0x60
 80029d8:	e6d7      	b.n	800278a <HAL_UART_Init.constprop.0+0x76>
 80029da:	4825      	ldr	r0, [pc, #148]	; (8002a70 <HAL_UART_Init.constprop.0+0x35c>)
 80029dc:	e7c6      	b.n	800296c <HAL_UART_Init.constprop.0+0x258>
 80029de:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 80029e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80029e6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80029ea:	2b20      	cmp	r3, #32
 80029ec:	f000 8136 	beq.w	8002c5c <HAL_UART_Init.constprop.0+0x548>
 80029f0:	d8b3      	bhi.n	800295a <HAL_UART_Init.constprop.0+0x246>
 80029f2:	b17b      	cbz	r3, 8002a14 <HAL_UART_Init.constprop.0+0x300>
 80029f4:	2b10      	cmp	r3, #16
 80029f6:	f47f aec4 	bne.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 80029fa:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80029fe:	f000 80e2 	beq.w	8002bc6 <HAL_UART_Init.constprop.0+0x4b2>
 8002a02:	f7ff fbbf 	bl	8002184 <HAL_RCC_GetSysClockFreq>
 8002a06:	2800      	cmp	r0, #0
 8002a08:	d1b0      	bne.n	800296c <HAL_UART_Init.constprop.0+0x258>
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002a10:	6825      	ldr	r5, [r4, #0]
 8002a12:	e7bc      	b.n	800298e <HAL_UART_Init.constprop.0+0x27a>
 8002a14:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002a18:	f000 80cf 	beq.w	8002bba <HAL_UART_Init.constprop.0+0x4a6>
 8002a1c:	f7ff fb9e 	bl	800215c <HAL_RCC_GetPCLK1Freq>
 8002a20:	e7f1      	b.n	8002a06 <HAL_UART_Init.constprop.0+0x2f2>
 8002a22:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002a26:	f000 80d4 	beq.w	8002bd2 <HAL_UART_Init.constprop.0+0x4be>
 8002a2a:	4b0b      	ldr	r3, [pc, #44]	; (8002a58 <HAL_UART_Init.constprop.0+0x344>)
 8002a2c:	4911      	ldr	r1, [pc, #68]	; (8002a74 <HAL_UART_Init.constprop.0+0x360>)
 8002a2e:	689b      	ldr	r3, [r3, #8]
 8002a30:	6808      	ldr	r0, [r1, #0]
 8002a32:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002a36:	441a      	add	r2, r3
 8002a38:	f892 3c88 	ldrb.w	r3, [r2, #3208]	; 0xc88
 8002a3c:	f003 031f 	and.w	r3, r3, #31
 8002a40:	40d8      	lsrs	r0, r3
 8002a42:	e7e0      	b.n	8002a06 <HAL_UART_Init.constprop.0+0x2f2>
 8002a44:	efff69f3 	.word	0xefff69f3
 8002a48:	40008000 	.word	0x40008000
 8002a4c:	40013800 	.word	0x40013800
 8002a50:	40004400 	.word	0x40004400
 8002a54:	40004800 	.word	0x40004800
 8002a58:	40021000 	.word	0x40021000
 8002a5c:	08007b98 	.word	0x08007b98
 8002a60:	200000ac 	.word	0x200000ac
 8002a64:	4002006c 	.word	0x4002006c
 8002a68:	40020080 	.word	0x40020080
 8002a6c:	000ffcff 	.word	0x000ffcff
 8002a70:	00f42400 	.word	0x00f42400
 8002a74:	20000000 	.word	0x20000000
 8002a78:	2b08      	cmp	r3, #8
 8002a7a:	f63f ae82 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002a7e:	a101      	add	r1, pc, #4	; (adr r1, 8002a84 <HAL_UART_Init.constprop.0+0x370>)
 8002a80:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002a84:	08002bbb 	.word	0x08002bbb
 8002a88:	08002bd3 	.word	0x08002bd3
 8002a8c:	08002aa9 	.word	0x08002aa9
 8002a90:	08002783 	.word	0x08002783
 8002a94:	08002bc7 	.word	0x08002bc7
 8002a98:	08002783 	.word	0x08002783
 8002a9c:	08002783 	.word	0x08002783
 8002aa0:	08002783 	.word	0x08002783
 8002aa4:	08002aab 	.word	0x08002aab
 8002aa8:	486f      	ldr	r0, [pc, #444]	; (8002c68 <HAL_UART_Init.constprop.0+0x554>)
 8002aaa:	6862      	ldr	r2, [r4, #4]
 8002aac:	0853      	lsrs	r3, r2, #1
 8002aae:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002ab2:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8002ab6:	fbb0 f0f2 	udiv	r0, r0, r2
 8002aba:	f1a0 0210 	sub.w	r2, r0, #16
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	f63f ae5f 	bhi.w	8002782 <HAL_UART_Init.constprop.0+0x6e>
 8002ac4:	f020 030f 	bic.w	r3, r0, #15
 8002ac8:	b29b      	uxth	r3, r3
 8002aca:	6825      	ldr	r5, [r4, #0]
 8002acc:	f3c0 0042 	ubfx	r0, r0, #1, #3
 8002ad0:	4318      	orrs	r0, r3
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	60e8      	str	r0, [r5, #12]
 8002ad6:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002ada:	e758      	b.n	800298e <HAL_UART_Init.constprop.0+0x27a>
 8002adc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002ae0:	4632      	mov	r2, r6
 8002ae2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8002ae6:	4620      	mov	r0, r4
 8002ae8:	f7fd fb9e 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002aec:	2800      	cmp	r0, #0
 8002aee:	d157      	bne.n	8002ba0 <HAL_UART_Init.constprop.0+0x48c>
 8002af0:	6825      	ldr	r5, [r4, #0]
 8002af2:	e765      	b.n	80029c0 <HAL_UART_Init.constprop.0+0x2ac>
 8002af4:	07de      	lsls	r6, r3, #31
 8002af6:	d505      	bpl.n	8002b04 <HAL_UART_Init.constprop.0+0x3f0>
 8002af8:	686a      	ldr	r2, [r5, #4]
 8002afa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8002afc:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002b00:	430a      	orrs	r2, r1
 8002b02:	606a      	str	r2, [r5, #4]
 8002b04:	0798      	lsls	r0, r3, #30
 8002b06:	d505      	bpl.n	8002b14 <HAL_UART_Init.constprop.0+0x400>
 8002b08:	686a      	ldr	r2, [r5, #4]
 8002b0a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002b0c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002b10:	430a      	orrs	r2, r1
 8002b12:	606a      	str	r2, [r5, #4]
 8002b14:	0759      	lsls	r1, r3, #29
 8002b16:	d505      	bpl.n	8002b24 <HAL_UART_Init.constprop.0+0x410>
 8002b18:	686a      	ldr	r2, [r5, #4]
 8002b1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002b1c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002b20:	430a      	orrs	r2, r1
 8002b22:	606a      	str	r2, [r5, #4]
 8002b24:	071a      	lsls	r2, r3, #28
 8002b26:	d505      	bpl.n	8002b34 <HAL_UART_Init.constprop.0+0x420>
 8002b28:	686a      	ldr	r2, [r5, #4]
 8002b2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002b2c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002b30:	430a      	orrs	r2, r1
 8002b32:	606a      	str	r2, [r5, #4]
 8002b34:	06df      	lsls	r7, r3, #27
 8002b36:	d505      	bpl.n	8002b44 <HAL_UART_Init.constprop.0+0x430>
 8002b38:	68aa      	ldr	r2, [r5, #8]
 8002b3a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002b3c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002b40:	430a      	orrs	r2, r1
 8002b42:	60aa      	str	r2, [r5, #8]
 8002b44:	069e      	lsls	r6, r3, #26
 8002b46:	d505      	bpl.n	8002b54 <HAL_UART_Init.constprop.0+0x440>
 8002b48:	68aa      	ldr	r2, [r5, #8]
 8002b4a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8002b4c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002b50:	430a      	orrs	r2, r1
 8002b52:	60aa      	str	r2, [r5, #8]
 8002b54:	0658      	lsls	r0, r3, #25
 8002b56:	d50e      	bpl.n	8002b76 <HAL_UART_Init.constprop.0+0x462>
 8002b58:	686a      	ldr	r2, [r5, #4]
 8002b5a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8002b5c:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002b60:	430a      	orrs	r2, r1
 8002b62:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8002b66:	606a      	str	r2, [r5, #4]
 8002b68:	d105      	bne.n	8002b76 <HAL_UART_Init.constprop.0+0x462>
 8002b6a:	686a      	ldr	r2, [r5, #4]
 8002b6c:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002b6e:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002b72:	430a      	orrs	r2, r1
 8002b74:	606a      	str	r2, [r5, #4]
 8002b76:	0619      	lsls	r1, r3, #24
 8002b78:	f57f af0d 	bpl.w	8002996 <HAL_UART_Init.constprop.0+0x282>
 8002b7c:	686b      	ldr	r3, [r5, #4]
 8002b7e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8002b80:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8002b84:	4313      	orrs	r3, r2
 8002b86:	606b      	str	r3, [r5, #4]
 8002b88:	e705      	b.n	8002996 <HAL_UART_Init.constprop.0+0x282>
 8002b8a:	4632      	mov	r2, r6
 8002b8c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002b90:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002b94:	4620      	mov	r0, r4
 8002b96:	f7fd fb47 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002b9a:	2800      	cmp	r0, #0
 8002b9c:	f43f af14 	beq.w	80029c8 <HAL_UART_Init.constprop.0+0x2b4>
 8002ba0:	2003      	movs	r0, #3
 8002ba2:	e5f2      	b.n	800278a <HAL_UART_Init.constprop.0+0x76>
 8002ba4:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002ba8:	4a30      	ldr	r2, [pc, #192]	; (8002c6c <HAL_UART_Init.constprop.0+0x558>)
 8002baa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002bae:	f003 030c 	and.w	r3, r3, #12
 8002bb2:	4413      	add	r3, r2
 8002bb4:	f893 3cc4 	ldrb.w	r3, [r3, #3268]	; 0xcc4
 8002bb8:	e5f7      	b.n	80027aa <HAL_UART_Init.constprop.0+0x96>
 8002bba:	f7ff facf 	bl	800215c <HAL_RCC_GetPCLK1Freq>
 8002bbe:	2800      	cmp	r0, #0
 8002bc0:	f43f af23 	beq.w	8002a0a <HAL_UART_Init.constprop.0+0x2f6>
 8002bc4:	e771      	b.n	8002aaa <HAL_UART_Init.constprop.0+0x396>
 8002bc6:	f7ff fadd 	bl	8002184 <HAL_RCC_GetSysClockFreq>
 8002bca:	2800      	cmp	r0, #0
 8002bcc:	f43f af1d 	beq.w	8002a0a <HAL_UART_Init.constprop.0+0x2f6>
 8002bd0:	e76b      	b.n	8002aaa <HAL_UART_Init.constprop.0+0x396>
 8002bd2:	4b27      	ldr	r3, [pc, #156]	; (8002c70 <HAL_UART_Init.constprop.0+0x55c>)
 8002bd4:	4927      	ldr	r1, [pc, #156]	; (8002c74 <HAL_UART_Init.constprop.0+0x560>)
 8002bd6:	689b      	ldr	r3, [r3, #8]
 8002bd8:	6808      	ldr	r0, [r1, #0]
 8002bda:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002bde:	441a      	add	r2, r3
 8002be0:	f892 3c88 	ldrb.w	r3, [r2, #3208]	; 0xc88
 8002be4:	f003 031f 	and.w	r3, r3, #31
 8002be8:	40d8      	lsrs	r0, r3
 8002bea:	2800      	cmp	r0, #0
 8002bec:	f43f af0d 	beq.w	8002a0a <HAL_UART_Init.constprop.0+0x2f6>
 8002bf0:	e75b      	b.n	8002aaa <HAL_UART_Init.constprop.0+0x396>
 8002bf2:	f7ff fab3 	bl	800215c <HAL_RCC_GetPCLK1Freq>
 8002bf6:	2800      	cmp	r0, #0
 8002bf8:	f43f af07 	beq.w	8002a0a <HAL_UART_Init.constprop.0+0x2f6>
 8002bfc:	e68b      	b.n	8002916 <HAL_UART_Init.constprop.0+0x202>
 8002bfe:	481a      	ldr	r0, [pc, #104]	; (8002c68 <HAL_UART_Init.constprop.0+0x554>)
 8002c00:	e689      	b.n	8002916 <HAL_UART_Init.constprop.0+0x202>
 8002c02:	2301      	movs	r3, #1
 8002c04:	a809      	add	r0, sp, #36	; 0x24
 8002c06:	9611      	str	r6, [sp, #68]	; 0x44
 8002c08:	9309      	str	r3, [sp, #36]	; 0x24
 8002c0a:	f7ff f8fb 	bl	8001e04 <HAL_RCCEx_PeriphCLKConfig>
 8002c0e:	bb18      	cbnz	r0, 8002c58 <HAL_UART_Init.constprop.0+0x544>
 8002c10:	4b17      	ldr	r3, [pc, #92]	; (8002c70 <HAL_UART_Init.constprop.0+0x55c>)
 8002c12:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002c14:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002c18:	661a      	str	r2, [r3, #96]	; 0x60
 8002c1a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002c1c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002c20:	9203      	str	r2, [sp, #12]
 8002c22:	9a03      	ldr	r2, [sp, #12]
 8002c24:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002c26:	f042 0201 	orr.w	r2, r2, #1
 8002c2a:	64da      	str	r2, [r3, #76]	; 0x4c
 8002c2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002c2e:	9006      	str	r0, [sp, #24]
 8002c30:	f003 0301 	and.w	r3, r3, #1
 8002c34:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002c38:	9302      	str	r3, [sp, #8]
 8002c3a:	2502      	movs	r5, #2
 8002c3c:	2203      	movs	r2, #3
 8002c3e:	2307      	movs	r3, #7
 8002c40:	9004      	str	r0, [sp, #16]
 8002c42:	a904      	add	r1, sp, #16
 8002c44:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002c48:	9505      	str	r5, [sp, #20]
 8002c4a:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8002c4e:	9e02      	ldr	r6, [sp, #8]
 8002c50:	f7ff faee 	bl	8002230 <HAL_GPIO_Init>
 8002c54:	6825      	ldr	r5, [r4, #0]
 8002c56:	e565      	b.n	8002724 <HAL_UART_Init.constprop.0+0x10>
 8002c58:	f7ff fca0 	bl	800259c <__NVIC_SystemReset>
 8002c5c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002c60:	4801      	ldr	r0, [pc, #4]	; (8002c68 <HAL_UART_Init.constprop.0+0x554>)
 8002c62:	f47f ae83 	bne.w	800296c <HAL_UART_Init.constprop.0+0x258>
 8002c66:	e720      	b.n	8002aaa <HAL_UART_Init.constprop.0+0x396>
 8002c68:	00f42400 	.word	0x00f42400
 8002c6c:	08007b98 	.word	0x08007b98
 8002c70:	40021000 	.word	0x40021000
 8002c74:	20000000 	.word	0x20000000

08002c78 <acc_hal_integration_sensor_transfer16>:
 8002c78:	b570      	push	{r4, r5, r6, lr}
 8002c7a:	4c86      	ldr	r4, [pc, #536]	; (8002e94 <acc_hal_integration_sensor_transfer16+0x21c>)
 8002c7c:	f894 3140 	ldrb.w	r3, [r4, #320]	; 0x140
 8002c80:	2000      	movs	r0, #0
 8002c82:	2b01      	cmp	r3, #1
 8002c84:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
 8002c88:	d00f      	beq.n	8002caa <acc_hal_integration_sensor_transfer16+0x32>
 8002c8a:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002c8e:	2001      	movs	r0, #1
 8002c90:	4283      	cmp	r3, r0
 8002c92:	b2dd      	uxtb	r5, r3
 8002c94:	f884 0140 	strb.w	r0, [r4, #320]	; 0x140
 8002c98:	d00e      	beq.n	8002cb8 <acc_hal_integration_sensor_transfer16+0x40>
 8002c9a:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8002c9e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002ca2:	d003      	beq.n	8002cac <acc_hal_integration_sensor_transfer16+0x34>
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	f884 3140 	strb.w	r3, [r4, #320]	; 0x140
 8002caa:	bd70      	pop	{r4, r5, r6, pc}
 8002cac:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d1f7      	bne.n	8002ca4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002cb4:	2d04      	cmp	r5, #4
 8002cb6:	d1f5      	bne.n	8002ca4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002cb8:	2900      	cmp	r1, #0
 8002cba:	d0f3      	beq.n	8002ca4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002cbc:	b293      	uxth	r3, r2
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d0f0      	beq.n	8002ca4 <acc_hal_integration_sensor_transfer16+0x2c>
 8002cc2:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8002cc6:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8002cca:	f8d4 60f0 	ldr.w	r6, [r4, #240]	; 0xf0
 8002cce:	2a04      	cmp	r2, #4
 8002cd0:	bf18      	it	ne
 8002cd2:	2205      	movne	r2, #5
 8002cd4:	f04f 0000 	mov.w	r0, #0
 8002cd8:	bf18      	it	ne
 8002cda:	f884 2141 	strbne.w	r2, [r4, #321]	; 0x141
 8002cde:	f8c4 0144 	str.w	r0, [r4, #324]	; 0x144
 8002ce2:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002ce6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002cea:	686a      	ldr	r2, [r5, #4]
 8002cec:	f8c4 111c 	str.w	r1, [r4, #284]	; 0x11c
 8002cf0:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8002cf4:	f5b6 6fe0 	cmp.w	r6, #1792	; 0x700
 8002cf8:	e9c4 004c 	strd	r0, r0, [r4, #304]	; 0x130
 8002cfc:	f8a4 3120 	strh.w	r3, [r4, #288]	; 0x120
 8002d00:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8002d04:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002d08:	606a      	str	r2, [r5, #4]
 8002d0a:	d929      	bls.n	8002d60 <acc_hal_integration_sensor_transfer16+0xe8>
 8002d0c:	686b      	ldr	r3, [r5, #4]
 8002d0e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002d12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d16:	606b      	str	r3, [r5, #4]
 8002d18:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002d1c:	2b04      	cmp	r3, #4
 8002d1e:	bf07      	ittee	eq
 8002d20:	4a5d      	ldreq	r2, [pc, #372]	; (8002e98 <acc_hal_integration_sensor_transfer16+0x220>)
 8002d22:	4b5e      	ldreq	r3, [pc, #376]	; (8002e9c <acc_hal_integration_sensor_transfer16+0x224>)
 8002d24:	4a5e      	ldrne	r2, [pc, #376]	; (8002ea0 <acc_hal_integration_sensor_transfer16+0x228>)
 8002d26:	4b5f      	ldrne	r3, [pc, #380]	; (8002ea4 <acc_hal_integration_sensor_transfer16+0x22c>)
 8002d28:	e9c0 320b 	strd	r3, r2, [r0, #44]	; 0x2c
 8002d2c:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002d30:	4a5d      	ldr	r2, [pc, #372]	; (8002ea8 <acc_hal_integration_sensor_transfer16+0x230>)
 8002d32:	6342      	str	r2, [r0, #52]	; 0x34
 8002d34:	2600      	movs	r6, #0
 8002d36:	460a      	mov	r2, r1
 8002d38:	b29b      	uxth	r3, r3
 8002d3a:	f105 010c 	add.w	r1, r5, #12
 8002d3e:	6386      	str	r6, [r0, #56]	; 0x38
 8002d40:	f7ff fbb0 	bl	80024a4 <HAL_DMA_Start_IT>
 8002d44:	4605      	mov	r5, r0
 8002d46:	b378      	cbz	r0, 8002da8 <acc_hal_integration_sensor_transfer16+0x130>
 8002d48:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002d4c:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 8002d50:	f043 0310 	orr.w	r3, r3, #16
 8002d54:	2201      	movs	r2, #1
 8002d56:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002d5a:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002d5e:	bd70      	pop	{r4, r5, r6, pc}
 8002d60:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002d64:	686a      	ldr	r2, [r5, #4]
 8002d66:	6980      	ldr	r0, [r0, #24]
 8002d68:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002d6c:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002d70:	606a      	str	r2, [r5, #4]
 8002d72:	d05f      	beq.n	8002e34 <acc_hal_integration_sensor_transfer16+0x1bc>
 8002d74:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002d78:	6983      	ldr	r3, [r0, #24]
 8002d7a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002d7e:	d1cb      	bne.n	8002d18 <acc_hal_integration_sensor_transfer16+0xa0>
 8002d80:	686b      	ldr	r3, [r5, #4]
 8002d82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d86:	606b      	str	r3, [r5, #4]
 8002d88:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002d8c:	f013 0f01 	tst.w	r3, #1
 8002d90:	686b      	ldr	r3, [r5, #4]
 8002d92:	d169      	bne.n	8002e68 <acc_hal_integration_sensor_transfer16+0x1f0>
 8002d94:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002d98:	606b      	str	r3, [r5, #4]
 8002d9a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002d9e:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002da2:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002da6:	e7b7      	b.n	8002d18 <acc_hal_integration_sensor_transfer16+0xa0>
 8002da8:	f8d4 20e4 	ldr.w	r2, [r4, #228]	; 0xe4
 8002dac:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002db0:	6853      	ldr	r3, [r2, #4]
 8002db2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002db6:	f043 0301 	orr.w	r3, r3, #1
 8002dba:	6053      	str	r3, [r2, #4]
 8002dbc:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002dc0:	6305      	str	r5, [r0, #48]	; 0x30
 8002dc2:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002dc6:	320c      	adds	r2, #12
 8002dc8:	b29b      	uxth	r3, r3
 8002dca:	62c5      	str	r5, [r0, #44]	; 0x2c
 8002dcc:	f7ff fb6a 	bl	80024a4 <HAL_DMA_Start_IT>
 8002dd0:	2800      	cmp	r0, #0
 8002dd2:	d13d      	bne.n	8002e50 <acc_hal_integration_sensor_transfer16+0x1d8>
 8002dd4:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8002dd8:	681a      	ldr	r2, [r3, #0]
 8002dda:	0652      	lsls	r2, r2, #25
 8002ddc:	d525      	bpl.n	8002e2a <acc_hal_integration_sensor_transfer16+0x1b2>
 8002dde:	685a      	ldr	r2, [r3, #4]
 8002de0:	f042 0220 	orr.w	r2, r2, #32
 8002de4:	605a      	str	r2, [r3, #4]
 8002de6:	685a      	ldr	r2, [r3, #4]
 8002de8:	f042 0202 	orr.w	r2, r2, #2
 8002dec:	605a      	str	r2, [r3, #4]
 8002dee:	6822      	ldr	r2, [r4, #0]
 8002df0:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002df4:	2100      	movs	r1, #0
 8002df6:	f884 1140 	strb.w	r1, [r4, #320]	; 0x140
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	f47f af55 	bne.w	8002caa <acc_hal_integration_sensor_transfer16+0x32>
 8002e00:	f241 3187 	movw	r1, #4999	; 0x1387
 8002e04:	e00c      	b.n	8002e20 <acc_hal_integration_sensor_transfer16+0x1a8>
 8002e06:	b672      	cpsid	i
 8002e08:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002e0c:	b903      	cbnz	r3, 8002e10 <acc_hal_integration_sensor_transfer16+0x198>
 8002e0e:	bf30      	wfi
 8002e10:	b662      	cpsie	i
 8002e12:	f3bf 8f6f 	isb	sy
 8002e16:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	f47f af45 	bne.w	8002caa <acc_hal_integration_sensor_transfer16+0x32>
 8002e20:	6823      	ldr	r3, [r4, #0]
 8002e22:	1a9b      	subs	r3, r3, r2
 8002e24:	428b      	cmp	r3, r1
 8002e26:	d9ee      	bls.n	8002e06 <acc_hal_integration_sensor_transfer16+0x18e>
 8002e28:	bd70      	pop	{r4, r5, r6, pc}
 8002e2a:	681a      	ldr	r2, [r3, #0]
 8002e2c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002e30:	601a      	str	r2, [r3, #0]
 8002e32:	e7d4      	b.n	8002dde <acc_hal_integration_sensor_transfer16+0x166>
 8002e34:	f013 0f01 	tst.w	r3, #1
 8002e38:	686b      	ldr	r3, [r5, #4]
 8002e3a:	d120      	bne.n	8002e7e <acc_hal_integration_sensor_transfer16+0x206>
 8002e3c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002e40:	606b      	str	r3, [r5, #4]
 8002e42:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002e46:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002e4a:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002e4e:	e791      	b.n	8002d74 <acc_hal_integration_sensor_transfer16+0xfc>
 8002e50:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002e54:	f884 5140 	strb.w	r5, [r4, #320]	; 0x140
 8002e58:	f043 0310 	orr.w	r3, r3, #16
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002e62:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002e66:	bd70      	pop	{r4, r5, r6, pc}
 8002e68:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002e6c:	606b      	str	r3, [r5, #4]
 8002e6e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002e72:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002e76:	3301      	adds	r3, #1
 8002e78:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002e7c:	e74c      	b.n	8002d18 <acc_hal_integration_sensor_transfer16+0xa0>
 8002e7e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002e82:	606b      	str	r3, [r5, #4]
 8002e84:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002e88:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002e8c:	3301      	adds	r3, #1
 8002e8e:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002e92:	e76f      	b.n	8002d74 <acc_hal_integration_sensor_transfer16+0xfc>
 8002e94:	200000ac 	.word	0x200000ac
 8002e98:	08001ba9 	.word	0x08001ba9
 8002e9c:	08001c29 	.word	0x08001c29
 8002ea0:	08001bad 	.word	0x08001bad
 8002ea4:	08001bb1 	.word	0x08001bb1
 8002ea8:	08001b85 	.word	0x08001b85

08002eac <HAL_RTC_DeactivateAlarm.constprop.0>:
 8002eac:	491c      	ldr	r1, [pc, #112]	; (8002f20 <HAL_RTC_DeactivateAlarm.constprop.0+0x74>)
 8002eae:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002eb2:	2b01      	cmp	r3, #1
 8002eb4:	d032      	beq.n	8002f1c <HAL_RTC_DeactivateAlarm.constprop.0+0x70>
 8002eb6:	b430      	push	{r4, r5}
 8002eb8:	684c      	ldr	r4, [r1, #4]
 8002eba:	2353      	movs	r3, #83	; 0x53
 8002ebc:	2001      	movs	r0, #1
 8002ebe:	2502      	movs	r5, #2
 8002ec0:	22ca      	movs	r2, #202	; 0xca
 8002ec2:	f881 5025 	strb.w	r5, [r1, #37]	; 0x25
 8002ec6:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8002eca:	6262      	str	r2, [r4, #36]	; 0x24
 8002ecc:	6263      	str	r3, [r4, #36]	; 0x24
 8002ece:	68a3      	ldr	r3, [r4, #8]
 8002ed0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002ed4:	60a3      	str	r3, [r4, #8]
 8002ed6:	68a3      	ldr	r3, [r4, #8]
 8002ed8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002edc:	60a3      	str	r3, [r4, #8]
 8002ede:	6808      	ldr	r0, [r1, #0]
 8002ee0:	e004      	b.n	8002eec <HAL_RTC_DeactivateAlarm.constprop.0+0x40>
 8002ee2:	680a      	ldr	r2, [r1, #0]
 8002ee4:	1a12      	subs	r2, r2, r0
 8002ee6:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
 8002eea:	d80d      	bhi.n	8002f08 <HAL_RTC_DeactivateAlarm.constprop.0+0x5c>
 8002eec:	68e3      	ldr	r3, [r4, #12]
 8002eee:	f013 0301 	ands.w	r3, r3, #1
 8002ef2:	d0f6      	beq.n	8002ee2 <HAL_RTC_DeactivateAlarm.constprop.0+0x36>
 8002ef4:	2000      	movs	r0, #0
 8002ef6:	22ff      	movs	r2, #255	; 0xff
 8002ef8:	2301      	movs	r3, #1
 8002efa:	6262      	str	r2, [r4, #36]	; 0x24
 8002efc:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8002f00:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
 8002f04:	bc30      	pop	{r4, r5}
 8002f06:	4770      	bx	lr
 8002f08:	20ff      	movs	r0, #255	; 0xff
 8002f0a:	2203      	movs	r2, #3
 8002f0c:	6260      	str	r0, [r4, #36]	; 0x24
 8002f0e:	f881 3024 	strb.w	r3, [r1, #36]	; 0x24
 8002f12:	f881 2025 	strb.w	r2, [r1, #37]	; 0x25
 8002f16:	4610      	mov	r0, r2
 8002f18:	bc30      	pop	{r4, r5}
 8002f1a:	4770      	bx	lr
 8002f1c:	2002      	movs	r0, #2
 8002f1e:	4770      	bx	lr
 8002f20:	200000ac 	.word	0x200000ac

08002f24 <acc_a121_cal_session_ack_program>:
 8002f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f26:	b085      	sub	sp, #20
 8002f28:	f10d 020e 	add.w	r2, sp, #14
 8002f2c:	2700      	movs	r7, #0
 8002f2e:	2133      	movs	r1, #51	; 0x33
 8002f30:	4605      	mov	r5, r0
 8002f32:	f8ad 700e 	strh.w	r7, [sp, #14]
 8002f36:	f7fe f93b 	bl	80011b0 <acc_sensor_reg_read>
 8002f3a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002f3e:	f003 0407 	and.w	r4, r3, #7
 8002f42:	2c01      	cmp	r4, #1
 8002f44:	d046      	beq.n	8002fd4 <acc_a121_cal_session_ack_program+0xb0>
 8002f46:	f013 0f06 	tst.w	r3, #6
 8002f4a:	d129      	bne.n	8002fa0 <acc_a121_cal_session_ack_program+0x7c>
 8002f4c:	2c00      	cmp	r4, #0
 8002f4e:	d138      	bne.n	8002fc2 <acc_a121_cal_session_ack_program+0x9e>
 8002f50:	4e24      	ldr	r6, [pc, #144]	; (8002fe4 <acc_a121_cal_session_ack_program+0xc0>)
 8002f52:	9500      	str	r5, [sp, #0]
 8002f54:	6c37      	ldr	r7, [r6, #64]	; 0x40
 8002f56:	4a24      	ldr	r2, [pc, #144]	; (8002fe8 <acc_a121_cal_session_ack_program+0xc4>)
 8002f58:	4924      	ldr	r1, [pc, #144]	; (8002fec <acc_a121_cal_session_ack_program+0xc8>)
 8002f5a:	4620      	mov	r0, r4
 8002f5c:	47b8      	blx	r7
 8002f5e:	2300      	movs	r3, #0
 8002f60:	f10d 020e 	add.w	r2, sp, #14
 8002f64:	2145      	movs	r1, #69	; 0x45
 8002f66:	4628      	mov	r0, r5
 8002f68:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002f6c:	f7fe f920 	bl	80011b0 <acc_sensor_reg_read>
 8002f70:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002f74:	b95b      	cbnz	r3, 8002f8e <acc_a121_cal_session_ack_program+0x6a>
 8002f76:	6c36      	ldr	r6, [r6, #64]	; 0x40
 8002f78:	4a1d      	ldr	r2, [pc, #116]	; (8002ff0 <acc_a121_cal_session_ack_program+0xcc>)
 8002f7a:	491c      	ldr	r1, [pc, #112]	; (8002fec <acc_a121_cal_session_ack_program+0xc8>)
 8002f7c:	462b      	mov	r3, r5
 8002f7e:	2000      	movs	r0, #0
 8002f80:	47b0      	blx	r6
 8002f82:	2c02      	cmp	r4, #2
 8002f84:	d102      	bne.n	8002f8c <acc_a121_cal_session_ack_program+0x68>
 8002f86:	2001      	movs	r0, #1
 8002f88:	b005      	add	sp, #20
 8002f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f8c:	4e15      	ldr	r6, [pc, #84]	; (8002fe4 <acc_a121_cal_session_ack_program+0xc0>)
 8002f8e:	6c35      	ldr	r5, [r6, #64]	; 0x40
 8002f90:	4a18      	ldr	r2, [pc, #96]	; (8002ff4 <acc_a121_cal_session_ack_program+0xd0>)
 8002f92:	4919      	ldr	r1, [pc, #100]	; (8002ff8 <acc_a121_cal_session_ack_program+0xd4>)
 8002f94:	4623      	mov	r3, r4
 8002f96:	2000      	movs	r0, #0
 8002f98:	47a8      	blx	r5
 8002f9a:	2000      	movs	r0, #0
 8002f9c:	b005      	add	sp, #20
 8002f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002fa0:	1ea2      	subs	r2, r4, #2
 8002fa2:	2a01      	cmp	r2, #1
 8002fa4:	d80d      	bhi.n	8002fc2 <acc_a121_cal_session_ack_program+0x9e>
 8002fa6:	f10d 020e 	add.w	r2, sp, #14
 8002faa:	2145      	movs	r1, #69	; 0x45
 8002fac:	4628      	mov	r0, r5
 8002fae:	f8ad 700e 	strh.w	r7, [sp, #14]
 8002fb2:	f7fe f8fd 	bl	80011b0 <acc_sensor_reg_read>
 8002fb6:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d1e1      	bne.n	8002f82 <acc_a121_cal_session_ack_program+0x5e>
 8002fbe:	4e09      	ldr	r6, [pc, #36]	; (8002fe4 <acc_a121_cal_session_ack_program+0xc0>)
 8002fc0:	e7d9      	b.n	8002f76 <acc_a121_cal_session_ack_program+0x52>
 8002fc2:	4e08      	ldr	r6, [pc, #32]	; (8002fe4 <acc_a121_cal_session_ack_program+0xc0>)
 8002fc4:	9500      	str	r5, [sp, #0]
 8002fc6:	6c34      	ldr	r4, [r6, #64]	; 0x40
 8002fc8:	4a0c      	ldr	r2, [pc, #48]	; (8002ffc <acc_a121_cal_session_ack_program+0xd8>)
 8002fca:	4908      	ldr	r1, [pc, #32]	; (8002fec <acc_a121_cal_session_ack_program+0xc8>)
 8002fcc:	2000      	movs	r0, #0
 8002fce:	47a0      	blx	r4
 8002fd0:	2400      	movs	r4, #0
 8002fd2:	e7c4      	b.n	8002f5e <acc_a121_cal_session_ack_program+0x3a>
 8002fd4:	4e03      	ldr	r6, [pc, #12]	; (8002fe4 <acc_a121_cal_session_ack_program+0xc0>)
 8002fd6:	9500      	str	r5, [sp, #0]
 8002fd8:	4638      	mov	r0, r7
 8002fda:	4a09      	ldr	r2, [pc, #36]	; (8003000 <acc_a121_cal_session_ack_program+0xdc>)
 8002fdc:	6c37      	ldr	r7, [r6, #64]	; 0x40
 8002fde:	4903      	ldr	r1, [pc, #12]	; (8002fec <acc_a121_cal_session_ack_program+0xc8>)
 8002fe0:	47b8      	blx	r7
 8002fe2:	e7bc      	b.n	8002f5e <acc_a121_cal_session_ack_program+0x3a>
 8002fe4:	200000ac 	.word	0x200000ac
 8002fe8:	0800aa6c 	.word	0x0800aa6c
 8002fec:	0800a634 	.word	0x0800a634
 8002ff0:	0800ab04 	.word	0x0800ab04
 8002ff4:	0800ab38 	.word	0x0800ab38
 8002ff8:	0800ab80 	.word	0x0800ab80
 8002ffc:	0800aad0 	.word	0x0800aad0
 8003000:	0800aa9c 	.word	0x0800aa9c

08003004 <acc_sensor_a121_lut_buffer_write.constprop.0>:
 8003004:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003008:	4c16      	ldr	r4, [pc, #88]	; (8003064 <acc_sensor_a121_lut_buffer_write.constprop.0+0x60>)
 800300a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800300c:	8e27      	ldrh	r7, [r4, #48]	; 0x30
 800300e:	3a04      	subs	r2, #4
 8003010:	3f04      	subs	r7, #4
 8003012:	0852      	lsrs	r2, r2, #1
 8003014:	087f      	lsrs	r7, r7, #1
 8003016:	4297      	cmp	r7, r2
 8003018:	460d      	mov	r5, r1
 800301a:	4681      	mov	r9, r0
 800301c:	4698      	mov	r8, r3
 800301e:	bf28      	it	cs
 8003020:	4617      	movcs	r7, r2
 8003022:	f101 0a04 	add.w	sl, r1, #4
 8003026:	2400      	movs	r4, #0
 8003028:	1b33      	subs	r3, r6, r4
 800302a:	42bb      	cmp	r3, r7
 800302c:	bf28      	it	cs
 800302e:	463b      	movcs	r3, r7
 8003030:	ea6f 4184 	mvn.w	r1, r4, lsl #18
 8003034:	1e5a      	subs	r2, r3, #1
 8003036:	ea6f 4191 	mvn.w	r1, r1, lsr #18
 800303a:	469b      	mov	fp, r3
 800303c:	806a      	strh	r2, [r5, #2]
 800303e:	8029      	strh	r1, [r5, #0]
 8003040:	005a      	lsls	r2, r3, #1
 8003042:	eb08 0144 	add.w	r1, r8, r4, lsl #1
 8003046:	4650      	mov	r0, sl
 8003048:	441c      	add	r4, r3
 800304a:	f003 ffbb 	bl	8006fc4 <memcpy>
 800304e:	f10b 0202 	add.w	r2, fp, #2
 8003052:	2300      	movs	r3, #0
 8003054:	4629      	mov	r1, r5
 8003056:	4648      	mov	r0, r9
 8003058:	f7fd ff8e 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 800305c:	42a6      	cmp	r6, r4
 800305e:	d8e3      	bhi.n	8003028 <acc_sensor_a121_lut_buffer_write.constprop.0+0x24>
 8003060:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003064:	200000ac 	.word	0x200000ac

08003068 <adl_data_new_line_test>:
 8003068:	b138      	cbz	r0, 800307a <adl_data_new_line_test+0x12>
 800306a:	b538      	push	{r3, r4, r5, lr}
 800306c:	fbb0 f3f1 	udiv	r3, r0, r1
 8003070:	fb01 0113 	mls	r1, r1, r3, r0
 8003074:	b119      	cbz	r1, 800307e <adl_data_new_line_test+0x16>
 8003076:	4610      	mov	r0, r2
 8003078:	bd38      	pop	{r3, r4, r5, pc}
 800307a:	4610      	mov	r0, r2
 800307c:	4770      	bx	lr
 800307e:	4c0a      	ldr	r4, [pc, #40]	; (80030a8 <adl_data_new_line_test+0x40>)
 8003080:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8003084:	2b01      	cmp	r3, #1
 8003086:	d905      	bls.n	8003094 <adl_data_new_line_test+0x2c>
 8003088:	6c25      	ldr	r5, [r4, #64]	; 0x40
 800308a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800308c:	4a07      	ldr	r2, [pc, #28]	; (80030ac <adl_data_new_line_test+0x44>)
 800308e:	4908      	ldr	r1, [pc, #32]	; (80030b0 <adl_data_new_line_test+0x48>)
 8003090:	2002      	movs	r0, #2
 8003092:	47a8      	blx	r5
 8003094:	4b07      	ldr	r3, [pc, #28]	; (80030b4 <adl_data_new_line_test+0x4c>)
 8003096:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003098:	cb03      	ldmia	r3!, {r0, r1}
 800309a:	781b      	ldrb	r3, [r3, #0]
 800309c:	6010      	str	r0, [r2, #0]
 800309e:	7213      	strb	r3, [r2, #8]
 80030a0:	6051      	str	r1, [r2, #4]
 80030a2:	2209      	movs	r2, #9
 80030a4:	4610      	mov	r0, r2
 80030a6:	bd38      	pop	{r3, r4, r5, pc}
 80030a8:	200000ac 	.word	0x200000ac
 80030ac:	0800b618 	.word	0x0800b618
 80030b0:	0800a42c 	.word	0x0800a42c
 80030b4:	0800aba0 	.word	0x0800aba0

080030b8 <diagnostic_log_data_i8>:
 80030b8:	4b1b      	ldr	r3, [pc, #108]	; (8003128 <diagnostic_log_data_i8+0x70>)
 80030ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030be:	4e1b      	ldr	r6, [pc, #108]	; (800312c <diagnostic_log_data_i8+0x74>)
 80030c0:	4605      	mov	r5, r0
 80030c2:	460c      	mov	r4, r1
 80030c4:	cb03      	ldmia	r3!, {r0, r1}
 80030c6:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80030c8:	781b      	ldrb	r3, [r3, #0]
 80030ca:	7213      	strb	r3, [r2, #8]
 80030cc:	6010      	str	r0, [r2, #0]
 80030ce:	6051      	str	r1, [r2, #4]
 80030d0:	b1fc      	cbz	r4, 8003112 <diagnostic_log_data_i8+0x5a>
 80030d2:	192c      	adds	r4, r5, r4
 80030d4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80030d8:	3c01      	subs	r4, #1
 80030da:	f1c5 0501 	rsb	r5, r5, #1
 80030de:	2209      	movs	r2, #9
 80030e0:	272d      	movs	r7, #45	; 0x2d
 80030e2:	2112      	movs	r1, #18
 80030e4:	eb05 0008 	add.w	r0, r5, r8
 80030e8:	f7ff ffbe 	bl	8003068 <adl_data_new_line_test>
 80030ec:	f918 3f01 	ldrsb.w	r3, [r8, #1]!
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	4601      	mov	r1, r0
 80030f4:	da04      	bge.n	8003100 <diagnostic_log_data_i8+0x48>
 80030f6:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80030f8:	541f      	strb	r7, [r3, r0]
 80030fa:	f998 3000 	ldrsb.w	r3, [r8]
 80030fe:	3101      	adds	r1, #1
 8003100:	2b00      	cmp	r3, #0
 8003102:	bfd8      	it	le
 8003104:	425b      	negle	r3, r3
 8003106:	b298      	uxth	r0, r3
 8003108:	f7fd fc80 	bl	8000a0c <adl_add_value_to_buffer>
 800310c:	45a0      	cmp	r8, r4
 800310e:	4602      	mov	r2, r0
 8003110:	d1e7      	bne.n	80030e2 <diagnostic_log_data_i8+0x2a>
 8003112:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003116:	2b01      	cmp	r3, #1
 8003118:	d903      	bls.n	8003122 <diagnostic_log_data_i8+0x6a>
 800311a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800311e:	f7fd bc43 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 8003122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003126:	bf00      	nop
 8003128:	0800aba0 	.word	0x0800aba0
 800312c:	200000ac 	.word	0x200000ac

08003130 <diagnostic_log_data_u8>:
 8003130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003132:	4b13      	ldr	r3, [pc, #76]	; (8003180 <diagnostic_log_data_u8+0x50>)
 8003134:	4e13      	ldr	r6, [pc, #76]	; (8003184 <diagnostic_log_data_u8+0x54>)
 8003136:	4607      	mov	r7, r0
 8003138:	460d      	mov	r5, r1
 800313a:	cb03      	ldmia	r3!, {r0, r1}
 800313c:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800313e:	781b      	ldrb	r3, [r3, #0]
 8003140:	7213      	strb	r3, [r2, #8]
 8003142:	6010      	str	r0, [r2, #0]
 8003144:	6051      	str	r1, [r2, #4]
 8003146:	b18d      	cbz	r5, 800316c <diagnostic_log_data_u8+0x3c>
 8003148:	197d      	adds	r5, r7, r5
 800314a:	1e7c      	subs	r4, r7, #1
 800314c:	3d01      	subs	r5, #1
 800314e:	f1c7 0701 	rsb	r7, r7, #1
 8003152:	2209      	movs	r2, #9
 8003154:	2116      	movs	r1, #22
 8003156:	1938      	adds	r0, r7, r4
 8003158:	f7ff ff86 	bl	8003068 <adl_data_new_line_test>
 800315c:	4601      	mov	r1, r0
 800315e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8003162:	f7fd fc53 	bl	8000a0c <adl_add_value_to_buffer>
 8003166:	42ac      	cmp	r4, r5
 8003168:	4602      	mov	r2, r0
 800316a:	d1f3      	bne.n	8003154 <diagnostic_log_data_u8+0x24>
 800316c:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003170:	2b01      	cmp	r3, #1
 8003172:	d903      	bls.n	800317c <diagnostic_log_data_u8+0x4c>
 8003174:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003178:	f7fd bc16 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 800317c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800317e:	bf00      	nop
 8003180:	0800aba0 	.word	0x0800aba0
 8003184:	200000ac 	.word	0x200000ac

08003188 <diagnostic_log_data_i16>:
 8003188:	4b1a      	ldr	r3, [pc, #104]	; (80031f4 <diagnostic_log_data_i16+0x6c>)
 800318a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800318e:	4e1a      	ldr	r6, [pc, #104]	; (80031f8 <diagnostic_log_data_i16+0x70>)
 8003190:	4604      	mov	r4, r0
 8003192:	460d      	mov	r5, r1
 8003194:	cb03      	ldmia	r3!, {r0, r1}
 8003196:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003198:	781b      	ldrb	r3, [r3, #0]
 800319a:	7213      	strb	r3, [r2, #8]
 800319c:	6010      	str	r0, [r2, #0]
 800319e:	6051      	str	r1, [r2, #4]
 80031a0:	b1ed      	cbz	r5, 80031de <diagnostic_log_data_i16+0x56>
 80031a2:	3c02      	subs	r4, #2
 80031a4:	f04f 0800 	mov.w	r8, #0
 80031a8:	2209      	movs	r2, #9
 80031aa:	272d      	movs	r7, #45	; 0x2d
 80031ac:	210c      	movs	r1, #12
 80031ae:	4640      	mov	r0, r8
 80031b0:	f7ff ff5a 	bl	8003068 <adl_data_new_line_test>
 80031b4:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	4601      	mov	r1, r0
 80031bc:	da04      	bge.n	80031c8 <diagnostic_log_data_i16+0x40>
 80031be:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80031c0:	541f      	strb	r7, [r3, r0]
 80031c2:	f9b4 3000 	ldrsh.w	r3, [r4]
 80031c6:	3101      	adds	r1, #1
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	bfd8      	it	le
 80031cc:	425b      	negle	r3, r3
 80031ce:	b298      	uxth	r0, r3
 80031d0:	f7fd fc1c 	bl	8000a0c <adl_add_value_to_buffer>
 80031d4:	f108 0801 	add.w	r8, r8, #1
 80031d8:	4545      	cmp	r5, r8
 80031da:	4602      	mov	r2, r0
 80031dc:	d1e6      	bne.n	80031ac <diagnostic_log_data_i16+0x24>
 80031de:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80031e2:	2b01      	cmp	r3, #1
 80031e4:	d903      	bls.n	80031ee <diagnostic_log_data_i16+0x66>
 80031e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80031ea:	f7fd bbdd 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 80031ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031f2:	bf00      	nop
 80031f4:	0800aba0 	.word	0x0800aba0
 80031f8:	200000ac 	.word	0x200000ac

080031fc <diagnostic_log_data_u16>:
 80031fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031fe:	4b12      	ldr	r3, [pc, #72]	; (8003248 <diagnostic_log_data_u16+0x4c>)
 8003200:	4e12      	ldr	r6, [pc, #72]	; (800324c <diagnostic_log_data_u16+0x50>)
 8003202:	4605      	mov	r5, r0
 8003204:	460f      	mov	r7, r1
 8003206:	cb03      	ldmia	r3!, {r0, r1}
 8003208:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800320a:	781b      	ldrb	r3, [r3, #0]
 800320c:	7213      	strb	r3, [r2, #8]
 800320e:	6010      	str	r0, [r2, #0]
 8003210:	6051      	str	r1, [r2, #4]
 8003212:	b17f      	cbz	r7, 8003234 <diagnostic_log_data_u16+0x38>
 8003214:	3d02      	subs	r5, #2
 8003216:	2400      	movs	r4, #0
 8003218:	2209      	movs	r2, #9
 800321a:	210f      	movs	r1, #15
 800321c:	4620      	mov	r0, r4
 800321e:	f7ff ff23 	bl	8003068 <adl_data_new_line_test>
 8003222:	4601      	mov	r1, r0
 8003224:	f835 0f02 	ldrh.w	r0, [r5, #2]!
 8003228:	f7fd fbf0 	bl	8000a0c <adl_add_value_to_buffer>
 800322c:	3401      	adds	r4, #1
 800322e:	42a7      	cmp	r7, r4
 8003230:	4602      	mov	r2, r0
 8003232:	d1f2      	bne.n	800321a <diagnostic_log_data_u16+0x1e>
 8003234:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003238:	2b01      	cmp	r3, #1
 800323a:	d903      	bls.n	8003244 <diagnostic_log_data_u16+0x48>
 800323c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003240:	f7fd bbb2 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 8003244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003246:	bf00      	nop
 8003248:	0800aba0 	.word	0x0800aba0
 800324c:	200000ac 	.word	0x200000ac

08003250 <diagnostic_log_data_i32>:
 8003250:	4b19      	ldr	r3, [pc, #100]	; (80032b8 <diagnostic_log_data_i32+0x68>)
 8003252:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003256:	4e19      	ldr	r6, [pc, #100]	; (80032bc <diagnostic_log_data_i32+0x6c>)
 8003258:	4604      	mov	r4, r0
 800325a:	460d      	mov	r5, r1
 800325c:	cb03      	ldmia	r3!, {r0, r1}
 800325e:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	7213      	strb	r3, [r2, #8]
 8003264:	6010      	str	r0, [r2, #0]
 8003266:	6051      	str	r1, [r2, #4]
 8003268:	b1e5      	cbz	r5, 80032a4 <diagnostic_log_data_i32+0x54>
 800326a:	3c04      	subs	r4, #4
 800326c:	f04f 0800 	mov.w	r8, #0
 8003270:	2209      	movs	r2, #9
 8003272:	272d      	movs	r7, #45	; 0x2d
 8003274:	2107      	movs	r1, #7
 8003276:	4640      	mov	r0, r8
 8003278:	f7ff fef6 	bl	8003068 <adl_data_new_line_test>
 800327c:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8003280:	2b00      	cmp	r3, #0
 8003282:	f108 0801 	add.w	r8, r8, #1
 8003286:	4601      	mov	r1, r0
 8003288:	da03      	bge.n	8003292 <diagnostic_log_data_i32+0x42>
 800328a:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 800328c:	541f      	strb	r7, [r3, r0]
 800328e:	6823      	ldr	r3, [r4, #0]
 8003290:	3101      	adds	r1, #1
 8003292:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
 8003296:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
 800329a:	f7fd fbb7 	bl	8000a0c <adl_add_value_to_buffer>
 800329e:	4545      	cmp	r5, r8
 80032a0:	4602      	mov	r2, r0
 80032a2:	d1e7      	bne.n	8003274 <diagnostic_log_data_i32+0x24>
 80032a4:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80032a8:	2b01      	cmp	r3, #1
 80032aa:	d903      	bls.n	80032b4 <diagnostic_log_data_i32+0x64>
 80032ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80032b0:	f7fd bb7a 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 80032b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032b8:	0800aba0 	.word	0x0800aba0
 80032bc:	200000ac 	.word	0x200000ac

080032c0 <diagnostic_log_data_u32>:
 80032c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032c2:	4b12      	ldr	r3, [pc, #72]	; (800330c <diagnostic_log_data_u32+0x4c>)
 80032c4:	4e12      	ldr	r6, [pc, #72]	; (8003310 <diagnostic_log_data_u32+0x50>)
 80032c6:	4605      	mov	r5, r0
 80032c8:	460f      	mov	r7, r1
 80032ca:	cb03      	ldmia	r3!, {r0, r1}
 80032cc:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80032ce:	781b      	ldrb	r3, [r3, #0]
 80032d0:	7213      	strb	r3, [r2, #8]
 80032d2:	6010      	str	r0, [r2, #0]
 80032d4:	6051      	str	r1, [r2, #4]
 80032d6:	b17f      	cbz	r7, 80032f8 <diagnostic_log_data_u32+0x38>
 80032d8:	3d04      	subs	r5, #4
 80032da:	2400      	movs	r4, #0
 80032dc:	2209      	movs	r2, #9
 80032de:	2108      	movs	r1, #8
 80032e0:	4620      	mov	r0, r4
 80032e2:	f7ff fec1 	bl	8003068 <adl_data_new_line_test>
 80032e6:	4601      	mov	r1, r0
 80032e8:	f855 0f04 	ldr.w	r0, [r5, #4]!
 80032ec:	f7fd fb8e 	bl	8000a0c <adl_add_value_to_buffer>
 80032f0:	3401      	adds	r4, #1
 80032f2:	42a7      	cmp	r7, r4
 80032f4:	4602      	mov	r2, r0
 80032f6:	d1f2      	bne.n	80032de <diagnostic_log_data_u32+0x1e>
 80032f8:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	d903      	bls.n	8003308 <diagnostic_log_data_u32+0x48>
 8003300:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003304:	f7fd bb50 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 8003308:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800330a:	bf00      	nop
 800330c:	0800aba0 	.word	0x0800aba0
 8003310:	200000ac 	.word	0x200000ac

08003314 <internal_buffer_processed_read.part.0.constprop.0>:
 8003314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003318:	4b23      	ldr	r3, [pc, #140]	; (80033a8 <internal_buffer_processed_read.part.0.constprop.0+0x94>)
 800331a:	f8b3 9030 	ldrh.w	r9, [r3, #48]	; 0x30
 800331e:	b083      	sub	sp, #12
 8003320:	2300      	movs	r3, #0
 8003322:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8003326:	e9cd 3300 	strd	r3, r3, [sp]
 800332a:	4688      	mov	r8, r1
 800332c:	4692      	mov	sl, r2
 800332e:	461e      	mov	r6, r3
 8003330:	4683      	mov	fp, r0
 8003332:	f1a9 0904 	sub.w	r9, r9, #4
 8003336:	460d      	mov	r5, r1
 8003338:	4617      	mov	r7, r2
 800333a:	e024      	b.n	8003386 <internal_buffer_processed_read.part.0.constprop.0+0x72>
 800333c:	f248 0200 	movw	r2, #32768	; 0x8000
 8003340:	1e63      	subs	r3, r4, #1
 8003342:	802a      	strh	r2, [r5, #0]
 8003344:	f04f 0200 	mov.w	r2, #0
 8003348:	806e      	strh	r6, [r5, #2]
 800334a:	80ea      	strh	r2, [r5, #6]
 800334c:	80ab      	strh	r3, [r5, #4]
 800334e:	0062      	lsls	r2, r4, #1
 8003350:	2100      	movs	r1, #0
 8003352:	f105 0008 	add.w	r0, r5, #8
 8003356:	f003 fcfa 	bl	8006d4e <memset>
 800335a:	4629      	mov	r1, r5
 800335c:	2301      	movs	r3, #1
 800335e:	4658      	mov	r0, fp
 8003360:	1d22      	adds	r2, r4, #4
 8003362:	f7fd fe09 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8003366:	466b      	mov	r3, sp
 8003368:	cb03      	ldmia	r3!, {r0, r1}
 800336a:	4426      	add	r6, r4
 800336c:	6069      	str	r1, [r5, #4]
 800336e:	6028      	str	r0, [r5, #0]
 8003370:	eb08 0546 	add.w	r5, r8, r6, lsl #1
 8003374:	f858 0016 	ldr.w	r0, [r8, r6, lsl #1]
 8003378:	6869      	ldr	r1, [r5, #4]
 800337a:	466b      	mov	r3, sp
 800337c:	4556      	cmp	r6, sl
 800337e:	c303      	stmia	r3!, {r0, r1}
 8003380:	eba7 0704 	sub.w	r7, r7, r4
 8003384:	d20a      	bcs.n	800339c <internal_buffer_processed_read.part.0.constprop.0+0x88>
 8003386:	45b9      	cmp	r9, r7
 8003388:	464c      	mov	r4, r9
 800338a:	bf28      	it	cs
 800338c:	463c      	movcs	r4, r7
 800338e:	45b9      	cmp	r9, r7
 8003390:	d2d4      	bcs.n	800333c <internal_buffer_processed_read.part.0.constprop.0+0x28>
 8003392:	e000      	b.n	8003396 <internal_buffer_processed_read.part.0.constprop.0+0x82>
 8003394:	3c01      	subs	r4, #1
 8003396:	07e3      	lsls	r3, r4, #31
 8003398:	d4fc      	bmi.n	8003394 <internal_buffer_processed_read.part.0.constprop.0+0x80>
 800339a:	e7cf      	b.n	800333c <internal_buffer_processed_read.part.0.constprop.0+0x28>
 800339c:	f108 0008 	add.w	r0, r8, #8
 80033a0:	b003      	add	sp, #12
 80033a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033a6:	bf00      	nop
 80033a8:	200000ac 	.word	0x200000ac

080033ac <acc_a121_cal_session_get_10_ps_wavelet_program_data>:
 80033ac:	b510      	push	{r4, lr}
 80033ae:	4614      	mov	r4, r2
 80033b0:	f44f 7240 	mov.w	r2, #768	; 0x300
 80033b4:	f7ff ffae 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 80033b8:	6020      	str	r0, [r4, #0]
 80033ba:	bd10      	pop	{r4, pc}

080033bc <test_clock_and_supply_test.isra.0>:
 80033bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033c0:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
 80033c4:	f10d 021e 	add.w	r2, sp, #30
 80033c8:	4604      	mov	r4, r0
 80033ca:	460d      	mov	r5, r1
 80033cc:	6800      	ldr	r0, [r0, #0]
 80033ce:	2132      	movs	r1, #50	; 0x32
 80033d0:	f7fd feee 	bl	80011b0 <acc_sensor_reg_read>
 80033d4:	4862      	ldr	r0, [pc, #392]	; (8003560 <test_clock_and_supply_test.isra.0+0x1a4>)
 80033d6:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80033da:	f7fd fb07 	bl	80009ec <acc_diagnostic_log_scalar>
 80033de:	f8bd 001e 	ldrh.w	r0, [sp, #30]
 80033e2:	b9a0      	cbnz	r0, 800340e <test_clock_and_supply_test.isra.0+0x52>
 80033e4:	4b5f      	ldr	r3, [pc, #380]	; (8003564 <test_clock_and_supply_test.isra.0+0x1a8>)
 80033e6:	4960      	ldr	r1, [pc, #384]	; (8003568 <test_clock_and_supply_test.isra.0+0x1ac>)
 80033e8:	4a60      	ldr	r2, [pc, #384]	; (800356c <test_clock_and_supply_test.isra.0+0x1b0>)
 80033ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033ec:	4607      	mov	r7, r0
 80033ee:	f04f 0b04 	mov.w	fp, #4
 80033f2:	4798      	blx	r3
 80033f4:	4639      	mov	r1, r7
 80033f6:	485e      	ldr	r0, [pc, #376]	; (8003570 <test_clock_and_supply_test.isra.0+0x1b4>)
 80033f8:	f7fd faf8 	bl	80009ec <acc_diagnostic_log_scalar>
 80033fc:	485d      	ldr	r0, [pc, #372]	; (8003574 <test_clock_and_supply_test.isra.0+0x1b8>)
 80033fe:	4639      	mov	r1, r7
 8003400:	f7fd faf4 	bl	80009ec <acc_diagnostic_log_scalar>
 8003404:	4658      	mov	r0, fp
 8003406:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
 800340a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800340e:	6829      	ldr	r1, [r5, #0]
 8003410:	6820      	ldr	r0, [r4, #0]
 8003412:	4f59      	ldr	r7, [pc, #356]	; (8003578 <test_clock_and_supply_test.isra.0+0x1bc>)
 8003414:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003418:	f7ff ff7c 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 800341c:	4682      	mov	sl, r0
 800341e:	4857      	ldr	r0, [pc, #348]	; (800357c <test_clock_and_supply_test.isra.0+0x1c0>)
 8003420:	f7fd fa8c 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003424:	ae48      	add	r6, sp, #288	; 0x120
 8003426:	4650      	mov	r0, sl
 8003428:	f44f 7100 	mov.w	r1, #512	; 0x200
 800342c:	f7fd fad6 	bl	80009dc <acc_diagnostic_log_data_u16>
 8003430:	f1aa 0402 	sub.w	r4, sl, #2
 8003434:	4631      	mov	r1, r6
 8003436:	ad88      	add	r5, sp, #544	; 0x220
 8003438:	2000      	movs	r0, #0
 800343a:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 800343e:	fb07 f203 	mul.w	r2, r7, r3
 8003442:	2b00      	cmp	r3, #0
 8003444:	bfa8      	it	ge
 8003446:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 800344a:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800344e:	bfa8      	it	ge
 8003450:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 8003454:	f1c2 0200 	rsb	r2, r2, #0
 8003458:	bfb4      	ite	lt
 800345a:	b213      	sxthlt	r3, r2
 800345c:	131b      	asrge	r3, r3, #12
 800345e:	f821 3b02 	strh.w	r3, [r1], #2
 8003462:	42a9      	cmp	r1, r5
 8003464:	4418      	add	r0, r3
 8003466:	d1e8      	bne.n	800343a <test_clock_and_supply_test.isra.0+0x7e>
 8003468:	2800      	cmp	r0, #0
 800346a:	bfb8      	it	lt
 800346c:	307f      	addlt	r0, #127	; 0x7f
 800346e:	f340 15cf 	sbfx	r5, r0, #7, #16
 8003472:	4629      	mov	r1, r5
 8003474:	4842      	ldr	r0, [pc, #264]	; (8003580 <test_clock_and_supply_test.isra.0+0x1c4>)
 8003476:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8003590 <test_clock_and_supply_test.isra.0+0x1d4>
 800347a:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 8003578 <test_clock_and_supply_test.isra.0+0x1bc>
 800347e:	f7fd fab5 	bl	80009ec <acc_diagnostic_log_scalar>
 8003482:	4840      	ldr	r0, [pc, #256]	; (8003584 <test_clock_and_supply_test.isra.0+0x1c8>)
 8003484:	f7fd fa5a 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003488:	2180      	movs	r1, #128	; 0x80
 800348a:	4630      	mov	r0, r6
 800348c:	f7fd fa9e 	bl	80009cc <acc_diagnostic_log_data_i16>
 8003490:	2301      	movs	r3, #1
 8003492:	461f      	mov	r7, r3
 8003494:	f44f 6cfa 	mov.w	ip, #2000	; 0x7d0
 8003498:	f44f 60c8 	mov.w	r0, #1600	; 0x640
 800349c:	f04f 0b03 	mov.w	fp, #3
 80034a0:	4619      	mov	r1, r3
 80034a2:	eb0a 2101 	add.w	r1, sl, r1, lsl #8
 80034a6:	3902      	subs	r1, #2
 80034a8:	aa08      	add	r2, sp, #32
 80034aa:	f647 74ff 	movw	r4, #32767	; 0x7fff
 80034ae:	f931 3f02 	ldrsh.w	r3, [r1, #2]!
 80034b2:	fb08 fe03 	mul.w	lr, r8, r3
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	bfa8      	it	ge
 80034ba:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 80034be:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 80034c2:	bfa8      	it	ge
 80034c4:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 80034c8:	f1ce 0e00 	rsb	lr, lr, #0
 80034cc:	bfb4      	ite	lt
 80034ce:	fa0f f38e 	sxthlt.w	r3, lr
 80034d2:	131b      	asrge	r3, r3, #12
 80034d4:	442b      	add	r3, r5
 80034d6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80034da:	02db      	lsls	r3, r3, #11
 80034dc:	f1c3 0e00 	rsb	lr, r3, #0
 80034e0:	ea4f 3e1e 	mov.w	lr, lr, lsr #12
 80034e4:	f1ce 0e00 	rsb	lr, lr, #0
 80034e8:	bf4c      	ite	mi
 80034ea:	fa0f f38e 	sxthmi.w	r3, lr
 80034ee:	f343 330f 	sbfxpl	r3, r3, #12, #16
 80034f2:	f822 3b02 	strh.w	r3, [r2], #2
 80034f6:	429c      	cmp	r4, r3
 80034f8:	bfa8      	it	ge
 80034fa:	461c      	movge	r4, r3
 80034fc:	4296      	cmp	r6, r2
 80034fe:	b224      	sxth	r4, r4
 8003500:	d1d5      	bne.n	80034ae <test_clock_and_supply_test.isra.0+0xf2>
 8003502:	4284      	cmp	r4, r0
 8003504:	db01      	blt.n	800350a <test_clock_and_supply_test.isra.0+0x14e>
 8003506:	4564      	cmp	r4, ip
 8003508:	dd0f      	ble.n	800352a <test_clock_and_supply_test.isra.0+0x16e>
 800350a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800350e:	e9cd 9c03 	strd	r9, ip, [sp, #12]
 8003512:	4b14      	ldr	r3, [pc, #80]	; (8003564 <test_clock_and_supply_test.isra.0+0x1a8>)
 8003514:	f8cd 9000 	str.w	r9, [sp]
 8003518:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 800351a:	4a1b      	ldr	r2, [pc, #108]	; (8003588 <test_clock_and_supply_test.isra.0+0x1cc>)
 800351c:	4912      	ldr	r1, [pc, #72]	; (8003568 <test_clock_and_supply_test.isra.0+0x1ac>)
 800351e:	464b      	mov	r3, r9
 8003520:	2000      	movs	r0, #0
 8003522:	47b8      	blx	r7
 8003524:	f04f 0b04 	mov.w	fp, #4
 8003528:	2700      	movs	r7, #0
 800352a:	4621      	mov	r1, r4
 800352c:	4648      	mov	r0, r9
 800352e:	f7fd fa5d 	bl	80009ec <acc_diagnostic_log_scalar>
 8003532:	f109 000c 	add.w	r0, r9, #12
 8003536:	f7fd fa01 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 800353a:	2180      	movs	r1, #128	; 0x80
 800353c:	a808      	add	r0, sp, #32
 800353e:	f7fd fa45 	bl	80009cc <acc_diagnostic_log_data_i16>
 8003542:	4b12      	ldr	r3, [pc, #72]	; (800358c <test_clock_and_supply_test.isra.0+0x1d0>)
 8003544:	f109 091c 	add.w	r9, r9, #28
 8003548:	4599      	cmp	r9, r3
 800354a:	d006      	beq.n	800355a <test_clock_and_supply_test.isra.0+0x19e>
 800354c:	f8d9 1014 	ldr.w	r1, [r9, #20]
 8003550:	f9b9 0018 	ldrsh.w	r0, [r9, #24]
 8003554:	f9b9 c01a 	ldrsh.w	ip, [r9, #26]
 8003558:	e7a3      	b.n	80034a2 <test_clock_and_supply_test.isra.0+0xe6>
 800355a:	2101      	movs	r1, #1
 800355c:	e74b      	b.n	80033f6 <test_clock_and_supply_test.isra.0+0x3a>
 800355e:	bf00      	nop
 8003560:	0800abac 	.word	0x0800abac
 8003564:	200000ac 	.word	0x200000ac
 8003568:	0800a7bc 	.word	0x0800a7bc
 800356c:	0800abb8 	.word	0x0800abb8
 8003570:	0800ac80 	.word	0x0800ac80
 8003574:	0800ac94 	.word	0x0800ac94
 8003578:	fffffb50 	.word	0xfffffb50
 800357c:	0800ac0c 	.word	0x0800ac0c
 8003580:	0800ac24 	.word	0x0800ac24
 8003584:	0800ac30 	.word	0x0800ac30
 8003588:	0800ac38 	.word	0x0800ac38
 800358c:	080088c0 	.word	0x080088c0
 8003590:	0800886c 	.word	0x0800886c

08003594 <test_clock_and_supply>:
 8003594:	b530      	push	{r4, r5, lr}
 8003596:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003598:	2b01      	cmp	r3, #1
 800359a:	b083      	sub	sp, #12
 800359c:	4604      	mov	r4, r0
 800359e:	d005      	beq.n	80035ac <test_clock_and_supply+0x18>
 80035a0:	2b02      	cmp	r3, #2
 80035a2:	d02e      	beq.n	8003602 <test_clock_and_supply+0x6e>
 80035a4:	b1eb      	cbz	r3, 80035e2 <test_clock_and_supply+0x4e>
 80035a6:	2000      	movs	r0, #0
 80035a8:	b003      	add	sp, #12
 80035aa:	bd30      	pop	{r4, r5, pc}
 80035ac:	4d1d      	ldr	r5, [pc, #116]	; (8003624 <test_clock_and_supply+0x90>)
 80035ae:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 80035b2:	2b01      	cmp	r3, #1
 80035b4:	d904      	bls.n	80035c0 <test_clock_and_supply+0x2c>
 80035b6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80035b8:	4a1b      	ldr	r2, [pc, #108]	; (8003628 <test_clock_and_supply+0x94>)
 80035ba:	491c      	ldr	r1, [pc, #112]	; (800362c <test_clock_and_supply+0x98>)
 80035bc:	2002      	movs	r0, #2
 80035be:	4798      	blx	r3
 80035c0:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80035c2:	9301      	str	r3, [sp, #4]
 80035c4:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 80035c8:	6820      	ldr	r0, [r4, #0]
 80035ca:	ab01      	add	r3, sp, #4
 80035cc:	f7fd febe 	bl	800134c <acc_cpd_assembly_test_load_program>
 80035d0:	b9e8      	cbnz	r0, 800360e <test_clock_and_supply+0x7a>
 80035d2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80035d4:	4a16      	ldr	r2, [pc, #88]	; (8003630 <test_clock_and_supply+0x9c>)
 80035d6:	4915      	ldr	r1, [pc, #84]	; (800362c <test_clock_and_supply+0x98>)
 80035d8:	2000      	movs	r0, #0
 80035da:	4798      	blx	r3
 80035dc:	2004      	movs	r0, #4
 80035de:	b003      	add	sp, #12
 80035e0:	bd30      	pop	{r4, r5, pc}
 80035e2:	4b10      	ldr	r3, [pc, #64]	; (8003624 <test_clock_and_supply+0x90>)
 80035e4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80035e8:	2a01      	cmp	r2, #1
 80035ea:	d904      	bls.n	80035f6 <test_clock_and_supply+0x62>
 80035ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035ee:	4a11      	ldr	r2, [pc, #68]	; (8003634 <test_clock_and_supply+0xa0>)
 80035f0:	490e      	ldr	r1, [pc, #56]	; (800362c <test_clock_and_supply+0x98>)
 80035f2:	2002      	movs	r0, #2
 80035f4:	4798      	blx	r3
 80035f6:	4810      	ldr	r0, [pc, #64]	; (8003638 <test_clock_and_supply+0xa4>)
 80035f8:	f7fd fa00 	bl	80009fc <acc_diagnostic_log_set_scope>
 80035fc:	2001      	movs	r0, #1
 80035fe:	b003      	add	sp, #12
 8003600:	bd30      	pop	{r4, r5, pc}
 8003602:	f100 010c 	add.w	r1, r0, #12
 8003606:	f7ff fed9 	bl	80033bc <test_clock_and_supply_test.isra.0>
 800360a:	b003      	add	sp, #12
 800360c:	bd30      	pop	{r4, r5, pc}
 800360e:	6820      	ldr	r0, [r4, #0]
 8003610:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 8003614:	f7fd fde2 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8003618:	2800      	cmp	r0, #0
 800361a:	d0da      	beq.n	80035d2 <test_clock_and_supply+0x3e>
 800361c:	2002      	movs	r0, #2
 800361e:	b003      	add	sp, #12
 8003620:	bd30      	pop	{r4, r5, pc}
 8003622:	bf00      	nop
 8003624:	200000ac 	.word	0x200000ac
 8003628:	0800ace0 	.word	0x0800ace0
 800362c:	0800a7bc 	.word	0x0800a7bc
 8003630:	0800ad00 	.word	0x0800ad00
 8003634:	0800aca8 	.word	0x0800aca8
 8003638:	0800acc8 	.word	0x0800acc8

0800363c <acc_confprogram_live_patch.constprop.0>:
 800363c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003640:	f8df b11c 	ldr.w	fp, [pc, #284]	; 8003760 <acc_confprogram_live_patch.constprop.0+0x124>
 8003644:	f89b 4048 	ldrb.w	r4, [fp, #72]	; 0x48
 8003648:	b089      	sub	sp, #36	; 0x24
 800364a:	2c03      	cmp	r4, #3
 800364c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800364e:	4680      	mov	r8, r0
 8003650:	4689      	mov	r9, r1
 8003652:	4615      	mov	r5, r2
 8003654:	461e      	mov	r6, r3
 8003656:	d906      	bls.n	8003666 <acc_confprogram_live_patch.constprop.0+0x2a>
 8003658:	f8db 4040 	ldr.w	r4, [fp, #64]	; 0x40
 800365c:	4a3c      	ldr	r2, [pc, #240]	; (8003750 <acc_confprogram_live_patch.constprop.0+0x114>)
 800365e:	493d      	ldr	r1, [pc, #244]	; (8003754 <acc_confprogram_live_patch.constprop.0+0x118>)
 8003660:	9700      	str	r7, [sp, #0]
 8003662:	2004      	movs	r0, #4
 8003664:	47a0      	blx	r4
 8003666:	eb05 06c6 	add.w	r6, r5, r6, lsl #3
 800366a:	8873      	ldrh	r3, [r6, #2]
 800366c:	b31b      	cbz	r3, 80036b6 <acc_confprogram_live_patch.constprop.0+0x7a>
 800366e:	2500      	movs	r5, #0
 8003670:	6873      	ldr	r3, [r6, #4]
 8003672:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8003676:	f3c4 7001 	ubfx	r0, r4, #28, #2
 800367a:	2801      	cmp	r0, #1
 800367c:	d00c      	beq.n	8003698 <acc_confprogram_live_patch.constprop.0+0x5c>
 800367e:	2802      	cmp	r0, #2
 8003680:	d032      	beq.n	80036e8 <acc_confprogram_live_patch.constprop.0+0xac>
 8003682:	b1e0      	cbz	r0, 80036be <acc_confprogram_live_patch.constprop.0+0x82>
 8003684:	f8db 3040 	ldr.w	r3, [fp, #64]	; 0x40
 8003688:	4a33      	ldr	r2, [pc, #204]	; (8003758 <acc_confprogram_live_patch.constprop.0+0x11c>)
 800368a:	4932      	ldr	r1, [pc, #200]	; (8003754 <acc_confprogram_live_patch.constprop.0+0x118>)
 800368c:	2000      	movs	r0, #0
 800368e:	4798      	blx	r3
 8003690:	2000      	movs	r0, #0
 8003692:	b009      	add	sp, #36	; 0x24
 8003694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003698:	1e3b      	subs	r3, r7, #0
 800369a:	bf18      	it	ne
 800369c:	2301      	movne	r3, #1
 800369e:	9300      	str	r3, [sp, #0]
 80036a0:	b2a2      	uxth	r2, r4
 80036a2:	f3c4 4303 	ubfx	r3, r4, #16, #4
 80036a6:	4649      	mov	r1, r9
 80036a8:	4640      	mov	r0, r8
 80036aa:	f7fd fcb5 	bl	8001018 <acc_confprogram_modify_runif_sensor.constprop.0>
 80036ae:	8873      	ldrh	r3, [r6, #2]
 80036b0:	3501      	adds	r5, #1
 80036b2:	429d      	cmp	r5, r3
 80036b4:	d3dc      	bcc.n	8003670 <acc_confprogram_live_patch.constprop.0+0x34>
 80036b6:	2001      	movs	r0, #1
 80036b8:	b009      	add	sp, #36	; 0x24
 80036ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036be:	f3c4 5a44 	ubfx	sl, r4, #21, #5
 80036c2:	2301      	movs	r3, #1
 80036c4:	fa03 f30a 	lsl.w	r3, r3, sl
 80036c8:	429f      	cmp	r7, r3
 80036ca:	d311      	bcc.n	80036f0 <acc_confprogram_live_patch.constprop.0+0xb4>
 80036cc:	3b01      	subs	r3, #1
 80036ce:	e9cd 7300 	strd	r7, r3, [sp]
 80036d2:	f8db 5040 	ldr.w	r5, [fp, #64]	; 0x40
 80036d6:	4a21      	ldr	r2, [pc, #132]	; (800375c <acc_confprogram_live_patch.constprop.0+0x120>)
 80036d8:	491e      	ldr	r1, [pc, #120]	; (8003754 <acc_confprogram_live_patch.constprop.0+0x118>)
 80036da:	9003      	str	r0, [sp, #12]
 80036dc:	b2a3      	uxth	r3, r4
 80036de:	47a8      	blx	r5
 80036e0:	9803      	ldr	r0, [sp, #12]
 80036e2:	b009      	add	sp, #36	; 0x24
 80036e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036e8:	fab7 f387 	clz	r3, r7
 80036ec:	095b      	lsrs	r3, r3, #5
 80036ee:	e7d6      	b.n	800369e <acc_confprogram_live_patch.constprop.0+0x62>
 80036f0:	b2a3      	uxth	r3, r4
 80036f2:	f443 4c20 	orr.w	ip, r3, #40960	; 0xa000
 80036f6:	f04f 0e01 	mov.w	lr, #1
 80036fa:	9303      	str	r3, [sp, #12]
 80036fc:	a905      	add	r1, sp, #20
 80036fe:	2301      	movs	r3, #1
 8003700:	f8ad 0018 	strh.w	r0, [sp, #24]
 8003704:	f8cd 001a 	str.w	r0, [sp, #26]
 8003708:	2205      	movs	r2, #5
 800370a:	4640      	mov	r0, r8
 800370c:	f8ad e016 	strh.w	lr, [sp, #22]
 8003710:	f8ad c014 	strh.w	ip, [sp, #20]
 8003714:	f7fd fc30 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8003718:	a904      	add	r1, sp, #16
 800371a:	f10d 001a 	add.w	r0, sp, #26
 800371e:	2201      	movs	r2, #1
 8003720:	f7fd fa32 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8003724:	f1ca 0a20 	rsb	sl, sl, #32
 8003728:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800372c:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8003730:	fa23 fa0a 	lsr.w	sl, r3, sl
 8003734:	9b04      	ldr	r3, [sp, #16]
 8003736:	9903      	ldr	r1, [sp, #12]
 8003738:	fa0a fa04 	lsl.w	sl, sl, r4
 800373c:	ea23 020a 	bic.w	r2, r3, sl
 8003740:	fa07 f404 	lsl.w	r4, r7, r4
 8003744:	4322      	orrs	r2, r4
 8003746:	4640      	mov	r0, r8
 8003748:	f7fd fc4c 	bl	8000fe4 <acc_sensor_a121_conf_write_instr>
 800374c:	e7af      	b.n	80036ae <acc_confprogram_live_patch.constprop.0+0x72>
 800374e:	bf00      	nop
 8003750:	0800ad24 	.word	0x0800ad24
 8003754:	0800a524 	.word	0x0800a524
 8003758:	0800ad80 	.word	0x0800ad80
 800375c:	0800ad48 	.word	0x0800ad48
 8003760:	200000ac 	.word	0x200000ac

08003764 <test_communication>:
 8003764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003768:	f8df a340 	ldr.w	sl, [pc, #832]	; 8003aac <test_communication+0x348>
 800376c:	ed2d 8b02 	vpush	{d8}
 8003770:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003774:	2b01      	cmp	r3, #1
 8003776:	b095      	sub	sp, #84	; 0x54
 8003778:	4683      	mov	fp, r0
 800377a:	d905      	bls.n	8003788 <test_communication+0x24>
 800377c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003780:	4aba      	ldr	r2, [pc, #744]	; (8003a6c <test_communication+0x308>)
 8003782:	49bb      	ldr	r1, [pc, #748]	; (8003a70 <test_communication+0x30c>)
 8003784:	2002      	movs	r0, #2
 8003786:	4798      	blx	r3
 8003788:	48ba      	ldr	r0, [pc, #744]	; (8003a74 <test_communication+0x310>)
 800378a:	f8df 92e4 	ldr.w	r9, [pc, #740]	; 8003a70 <test_communication+0x30c>
 800378e:	f7fd f935 	bl	80009fc <acc_diagnostic_log_set_scope>
 8003792:	4bb9      	ldr	r3, [pc, #740]	; (8003a78 <test_communication+0x314>)
 8003794:	f8da 404c 	ldr.w	r4, [sl, #76]	; 0x4c
 8003798:	f8db 0000 	ldr.w	r0, [fp]
 800379c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80037a0:	2101      	movs	r1, #1
 80037a2:	fba3 3404 	umull	r3, r4, r3, r4
 80037a6:	f7fd fcf3 	bl	8001190 <acc_sensor_reg_write>
 80037aa:	f8db 0000 	ldr.w	r0, [fp]
 80037ae:	2200      	movs	r2, #0
 80037b0:	2101      	movs	r1, #1
 80037b2:	f7fd fced 	bl	8001190 <acc_sensor_reg_write>
 80037b6:	f8db 0000 	ldr.w	r0, [fp]
 80037ba:	2201      	movs	r2, #1
 80037bc:	215d      	movs	r1, #93	; 0x5d
 80037be:	f7fd fce7 	bl	8001190 <acc_sensor_reg_write>
 80037c2:	f8db 0000 	ldr.w	r0, [fp]
 80037c6:	2200      	movs	r2, #0
 80037c8:	215d      	movs	r1, #93	; 0x5d
 80037ca:	f7fd fce1 	bl	8001190 <acc_sensor_reg_write>
 80037ce:	f8db 0000 	ldr.w	r0, [fp]
 80037d2:	2200      	movs	r2, #0
 80037d4:	2174      	movs	r1, #116	; 0x74
 80037d6:	f7fd fcdb 	bl	8001190 <acc_sensor_reg_write>
 80037da:	f8db 0000 	ldr.w	r0, [fp]
 80037de:	2201      	movs	r2, #1
 80037e0:	21d5      	movs	r1, #213	; 0xd5
 80037e2:	f7fd fcd5 	bl	8001190 <acc_sensor_reg_write>
 80037e6:	09a5      	lsrs	r5, r4, #6
 80037e8:	0da2      	lsrs	r2, r4, #22
 80037ea:	f8db 0000 	ldr.w	r0, [fp]
 80037ee:	2155      	movs	r1, #85	; 0x55
 80037f0:	f7fd fcce 	bl	8001190 <acc_sensor_reg_write>
 80037f4:	b2aa      	uxth	r2, r5
 80037f6:	f8db 0000 	ldr.w	r0, [fp]
 80037fa:	2156      	movs	r1, #86	; 0x56
 80037fc:	f7fd fcc8 	bl	8001190 <acc_sensor_reg_write>
 8003800:	f8db 0000 	ldr.w	r0, [fp]
 8003804:	2203      	movs	r2, #3
 8003806:	2154      	movs	r1, #84	; 0x54
 8003808:	f7fd fcc2 	bl	8001190 <acc_sensor_reg_write>
 800380c:	4b9b      	ldr	r3, [pc, #620]	; (8003a7c <test_communication+0x318>)
 800380e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003812:	ab0f      	add	r3, sp, #60	; 0x3c
 8003814:	c303      	stmia	r3!, {r0, r1}
 8003816:	2500      	movs	r5, #0
 8003818:	801a      	strh	r2, [r3, #0]
 800381a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
 800381e:	240a      	movs	r4, #10
 8003820:	af0f      	add	r7, sp, #60	; 0x3c
 8003822:	2601      	movs	r6, #1
 8003824:	9402      	str	r4, [sp, #8]
 8003826:	f837 8b02 	ldrh.w	r8, [r7], #2
 800382a:	f8db 0000 	ldr.w	r0, [fp]
 800382e:	4642      	mov	r2, r8
 8003830:	212c      	movs	r1, #44	; 0x2c
 8003832:	f7fd fcad 	bl	8001190 <acc_sensor_reg_write>
 8003836:	f8db 0000 	ldr.w	r0, [fp]
 800383a:	aa0d      	add	r2, sp, #52	; 0x34
 800383c:	212c      	movs	r1, #44	; 0x2c
 800383e:	f7fd fcb7 	bl	80011b0 <acc_sensor_reg_read>
 8003842:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 8003846:	45e0      	cmp	r8, ip
 8003848:	d00e      	beq.n	8003868 <test_communication+0x104>
 800384a:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 800384e:	4a8c      	ldr	r2, [pc, #560]	; (8003a80 <test_communication+0x31c>)
 8003850:	2b03      	cmp	r3, #3
 8003852:	4649      	mov	r1, r9
 8003854:	4633      	mov	r3, r6
 8003856:	f04f 0004 	mov.w	r0, #4
 800385a:	d904      	bls.n	8003866 <test_communication+0x102>
 800385c:	e9cd 8c00 	strd	r8, ip, [sp]
 8003860:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003864:	47a0      	blx	r4
 8003866:	3501      	adds	r5, #1
 8003868:	3601      	adds	r6, #1
 800386a:	2e06      	cmp	r6, #6
 800386c:	d1db      	bne.n	8003826 <test_communication+0xc2>
 800386e:	9c02      	ldr	r4, [sp, #8]
 8003870:	3c01      	subs	r4, #1
 8003872:	d1d5      	bne.n	8003820 <test_communication+0xbc>
 8003874:	2d00      	cmp	r5, #0
 8003876:	f000 816b 	beq.w	8003b50 <test_communication+0x3ec>
 800387a:	2232      	movs	r2, #50	; 0x32
 800387c:	462b      	mov	r3, r5
 800387e:	497c      	ldr	r1, [pc, #496]	; (8003a70 <test_communication+0x30c>)
 8003880:	9200      	str	r2, [sp, #0]
 8003882:	4620      	mov	r0, r4
 8003884:	4a7f      	ldr	r2, [pc, #508]	; (8003a84 <test_communication+0x320>)
 8003886:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 800388a:	47a8      	blx	r5
 800388c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003890:	4977      	ldr	r1, [pc, #476]	; (8003a70 <test_communication+0x30c>)
 8003892:	4a7d      	ldr	r2, [pc, #500]	; (8003a88 <test_communication+0x324>)
 8003894:	4620      	mov	r0, r4
 8003896:	4798      	blx	r3
 8003898:	2304      	movs	r3, #4
 800389a:	9305      	str	r3, [sp, #20]
 800389c:	4621      	mov	r1, r4
 800389e:	4d7b      	ldr	r5, [pc, #492]	; (8003a8c <test_communication+0x328>)
 80038a0:	487b      	ldr	r0, [pc, #492]	; (8003a90 <test_communication+0x32c>)
 80038a2:	f7fd f8a3 	bl	80009ec <acc_diagnostic_log_scalar>
 80038a6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80038a8:	ac0f      	add	r4, sp, #60	; 0x3c
 80038aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80038ac:	f8db 2018 	ldr.w	r2, [fp, #24]
 80038b0:	682b      	ldr	r3, [r5, #0]
 80038b2:	6023      	str	r3, [r4, #0]
 80038b4:	2300      	movs	r3, #0
 80038b6:	0897      	lsrs	r7, r2, #2
 80038b8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 80038bc:	920a      	str	r2, [sp, #40]	; 0x28
 80038be:	9302      	str	r3, [sp, #8]
 80038c0:	f022 0203 	bic.w	r2, r2, #3
 80038c4:	230a      	movs	r3, #10
 80038c6:	46d9      	mov	r9, fp
 80038c8:	920b      	str	r2, [sp, #44]	; 0x2c
 80038ca:	9306      	str	r3, [sp, #24]
 80038cc:	46bb      	mov	fp, r7
 80038ce:	ab0f      	add	r3, sp, #60	; 0x3c
 80038d0:	9303      	str	r3, [sp, #12]
 80038d2:	465f      	mov	r7, fp
 80038d4:	2f00      	cmp	r7, #0
 80038d6:	f000 80bc 	beq.w	8003a52 <test_communication+0x2ee>
 80038da:	9b03      	ldr	r3, [sp, #12]
 80038dc:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80038e4:	9307      	str	r3, [sp, #28]
 80038e6:	1f13      	subs	r3, r2, #4
 80038e8:	1859      	adds	r1, r3, r1
 80038ea:	9807      	ldr	r0, [sp, #28]
 80038ec:	f843 0f04 	str.w	r0, [r3, #4]!
 80038f0:	4299      	cmp	r1, r3
 80038f2:	d1fa      	bne.n	80038ea <test_communication+0x186>
 80038f4:	ab0d      	add	r3, sp, #52	; 0x34
 80038f6:	9300      	str	r3, [sp, #0]
 80038f8:	f8d9 100c 	ldr.w	r1, [r9, #12]
 80038fc:	f8d9 0000 	ldr.w	r0, [r9]
 8003900:	463b      	mov	r3, r7
 8003902:	f7fd fbbd 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003906:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003908:	f8d9 0014 	ldr.w	r0, [r9, #20]
 800390c:	f023 0203 	bic.w	r2, r3, #3
 8003910:	2100      	movs	r1, #0
 8003912:	f003 fa1c 	bl	8006d4e <memset>
 8003916:	f8ba 3030 	ldrh.w	r3, [sl, #48]	; 0x30
 800391a:	f8d9 2000 	ldr.w	r2, [r9]
 800391e:	f8d9 600c 	ldr.w	r6, [r9, #12]
 8003922:	9704      	str	r7, [sp, #16]
 8003924:	3b08      	subs	r3, #8
 8003926:	ee08 2a10 	vmov	s16, r2
 800392a:	089b      	lsrs	r3, r3, #2
 800392c:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003930:	9209      	str	r2, [sp, #36]	; 0x24
 8003932:	9308      	str	r3, [sp, #32]
 8003934:	f04f 0800 	mov.w	r8, #0
 8003938:	e00f      	b.n	800395a <test_communication+0x1f6>
 800393a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 800393e:	4798      	blx	r3
 8003940:	2500      	movs	r5, #0
 8003942:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003946:	4415      	add	r5, r2
 8003948:	9a04      	ldr	r2, [sp, #16]
 800394a:	44a0      	add	r8, r4
 800394c:	3301      	adds	r3, #1
 800394e:	1b12      	subs	r2, r2, r4
 8003950:	4547      	cmp	r7, r8
 8003952:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
 8003956:	9204      	str	r2, [sp, #16]
 8003958:	d92e      	bls.n	80039b8 <test_communication+0x254>
 800395a:	9b08      	ldr	r3, [sp, #32]
 800395c:	9a04      	ldr	r2, [sp, #16]
 800395e:	494d      	ldr	r1, [pc, #308]	; (8003a94 <test_communication+0x330>)
 8003960:	4293      	cmp	r3, r2
 8003962:	bf28      	it	cs
 8003964:	4613      	movcs	r3, r2
 8003966:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800396a:	4a4b      	ldr	r2, [pc, #300]	; (8003a98 <test_communication+0x334>)
 800396c:	461c      	mov	r4, r3
 800396e:	f04f 0000 	mov.w	r0, #0
 8003972:	d8e2      	bhi.n	800393a <test_communication+0x1d6>
 8003974:	005b      	lsls	r3, r3, #1
 8003976:	3b01      	subs	r3, #1
 8003978:	2100      	movs	r1, #0
 800397a:	00a5      	lsls	r5, r4, #2
 800397c:	f106 0b08 	add.w	fp, r6, #8
 8003980:	f249 0200 	movw	r2, #36864	; 0x9000
 8003984:	8032      	strh	r2, [r6, #0]
 8003986:	80b3      	strh	r3, [r6, #4]
 8003988:	462a      	mov	r2, r5
 800398a:	80f1      	strh	r1, [r6, #6]
 800398c:	f8a6 8002 	strh.w	r8, [r6, #2]
 8003990:	4658      	mov	r0, fp
 8003992:	f003 f9dc 	bl	8006d4e <memset>
 8003996:	1ca2      	adds	r2, r4, #2
 8003998:	ee18 0a10 	vmov	r0, s16
 800399c:	0052      	lsls	r2, r2, #1
 800399e:	2301      	movs	r3, #1
 80039a0:	4631      	mov	r1, r6
 80039a2:	f7fd fae9 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80039a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039a8:	4622      	mov	r2, r4
 80039aa:	4658      	mov	r0, fp
 80039ac:	eb03 0188 	add.w	r1, r3, r8, lsl #2
 80039b0:	f7fd f8ea 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 80039b4:	3508      	adds	r5, #8
 80039b6:	e7c4      	b.n	8003942 <test_communication+0x1de>
 80039b8:	9e07      	ldr	r6, [sp, #28]
 80039ba:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80039be:	2500      	movs	r5, #0
 80039c0:	f8d9 3014 	ldr.w	r3, [r9, #20]
 80039c4:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 80039c8:	42a6      	cmp	r6, r4
 80039ca:	d00f      	beq.n	80039ec <test_communication+0x288>
 80039cc:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 80039d0:	4a32      	ldr	r2, [pc, #200]	; (8003a9c <test_communication+0x338>)
 80039d2:	4927      	ldr	r1, [pc, #156]	; (8003a70 <test_communication+0x30c>)
 80039d4:	2b03      	cmp	r3, #3
 80039d6:	f04f 0004 	mov.w	r0, #4
 80039da:	462b      	mov	r3, r5
 80039dc:	d904      	bls.n	80039e8 <test_communication+0x284>
 80039de:	e9cd 6400 	strd	r6, r4, [sp]
 80039e2:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 80039e6:	47a0      	blx	r4
 80039e8:	f108 0801 	add.w	r8, r8, #1
 80039ec:	3501      	adds	r5, #1
 80039ee:	42af      	cmp	r7, r5
 80039f0:	d1e6      	bne.n	80039c0 <test_communication+0x25c>
 80039f2:	f8cd 8008 	str.w	r8, [sp, #8]
 80039f6:	9b03      	ldr	r3, [sp, #12]
 80039f8:	aa14      	add	r2, sp, #80	; 0x50
 80039fa:	3304      	adds	r3, #4
 80039fc:	4293      	cmp	r3, r2
 80039fe:	9303      	str	r3, [sp, #12]
 8003a00:	f47f af68 	bne.w	80038d4 <test_communication+0x170>
 8003a04:	9b06      	ldr	r3, [sp, #24]
 8003a06:	3b01      	subs	r3, #1
 8003a08:	46bb      	mov	fp, r7
 8003a0a:	9306      	str	r3, [sp, #24]
 8003a0c:	f47f af5f 	bne.w	80038ce <test_communication+0x16a>
 8003a10:	9b02      	ldr	r3, [sp, #8]
 8003a12:	46cb      	mov	fp, r9
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	d04b      	beq.n	8003ab0 <test_communication+0x34c>
 8003a18:	9d06      	ldr	r5, [sp, #24]
 8003a1a:	4915      	ldr	r1, [pc, #84]	; (8003a70 <test_communication+0x30c>)
 8003a1c:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003a20:	2232      	movs	r2, #50	; 0x32
 8003a22:	fb02 f207 	mul.w	r2, r2, r7
 8003a26:	9200      	str	r2, [sp, #0]
 8003a28:	4628      	mov	r0, r5
 8003a2a:	4a1d      	ldr	r2, [pc, #116]	; (8003aa0 <test_communication+0x33c>)
 8003a2c:	47a0      	blx	r4
 8003a2e:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003a32:	4a1c      	ldr	r2, [pc, #112]	; (8003aa4 <test_communication+0x340>)
 8003a34:	490e      	ldr	r1, [pc, #56]	; (8003a70 <test_communication+0x30c>)
 8003a36:	4628      	mov	r0, r5
 8003a38:	4798      	blx	r3
 8003a3a:	481b      	ldr	r0, [pc, #108]	; (8003aa8 <test_communication+0x344>)
 8003a3c:	4629      	mov	r1, r5
 8003a3e:	f7fc ffd5 	bl	80009ec <acc_diagnostic_log_scalar>
 8003a42:	2304      	movs	r3, #4
 8003a44:	9305      	str	r3, [sp, #20]
 8003a46:	9805      	ldr	r0, [sp, #20]
 8003a48:	b015      	add	sp, #84	; 0x54
 8003a4a:	ecbd 8b02 	vpop	{d8}
 8003a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a52:	ab0d      	add	r3, sp, #52	; 0x34
 8003a54:	9300      	str	r3, [sp, #0]
 8003a56:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003a5a:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003a5e:	f8d9 0000 	ldr.w	r0, [r9]
 8003a62:	463b      	mov	r3, r7
 8003a64:	f7fd fb0c 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003a68:	e7c5      	b.n	80039f6 <test_communication+0x292>
 8003a6a:	bf00      	nop
 8003a6c:	0800ada8 	.word	0x0800ada8
 8003a70:	0800a7bc 	.word	0x0800a7bc
 8003a74:	0800adc4 	.word	0x0800adc4
 8003a78:	10624dd3 	.word	0x10624dd3
 8003a7c:	080088c0 	.word	0x080088c0
 8003a80:	0800add8 	.word	0x0800add8
 8003a84:	0800ae44 	.word	0x0800ae44
 8003a88:	0800ae78 	.word	0x0800ae78
 8003a8c:	080088cc 	.word	0x080088cc
 8003a90:	0800ae98 	.word	0x0800ae98
 8003a94:	0800a700 	.word	0x0800a700
 8003a98:	0800aebc 	.word	0x0800aebc
 8003a9c:	0800aed4 	.word	0x0800aed4
 8003aa0:	0800af28 	.word	0x0800af28
 8003aa4:	0800af58 	.word	0x0800af58
 8003aa8:	0800af78 	.word	0x0800af78
 8003aac:	200000ac 	.word	0x200000ac
 8003ab0:	482f      	ldr	r0, [pc, #188]	; (8003b70 <test_communication+0x40c>)
 8003ab2:	2101      	movs	r1, #1
 8003ab4:	f7fc ff9a 	bl	80009ec <acc_diagnostic_log_scalar>
 8003ab8:	9b05      	ldr	r3, [sp, #20]
 8003aba:	2b04      	cmp	r3, #4
 8003abc:	d0c3      	beq.n	8003a46 <test_communication+0x2e2>
 8003abe:	9c02      	ldr	r4, [sp, #8]
 8003ac0:	f8db 0000 	ldr.w	r0, [fp]
 8003ac4:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 8003ac8:	aa0f      	add	r2, sp, #60	; 0x3c
 8003aca:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003ace:	f7fd fb6f 	bl	80011b0 <acc_sensor_reg_read>
 8003ad2:	f8db 5018 	ldr.w	r5, [fp, #24]
 8003ad6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8003ada:	9410      	str	r4, [sp, #64]	; 0x40
 8003adc:	940f      	str	r4, [sp, #60]	; 0x3c
 8003ade:	08ad      	lsrs	r5, r5, #2
 8003ae0:	2464      	movs	r4, #100	; 0x64
 8003ae2:	ab0f      	add	r3, sp, #60	; 0x3c
 8003ae4:	9300      	str	r3, [sp, #0]
 8003ae6:	f8db 2014 	ldr.w	r2, [fp, #20]
 8003aea:	f8db 100c 	ldr.w	r1, [fp, #12]
 8003aee:	f8db 0000 	ldr.w	r0, [fp]
 8003af2:	462b      	mov	r3, r5
 8003af4:	f7fd fac4 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003af8:	3c01      	subs	r4, #1
 8003afa:	d1f2      	bne.n	8003ae2 <test_communication+0x37e>
 8003afc:	f8db 0000 	ldr.w	r0, [fp]
 8003b00:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 8003b04:	aa0d      	add	r2, sp, #52	; 0x34
 8003b06:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003b0a:	f7fd fb51 	bl	80011b0 <acc_sensor_reg_read>
 8003b0e:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8003b12:	1b9b      	subs	r3, r3, r6
 8003b14:	b29b      	uxth	r3, r3
 8003b16:	b1fb      	cbz	r3, 8003b58 <test_communication+0x3f4>
 8003b18:	f89a 2048 	ldrb.w	r2, [sl, #72]	; 0x48
 8003b1c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8003b1e:	2a01      	cmp	r2, #1
 8003b20:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8003b24:	fbb4 f4f3 	udiv	r4, r4, r3
 8003b28:	d906      	bls.n	8003b38 <test_communication+0x3d4>
 8003b2a:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 8003b2e:	4a11      	ldr	r2, [pc, #68]	; (8003b74 <test_communication+0x410>)
 8003b30:	4911      	ldr	r1, [pc, #68]	; (8003b78 <test_communication+0x414>)
 8003b32:	4623      	mov	r3, r4
 8003b34:	2002      	movs	r0, #2
 8003b36:	47a8      	blx	r5
 8003b38:	4810      	ldr	r0, [pc, #64]	; (8003b7c <test_communication+0x418>)
 8003b3a:	4621      	mov	r1, r4
 8003b3c:	f7fc ff56 	bl	80009ec <acc_diagnostic_log_scalar>
 8003b40:	2303      	movs	r3, #3
 8003b42:	9305      	str	r3, [sp, #20]
 8003b44:	9805      	ldr	r0, [sp, #20]
 8003b46:	b015      	add	sp, #84	; 0x54
 8003b48:	ecbd 8b02 	vpop	{d8}
 8003b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b50:	2303      	movs	r3, #3
 8003b52:	2101      	movs	r1, #1
 8003b54:	9305      	str	r3, [sp, #20]
 8003b56:	e6a2      	b.n	800389e <test_communication+0x13a>
 8003b58:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d0ef      	beq.n	8003b40 <test_communication+0x3dc>
 8003b60:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003b64:	4a06      	ldr	r2, [pc, #24]	; (8003b80 <test_communication+0x41c>)
 8003b66:	4904      	ldr	r1, [pc, #16]	; (8003b78 <test_communication+0x414>)
 8003b68:	2001      	movs	r0, #1
 8003b6a:	4798      	blx	r3
 8003b6c:	e7e8      	b.n	8003b40 <test_communication+0x3dc>
 8003b6e:	bf00      	nop
 8003b70:	0800af78 	.word	0x0800af78
 8003b74:	0800af9c 	.word	0x0800af9c
 8003b78:	0800a7bc 	.word	0x0800a7bc
 8003b7c:	0800afcc 	.word	0x0800afcc
 8003b80:	0800afe4 	.word	0x0800afe4

08003b84 <acc_calibration_a121_calibrate>:
 8003b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b88:	ed2d 8b02 	vpush	{d8}
 8003b8c:	f2ad 7d14 	subw	sp, sp, #1812	; 0x714
 8003b90:	4604      	mov	r4, r0
 8003b92:	9302      	str	r3, [sp, #8]
 8003b94:	781b      	ldrb	r3, [r3, #0]
 8003b96:	9203      	str	r2, [sp, #12]
 8003b98:	4689      	mov	r9, r1
 8003b9a:	2b0d      	cmp	r3, #13
 8003b9c:	d816      	bhi.n	8003bcc <acc_calibration_a121_calibrate+0x48>
 8003b9e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003ba2:	0025      	.short	0x0025
 8003ba4:	01ad000e 	.word	0x01ad000e
 8003ba8:	013600e4 	.word	0x013600e4
 8003bac:	02650233 	.word	0x02650233
 8003bb0:	047d0353 	.word	0x047d0353
 8003bb4:	06970641 	.word	0x06970641
 8003bb8:	074106c8 	.word	0x074106c8
 8003bbc:	0025      	.short	0x0025
 8003bbe:	f7ff f9b1 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8003bc2:	2800      	cmp	r0, #0
 8003bc4:	f040 87f6 	bne.w	8004bb4 <acc_calibration_a121_calibrate+0x1030>
 8003bc8:	9b02      	ldr	r3, [sp, #8]
 8003bca:	781b      	ldrb	r3, [r3, #0]
 8003bcc:	49bc      	ldr	r1, [pc, #752]	; (8003ec0 <acc_calibration_a121_calibrate+0x33c>)
 8003bce:	4abd      	ldr	r2, [pc, #756]	; (8003ec4 <acc_calibration_a121_calibrate+0x340>)
 8003bd0:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8003bd2:	49bd      	ldr	r1, [pc, #756]	; (8003ec8 <acc_calibration_a121_calibrate+0x344>)
 8003bd4:	2000      	movs	r0, #0
 8003bd6:	47a0      	blx	r4
 8003bd8:	2000      	movs	r0, #0
 8003bda:	4604      	mov	r4, r0
 8003bdc:	9b02      	ldr	r3, [sp, #8]
 8003bde:	701c      	strb	r4, [r3, #0]
 8003be0:	f20d 7d14 	addw	sp, sp, #1812	; 0x714
 8003be4:	ecbd 8b02 	vpop	{d8}
 8003be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bec:	4eb4      	ldr	r6, [pc, #720]	; (8003ec0 <acc_calibration_a121_calibrate+0x33c>)
 8003bee:	f8dd 0740 	ldr.w	r0, [sp, #1856]	; 0x740
 8003bf2:	2288      	movs	r2, #136	; 0x88
 8003bf4:	2100      	movs	r1, #0
 8003bf6:	f003 f8aa 	bl	8006d4e <memset>
 8003bfa:	edd6 7a13 	vldr	s15, [r6, #76]	; 0x4c
 8003bfe:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003c02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003c06:	f103 017c 	add.w	r1, r3, #124	; 0x7c
 8003c0a:	a844      	add	r0, sp, #272	; 0x110
 8003c0c:	edcd 7a44 	vstr	s15, [sp, #272]	; 0x110
 8003c10:	f7fc ffda 	bl	8000bc8 <acc_cpd_pll_divisors_calculate>
 8003c14:	4605      	mov	r5, r0
 8003c16:	48ad      	ldr	r0, [pc, #692]	; (8003ecc <acc_calibration_a121_calibrate+0x348>)
 8003c18:	f7fc fef0 	bl	80009fc <acc_diagnostic_log_set_scope>
 8003c1c:	48ac      	ldr	r0, [pc, #688]	; (8003ed0 <acc_calibration_a121_calibrate+0x34c>)
 8003c1e:	4621      	mov	r1, r4
 8003c20:	f7fc fee4 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c24:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003c28:	48aa      	ldr	r0, [pc, #680]	; (8003ed4 <acc_calibration_a121_calibrate+0x350>)
 8003c2a:	f8b3 107e 	ldrh.w	r1, [r3, #126]	; 0x7e
 8003c2e:	f7fc fedd 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c32:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003c36:	48a8      	ldr	r0, [pc, #672]	; (8003ed8 <acc_calibration_a121_calibrate+0x354>)
 8003c38:	f8b3 1080 	ldrh.w	r1, [r3, #128]	; 0x80
 8003c3c:	f7fc fed6 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c40:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003c44:	48a5      	ldr	r0, [pc, #660]	; (8003edc <acc_calibration_a121_calibrate+0x358>)
 8003c46:	f8b3 1082 	ldrh.w	r1, [r3, #130]	; 0x82
 8003c4a:	f7fc fecf 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c4e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003c52:	48a3      	ldr	r0, [pc, #652]	; (8003ee0 <acc_calibration_a121_calibrate+0x35c>)
 8003c54:	f8b3 107c 	ldrh.w	r1, [r3, #124]	; 0x7c
 8003c58:	f7fc fec8 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c5c:	2d00      	cmp	r5, #0
 8003c5e:	d0b3      	beq.n	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003c60:	4620      	mov	r0, r4
 8003c62:	8e35      	ldrh	r5, [r6, #48]	; 0x30
 8003c64:	f7fd faf6 	bl	8001254 <acc_sensor_protocol_a121_prepare_load>
 8003c68:	2800      	cmp	r0, #0
 8003c6a:	d0ad      	beq.n	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003c6c:	9b03      	ldr	r3, [sp, #12]
 8003c6e:	f8cd 9010 	str.w	r9, [sp, #16]
 8003c72:	085b      	lsrs	r3, r3, #1
 8003c74:	086d      	lsrs	r5, r5, #1
 8003c76:	42ab      	cmp	r3, r5
 8003c78:	bf28      	it	cs
 8003c7a:	462b      	movcs	r3, r5
 8003c7c:	3b02      	subs	r3, #2
 8003c7e:	f023 0301 	bic.w	r3, r3, #1
 8003c82:	b29a      	uxth	r2, r3
 8003c84:	f109 0704 	add.w	r7, r9, #4
 8003c88:	f8df a26c 	ldr.w	sl, [pc, #620]	; 8003ef8 <acc_calibration_a121_calibrate+0x374>
 8003c8c:	f8dd 9740 	ldr.w	r9, [sp, #1856]	; 0x740
 8003c90:	9203      	str	r2, [sp, #12]
 8003c92:	ee08 4a10 	vmov	s16, r4
 8003c96:	f640 2bfc 	movw	fp, #2812	; 0xafc
 8003c9a:	2500      	movs	r5, #0
 8003c9c:	461c      	mov	r4, r3
 8003c9e:	9b03      	ldr	r3, [sp, #12]
 8003ca0:	4990      	ldr	r1, [pc, #576]	; (8003ee4 <acc_calibration_a121_calibrate+0x360>)
 8003ca2:	f5c5 662f 	rsb	r6, r5, #2800	; 0xaf0
 8003ca6:	461a      	mov	r2, r3
 8003ca8:	360c      	adds	r6, #12
 8003caa:	42b4      	cmp	r4, r6
 8003cac:	bf88      	it	hi
 8003cae:	465a      	movhi	r2, fp
 8003cb0:	ea4f 0855 	mov.w	r8, r5, lsr #1
 8003cb4:	eb01 0088 	add.w	r0, r1, r8, lsl #2
 8003cb8:	4616      	mov	r6, r2
 8003cba:	4639      	mov	r1, r7
 8003cbc:	0852      	lsrs	r2, r2, #1
 8003cbe:	f7fc ff75 	bl	8000bac <acc_confprogram_copy>
 8003cc2:	f8b9 307e 	ldrh.w	r3, [r9, #126]	; 0x7e
 8003cc6:	9301      	str	r3, [sp, #4]
 8003cc8:	221c      	movs	r2, #28
 8003cca:	9200      	str	r2, [sp, #0]
 8003ccc:	4653      	mov	r3, sl
 8003cce:	4632      	mov	r2, r6
 8003cd0:	4629      	mov	r1, r5
 8003cd2:	4638      	mov	r0, r7
 8003cd4:	f7fd f892 	bl	8000dfc <acc_confprogram_patch_offset>
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	f43f af75 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003cde:	f8b9 3080 	ldrh.w	r3, [r9, #128]	; 0x80
 8003ce2:	9301      	str	r3, [sp, #4]
 8003ce4:	231a      	movs	r3, #26
 8003ce6:	9300      	str	r3, [sp, #0]
 8003ce8:	4632      	mov	r2, r6
 8003cea:	4653      	mov	r3, sl
 8003cec:	4629      	mov	r1, r5
 8003cee:	4638      	mov	r0, r7
 8003cf0:	f7fd f884 	bl	8000dfc <acc_confprogram_patch_offset>
 8003cf4:	4684      	mov	ip, r0
 8003cf6:	f04f 0e1b 	mov.w	lr, #27
 8003cfa:	4653      	mov	r3, sl
 8003cfc:	4632      	mov	r2, r6
 8003cfe:	4629      	mov	r1, r5
 8003d00:	4638      	mov	r0, r7
 8003d02:	f1bc 0f00 	cmp.w	ip, #0
 8003d06:	f43f af5f 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003d0a:	f8b9 c082 	ldrh.w	ip, [r9, #130]	; 0x82
 8003d0e:	e9cd ec00 	strd	lr, ip, [sp]
 8003d12:	f7fd f873 	bl	8000dfc <acc_confprogram_patch_offset>
 8003d16:	4684      	mov	ip, r0
 8003d18:	f04f 0e19 	mov.w	lr, #25
 8003d1c:	4653      	mov	r3, sl
 8003d1e:	4632      	mov	r2, r6
 8003d20:	4629      	mov	r1, r5
 8003d22:	4638      	mov	r0, r7
 8003d24:	f1bc 0f00 	cmp.w	ip, #0
 8003d28:	f43f af4e 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003d2c:	f8b9 c084 	ldrh.w	ip, [r9, #132]	; 0x84
 8003d30:	e9cd ec00 	strd	lr, ip, [sp]
 8003d34:	f7fd f862 	bl	8000dfc <acc_confprogram_patch_offset>
 8003d38:	4684      	mov	ip, r0
 8003d3a:	9a04      	ldr	r2, [sp, #16]
 8003d3c:	ee18 0a10 	vmov	r0, s16
 8003d40:	4633      	mov	r3, r6
 8003d42:	4641      	mov	r1, r8
 8003d44:	f1bc 0f00 	cmp.w	ip, #0
 8003d48:	f43f af3e 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003d4c:	f7fd fac4 	bl	80012d8 <acc_sensor_a121_load_confmem>
 8003d50:	9a03      	ldr	r2, [sp, #12]
 8003d52:	4415      	add	r5, r2
 8003d54:	b2ad      	uxth	r5, r5
 8003d56:	f640 23fb 	movw	r3, #2811	; 0xafb
 8003d5a:	429d      	cmp	r5, r3
 8003d5c:	ebab 0b02 	sub.w	fp, fp, r2
 8003d60:	f201 80b8 	bhi.w	8004ed4 <acc_calibration_a121_calibrate+0x1350>
 8003d64:	fa1f fb8b 	uxth.w	fp, fp
 8003d68:	e799      	b.n	8003c9e <acc_calibration_a121_calibrate+0x11a>
 8003d6a:	f7ff f8db 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8003d6e:	4680      	mov	r8, r0
 8003d70:	2800      	cmp	r0, #0
 8003d72:	f43f af29 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003d76:	4649      	mov	r1, r9
 8003d78:	2210      	movs	r2, #16
 8003d7a:	4620      	mov	r0, r4
 8003d7c:	f7ff faca 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8003d80:	4681      	mov	r9, r0
 8003d82:	4859      	ldr	r0, [pc, #356]	; (8003ee8 <acc_calibration_a121_calibrate+0x364>)
 8003d84:	f7fc fdda 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003d88:	4648      	mov	r0, r9
 8003d8a:	2110      	movs	r1, #16
 8003d8c:	f7fc fe1e 	bl	80009cc <acc_diagnostic_log_data_i16>
 8003d90:	2100      	movs	r1, #0
 8003d92:	ee07 4a90 	vmov	s15, r4
 8003d96:	f1a9 0b02 	sub.w	fp, r9, #2
 8003d9a:	460f      	mov	r7, r1
 8003d9c:	460d      	mov	r5, r1
 8003d9e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8003da2:	f241 7a70 	movw	sl, #6000	; 0x1770
 8003da6:	e01c      	b.n	8003de2 <acc_calibration_a121_calibrate+0x25e>
 8003da8:	f939 c011 	ldrsh.w	ip, [r9, r1, lsl #1]
 8003dac:	f93b 4011 	ldrsh.w	r4, [fp, r1, lsl #1]
 8003db0:	eb0c 020a 	add.w	r2, ip, sl
 8003db4:	ebac 0c04 	sub.w	ip, ip, r4
 8003db8:	459c      	cmp	ip, r3
 8003dba:	f6ff af05 	blt.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003dbe:	45f4      	cmp	ip, lr
 8003dc0:	f73f af02 	bgt.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003dc4:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 8003dc8:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 8003dcc:	b29b      	uxth	r3, r3
 8003dce:	4283      	cmp	r3, r0
 8003dd0:	d203      	bcs.n	8003dda <acc_calibration_a121_calibrate+0x256>
 8003dd2:	00b7      	lsls	r7, r6, #2
 8003dd4:	4618      	mov	r0, r3
 8003dd6:	b2bf      	uxth	r7, r7
 8003dd8:	4645      	mov	r5, r8
 8003dda:	2e0f      	cmp	r6, #15
 8003ddc:	f000 8769 	beq.w	8004cb2 <acc_calibration_a121_calibrate+0x112e>
 8003de0:	3101      	adds	r1, #1
 8003de2:	1e4b      	subs	r3, r1, #1
 8003de4:	fb03 f303 	mul.w	r3, r3, r3
 8003de8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8003dec:	005a      	lsls	r2, r3, #1
 8003dee:	f502 7e16 	add.w	lr, r2, #600	; 0x258
 8003df2:	3bc8      	subs	r3, #200	; 0xc8
 8003df4:	b28e      	uxth	r6, r1
 8003df6:	2900      	cmp	r1, #0
 8003df8:	d1d6      	bne.n	8003da8 <acc_calibration_a121_calibrate+0x224>
 8003dfa:	f9b9 3000 	ldrsh.w	r3, [r9]
 8003dfe:	4453      	add	r3, sl
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	bfb8      	it	lt
 8003e04:	425b      	neglt	r3, r3
 8003e06:	b29b      	uxth	r3, r3
 8003e08:	4283      	cmp	r3, r0
 8003e0a:	d2e9      	bcs.n	8003de0 <acc_calibration_a121_calibrate+0x25c>
 8003e0c:	e7e1      	b.n	8003dd2 <acc_calibration_a121_calibrate+0x24e>
 8003e0e:	f7ff f889 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8003e12:	4680      	mov	r8, r0
 8003e14:	2800      	cmp	r0, #0
 8003e16:	f43f aed7 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003e1a:	2231      	movs	r2, #49	; 0x31
 8003e1c:	4649      	mov	r1, r9
 8003e1e:	4620      	mov	r0, r4
 8003e20:	f7ff fa78 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8003e24:	4607      	mov	r7, r0
 8003e26:	4605      	mov	r5, r0
 8003e28:	f837 bb02 	ldrh.w	fp, [r7], #2
 8003e2c:	4828      	ldr	r0, [pc, #160]	; (8003ed0 <acc_calibration_a121_calibrate+0x34c>)
 8003e2e:	4621      	mov	r1, r4
 8003e30:	f7fc fddc 	bl	80009ec <acc_diagnostic_log_scalar>
 8003e34:	482d      	ldr	r0, [pc, #180]	; (8003eec <acc_calibration_a121_calibrate+0x368>)
 8003e36:	f7fc fd81 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003e3a:	4638      	mov	r0, r7
 8003e3c:	2130      	movs	r1, #48	; 0x30
 8003e3e:	f7fc fdcd 	bl	80009dc <acc_diagnostic_log_data_u16>
 8003e42:	4659      	mov	r1, fp
 8003e44:	482a      	ldr	r0, [pc, #168]	; (8003ef0 <acc_calibration_a121_calibrate+0x36c>)
 8003e46:	f7fc fdd1 	bl	80009ec <acc_diagnostic_log_scalar>
 8003e4a:	8869      	ldrh	r1, [r5, #2]
 8003e4c:	f8b5 3060 	ldrh.w	r3, [r5, #96]	; 0x60
 8003e50:	1a5b      	subs	r3, r3, r1
 8003e52:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8003e56:	f6ff aeb7 	blt.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003e5a:	4a26      	ldr	r2, [pc, #152]	; (8003ef4 <acc_calibration_a121_calibrate+0x370>)
 8003e5c:	f8cd 9010 	str.w	r9, [sp, #16]
 8003e60:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8003e64:	fba2 3a0a 	umull	r3, sl, r2, sl
 8003e68:	2500      	movs	r5, #0
 8003e6a:	ee07 4a90 	vmov	s15, r4
 8003e6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8003e72:	2210      	movs	r2, #16
 8003e74:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003e78:	462c      	mov	r4, r5
 8003e7a:	4689      	mov	r9, r1
 8003e7c:	e00b      	b.n	8003e96 <acc_calibration_a121_calibrate+0x312>
 8003e7e:	4570      	cmp	r0, lr
 8003e80:	bf88      	it	hi
 8003e82:	f04f 0800 	movhi.w	r8, #0
 8003e86:	3201      	adds	r2, #1
 8003e88:	b292      	uxth	r2, r2
 8003e8a:	2a40      	cmp	r2, #64	; 0x40
 8003e8c:	4455      	add	r5, sl
 8003e8e:	f000 8738 	beq.w	8004d02 <acc_calibration_a121_calibrate+0x117e>
 8003e92:	f837 1f02 	ldrh.w	r1, [r7, #2]!
 8003e96:	eba1 030b 	sub.w	r3, r1, fp
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	bfb8      	it	lt
 8003e9e:	425b      	neglt	r3, r3
 8003ea0:	b29b      	uxth	r3, r3
 8003ea2:	eb09 4015 	add.w	r0, r9, r5, lsr #16
 8003ea6:	4563      	cmp	r3, ip
 8003ea8:	f500 7648 	add.w	r6, r0, #800	; 0x320
 8003eac:	bf3c      	itt	cc
 8003eae:	469c      	movcc	ip, r3
 8003eb0:	4614      	movcc	r4, r2
 8003eb2:	42b1      	cmp	r1, r6
 8003eb4:	f501 7e48 	add.w	lr, r1, #800	; 0x320
 8003eb8:	d9e1      	bls.n	8003e7e <acc_calibration_a121_calibrate+0x2fa>
 8003eba:	f04f 0800 	mov.w	r8, #0
 8003ebe:	e7e2      	b.n	8003e86 <acc_calibration_a121_calibrate+0x302>
 8003ec0:	200000ac 	.word	0x200000ac
 8003ec4:	0800b434 	.word	0x0800b434
 8003ec8:	0800b420 	.word	0x0800b420
 8003ecc:	0800a4dc 	.word	0x0800a4dc
 8003ed0:	0800b03c 	.word	0x0800b03c
 8003ed4:	0800b048 	.word	0x0800b048
 8003ed8:	0800b058 	.word	0x0800b058
 8003edc:	0800b064 	.word	0x0800b064
 8003ee0:	0800b070 	.word	0x0800b070
 8003ee4:	08008d68 	.word	0x08008d68
 8003ee8:	0800b0b8 	.word	0x0800b0b8
 8003eec:	0800b0fc 	.word	0x0800b0fc
 8003ef0:	0800b110 	.word	0x0800b110
 8003ef4:	aaaaaaab 	.word	0xaaaaaaab
 8003ef8:	080088e0 	.word	0x080088e0
 8003efc:	f7ff f812 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8003f00:	2800      	cmp	r0, #0
 8003f02:	f43f ae61 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003f06:	ab44      	add	r3, sp, #272	; 0x110
 8003f08:	461a      	mov	r2, r3
 8003f0a:	2132      	movs	r1, #50	; 0x32
 8003f0c:	4620      	mov	r0, r4
 8003f0e:	4698      	mov	r8, r3
 8003f10:	9303      	str	r3, [sp, #12]
 8003f12:	f7fd f94d 	bl	80011b0 <acc_sensor_reg_read>
 8003f16:	2212      	movs	r2, #18
 8003f18:	4649      	mov	r1, r9
 8003f1a:	4620      	mov	r0, r4
 8003f1c:	f7ff f9fa 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8003f20:	8847      	ldrh	r7, [r0, #2]
 8003f22:	4605      	mov	r5, r0
 8003f24:	4621      	mov	r1, r4
 8003f26:	48b9      	ldr	r0, [pc, #740]	; (800420c <acc_calibration_a121_calibrate+0x688>)
 8003f28:	882e      	ldrh	r6, [r5, #0]
 8003f2a:	f7fc fd5f 	bl	80009ec <acc_diagnostic_log_scalar>
 8003f2e:	4639      	mov	r1, r7
 8003f30:	48b7      	ldr	r0, [pc, #732]	; (8004210 <acc_calibration_a121_calibrate+0x68c>)
 8003f32:	f7fc fd5b 	bl	80009ec <acc_diagnostic_log_scalar>
 8003f36:	3504      	adds	r5, #4
 8003f38:	48b6      	ldr	r0, [pc, #728]	; (8004214 <acc_calibration_a121_calibrate+0x690>)
 8003f3a:	f7fc fcff 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003f3e:	4628      	mov	r0, r5
 8003f40:	2110      	movs	r1, #16
 8003f42:	f7fc fd4b 	bl	80009dc <acc_diagnostic_log_data_u16>
 8003f46:	2300      	movs	r3, #0
 8003f48:	f8b8 0000 	ldrh.w	r0, [r8]
 8003f4c:	f64f 7cff 	movw	ip, #65535	; 0xffff
 8003f50:	4698      	mov	r8, r3
 8003f52:	fa40 f203 	asr.w	r2, r0, r3
 8003f56:	07d2      	lsls	r2, r2, #31
 8003f58:	b299      	uxth	r1, r3
 8003f5a:	d50a      	bpl.n	8003f72 <acc_calibration_a121_calibrate+0x3ee>
 8003f5c:	f835 2013 	ldrh.w	r2, [r5, r3, lsl #1]
 8003f60:	1bd2      	subs	r2, r2, r7
 8003f62:	2a00      	cmp	r2, #0
 8003f64:	bfb8      	it	lt
 8003f66:	4252      	neglt	r2, r2
 8003f68:	b292      	uxth	r2, r2
 8003f6a:	4562      	cmp	r2, ip
 8003f6c:	bf3c      	itt	cc
 8003f6e:	4694      	movcc	ip, r2
 8003f70:	4688      	movcc	r8, r1
 8003f72:	3301      	adds	r3, #1
 8003f74:	2b10      	cmp	r3, #16
 8003f76:	d1ec      	bne.n	8003f52 <acc_calibration_a121_calibrate+0x3ce>
 8003f78:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8003f7c:	2b0d      	cmp	r3, #13
 8003f7e:	f63f ae23 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003f82:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8003f86:	3b01      	subs	r3, #1
 8003f88:	eb05 0743 	add.w	r7, r5, r3, lsl #1
 8003f8c:	f835 3013 	ldrh.w	r3, [r5, r3, lsl #1]
 8003f90:	887a      	ldrh	r2, [r7, #2]
 8003f92:	f241 3187 	movw	r1, #4999	; 0x1387
 8003f96:	1a9b      	subs	r3, r3, r2
 8003f98:	428b      	cmp	r3, r1
 8003f9a:	f77f ae15 	ble.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003f9e:	88bb      	ldrh	r3, [r7, #4]
 8003fa0:	1ad2      	subs	r2, r2, r3
 8003fa2:	428a      	cmp	r2, r1
 8003fa4:	f77f ae10 	ble.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003fa8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003fac:	4298      	cmp	r0, r3
 8003fae:	f43f ae0b 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003fb2:	4899      	ldr	r0, [pc, #612]	; (8004218 <acc_calibration_a121_calibrate+0x694>)
 8003fb4:	4631      	mov	r1, r6
 8003fb6:	f7fc fd19 	bl	80009ec <acc_diagnostic_log_scalar>
 8003fba:	9b03      	ldr	r3, [sp, #12]
 8003fbc:	4897      	ldr	r0, [pc, #604]	; (800421c <acc_calibration_a121_calibrate+0x698>)
 8003fbe:	8819      	ldrh	r1, [r3, #0]
 8003fc0:	f7fc fd14 	bl	80009ec <acc_diagnostic_log_scalar>
 8003fc4:	4896      	ldr	r0, [pc, #600]	; (8004220 <acc_calibration_a121_calibrate+0x69c>)
 8003fc6:	4641      	mov	r1, r8
 8003fc8:	f7fc fd10 	bl	80009ec <acc_diagnostic_log_scalar>
 8003fcc:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003fd0:	4a94      	ldr	r2, [pc, #592]	; (8004224 <acc_calibration_a121_calibrate+0x6a0>)
 8003fd2:	801e      	strh	r6, [r3, #0]
 8003fd4:	f8a3 8002 	strh.w	r8, [r3, #2]
 8003fd8:	4993      	ldr	r1, [pc, #588]	; (8004228 <acc_calibration_a121_calibrate+0x6a4>)
 8003fda:	f8cd 8000 	str.w	r8, [sp]
 8003fde:	2325      	movs	r3, #37	; 0x25
 8003fe0:	4620      	mov	r0, r4
 8003fe2:	f7ff fb2b 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8003fe6:	4620      	mov	r0, r4
 8003fe8:	f240 211d 	movw	r1, #541	; 0x21d
 8003fec:	f7fd f8f6 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8003ff0:	2403      	movs	r4, #3
 8003ff2:	2800      	cmp	r0, #0
 8003ff4:	f43f ade8 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8003ff8:	4b8c      	ldr	r3, [pc, #560]	; (800422c <acc_calibration_a121_calibrate+0x6a8>)
 8003ffa:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8003ffe:	2a03      	cmp	r2, #3
 8004000:	f200 85c7 	bhi.w	8004b92 <acc_calibration_a121_calibrate+0x100e>
 8004004:	2001      	movs	r0, #1
 8004006:	e5e9      	b.n	8003bdc <acc_calibration_a121_calibrate+0x58>
 8004008:	f7fe ff8c 	bl	8002f24 <acc_a121_cal_session_ack_program>
 800400c:	2800      	cmp	r0, #0
 800400e:	f43f addb 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004012:	2220      	movs	r2, #32
 8004014:	4649      	mov	r1, r9
 8004016:	4620      	mov	r0, r4
 8004018:	f7ff f97c 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 800401c:	4621      	mov	r1, r4
 800401e:	4605      	mov	r5, r0
 8004020:	487a      	ldr	r0, [pc, #488]	; (800420c <acc_calibration_a121_calibrate+0x688>)
 8004022:	f7fc fce3 	bl	80009ec <acc_diagnostic_log_scalar>
 8004026:	4882      	ldr	r0, [pc, #520]	; (8004230 <acc_calibration_a121_calibrate+0x6ac>)
 8004028:	f7fc fc88 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 800402c:	4628      	mov	r0, r5
 800402e:	2120      	movs	r1, #32
 8004030:	f7fc fccc 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004034:	f9b5 2000 	ldrsh.w	r2, [r5]
 8004038:	4628      	mov	r0, r5
 800403a:	4616      	mov	r6, r2
 800403c:	2101      	movs	r1, #1
 800403e:	2700      	movs	r7, #0
 8004040:	e009      	b.n	8004056 <acc_calibration_a121_calibrate+0x4d2>
 8004042:	42b2      	cmp	r2, r6
 8004044:	bfa8      	it	ge
 8004046:	460f      	movge	r7, r1
 8004048:	f101 0101 	add.w	r1, r1, #1
 800404c:	bfa8      	it	ge
 800404e:	4616      	movge	r6, r2
 8004050:	2920      	cmp	r1, #32
 8004052:	f000 86b7 	beq.w	8004dc4 <acc_calibration_a121_calibrate+0x1240>
 8004056:	4613      	mov	r3, r2
 8004058:	f930 2f02 	ldrsh.w	r2, [r0, #2]!
 800405c:	f5c3 7316 	rsb	r3, r3, #600	; 0x258
 8004060:	4413      	add	r3, r2
 8004062:	b29b      	uxth	r3, r3
 8004064:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 8004068:	d9eb      	bls.n	8004042 <acc_calibration_a121_calibrate+0x4be>
 800406a:	e5ad      	b.n	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800406c:	f7fe ff5a 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8004070:	2800      	cmp	r0, #0
 8004072:	f43f ada9 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004076:	2250      	movs	r2, #80	; 0x50
 8004078:	4649      	mov	r1, r9
 800407a:	4620      	mov	r0, r4
 800407c:	f7ff f94a 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8004080:	4621      	mov	r1, r4
 8004082:	4682      	mov	sl, r0
 8004084:	4861      	ldr	r0, [pc, #388]	; (800420c <acc_calibration_a121_calibrate+0x688>)
 8004086:	f7fc fcb1 	bl	80009ec <acc_diagnostic_log_scalar>
 800408a:	486a      	ldr	r0, [pc, #424]	; (8004234 <acc_calibration_a121_calibrate+0x6b0>)
 800408c:	f7fc fc56 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004090:	4650      	mov	r0, sl
 8004092:	2150      	movs	r1, #80	; 0x50
 8004094:	f7fc fc9a 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004098:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800409c:	f8cd 9010 	str.w	r9, [sp, #16]
 80040a0:	330a      	adds	r3, #10
 80040a2:	ee08 4a10 	vmov	s16, r4
 80040a6:	f04f 0b30 	mov.w	fp, #48	; 0x30
 80040aa:	4698      	mov	r8, r3
 80040ac:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8004244 <acc_calibration_a121_calibrate+0x6c0>
 80040b0:	f9ba 2000 	ldrsh.w	r2, [sl]
 80040b4:	f04f 0e00 	mov.w	lr, #0
 80040b8:	f647 7cff 	movw	ip, #32767	; 0x7fff
 80040bc:	4674      	mov	r4, lr
 80040be:	4666      	mov	r6, ip
 80040c0:	4655      	mov	r5, sl
 80040c2:	f64f 71ec 	movw	r1, #65516	; 0xffec
 80040c6:	f06f 031b 	mvn.w	r3, #27
 80040ca:	4648      	mov	r0, r9
 80040cc:	e015      	b.n	80040fa <acc_calibration_a121_calibrate+0x576>
 80040ce:	4562      	cmp	r2, ip
 80040d0:	bfbc      	itt	lt
 80040d2:	469e      	movlt	lr, r3
 80040d4:	4694      	movlt	ip, r2
 80040d6:	2924      	cmp	r1, #36	; 0x24
 80040d8:	d017      	beq.n	800410a <acc_calibration_a121_calibrate+0x586>
 80040da:	f935 2f02 	ldrsh.w	r2, [r5, #2]!
 80040de:	f835 3c02 	ldrh.w	r3, [r5, #-2]
 80040e2:	1ad3      	subs	r3, r2, r3
 80040e4:	b21b      	sxth	r3, r3
 80040e6:	429e      	cmp	r6, r3
 80040e8:	bfa8      	it	ge
 80040ea:	461e      	movge	r6, r3
 80040ec:	f101 0708 	add.w	r7, r1, #8
 80040f0:	4298      	cmp	r0, r3
 80040f2:	bfb8      	it	lt
 80040f4:	4618      	movlt	r0, r3
 80040f6:	b20b      	sxth	r3, r1
 80040f8:	b2b9      	uxth	r1, r7
 80040fa:	2a00      	cmp	r2, #0
 80040fc:	dae7      	bge.n	80040ce <acc_calibration_a121_calibrate+0x54a>
 80040fe:	4591      	cmp	r9, r2
 8004100:	dae9      	bge.n	80040d6 <acc_calibration_a121_calibrate+0x552>
 8004102:	2924      	cmp	r1, #36	; 0x24
 8004104:	461c      	mov	r4, r3
 8004106:	4691      	mov	r9, r2
 8004108:	d1e7      	bne.n	80040da <acc_calibration_a121_calibrate+0x556>
 800410a:	f5a0 501c 	sub.w	r0, r0, #9984	; 0x2700
 800410e:	3810      	subs	r0, #16
 8004110:	b280      	uxth	r0, r0
 8004112:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004116:	4298      	cmp	r0, r3
 8004118:	f63f ad56 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800411c:	2e00      	cmp	r6, #0
 800411e:	f47f ad53 	bne.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004122:	f519 4f00 	cmn.w	r9, #32768	; 0x8000
 8004126:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800412a:	f000 85e5 	beq.w	8004cf8 <acc_calibration_a121_calibrate+0x1174>
 800412e:	459c      	cmp	ip, r3
 8004130:	f000 86cd 	beq.w	8004ece <acc_calibration_a121_calibrate+0x134a>
 8004134:	ebae 0e04 	sub.w	lr, lr, r4
 8004138:	f1be 0f08 	cmp.w	lr, #8
 800413c:	f47f ad44 	bne.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004140:	ea4f 0ec9 	mov.w	lr, r9, lsl #3
 8004144:	ebac 0c09 	sub.w	ip, ip, r9
 8004148:	fb9e fcfc 	sdiv	ip, lr, ip
 800414c:	eba4 0e0c 	sub.w	lr, r4, ip
 8004150:	fa0f fe8e 	sxth.w	lr, lr
 8004154:	f1be 0f00 	cmp.w	lr, #0
 8004158:	f2c0 856a 	blt.w	8004c30 <acc_calibration_a121_calibrate+0x10ac>
 800415c:	f1be 0f1f 	cmp.w	lr, #31
 8004160:	f73f ad32 	bgt.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004164:	fa1f f58e 	uxth.w	r5, lr
 8004168:	4833      	ldr	r0, [pc, #204]	; (8004238 <acc_calibration_a121_calibrate+0x6b4>)
 800416a:	f880 b00d 	strb.w	fp, [r0, #13]
 800416e:	f10b 0b01 	add.w	fp, fp, #1
 8004172:	4629      	mov	r1, r5
 8004174:	fa5f fb8b 	uxtb.w	fp, fp
 8004178:	f7fc fc38 	bl	80009ec <acc_diagnostic_log_scalar>
 800417c:	f1bb 0f3a 	cmp.w	fp, #58	; 0x3a
 8004180:	f828 5f02 	strh.w	r5, [r8, #2]!
 8004184:	f10a 0a10 	add.w	sl, sl, #16
 8004188:	d190      	bne.n	80040ac <acc_calibration_a121_calibrate+0x528>
 800418a:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800418e:	482b      	ldr	r0, [pc, #172]	; (800423c <acc_calibration_a121_calibrate+0x6b8>)
 8004190:	f7fc fc34 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004194:	2360      	movs	r3, #96	; 0x60
 8004196:	9a03      	ldr	r2, [sp, #12]
 8004198:	9300      	str	r3, [sp, #0]
 800419a:	ee18 0a10 	vmov	r0, s16
 800419e:	4b28      	ldr	r3, [pc, #160]	; (8004240 <acc_calibration_a121_calibrate+0x6bc>)
 80041a0:	4649      	mov	r1, r9
 80041a2:	f7fe ff2f 	bl	8003004 <acc_sensor_a121_lut_buffer_write.constprop.0>
 80041a6:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80041aa:	4a1e      	ldr	r2, [pc, #120]	; (8004224 <acc_calibration_a121_calibrate+0x6a0>)
 80041ac:	899b      	ldrh	r3, [r3, #12]
 80041ae:	9300      	str	r3, [sp, #0]
 80041b0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80041b4:	491c      	ldr	r1, [pc, #112]	; (8004228 <acc_calibration_a121_calibrate+0x6a4>)
 80041b6:	88dd      	ldrh	r5, [r3, #6]
 80041b8:	ee18 0a10 	vmov	r0, s16
 80041bc:	2307      	movs	r3, #7
 80041be:	f7ff fa3d 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 80041c2:	4a18      	ldr	r2, [pc, #96]	; (8004224 <acc_calibration_a121_calibrate+0x6a0>)
 80041c4:	4918      	ldr	r1, [pc, #96]	; (8004228 <acc_calibration_a121_calibrate+0x6a4>)
 80041c6:	9500      	str	r5, [sp, #0]
 80041c8:	2308      	movs	r3, #8
 80041ca:	ee18 0a10 	vmov	r0, s16
 80041ce:	f7ff fa35 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 80041d2:	2303      	movs	r3, #3
 80041d4:	4a13      	ldr	r2, [pc, #76]	; (8004224 <acc_calibration_a121_calibrate+0x6a0>)
 80041d6:	4914      	ldr	r1, [pc, #80]	; (8004228 <acc_calibration_a121_calibrate+0x6a4>)
 80041d8:	9300      	str	r3, [sp, #0]
 80041da:	ee18 0a10 	vmov	r0, s16
 80041de:	2309      	movs	r3, #9
 80041e0:	f7ff fa2c 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 80041e4:	2306      	movs	r3, #6
 80041e6:	4a0f      	ldr	r2, [pc, #60]	; (8004224 <acc_calibration_a121_calibrate+0x6a0>)
 80041e8:	490f      	ldr	r1, [pc, #60]	; (8004228 <acc_calibration_a121_calibrate+0x6a4>)
 80041ea:	9300      	str	r3, [sp, #0]
 80041ec:	ee18 0a10 	vmov	r0, s16
 80041f0:	230a      	movs	r3, #10
 80041f2:	f7ff fa23 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 80041f6:	ee18 0a10 	vmov	r0, s16
 80041fa:	f44f 7170 	mov.w	r1, #960	; 0x3c0
 80041fe:	f7fc ffed 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004202:	2407      	movs	r4, #7
 8004204:	2800      	cmp	r0, #0
 8004206:	f47f aef7 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 800420a:	e4dd      	b.n	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800420c:	0800b03c 	.word	0x0800b03c
 8004210:	0800b090 	.word	0x0800b090
 8004214:	0800b09c 	.word	0x0800b09c
 8004218:	0800b458 	.word	0x0800b458
 800421c:	0800b464 	.word	0x0800b464
 8004220:	0800b46c 	.word	0x0800b46c
 8004224:	080088e0 	.word	0x080088e0
 8004228:	08008d68 	.word	0x08008d68
 800422c:	200000ac 	.word	0x200000ac
 8004230:	0800b140 	.word	0x0800b140
 8004234:	0800b184 	.word	0x0800b184
 8004238:	20000008 	.word	0x20000008
 800423c:	0800b19c 	.word	0x0800b19c
 8004240:	08008a20 	.word	0x08008a20
 8004244:	ffff8000 	.word	0xffff8000
 8004248:	f7fe fe6c 	bl	8002f24 <acc_a121_cal_session_ack_program>
 800424c:	2800      	cmp	r0, #0
 800424e:	f43f acbb 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004252:	4649      	mov	r1, r9
 8004254:	aa0b      	add	r2, sp, #44	; 0x2c
 8004256:	4620      	mov	r0, r4
 8004258:	f7ff f8a8 	bl	80033ac <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 800425c:	ab0b      	add	r3, sp, #44	; 0x2c
 800425e:	461d      	mov	r5, r3
 8004260:	4886      	ldr	r0, [pc, #536]	; (800447c <acc_calibration_a121_calibrate+0x8f8>)
 8004262:	9307      	str	r3, [sp, #28]
 8004264:	f7fc fb6a 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004268:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800426a:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8004494 <acc_calibration_a121_calibrate+0x910>
 800426e:	f8df 8228 	ldr.w	r8, [pc, #552]	; 8004498 <acc_calibration_a121_calibrate+0x914>
 8004272:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004276:	f7fc fba9 	bl	80009cc <acc_diagnostic_log_data_i16>
 800427a:	682a      	ldr	r2, [r5, #0]
 800427c:	9505      	str	r5, [sp, #20]
 800427e:	4613      	mov	r3, r2
 8004280:	f502 62c0 	add.w	r2, r2, #1536	; 0x600
 8004284:	9206      	str	r2, [sp, #24]
 8004286:	2200      	movs	r2, #0
 8004288:	9204      	str	r2, [sp, #16]
 800428a:	ee07 4a90 	vmov	s15, r4
 800428e:	aa44      	add	r2, sp, #272	; 0x110
 8004290:	9203      	str	r2, [sp, #12]
 8004292:	ae2c      	add	r6, sp, #176	; 0xb0
 8004294:	af43      	add	r7, sp, #268	; 0x10c
 8004296:	469a      	mov	sl, r3
 8004298:	ac14      	add	r4, sp, #80	; 0x50
 800429a:	4655      	mov	r5, sl
 800429c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80042a0:	f935 0b04 	ldrsh.w	r0, [r5], #4
 80042a4:	f7fd f9f0 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 80042a8:	f844 0b04 	str.w	r0, [r4], #4
 80042ac:	42a6      	cmp	r6, r4
 80042ae:	d1f5      	bne.n	800429c <acc_calibration_a121_calibrate+0x718>
 80042b0:	ac2b      	add	r4, sp, #172	; 0xac
 80042b2:	46a3      	mov	fp, r4
 80042b4:	4655      	mov	r5, sl
 80042b6:	f9b5 1062 	ldrsh.w	r1, [r5, #98]	; 0x62
 80042ba:	f9b5 0060 	ldrsh.w	r0, [r5, #96]	; 0x60
 80042be:	f7fd f9e3 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 80042c2:	f84b 0f04 	str.w	r0, [fp, #4]!
 80042c6:	455f      	cmp	r7, fp
 80042c8:	f105 0504 	add.w	r5, r5, #4
 80042cc:	d1f3      	bne.n	80042b6 <acc_calibration_a121_calibrate+0x732>
 80042ce:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 80042d2:	ad13      	add	r5, sp, #76	; 0x4c
 80042d4:	1898      	adds	r0, r3, r2
 80042d6:	2100      	movs	r1, #0
 80042d8:	f854 3f04 	ldr.w	r3, [r4, #4]!
 80042dc:	f855 2f04 	ldr.w	r2, [r5, #4]!
 80042e0:	1a9b      	subs	r3, r3, r2
 80042e2:	454b      	cmp	r3, r9
 80042e4:	f340 8462 	ble.w	8004bac <acc_calibration_a121_calibrate+0x1028>
 80042e8:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 80042ec:	3b7e      	subs	r3, #126	; 0x7e
 80042ee:	454b      	cmp	r3, r9
 80042f0:	dcfa      	bgt.n	80042e8 <acc_calibration_a121_calibrate+0x764>
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	bfb8      	it	lt
 80042f6:	425b      	neglt	r3, r3
 80042f8:	4299      	cmp	r1, r3
 80042fa:	bfb8      	it	lt
 80042fc:	4619      	movlt	r1, r3
 80042fe:	42a7      	cmp	r7, r4
 8004300:	f840 3b04 	str.w	r3, [r0], #4
 8004304:	d1e8      	bne.n	80042d8 <acc_calibration_a121_calibrate+0x754>
 8004306:	9b05      	ldr	r3, [sp, #20]
 8004308:	1049      	asrs	r1, r1, #1
 800430a:	f843 1f04 	str.w	r1, [r3, #4]!
 800430e:	9305      	str	r3, [sp, #20]
 8004310:	9b04      	ldr	r3, [sp, #16]
 8004312:	3360      	adds	r3, #96	; 0x60
 8004314:	9304      	str	r3, [sp, #16]
 8004316:	9b06      	ldr	r3, [sp, #24]
 8004318:	f10a 0ac0 	add.w	sl, sl, #192	; 0xc0
 800431c:	4553      	cmp	r3, sl
 800431e:	d1bb      	bne.n	8004298 <acc_calibration_a121_calibrate+0x714>
 8004320:	2000      	movs	r0, #0
 8004322:	ee17 4a90 	vmov	r4, s15
 8004326:	9d07      	ldr	r5, [sp, #28]
 8004328:	4601      	mov	r1, r0
 800432a:	4603      	mov	r3, r0
 800432c:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8004330:	428a      	cmp	r2, r1
 8004332:	bfc8      	it	gt
 8004334:	4618      	movgt	r0, r3
 8004336:	f103 0301 	add.w	r3, r3, #1
 800433a:	bfc8      	it	gt
 800433c:	4611      	movgt	r1, r2
 800433e:	2b08      	cmp	r3, #8
 8004340:	d1f4      	bne.n	800432c <acc_calibration_a121_calibrate+0x7a8>
 8004342:	ab0c      	add	r3, sp, #48	; 0x30
 8004344:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 8004348:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800434c:	9b03      	ldr	r3, [sp, #12]
 800434e:	f10d 02af 	add.w	r2, sp, #175	; 0xaf
 8004352:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 8004356:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
 800435a:	f851 3b04 	ldr.w	r3, [r1], #4
 800435e:	42ab      	cmp	r3, r5
 8004360:	bfac      	ite	ge
 8004362:	2300      	movge	r3, #0
 8004364:	2301      	movlt	r3, #1
 8004366:	f802 3f01 	strb.w	r3, [r2, #1]!
 800436a:	4290      	cmp	r0, r2
 800436c:	7613      	strb	r3, [r2, #24]
 800436e:	d1f4      	bne.n	800435a <acc_calibration_a121_calibrate+0x7d6>
 8004370:	2000      	movs	r0, #0
 8004372:	4605      	mov	r5, r0
 8004374:	2301      	movs	r3, #1
 8004376:	2d00      	cmp	r5, #0
 8004378:	f000 8432 	beq.w	8004be0 <acc_calibration_a121_calibrate+0x105c>
 800437c:	5cf2      	ldrb	r2, [r6, r3]
 800437e:	2a00      	cmp	r2, #0
 8004380:	f000 8426 	beq.w	8004bd0 <acc_calibration_a121_calibrate+0x104c>
 8004384:	3001      	adds	r0, #1
 8004386:	3301      	adds	r3, #1
 8004388:	2b30      	cmp	r3, #48	; 0x30
 800438a:	d1f4      	bne.n	8004376 <acc_calibration_a121_calibrate+0x7f2>
 800438c:	f1a0 030c 	sub.w	r3, r0, #12
 8004390:	2b08      	cmp	r3, #8
 8004392:	f63f ac19 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004396:	eb05 0550 	add.w	r5, r5, r0, lsr #1
 800439a:	2d17      	cmp	r5, #23
 800439c:	d902      	bls.n	80043a4 <acc_calibration_a121_calibrate+0x820>
 800439e:	3d18      	subs	r5, #24
 80043a0:	2d17      	cmp	r5, #23
 80043a2:	d8fc      	bhi.n	800439e <acc_calibration_a121_calibrate+0x81a>
 80043a4:	4629      	mov	r1, r5
 80043a6:	4836      	ldr	r0, [pc, #216]	; (8004480 <acc_calibration_a121_calibrate+0x8fc>)
 80043a8:	f7fc fb20 	bl	80009ec <acc_diagnostic_log_scalar>
 80043ac:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80043b0:	4834      	ldr	r0, [pc, #208]	; (8004484 <acc_calibration_a121_calibrate+0x900>)
 80043b2:	811d      	strh	r5, [r3, #8]
 80043b4:	f7fc fb22 	bl	80009fc <acc_diagnostic_log_set_scope>
 80043b8:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80043bc:	891b      	ldrh	r3, [r3, #8]
 80043be:	009b      	lsls	r3, r3, #2
 80043c0:	b29b      	uxth	r3, r3
 80043c2:	f103 0530 	add.w	r5, r3, #48	; 0x30
 80043c6:	b2ad      	uxth	r5, r5
 80043c8:	2d5f      	cmp	r5, #95	; 0x5f
 80043ca:	f240 857a 	bls.w	8004ec2 <acc_calibration_a121_calibrate+0x133e>
 80043ce:	4a2e      	ldr	r2, [pc, #184]	; (8004488 <acc_calibration_a121_calibrate+0x904>)
 80043d0:	fba2 1205 	umull	r1, r2, r2, r5
 80043d4:	0992      	lsrs	r2, r2, #6
 80043d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80043da:	eba5 1242 	sub.w	r2, r5, r2, lsl #5
 80043de:	b292      	uxth	r2, r2
 80043e0:	2600      	movs	r6, #0
 80043e2:	461d      	mov	r5, r3
 80043e4:	4637      	mov	r7, r6
 80043e6:	4613      	mov	r3, r2
 80043e8:	f04f 0801 	mov.w	r8, #1
 80043ec:	4a27      	ldr	r2, [pc, #156]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 80043ee:	4928      	ldr	r1, [pc, #160]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 80043f0:	9300      	str	r3, [sp, #0]
 80043f2:	4620      	mov	r0, r4
 80043f4:	2321      	movs	r3, #33	; 0x21
 80043f6:	f7ff f921 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 80043fa:	4a24      	ldr	r2, [pc, #144]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 80043fc:	4924      	ldr	r1, [pc, #144]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 80043fe:	9500      	str	r5, [sp, #0]
 8004400:	2322      	movs	r3, #34	; 0x22
 8004402:	4620      	mov	r0, r4
 8004404:	f7ff f91a 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004408:	2503      	movs	r5, #3
 800440a:	4a20      	ldr	r2, [pc, #128]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 800440c:	4920      	ldr	r1, [pc, #128]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 800440e:	f8cd 8000 	str.w	r8, [sp]
 8004412:	2301      	movs	r3, #1
 8004414:	4620      	mov	r0, r4
 8004416:	f7ff f911 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 800441a:	4a1c      	ldr	r2, [pc, #112]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 800441c:	491c      	ldr	r1, [pc, #112]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 800441e:	9500      	str	r5, [sp, #0]
 8004420:	2302      	movs	r3, #2
 8004422:	4620      	mov	r0, r4
 8004424:	f7ff f90a 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004428:	4a18      	ldr	r2, [pc, #96]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 800442a:	4919      	ldr	r1, [pc, #100]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 800442c:	9700      	str	r7, [sp, #0]
 800442e:	462b      	mov	r3, r5
 8004430:	4620      	mov	r0, r4
 8004432:	f7ff f903 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004436:	4a15      	ldr	r2, [pc, #84]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 8004438:	4915      	ldr	r1, [pc, #84]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 800443a:	9600      	str	r6, [sp, #0]
 800443c:	2304      	movs	r3, #4
 800443e:	4620      	mov	r0, r4
 8004440:	f7ff f8fc 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004444:	4a11      	ldr	r2, [pc, #68]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 8004446:	4912      	ldr	r1, [pc, #72]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 8004448:	f8cd 8000 	str.w	r8, [sp]
 800444c:	2305      	movs	r3, #5
 800444e:	4620      	mov	r0, r4
 8004450:	f7ff f8f4 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004454:	2300      	movs	r3, #0
 8004456:	4a0d      	ldr	r2, [pc, #52]	; (800448c <acc_calibration_a121_calibrate+0x908>)
 8004458:	490d      	ldr	r1, [pc, #52]	; (8004490 <acc_calibration_a121_calibrate+0x90c>)
 800445a:	9300      	str	r3, [sp, #0]
 800445c:	4620      	mov	r0, r4
 800445e:	2306      	movs	r3, #6
 8004460:	f7ff f8ec 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004464:	4620      	mov	r0, r4
 8004466:	f240 31d5 	movw	r1, #981	; 0x3d5
 800446a:	f7fc feb7 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 800446e:	2408      	movs	r4, #8
 8004470:	2800      	cmp	r0, #0
 8004472:	f47f adc1 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004476:	f7ff bba7 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800447a:	bf00      	nop
 800447c:	0800b1b4 	.word	0x0800b1b4
 8004480:	0800b1d8 	.word	0x0800b1d8
 8004484:	0800b1e4 	.word	0x0800b1e4
 8004488:	aaaaaaab 	.word	0xaaaaaaab
 800448c:	080088e0 	.word	0x080088e0
 8004490:	08008d68 	.word	0x08008d68
 8004494:	0003243f 	.word	0x0003243f
 8004498:	fffcdbc1 	.word	0xfffcdbc1
 800449c:	f7fe fd42 	bl	8002f24 <acc_a121_cal_session_ack_program>
 80044a0:	9005      	str	r0, [sp, #20]
 80044a2:	2800      	cmp	r0, #0
 80044a4:	f43f ab90 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 80044a8:	4bd1      	ldr	r3, [pc, #836]	; (80047f0 <acc_calibration_a121_calibrate+0xc6c>)
 80044aa:	f8dd 1740 	ldr.w	r1, [sp, #1856]	; 0x740
 80044ae:	4ad1      	ldr	r2, [pc, #836]	; (80047f4 <acc_calibration_a121_calibrate+0xc70>)
 80044b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80044b2:	f8b1 507c 	ldrh.w	r5, [r1, #124]	; 0x7c
 80044b6:	fba2 2303 	umull	r2, r3, r2, r3
 80044ba:	099b      	lsrs	r3, r3, #6
 80044bc:	4649      	mov	r1, r9
 80044be:	aa0c      	add	r2, sp, #48	; 0x30
 80044c0:	4620      	mov	r0, r4
 80044c2:	fb05 f503 	mul.w	r5, r5, r3
 80044c6:	f7fe ff71 	bl	80033ac <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 80044ca:	48cb      	ldr	r0, [pc, #812]	; (80047f8 <acc_calibration_a121_calibrate+0xc74>)
 80044cc:	f7fc fa36 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80044d0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80044d2:	f44f 7140 	mov.w	r1, #768	; 0x300
 80044d6:	f7fc fa79 	bl	80009cc <acc_diagnostic_log_data_i16>
 80044da:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80044dc:	ab44      	add	r3, sp, #272	; 0x110
 80044de:	9303      	str	r3, [sp, #12]
 80044e0:	3602      	adds	r6, #2
 80044e2:	f50d 7886 	add.w	r8, sp, #268	; 0x10c
 80044e6:	f20d 770c 	addw	r7, sp, #1804	; 0x70c
 80044ea:	f9b6 1000 	ldrsh.w	r1, [r6]
 80044ee:	f936 0c02 	ldrsh.w	r0, [r6, #-2]
 80044f2:	f7fd f8c9 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 80044f6:	f848 0f04 	str.w	r0, [r8, #4]!
 80044fa:	4547      	cmp	r7, r8
 80044fc:	f106 0604 	add.w	r6, r6, #4
 8004500:	d1f3      	bne.n	80044ea <acc_calibration_a121_calibrate+0x966>
 8004502:	2300      	movs	r3, #0
 8004504:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8004508:	469a      	mov	sl, r3
 800450a:	e9cd 332c 	strd	r3, r3, [sp, #176]	; 0xb0
 800450e:	e9cd 332e 	strd	r3, r3, [sp, #184]	; 0xb8
 8004512:	e9cd 3330 	strd	r3, r3, [sp, #192]	; 0xc0
 8004516:	e9cd 3332 	strd	r3, r3, [sp, #200]	; 0xc8
 800451a:	9304      	str	r3, [sp, #16]
 800451c:	00d3      	lsls	r3, r2, #3
 800451e:	9a03      	ldr	r2, [sp, #12]
 8004520:	4fb6      	ldr	r7, [pc, #728]	; (80047fc <acc_calibration_a121_calibrate+0xc78>)
 8004522:	ae2c      	add	r6, sp, #176	; 0xb0
 8004524:	f102 095c 	add.w	r9, r2, #92	; 0x5c
 8004528:	46b3      	mov	fp, r6
 800452a:	9606      	str	r6, [sp, #24]
 800452c:	4656      	mov	r6, sl
 800452e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8004532:	ee07 4a90 	vmov	s15, r4
 8004536:	f64f 78ff 	movw	r8, #65535	; 0xffff
 800453a:	464c      	mov	r4, r9
 800453c:	4699      	mov	r9, r3
 800453e:	f1a4 005c 	sub.w	r0, r4, #92	; 0x5c
 8004542:	f7fc fa07 	bl	8000954 <acc_cal_algorithms_phase_unwrap.constprop.0>
 8004546:	f1a4 0c60 	sub.w	ip, r4, #96	; 0x60
 800454a:	2000      	movs	r0, #0
 800454c:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 8004550:	f8dc 2060 	ldr.w	r2, [ip, #96]	; 0x60
 8004554:	4564      	cmp	r4, ip
 8004556:	eba3 0302 	sub.w	r3, r3, r2
 800455a:	4418      	add	r0, r3
 800455c:	d1f6      	bne.n	800454c <acc_calibration_a121_calibrate+0x9c8>
 800455e:	2800      	cmp	r0, #0
 8004560:	f2c0 8358 	blt.w	8004c14 <acc_calibration_a121_calibrate+0x1090>
 8004564:	0980      	lsrs	r0, r0, #6
 8004566:	f640 5394 	movw	r3, #3476	; 0xd94
 800456a:	fb03 f000 	mul.w	r0, r3, r0
 800456e:	0d40      	lsrs	r0, r0, #21
 8004570:	fb05 f000 	mul.w	r0, r5, r0
 8004574:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8004578:	f8cb 0000 	str.w	r0, [fp]
 800457c:	b126      	cbz	r6, 8004588 <acc_calibration_a121_calibrate+0xa04>
 800457e:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 8004582:	4298      	cmp	r0, r3
 8004584:	f080 851b 	bcs.w	8004fbe <acc_calibration_a121_calibrate+0x143a>
 8004588:	f8db 3000 	ldr.w	r3, [fp]
 800458c:	f1a3 7366 	sub.w	r3, r3, #60293120	; 0x3980000
 8004590:	f5a3 334a 	sub.w	r3, r3, #206848	; 0x32800
 8004594:	3b20      	subs	r3, #32
 8004596:	2b00      	cmp	r3, #0
 8004598:	bfb8      	it	lt
 800459a:	425b      	neglt	r3, r3
 800459c:	42bb      	cmp	r3, r7
 800459e:	d203      	bcs.n	80045a8 <acc_calibration_a121_calibrate+0xa24>
 80045a0:	461f      	mov	r7, r3
 80045a2:	46b0      	mov	r8, r6
 80045a4:	f8cd a010 	str.w	sl, [sp, #16]
 80045a8:	1c72      	adds	r2, r6, #1
 80045aa:	b296      	uxth	r6, r2
 80045ac:	2e08      	cmp	r6, #8
 80045ae:	f10b 0b04 	add.w	fp, fp, #4
 80045b2:	f104 04c0 	add.w	r4, r4, #192	; 0xc0
 80045b6:	d1c2      	bne.n	800453e <acc_calibration_a121_calibrate+0x9ba>
 80045b8:	9a04      	ldr	r2, [sp, #16]
 80045ba:	9e06      	ldr	r6, [sp, #24]
 80045bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80045c0:	ee17 4a90 	vmov	r4, s15
 80045c4:	2a00      	cmp	r2, #0
 80045c6:	bf08      	it	eq
 80045c8:	4698      	moveq	r8, r3
 80045ca:	4d8d      	ldr	r5, [pc, #564]	; (8004800 <acc_calibration_a121_calibrate+0xc7c>)
 80045cc:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 80045d0:	f105 0a18 	add.w	sl, r5, #24
 80045d4:	2730      	movs	r7, #48	; 0x30
 80045d6:	f885 7024 	strb.w	r7, [r5, #36]	; 0x24
 80045da:	3701      	adds	r7, #1
 80045dc:	f859 1f04 	ldr.w	r1, [r9, #4]!
 80045e0:	4650      	mov	r0, sl
 80045e2:	b2ff      	uxtb	r7, r7
 80045e4:	f7fc fa02 	bl	80009ec <acc_diagnostic_log_scalar>
 80045e8:	2f38      	cmp	r7, #56	; 0x38
 80045ea:	d1f4      	bne.n	80045d6 <acc_calibration_a121_calibrate+0xa52>
 80045ec:	9b04      	ldr	r3, [sp, #16]
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	f43f aaea 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 80045f4:	4641      	mov	r1, r8
 80045f6:	4883      	ldr	r0, [pc, #524]	; (8004804 <acc_calibration_a121_calibrate+0xc80>)
 80045f8:	f7fc f9f8 	bl	80009ec <acc_diagnostic_log_scalar>
 80045fc:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004600:	4881      	ldr	r0, [pc, #516]	; (8004808 <acc_calibration_a121_calibrate+0xc84>)
 8004602:	f8a3 8022 	strh.w	r8, [r3, #34]	; 0x22
 8004606:	f7fc f9f9 	bl	80009fc <acc_diagnostic_log_set_scope>
 800460a:	4980      	ldr	r1, [pc, #512]	; (800480c <acc_calibration_a121_calibrate+0xc88>)
 800460c:	4a80      	ldr	r2, [pc, #512]	; (8004810 <acc_calibration_a121_calibrate+0xc8c>)
 800460e:	f8cd 8000 	str.w	r8, [sp]
 8004612:	230c      	movs	r3, #12
 8004614:	4620      	mov	r0, r4
 8004616:	f7ff f811 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 800461a:	4620      	mov	r0, r4
 800461c:	f240 31fd 	movw	r1, #1021	; 0x3fd
 8004620:	f7fc fddc 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004624:	2800      	cmp	r0, #0
 8004626:	f43f aacf 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800462a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800462c:	ed9f 6a79 	vldr	s12, [pc, #484]	; 8004814 <acc_calibration_a121_calibrate+0xc90>
 8004630:	f102 00c0 	add.w	r0, r2, #192	; 0xc0
 8004634:	4607      	mov	r7, r0
 8004636:	f502 6ed8 	add.w	lr, r2, #1728	; 0x6c0
 800463a:	46b4      	mov	ip, r6
 800463c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004640:	f1a7 03c0 	sub.w	r3, r7, #192	; 0xc0
 8004644:	2500      	movs	r5, #0
 8004646:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 800464a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800464e:	fb04 f404 	mul.w	r4, r4, r4
 8004652:	3304      	adds	r3, #4
 8004654:	fb01 4101 	mla	r1, r1, r1, r4
 8004658:	429f      	cmp	r7, r3
 800465a:	440d      	add	r5, r1
 800465c:	d1f3      	bne.n	8004646 <acc_calibration_a121_calibrate+0xac2>
 800465e:	ee07 5a90 	vmov	s15, r5
 8004662:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8004666:	37c0      	adds	r7, #192	; 0xc0
 8004668:	eec7 7a06 	vdiv.f32	s15, s14, s12
 800466c:	45be      	cmp	lr, r7
 800466e:	eeb1 7ae7 	vsqrt.f32	s14, s15
 8004672:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004676:	ecec 7a01 	vstmia	ip!, {s15}
 800467a:	d1e1      	bne.n	8004640 <acc_calibration_a121_calibrate+0xabc>
 800467c:	9b03      	ldr	r3, [sp, #12]
 800467e:	f502 61c0 	add.w	r1, r2, #1536	; 0x600
 8004682:	e000      	b.n	8004686 <acc_calibration_a121_calibrate+0xb02>
 8004684:	30c0      	adds	r0, #192	; 0xc0
 8004686:	f9b2 4000 	ldrsh.w	r4, [r2]
 800468a:	ecf6 5a01 	vldmia	r6!, {s11}
 800468e:	ee06 4a10 	vmov	s12, r4
 8004692:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8004696:	ee06 4a90 	vmov	s13, r4
 800469a:	f9b2 4060 	ldrsh.w	r4, [r2, #96]	; 0x60
 800469e:	f9b2 2062 	ldrsh.w	r2, [r2, #98]	; 0x62
 80046a2:	ee07 4a10 	vmov	s14, r4
 80046a6:	ee07 2a90 	vmov	s15, r2
 80046aa:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80046ae:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80046b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80046b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80046ba:	ee26 6a25 	vmul.f32	s12, s12, s11
 80046be:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80046c2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80046c6:	ee27 7a25 	vmul.f32	s14, s14, s11
 80046ca:	ee26 5a06 	vmul.f32	s10, s12, s12
 80046ce:	ee67 5a07 	vmul.f32	s11, s14, s14
 80046d2:	ee26 6a26 	vmul.f32	s12, s12, s13
 80046d6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80046da:	ee66 6aa6 	vmul.f32	s13, s13, s13
 80046de:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80046e2:	4281      	cmp	r1, r0
 80046e4:	ed83 5a00 	vstr	s10, [r3]
 80046e8:	ed83 6a01 	vstr	s12, [r3, #4]
 80046ec:	edc3 6a02 	vstr	s13, [r3, #8]
 80046f0:	edc3 5a18 	vstr	s11, [r3, #96]	; 0x60
 80046f4:	ed83 7a19 	vstr	s14, [r3, #100]	; 0x64
 80046f8:	edc3 7a1a 	vstr	s15, [r3, #104]	; 0x68
 80046fc:	4602      	mov	r2, r0
 80046fe:	f103 030c 	add.w	r3, r3, #12
 8004702:	d1bf      	bne.n	8004684 <acc_calibration_a121_calibrate+0xb00>
 8004704:	9803      	ldr	r0, [sp, #12]
 8004706:	a914      	add	r1, sp, #80	; 0x50
 8004708:	2210      	movs	r2, #16
 800470a:	f7fc fefb 	bl	8001504 <least_sqr_fit>
 800470e:	2800      	cmp	r0, #0
 8004710:	f43f aa5a 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004714:	ed9d 6a14 	vldr	s12, [sp, #80]	; 0x50
 8004718:	ed9d 5a15 	vldr	s10, [sp, #84]	; 0x54
 800471c:	ed9d 7a16 	vldr	s14, [sp, #88]	; 0x58
 8004720:	eddf 4a3d 	vldr	s9, [pc, #244]	; 8004818 <acc_calibration_a121_calibrate+0xc94>
 8004724:	ed9f 4a3d 	vldr	s8, [pc, #244]	; 800481c <acc_calibration_a121_calibrate+0xc98>
 8004728:	eef1 6ac6 	vsqrt.f32	s13, s12
 800472c:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
 8004730:	ee26 6a27 	vmul.f32	s12, s12, s15
 8004734:	ee65 7a05 	vmul.f32	s15, s10, s10
 8004738:	ee26 6a07 	vmul.f32	s12, s12, s14
 800473c:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8004740:	ee36 6a67 	vsub.f32	s12, s12, s15
 8004744:	eec5 7aa6 	vdiv.f32	s15, s11, s13
 8004748:	eeb1 7ac6 	vsqrt.f32	s14, s12
 800474c:	eeb6 6a08 	vmov.f32	s12, #104	; 0x3f400000  0.750
 8004750:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8004754:	ee27 7a87 	vmul.f32	s14, s15, s14
 8004758:	ee66 6aa4 	vmul.f32	s13, s13, s9
 800475c:	ee67 7a85 	vmul.f32	s15, s15, s10
 8004760:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 8004764:	ee37 7a46 	vsub.f32	s14, s14, s12
 8004768:	ee77 7a85 	vadd.f32	s15, s15, s10
 800476c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8004770:	eeb3 6a0f 	vmov.f32	s12, #63	; 0x41f80000  31.0
 8004774:	ee67 7a84 	vmul.f32	s15, s15, s8
 8004778:	ee27 7a24 	vmul.f32	s14, s14, s9
 800477c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8004780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004784:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8004788:	ee37 7a25 	vadd.f32	s14, s14, s11
 800478c:	f300 8240 	bgt.w	8004c10 <acc_calibration_a121_calibrate+0x108c>
 8004790:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8004794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004798:	bf48      	it	mi
 800479a:	2100      	movmi	r1, #0
 800479c:	f140 842d 	bpl.w	8004ffa <acc_calibration_a121_calibrate+0x1476>
 80047a0:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8004820 <acc_calibration_a121_calibrate+0xc9c>
 80047a4:	eef4 7ae6 	vcmpe.f32	s15, s13
 80047a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047ac:	f300 822e 	bgt.w	8004c0c <acc_calibration_a121_calibrate+0x1088>
 80047b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047b8:	bf48      	it	mi
 80047ba:	2300      	movmi	r3, #0
 80047bc:	f140 8414 	bpl.w	8004fe8 <acc_calibration_a121_calibrate+0x1464>
 80047c0:	eef3 7a0f 	vmov.f32	s15, #63	; 0x41f80000  31.0
 80047c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80047c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047cc:	f300 821b 	bgt.w	8004c06 <acc_calibration_a121_calibrate+0x1082>
 80047d0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80047d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047d8:	bf48      	it	mi
 80047da:	2200      	movmi	r2, #0
 80047dc:	f140 83fb 	bpl.w	8004fd6 <acc_calibration_a121_calibrate+0x1452>
 80047e0:	430b      	orrs	r3, r1
 80047e2:	4313      	orrs	r3, r2
 80047e4:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 80047e8:	2409      	movs	r4, #9
 80047ea:	f8a2 3056 	strh.w	r3, [r2, #86]	; 0x56
 80047ee:	e1ca      	b.n	8004b86 <acc_calibration_a121_calibrate+0x1002>
 80047f0:	200000ac 	.word	0x200000ac
 80047f4:	10624dd3 	.word	0x10624dd3
 80047f8:	0800b200 	.word	0x0800b200
 80047fc:	000f4240 	.word	0x000f4240
 8004800:	20000000 	.word	0x20000000
 8004804:	0800b224 	.word	0x0800b224
 8004808:	0800b234 	.word	0x0800b234
 800480c:	08008d68 	.word	0x08008d68
 8004810:	080088e0 	.word	0x080088e0
 8004814:	42400000 	.word	0x42400000
 8004818:	42800000 	.word	0x42800000
 800481c:	42000000 	.word	0x42000000
 8004820:	427c0000 	.word	0x427c0000
 8004824:	f7fe fb7e 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8004828:	2800      	cmp	r0, #0
 800482a:	f43f a9cd 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800482e:	4649      	mov	r1, r9
 8004830:	2210      	movs	r2, #16
 8004832:	4620      	mov	r0, r4
 8004834:	f7fe fd6e 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8004838:	4680      	mov	r8, r0
 800483a:	4872      	ldr	r0, [pc, #456]	; (8004a04 <acc_calibration_a121_calibrate+0xe80>)
 800483c:	f7fc f87e 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004840:	4640      	mov	r0, r8
 8004842:	2110      	movs	r1, #16
 8004844:	f7fc f8c2 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004848:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800484c:	f8b3 6056 	ldrh.w	r6, [r3, #86]	; 0x56
 8004850:	2100      	movs	r1, #0
 8004852:	f006 0c1f 	and.w	ip, r6, #31
 8004856:	f3c6 1044 	ubfx	r0, r6, #5, #5
 800485a:	0ab6      	lsrs	r6, r6, #10
 800485c:	f108 0e02 	add.w	lr, r8, #2
 8004860:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
 8004864:	3030      	adds	r0, #48	; 0x30
 8004866:	3e20      	subs	r6, #32
 8004868:	9103      	str	r1, [sp, #12]
 800486a:	468b      	mov	fp, r1
 800486c:	468a      	mov	sl, r1
 800486e:	460f      	mov	r7, r1
 8004870:	e008      	b.n	8004884 <acc_calibration_a121_calibrate+0xd00>
 8004872:	455b      	cmp	r3, fp
 8004874:	4657      	mov	r7, sl
 8004876:	f200 81e7 	bhi.w	8004c48 <acc_calibration_a121_calibrate+0x10c4>
 800487a:	469a      	mov	sl, r3
 800487c:	3101      	adds	r1, #1
 800487e:	2908      	cmp	r1, #8
 8004880:	f000 81e6 	beq.w	8004c50 <acc_calibration_a121_calibrate+0x10cc>
 8004884:	f938 2021 	ldrsh.w	r2, [r8, r1, lsl #2]
 8004888:	f93e 3021 	ldrsh.w	r3, [lr, r1, lsl #2]
 800488c:	fb0c f202 	mul.w	r2, ip, r2
 8004890:	fb03 f906 	mul.w	r9, r3, r6
 8004894:	2a00      	cmp	r2, #0
 8004896:	fb03 f300 	mul.w	r3, r3, r0
 800489a:	bfb8      	it	lt
 800489c:	323f      	addlt	r2, #63	; 0x3f
 800489e:	f1b9 0f00 	cmp.w	r9, #0
 80048a2:	bfb8      	it	lt
 80048a4:	f109 091f 	addlt.w	r9, r9, #31
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	bfb8      	it	lt
 80048ac:	333f      	addlt	r3, #63	; 0x3f
 80048ae:	1192      	asrs	r2, r2, #6
 80048b0:	eb02 1269 	add.w	r2, r2, r9, asr #5
 80048b4:	f343 138f 	sbfx	r3, r3, #6, #16
 80048b8:	b212      	sxth	r2, r2
 80048ba:	fb03 f303 	mul.w	r3, r3, r3
 80048be:	fb02 3302 	mla	r3, r2, r2, r3
 80048c2:	42bb      	cmp	r3, r7
 80048c4:	b28d      	uxth	r5, r1
 80048c6:	d9d9      	bls.n	800487c <acc_calibration_a121_calibrate+0xcf8>
 80048c8:	4553      	cmp	r3, sl
 80048ca:	d8d2      	bhi.n	8004872 <acc_calibration_a121_calibrate+0xcee>
 80048cc:	461f      	mov	r7, r3
 80048ce:	e7d5      	b.n	800487c <acc_calibration_a121_calibrate+0xcf8>
 80048d0:	f7fe fb28 	bl	8002f24 <acc_a121_cal_session_ack_program>
 80048d4:	2800      	cmp	r0, #0
 80048d6:	f43f a977 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 80048da:	4649      	mov	r1, r9
 80048dc:	2260      	movs	r2, #96	; 0x60
 80048de:	4620      	mov	r0, r4
 80048e0:	f7fe fd18 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 80048e4:	4605      	mov	r5, r0
 80048e6:	4848      	ldr	r0, [pc, #288]	; (8004a08 <acc_calibration_a121_calibrate+0xe84>)
 80048e8:	f7fc f828 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80048ec:	4628      	mov	r0, r5
 80048ee:	2160      	movs	r1, #96	; 0x60
 80048f0:	f7fc f86c 	bl	80009cc <acc_diagnostic_log_data_i16>
 80048f4:	ab44      	add	r3, sp, #272	; 0x110
 80048f6:	9303      	str	r3, [sp, #12]
 80048f8:	1caf      	adds	r7, r5, #2
 80048fa:	4699      	mov	r9, r3
 80048fc:	f04f 0800 	mov.w	r8, #0
 8004900:	f640 36b7 	movw	r6, #2999	; 0xbb7
 8004904:	e007      	b.n	8004916 <acc_calibration_a121_calibrate+0xd92>
 8004906:	f7fc febf 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 800490a:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
 800490e:	f849 0b04 	str.w	r0, [r9], #4
 8004912:	f000 82eb 	beq.w	8004eec <acc_calibration_a121_calibrate+0x1368>
 8004916:	f937 1028 	ldrsh.w	r1, [r7, r8, lsl #2]
 800491a:	f935 0028 	ldrsh.w	r0, [r5, r8, lsl #2]
 800491e:	fb01 f301 	mul.w	r3, r1, r1
 8004922:	fb00 3300 	mla	r3, r0, r0, r3
 8004926:	42b3      	cmp	r3, r6
 8004928:	f108 0801 	add.w	r8, r8, #1
 800492c:	dceb      	bgt.n	8004906 <acc_calibration_a121_calibrate+0xd82>
 800492e:	f7ff b94b 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004932:	f7fe faf7 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8004936:	2800      	cmp	r0, #0
 8004938:	f43f a946 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800493c:	aa0a      	add	r2, sp, #40	; 0x28
 800493e:	4649      	mov	r1, r9
 8004940:	4620      	mov	r0, r4
 8004942:	f7fe fd33 	bl	80033ac <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 8004946:	4831      	ldr	r0, [pc, #196]	; (8004a0c <acc_calibration_a121_calibrate+0xe88>)
 8004948:	f7fb fff8 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 800494c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800494e:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004952:	f7fc f843 	bl	80009dc <acc_diagnostic_log_data_u16>
 8004956:	ae0c      	add	r6, sp, #48	; 0x30
 8004958:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800495a:	2500      	movs	r5, #0
 800495c:	e9cd 6500 	strd	r6, r5, [sp]
 8004960:	4638      	mov	r0, r7
 8004962:	ab0b      	add	r3, sp, #44	; 0x2c
 8004964:	aa44      	add	r2, sp, #272	; 0x110
 8004966:	f44f 7190 	mov.w	r1, #288	; 0x120
 800496a:	6035      	str	r5, [r6, #0]
 800496c:	950b      	str	r5, [sp, #44]	; 0x2c
 800496e:	9514      	str	r5, [sp, #80]	; 0x50
 8004970:	952c      	str	r5, [sp, #176]	; 0xb0
 8004972:	f7fb fef3 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004976:	2800      	cmp	r0, #0
 8004978:	f43f a926 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 800497c:	ab2c      	add	r3, sp, #176	; 0xb0
 800497e:	9300      	str	r3, [sp, #0]
 8004980:	9501      	str	r5, [sp, #4]
 8004982:	ab14      	add	r3, sp, #80	; 0x50
 8004984:	aa44      	add	r2, sp, #272	; 0x110
 8004986:	f507 7010 	add.w	r0, r7, #576	; 0x240
 800498a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800498e:	f7fb fee5 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004992:	2800      	cmp	r0, #0
 8004994:	f43f a918 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004998:	6836      	ldr	r6, [r6, #0]
 800499a:	9d2c      	ldr	r5, [sp, #176]	; 0xb0
 800499c:	4b1c      	ldr	r3, [pc, #112]	; (8004a10 <acc_calibration_a121_calibrate+0xe8c>)
 800499e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80049a0:	481c      	ldr	r0, [pc, #112]	; (8004a14 <acc_calibration_a121_calibrate+0xe90>)
 80049a2:	1bad      	subs	r5, r5, r6
 80049a4:	f248 5155 	movw	r1, #34133	; 0x8555
 80049a8:	fb03 f305 	mul.w	r3, r3, r5
 80049ac:	fb01 f606 	mul.w	r6, r1, r6
 80049b0:	fb01 f202 	mul.w	r2, r1, r2
 80049b4:	0c1b      	lsrs	r3, r3, #16
 80049b6:	fb01 f105 	mul.w	r1, r1, r5
 80049ba:	f8dd 5740 	ldr.w	r5, [sp, #1856]	; 0x740
 80049be:	0b52      	lsrs	r2, r2, #13
 80049c0:	ebc3 3356 	rsb	r3, r3, r6, lsr #13
 80049c4:	e9c5 1217 	strd	r1, r2, [r5, #92]	; 0x5c
 80049c8:	65ab      	str	r3, [r5, #88]	; 0x58
 80049ca:	f7fc f80f 	bl	80009ec <acc_diagnostic_log_scalar>
 80049ce:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049d2:	4811      	ldr	r0, [pc, #68]	; (8004a18 <acc_calibration_a121_calibrate+0xe94>)
 80049d4:	6d99      	ldr	r1, [r3, #88]	; 0x58
 80049d6:	f7fc f809 	bl	80009ec <acc_diagnostic_log_scalar>
 80049da:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80049de:	480f      	ldr	r0, [pc, #60]	; (8004a1c <acc_calibration_a121_calibrate+0xe98>)
 80049e0:	6e19      	ldr	r1, [r3, #96]	; 0x60
 80049e2:	f7fc f803 	bl	80009ec <acc_diagnostic_log_scalar>
 80049e6:	480e      	ldr	r0, [pc, #56]	; (8004a20 <acc_calibration_a121_calibrate+0xe9c>)
 80049e8:	f7fc f808 	bl	80009fc <acc_diagnostic_log_set_scope>
 80049ec:	4620      	mov	r0, r4
 80049ee:	f44f 6192 	mov.w	r1, #1168	; 0x490
 80049f2:	f7fc fbf3 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 80049f6:	240c      	movs	r4, #12
 80049f8:	2800      	cmp	r0, #0
 80049fa:	f47f aafd 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 80049fe:	f7ff b8e3 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004a02:	bf00      	nop
 8004a04:	0800b250 	.word	0x0800b250
 8004a08:	0800b274 	.word	0x0800b274
 8004a0c:	0800b300 	.word	0x0800b300
 8004a10:	00021554 	.word	0x00021554
 8004a14:	0800b314 	.word	0x0800b314
 8004a18:	0800b328 	.word	0x0800b328
 8004a1c:	0800b33c 	.word	0x0800b33c
 8004a20:	0800b34c 	.word	0x0800b34c
 8004a24:	f7fe fa7e 	bl	8002f24 <acc_a121_cal_session_ack_program>
 8004a28:	2800      	cmp	r0, #0
 8004a2a:	f43f a8cd 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004a2e:	4649      	mov	r1, r9
 8004a30:	f44f 62d8 	mov.w	r2, #1728	; 0x6c0
 8004a34:	4620      	mov	r0, r4
 8004a36:	f7fe fc6d 	bl	8003314 <internal_buffer_processed_read.part.0.constprop.0>
 8004a3a:	4604      	mov	r4, r0
 8004a3c:	48c9      	ldr	r0, [pc, #804]	; (8004d64 <acc_calibration_a121_calibrate+0x11e0>)
 8004a3e:	f7fb ff7d 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004a42:	f04f 0900 	mov.w	r9, #0
 8004a46:	4620      	mov	r0, r4
 8004a48:	f44f 61d8 	mov.w	r1, #1728	; 0x6c0
 8004a4c:	f10d 082c 	add.w	r8, sp, #44	; 0x2c
 8004a50:	f7fb ffc4 	bl	80009dc <acc_diagnostic_log_data_u16>
 8004a54:	e9cd 8900 	strd	r8, r9, [sp]
 8004a58:	1ca0      	adds	r0, r4, #2
 8004a5a:	ab0a      	add	r3, sp, #40	; 0x28
 8004a5c:	aa44      	add	r2, sp, #272	; 0x110
 8004a5e:	f240 213f 	movw	r1, #575	; 0x23f
 8004a62:	f7fb fe7b 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004a66:	2800      	cmp	r0, #0
 8004a68:	f43f a8ae 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004a6c:	af14      	add	r7, sp, #80	; 0x50
 8004a6e:	ae0c      	add	r6, sp, #48	; 0x30
 8004a70:	e9cd 6700 	strd	r6, r7, [sp]
 8004a74:	ab09      	add	r3, sp, #36	; 0x24
 8004a76:	aa44      	add	r2, sp, #272	; 0x110
 8004a78:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004a7c:	f504 6090 	add.w	r0, r4, #1152	; 0x480
 8004a80:	f7fb fe6c 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004a84:	2800      	cmp	r0, #0
 8004a86:	f43f a89f 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004a8a:	ad2c      	add	r5, sp, #176	; 0xb0
 8004a8c:	f8cd 9000 	str.w	r9, [sp]
 8004a90:	464b      	mov	r3, r9
 8004a92:	aa44      	add	r2, sp, #272	; 0x110
 8004a94:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 8004a98:	9501      	str	r5, [sp, #4]
 8004a9a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004a9e:	f7fb fe5d 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004aa2:	2800      	cmp	r0, #0
 8004aa4:	f43f a890 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004aa8:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	; 0x24
 8004aac:	f8d6 c000 	ldr.w	ip, [r6]
 8004ab0:	682b      	ldr	r3, [r5, #0]
 8004ab2:	f8d8 e000 	ldr.w	lr, [r8]
 8004ab6:	683f      	ldr	r7, [r7, #0]
 8004ab8:	4cab      	ldr	r4, [pc, #684]	; (8004d68 <acc_calibration_a121_calibrate+0x11e4>)
 8004aba:	49ac      	ldr	r1, [pc, #688]	; (8004d6c <acc_calibration_a121_calibrate+0x11e8>)
 8004abc:	4dac      	ldr	r5, [pc, #688]	; (8004d70 <acc_calibration_a121_calibrate+0x11ec>)
 8004abe:	1a16      	subs	r6, r2, r0
 8004ac0:	ebac 020e 	sub.w	r2, ip, lr
 8004ac4:	eba3 0c07 	sub.w	ip, r3, r7
 8004ac8:	fb04 f40c 	mul.w	r4, r4, ip
 8004acc:	f248 5355 	movw	r3, #34133	; 0x8555
 8004ad0:	fb03 f707 	mul.w	r7, r3, r7
 8004ad4:	fb01 f106 	mul.w	r1, r1, r6
 8004ad8:	0c24      	lsrs	r4, r4, #16
 8004ada:	fb03 f000 	mul.w	r0, r3, r0
 8004ade:	ebc4 3457 	rsb	r4, r4, r7, lsr #13
 8004ae2:	0c09      	lsrs	r1, r1, #16
 8004ae4:	f8dd 7740 	ldr.w	r7, [sp, #1856]	; 0x740
 8004ae8:	fb05 f502 	mul.w	r5, r5, r2
 8004aec:	ebc1 3150 	rsb	r1, r1, r0, lsr #13
 8004af0:	fb03 f606 	mul.w	r6, r3, r6
 8004af4:	fb03 fe0e 	mul.w	lr, r3, lr
 8004af8:	0c2d      	lsrs	r5, r5, #16
 8004afa:	e9c7 1619 	strd	r1, r6, [r7, #100]	; 0x64
 8004afe:	ebc5 355e 	rsb	r5, r5, lr, lsr #13
 8004b02:	fb03 f202 	mul.w	r2, r3, r2
 8004b06:	489b      	ldr	r0, [pc, #620]	; (8004d74 <acc_calibration_a121_calibrate+0x11f0>)
 8004b08:	66fd      	str	r5, [r7, #108]	; 0x6c
 8004b0a:	fb03 f30c 	mul.w	r3, r3, ip
 8004b0e:	67bb      	str	r3, [r7, #120]	; 0x78
 8004b10:	677c      	str	r4, [r7, #116]	; 0x74
 8004b12:	673a      	str	r2, [r7, #112]	; 0x70
 8004b14:	1e7c      	subs	r4, r7, #1
 8004b16:	f107 0587 	add.w	r5, r7, #135	; 0x87
 8004b1a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004b1e:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8004b22:	4053      	eors	r3, r2
 8004b24:	2208      	movs	r2, #8
 8004b26:	07de      	lsls	r6, r3, #31
 8004b28:	bf4c      	ite	mi
 8004b2a:	ea80 0353 	eormi.w	r3, r0, r3, lsr #1
 8004b2e:	085b      	lsrpl	r3, r3, #1
 8004b30:	3a01      	subs	r2, #1
 8004b32:	d1f8      	bne.n	8004b26 <acc_calibration_a121_calibrate+0xfa2>
 8004b34:	42a5      	cmp	r5, r4
 8004b36:	d1f2      	bne.n	8004b1e <acc_calibration_a121_calibrate+0xf9a>
 8004b38:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004b3c:	488e      	ldr	r0, [pc, #568]	; (8004d78 <acc_calibration_a121_calibrate+0x11f4>)
 8004b3e:	43db      	mvns	r3, r3
 8004b40:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004b44:	f7fb ff52 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b48:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004b4c:	488b      	ldr	r0, [pc, #556]	; (8004d7c <acc_calibration_a121_calibrate+0x11f8>)
 8004b4e:	6e99      	ldr	r1, [r3, #104]	; 0x68
 8004b50:	f7fb ff4c 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b54:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004b58:	4889      	ldr	r0, [pc, #548]	; (8004d80 <acc_calibration_a121_calibrate+0x11fc>)
 8004b5a:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 8004b5c:	f7fb ff46 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b60:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004b64:	4887      	ldr	r0, [pc, #540]	; (8004d84 <acc_calibration_a121_calibrate+0x1200>)
 8004b66:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8004b68:	f7fb ff40 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b6c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004b70:	4885      	ldr	r0, [pc, #532]	; (8004d88 <acc_calibration_a121_calibrate+0x1204>)
 8004b72:	6f59      	ldr	r1, [r3, #116]	; 0x74
 8004b74:	f7fb ff3a 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b78:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004b7c:	4883      	ldr	r0, [pc, #524]	; (8004d8c <acc_calibration_a121_calibrate+0x1208>)
 8004b7e:	6f99      	ldr	r1, [r3, #120]	; 0x78
 8004b80:	f7fb ff34 	bl	80009ec <acc_diagnostic_log_scalar>
 8004b84:	240d      	movs	r4, #13
 8004b86:	4b82      	ldr	r3, [pc, #520]	; (8004d90 <acc_calibration_a121_calibrate+0x120c>)
 8004b88:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8004b8c:	2a03      	cmp	r2, #3
 8004b8e:	f67f aa39 	bls.w	8004004 <acc_calibration_a121_calibrate+0x480>
 8004b92:	6c1d      	ldr	r5, [r3, #64]	; 0x40
 8004b94:	9b02      	ldr	r3, [sp, #8]
 8004b96:	4a7f      	ldr	r2, [pc, #508]	; (8004d94 <acc_calibration_a121_calibrate+0x1210>)
 8004b98:	781b      	ldrb	r3, [r3, #0]
 8004b9a:	497f      	ldr	r1, [pc, #508]	; (8004d98 <acc_calibration_a121_calibrate+0x1214>)
 8004b9c:	2004      	movs	r0, #4
 8004b9e:	47a8      	blx	r5
 8004ba0:	2001      	movs	r0, #1
 8004ba2:	f7ff b81b 	b.w	8003bdc <acc_calibration_a121_calibrate+0x58>
 8004ba6:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 8004baa:	337e      	adds	r3, #126	; 0x7e
 8004bac:	4543      	cmp	r3, r8
 8004bae:	dbfa      	blt.n	8004ba6 <acc_calibration_a121_calibrate+0x1022>
 8004bb0:	f7ff bb9f 	b.w	80042f2 <acc_calibration_a121_calibrate+0x76e>
 8004bb4:	4879      	ldr	r0, [pc, #484]	; (8004d9c <acc_calibration_a121_calibrate+0x1218>)
 8004bb6:	f7fb ff21 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004bba:	4620      	mov	r0, r4
 8004bbc:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8004bc0:	f7fc fb0c 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004bc4:	2402      	movs	r4, #2
 8004bc6:	2800      	cmp	r0, #0
 8004bc8:	f47f aa16 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004bcc:	f7fe bffc 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004bd0:	280b      	cmp	r0, #11
 8004bd2:	f63f abdb 	bhi.w	800438c <acc_calibration_a121_calibrate+0x808>
 8004bd6:	3301      	adds	r3, #1
 8004bd8:	2b30      	cmp	r3, #48	; 0x30
 8004bda:	f43e aff5 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004bde:	4610      	mov	r0, r2
 8004be0:	1e5a      	subs	r2, r3, #1
 8004be2:	4432      	add	r2, r6
 8004be4:	1c59      	adds	r1, r3, #1
 8004be6:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8004bea:	1e4b      	subs	r3, r1, #1
 8004bec:	b135      	cbz	r5, 8004bfc <acc_calibration_a121_calibrate+0x1078>
 8004bee:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8004bf2:	b91d      	cbnz	r5, 8004bfc <acc_calibration_a121_calibrate+0x1078>
 8004bf4:	461d      	mov	r5, r3
 8004bf6:	2001      	movs	r0, #1
 8004bf8:	f7ff bbc5 	b.w	8004386 <acc_calibration_a121_calibrate+0x802>
 8004bfc:	2930      	cmp	r1, #48	; 0x30
 8004bfe:	f000 81d6 	beq.w	8004fae <acc_calibration_a121_calibrate+0x142a>
 8004c02:	3101      	adds	r1, #1
 8004c04:	e7ef      	b.n	8004be6 <acc_calibration_a121_calibrate+0x1062>
 8004c06:	f44f 7278 	mov.w	r2, #992	; 0x3e0
 8004c0a:	e5e9      	b.n	80047e0 <acc_calibration_a121_calibrate+0xc5c>
 8004c0c:	4b64      	ldr	r3, [pc, #400]	; (8004da0 <acc_calibration_a121_calibrate+0x121c>)
 8004c0e:	e5d7      	b.n	80047c0 <acc_calibration_a121_calibrate+0xc3c>
 8004c10:	211f      	movs	r1, #31
 8004c12:	e5c5      	b.n	80047a0 <acc_calibration_a121_calibrate+0xc1c>
 8004c14:	4240      	negs	r0, r0
 8004c16:	0980      	lsrs	r0, r0, #6
 8004c18:	f640 5394 	movw	r3, #3476	; 0xd94
 8004c1c:	fb03 f000 	mul.w	r0, r3, r0
 8004c20:	0d40      	lsrs	r0, r0, #21
 8004c22:	fb05 f000 	mul.w	r0, r5, r0
 8004c26:	eba9 2010 	sub.w	r0, r9, r0, lsr #8
 8004c2a:	f8cb 0000 	str.w	r0, [fp]
 8004c2e:	e4a5      	b.n	800457c <acc_calibration_a121_calibrate+0x9f8>
 8004c30:	f1ce 0e00 	rsb	lr, lr, #0
 8004c34:	fa1f fe8e 	uxth.w	lr, lr
 8004c38:	f1be 0f1f 	cmp.w	lr, #31
 8004c3c:	f63e afc4 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004c40:	f04e 0520 	orr.w	r5, lr, #32
 8004c44:	f7ff ba90 	b.w	8004168 <acc_calibration_a121_calibrate+0x5e4>
 8004c48:	46da      	mov	sl, fp
 8004c4a:	9503      	str	r5, [sp, #12]
 8004c4c:	469b      	mov	fp, r3
 8004c4e:	e615      	b.n	800487c <acc_calibration_a121_calibrate+0xcf8>
 8004c50:	ebb7 0f9b 	cmp.w	r7, fp, lsr #2
 8004c54:	f4be afb8 	bcs.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004c58:	9d03      	ldr	r5, [sp, #12]
 8004c5a:	4852      	ldr	r0, [pc, #328]	; (8004da4 <acc_calibration_a121_calibrate+0x1220>)
 8004c5c:	4629      	mov	r1, r5
 8004c5e:	f7fb fec5 	bl	80009ec <acc_diagnostic_log_scalar>
 8004c62:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c66:	4850      	ldr	r0, [pc, #320]	; (8004da8 <acc_calibration_a121_calibrate+0x1224>)
 8004c68:	841d      	strh	r5, [r3, #32]
 8004c6a:	f7fb fec7 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004c6e:	4a4f      	ldr	r2, [pc, #316]	; (8004dac <acc_calibration_a121_calibrate+0x1228>)
 8004c70:	494f      	ldr	r1, [pc, #316]	; (8004db0 <acc_calibration_a121_calibrate+0x122c>)
 8004c72:	9500      	str	r5, [sp, #0]
 8004c74:	230b      	movs	r3, #11
 8004c76:	4620      	mov	r0, r4
 8004c78:	f7fe fce0 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	4a4b      	ldr	r2, [pc, #300]	; (8004dac <acc_calibration_a121_calibrate+0x1228>)
 8004c80:	494b      	ldr	r1, [pc, #300]	; (8004db0 <acc_calibration_a121_calibrate+0x122c>)
 8004c82:	9300      	str	r3, [sp, #0]
 8004c84:	4620      	mov	r0, r4
 8004c86:	2309      	movs	r3, #9
 8004c88:	f7fe fcd8 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004c8c:	237e      	movs	r3, #126	; 0x7e
 8004c8e:	4a47      	ldr	r2, [pc, #284]	; (8004dac <acc_calibration_a121_calibrate+0x1228>)
 8004c90:	4947      	ldr	r1, [pc, #284]	; (8004db0 <acc_calibration_a121_calibrate+0x122c>)
 8004c92:	9300      	str	r3, [sp, #0]
 8004c94:	4620      	mov	r0, r4
 8004c96:	230a      	movs	r3, #10
 8004c98:	f7fe fcd0 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004c9c:	4620      	mov	r0, r4
 8004c9e:	f240 4137 	movw	r1, #1079	; 0x437
 8004ca2:	f7fc fa9b 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004ca6:	240a      	movs	r4, #10
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	f47f a9a5 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004cae:	f7fe bf8b 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004cb2:	ee17 4a90 	vmov	r4, s15
 8004cb6:	2d00      	cmp	r5, #0
 8004cb8:	f43e af86 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004cbc:	f087 0730 	eor.w	r7, r7, #48	; 0x30
 8004cc0:	4639      	mov	r1, r7
 8004cc2:	483c      	ldr	r0, [pc, #240]	; (8004db4 <acc_calibration_a121_calibrate+0x1230>)
 8004cc4:	f7fb fe92 	bl	80009ec <acc_diagnostic_log_scalar>
 8004cc8:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ccc:	483a      	ldr	r0, [pc, #232]	; (8004db8 <acc_calibration_a121_calibrate+0x1234>)
 8004cce:	809f      	strh	r7, [r3, #4]
 8004cd0:	f7fb fe94 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004cd4:	4a35      	ldr	r2, [pc, #212]	; (8004dac <acc_calibration_a121_calibrate+0x1228>)
 8004cd6:	4936      	ldr	r1, [pc, #216]	; (8004db0 <acc_calibration_a121_calibrate+0x122c>)
 8004cd8:	9700      	str	r7, [sp, #0]
 8004cda:	2324      	movs	r3, #36	; 0x24
 8004cdc:	4620      	mov	r0, r4
 8004cde:	f7fe fcad 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004ce2:	4620      	mov	r0, r4
 8004ce4:	f240 2147 	movw	r1, #583	; 0x247
 8004ce8:	f7fc fa78 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004cec:	2404      	movs	r4, #4
 8004cee:	2800      	cmp	r0, #0
 8004cf0:	f47f a982 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004cf4:	f7fe bf68 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004cf8:	459c      	cmp	ip, r3
 8004cfa:	f47f aa2b 	bne.w	8004154 <acc_calibration_a121_calibrate+0x5d0>
 8004cfe:	f7fe bf63 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004d02:	4626      	mov	r6, r4
 8004d04:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8004d08:	ee17 4a90 	vmov	r4, s15
 8004d0c:	f1b8 0f00 	cmp.w	r8, #0
 8004d10:	f43e af5a 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004d14:	4631      	mov	r1, r6
 8004d16:	4829      	ldr	r0, [pc, #164]	; (8004dbc <acc_calibration_a121_calibrate+0x1238>)
 8004d18:	f7fb fe68 	bl	80009ec <acc_diagnostic_log_scalar>
 8004d1c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004d20:	4827      	ldr	r0, [pc, #156]	; (8004dc0 <acc_calibration_a121_calibrate+0x123c>)
 8004d22:	815e      	strh	r6, [r3, #10]
 8004d24:	f7fb fe6a 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004d28:	2301      	movs	r3, #1
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	9a03      	ldr	r2, [sp, #12]
 8004d2e:	9300      	str	r3, [sp, #0]
 8004d30:	4649      	mov	r1, r9
 8004d32:	ab44      	add	r3, sp, #272	; 0x110
 8004d34:	f44f 557e 	mov.w	r5, #16256	; 0x3f80
 8004d38:	f8ad 5110 	strh.w	r5, [sp, #272]	; 0x110
 8004d3c:	f7fe f962 	bl	8003004 <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004d40:	4a1a      	ldr	r2, [pc, #104]	; (8004dac <acc_calibration_a121_calibrate+0x1228>)
 8004d42:	491b      	ldr	r1, [pc, #108]	; (8004db0 <acc_calibration_a121_calibrate+0x122c>)
 8004d44:	9600      	str	r6, [sp, #0]
 8004d46:	2326      	movs	r3, #38	; 0x26
 8004d48:	4620      	mov	r0, r4
 8004d4a:	f7fe fc77 	bl	800363c <acc_confprogram_live_patch.constprop.0>
 8004d4e:	4620      	mov	r0, r4
 8004d50:	f240 21b2 	movw	r1, #690	; 0x2b2
 8004d54:	f7fc fa42 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004d58:	2405      	movs	r4, #5
 8004d5a:	2800      	cmp	r0, #0
 8004d5c:	f47f a94c 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004d60:	f7fe bf32 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004d64:	0800b364 	.word	0x0800b364
 8004d68:	0005baa7 	.word	0x0005baa7
 8004d6c:	00010aaa 	.word	0x00010aaa
 8004d70:	0003a553 	.word	0x0003a553
 8004d74:	edb88320 	.word	0xedb88320
 8004d78:	0800b378 	.word	0x0800b378
 8004d7c:	0800b38c 	.word	0x0800b38c
 8004d80:	0800b3a0 	.word	0x0800b3a0
 8004d84:	0800b3b4 	.word	0x0800b3b4
 8004d88:	0800b3c8 	.word	0x0800b3c8
 8004d8c:	0800b3e0 	.word	0x0800b3e0
 8004d90:	200000ac 	.word	0x200000ac
 8004d94:	0800b3f8 	.word	0x0800b3f8
 8004d98:	0800b420 	.word	0x0800b420
 8004d9c:	0800b080 	.word	0x0800b080
 8004da0:	fffffc00 	.word	0xfffffc00
 8004da4:	0800b478 	.word	0x0800b478
 8004da8:	0800b488 	.word	0x0800b488
 8004dac:	080088e0 	.word	0x080088e0
 8004db0:	08008d68 	.word	0x08008d68
 8004db4:	0800b0d8 	.word	0x0800b0d8
 8004db8:	0800b0e4 	.word	0x0800b0e4
 8004dbc:	0800b11c 	.word	0x0800b11c
 8004dc0:	0800b128 	.word	0x0800b128
 8004dc4:	2f07      	cmp	r7, #7
 8004dc6:	f200 80ea 	bhi.w	8004f9e <acc_calibration_a121_calibrate+0x141a>
 8004dca:	2300      	movs	r3, #0
 8004dcc:	f107 0208 	add.w	r2, r7, #8
 8004dd0:	1ad2      	subs	r2, r2, r3
 8004dd2:	2a00      	cmp	r2, #0
 8004dd4:	f000 80fc 	beq.w	8004fd0 <acc_calibration_a121_calibrate+0x144c>
 8004dd8:	a944      	add	r1, sp, #272	; 0x110
 8004dda:	18d0      	adds	r0, r2, r3
 8004ddc:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8004de0:	9103      	str	r1, [sp, #12]
 8004de2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8004de6:	f935 6b02 	ldrsh.w	r6, [r5], #2
 8004dea:	ee07 6a10 	vmov	s14, r6
 8004dee:	fb03 f603 	mul.w	r6, r3, r3
 8004df2:	ee06 3a90 	vmov	s13, r3
 8004df6:	ee07 6a90 	vmov	s15, r6
 8004dfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004dfe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004e02:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8004e06:	42a8      	cmp	r0, r5
 8004e08:	ed81 7a00 	vstr	s14, [r1]
 8004e0c:	edc1 7a01 	vstr	s15, [r1, #4]
 8004e10:	edc1 6a02 	vstr	s13, [r1, #8]
 8004e14:	f103 0301 	add.w	r3, r3, #1
 8004e18:	f101 010c 	add.w	r1, r1, #12
 8004e1c:	d1e3      	bne.n	8004de6 <acc_calibration_a121_calibrate+0x1262>
 8004e1e:	9803      	ldr	r0, [sp, #12]
 8004e20:	a92c      	add	r1, sp, #176	; 0xb0
 8004e22:	f7fc fb6f 	bl	8001504 <least_sqr_fit>
 8004e26:	2800      	cmp	r0, #0
 8004e28:	f43e aece 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e2c:	ed9d 6a2c 	vldr	s12, [sp, #176]	; 0xb0
 8004e30:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8004e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e38:	f43e aec6 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e3c:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8004e40:	eef5 6a40 	vcmp.f32	s13, #0.0
 8004e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e48:	f43e aebe 	beq.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e4c:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8004e50:	eeb1 7a47 	vneg.f32	s14, s14
 8004e54:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004e58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e60:	f6fe aeb2 	blt.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e64:	eef1 6a66 	vneg.f32	s13, s13
 8004e68:	ee86 7a86 	vdiv.f32	s14, s13, s12
 8004e6c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e74:	f57e aea8 	bpl.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004e7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e80:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e84:	ee17 5a90 	vmov	r5, s15
 8004e88:	b2ab      	uxth	r3, r5
 8004e8a:	2b3f      	cmp	r3, #63	; 0x3f
 8004e8c:	f3c5 054e 	ubfx	r5, r5, #1, #15
 8004e90:	f63e ae9a 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004e94:	f085 0510 	eor.w	r5, r5, #16
 8004e98:	4629      	mov	r1, r5
 8004e9a:	485b      	ldr	r0, [pc, #364]	; (8005008 <acc_calibration_a121_calibrate+0x1484>)
 8004e9c:	f7fb fda6 	bl	80009ec <acc_diagnostic_log_scalar>
 8004ea0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ea4:	4859      	ldr	r0, [pc, #356]	; (800500c <acc_calibration_a121_calibrate+0x1488>)
 8004ea6:	80dd      	strh	r5, [r3, #6]
 8004ea8:	f7fb fda8 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004eac:	4620      	mov	r0, r4
 8004eae:	f240 21ff 	movw	r1, #767	; 0x2ff
 8004eb2:	f7fc f993 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004eb6:	2406      	movs	r4, #6
 8004eb8:	2800      	cmp	r0, #0
 8004eba:	f47f a89d 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004ebe:	f7fe be83 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004ec2:	2603      	movs	r6, #3
 8004ec4:	2701      	movs	r7, #1
 8004ec6:	f04f 0800 	mov.w	r8, #0
 8004eca:	f7ff ba8f 	b.w	80043ec <acc_calibration_a121_calibrate+0x868>
 8004ece:	46a6      	mov	lr, r4
 8004ed0:	f7ff b940 	b.w	8004154 <acc_calibration_a121_calibrate+0x5d0>
 8004ed4:	ee18 0a10 	vmov	r0, s16
 8004ed8:	f240 1145 	movw	r1, #325	; 0x145
 8004edc:	f7fc f97e 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004ee0:	2401      	movs	r4, #1
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	f47f a888 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004ee8:	f7fe be6e 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004eec:	9b03      	ldr	r3, [sp, #12]
 8004eee:	ad43      	add	r5, sp, #268	; 0x10c
 8004ef0:	f10d 06ae 	add.w	r6, sp, #174	; 0xae
 8004ef4:	4629      	mov	r1, r5
 8004ef6:	4632      	mov	r2, r6
 8004ef8:	f103 075c 	add.w	r7, r3, #92	; 0x5c
 8004efc:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	bfb8      	it	lt
 8004f04:	330f      	addlt	r3, #15
 8004f06:	3202      	adds	r2, #2
 8004f08:	111b      	asrs	r3, r3, #4
 8004f0a:	428f      	cmp	r7, r1
 8004f0c:	8013      	strh	r3, [r2, #0]
 8004f0e:	d1f5      	bne.n	8004efc <acc_calibration_a121_calibrate+0x1378>
 8004f10:	9803      	ldr	r0, [sp, #12]
 8004f12:	f7fb fd1f 	bl	8000954 <acc_cal_algorithms_phase_unwrap.constprop.0>
 8004f16:	2100      	movs	r1, #0
 8004f18:	f855 3f04 	ldr.w	r3, [r5, #4]!
 8004f1c:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 8004f1e:	42af      	cmp	r7, r5
 8004f20:	eba3 0302 	sub.w	r3, r3, r2
 8004f24:	4419      	add	r1, r3
 8004f26:	d1f7      	bne.n	8004f18 <acc_calibration_a121_calibrate+0x1394>
 8004f28:	4b39      	ldr	r3, [pc, #228]	; (8005010 <acc_calibration_a121_calibrate+0x148c>)
 8004f2a:	17c8      	asrs	r0, r1, #31
 8004f2c:	fb83 3101 	smull	r3, r1, r3, r1
 8004f30:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 8004f34:	f500 4399 	add.w	r3, r0, #19584	; 0x4c80
 8004f38:	3330      	adds	r3, #48	; 0x30
 8004f3a:	f64c 1262 	movw	r2, #51554	; 0xc962
 8004f3e:	4293      	cmp	r3, r2
 8004f40:	f63e ae42 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004f44:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f48:	f10d 01de 	add.w	r1, sp, #222	; 0xde
 8004f4c:	f103 0524 	add.w	r5, r3, #36	; 0x24
 8004f50:	3322      	adds	r3, #34	; 0x22
 8004f52:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 8004f56:	f823 2f02 	strh.w	r2, [r3, #2]!
 8004f5a:	42b1      	cmp	r1, r6
 8004f5c:	d1f9      	bne.n	8004f52 <acc_calibration_a121_calibrate+0x13ce>
 8004f5e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f62:	f8a3 0054 	strh.w	r0, [r3, #84]	; 0x54
 8004f66:	482b      	ldr	r0, [pc, #172]	; (8005014 <acc_calibration_a121_calibrate+0x1490>)
 8004f68:	f7fb fce8 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004f6c:	4628      	mov	r0, r5
 8004f6e:	2118      	movs	r1, #24
 8004f70:	f7fb fd2c 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004f74:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f78:	4827      	ldr	r0, [pc, #156]	; (8005018 <acc_calibration_a121_calibrate+0x1494>)
 8004f7a:	f9b3 1054 	ldrsh.w	r1, [r3, #84]	; 0x54
 8004f7e:	f7fb fd35 	bl	80009ec <acc_diagnostic_log_scalar>
 8004f82:	4826      	ldr	r0, [pc, #152]	; (800501c <acc_calibration_a121_calibrate+0x1498>)
 8004f84:	f7fb fd3a 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004f88:	4620      	mov	r0, r4
 8004f8a:	f240 415e 	movw	r1, #1118	; 0x45e
 8004f8e:	f7fc f925 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004f92:	240b      	movs	r4, #11
 8004f94:	2800      	cmp	r0, #0
 8004f96:	f47f a82f 	bne.w	8003ff8 <acc_calibration_a121_calibrate+0x474>
 8004f9a:	f7fe be15 	b.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004f9e:	1ffb      	subs	r3, r7, #7
 8004fa0:	2f17      	cmp	r7, #23
 8004fa2:	bf88      	it	hi
 8004fa4:	f1c3 0220 	rsbhi	r2, r3, #32
 8004fa8:	f63f af13 	bhi.w	8004dd2 <acc_calibration_a121_calibrate+0x124e>
 8004fac:	e70e      	b.n	8004dcc <acc_calibration_a121_calibrate+0x1248>
 8004fae:	f1a0 030c 	sub.w	r3, r0, #12
 8004fb2:	2b08      	cmp	r3, #8
 8004fb4:	f63e ae08 	bhi.w	8003bc8 <acc_calibration_a121_calibrate+0x44>
 8004fb8:	0845      	lsrs	r5, r0, #1
 8004fba:	f7ff b9f3 	b.w	80043a4 <acc_calibration_a121_calibrate+0x820>
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	ee17 4a90 	vmov	r4, s15
 8004fc4:	9e06      	ldr	r6, [sp, #24]
 8004fc6:	9304      	str	r3, [sp, #16]
 8004fc8:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004fcc:	f7ff bafd 	b.w	80045ca <acc_calibration_a121_calibrate+0xa46>
 8004fd0:	ab44      	add	r3, sp, #272	; 0x110
 8004fd2:	9303      	str	r3, [sp, #12]
 8004fd4:	e723      	b.n	8004e1e <acc_calibration_a121_calibrate+0x129a>
 8004fd6:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8004fda:	ee17 2a90 	vmov	r2, s15
 8004fde:	f342 020a 	sbfx	r2, r2, #0, #11
 8004fe2:	0152      	lsls	r2, r2, #5
 8004fe4:	f7ff bbfc 	b.w	80047e0 <acc_calibration_a121_calibrate+0xc5c>
 8004fe8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004fec:	ee17 2a90 	vmov	r2, s15
 8004ff0:	f342 0205 	sbfx	r2, r2, #0, #6
 8004ff4:	0293      	lsls	r3, r2, #10
 8004ff6:	f7ff bbe3 	b.w	80047c0 <acc_calibration_a121_calibrate+0xc3c>
 8004ffa:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8004ffe:	ee16 3a90 	vmov	r3, s13
 8005002:	b219      	sxth	r1, r3
 8005004:	f7ff bbcc 	b.w	80047a0 <acc_calibration_a121_calibrate+0xc1c>
 8005008:	0800b164 	.word	0x0800b164
 800500c:	0800b170 	.word	0x0800b170
 8005010:	2aaaaaab 	.word	0x2aaaaaab
 8005014:	0800b2a0 	.word	0x0800b2a0
 8005018:	0800b2cc 	.word	0x0800b2cc
 800501c:	0800b2e8 	.word	0x0800b2e8

08005020 <test_sensor_calibration>:
 8005020:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005024:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005026:	b087      	sub	sp, #28
 8005028:	b1f3      	cbz	r3, 8005068 <test_sensor_calibration+0x48>
 800502a:	2b01      	cmp	r3, #1
 800502c:	4604      	mov	r4, r0
 800502e:	d02c      	beq.n	800508a <test_sensor_calibration+0x6a>
 8005030:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8005032:	b125      	cbz	r5, 800503e <test_sensor_calibration+0x1e>
 8005034:	4b7f      	ldr	r3, [pc, #508]	; (8005234 <test_sensor_calibration+0x214>)
 8005036:	682a      	ldr	r2, [r5, #0]
 8005038:	429a      	cmp	r2, r3
 800503a:	f000 809a 	beq.w	8005172 <test_sensor_calibration+0x152>
 800503e:	f8df 8208 	ldr.w	r8, [pc, #520]	; 8005248 <test_sensor_calibration+0x228>
 8005042:	4a7d      	ldr	r2, [pc, #500]	; (8005238 <test_sensor_calibration+0x218>)
 8005044:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8005048:	497c      	ldr	r1, [pc, #496]	; (800523c <test_sensor_calibration+0x21c>)
 800504a:	2000      	movs	r0, #0
 800504c:	4798      	blx	r3
 800504e:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 8005052:	4a7b      	ldr	r2, [pc, #492]	; (8005240 <test_sensor_calibration+0x220>)
 8005054:	497b      	ldr	r1, [pc, #492]	; (8005244 <test_sensor_calibration+0x224>)
 8005056:	2000      	movs	r0, #0
 8005058:	4798      	blx	r3
 800505a:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800505c:	f7fc fd68 	bl	8001b30 <acc_sensor_destroy>
 8005060:	2004      	movs	r0, #4
 8005062:	b007      	add	sp, #28
 8005064:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005068:	4b77      	ldr	r3, [pc, #476]	; (8005248 <test_sensor_calibration+0x228>)
 800506a:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 800506e:	2a01      	cmp	r2, #1
 8005070:	d904      	bls.n	800507c <test_sensor_calibration+0x5c>
 8005072:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005074:	4a75      	ldr	r2, [pc, #468]	; (800524c <test_sensor_calibration+0x22c>)
 8005076:	4973      	ldr	r1, [pc, #460]	; (8005244 <test_sensor_calibration+0x224>)
 8005078:	2002      	movs	r0, #2
 800507a:	4798      	blx	r3
 800507c:	4874      	ldr	r0, [pc, #464]	; (8005250 <test_sensor_calibration+0x230>)
 800507e:	f7fb fcbd 	bl	80009fc <acc_diagnostic_log_set_scope>
 8005082:	2001      	movs	r0, #1
 8005084:	b007      	add	sp, #28
 8005086:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800508a:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8005248 <test_sensor_calibration+0x228>
 800508e:	f898 3048 	ldrb.w	r3, [r8, #72]	; 0x48
 8005092:	2b01      	cmp	r3, #1
 8005094:	d905      	bls.n	80050a2 <test_sensor_calibration+0x82>
 8005096:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 800509a:	4a6e      	ldr	r2, [pc, #440]	; (8005254 <test_sensor_calibration+0x234>)
 800509c:	4969      	ldr	r1, [pc, #420]	; (8005244 <test_sensor_calibration+0x224>)
 800509e:	2002      	movs	r0, #2
 80050a0:	4798      	blx	r3
 80050a2:	4966      	ldr	r1, [pc, #408]	; (800523c <test_sensor_calibration+0x21c>)
 80050a4:	f8d4 9000 	ldr.w	r9, [r4]
 80050a8:	223b      	movs	r2, #59	; 0x3b
 80050aa:	2014      	movs	r0, #20
 80050ac:	f7fb ff50 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 80050b0:	4605      	mov	r5, r0
 80050b2:	2800      	cmp	r0, #0
 80050b4:	f000 80b4 	beq.w	8005220 <test_sensor_calibration+0x200>
 80050b8:	2600      	movs	r6, #0
 80050ba:	6006      	str	r6, [r0, #0]
 80050bc:	6046      	str	r6, [r0, #4]
 80050be:	6086      	str	r6, [r0, #8]
 80050c0:	60c6      	str	r6, [r0, #12]
 80050c2:	6106      	str	r6, [r0, #16]
 80050c4:	4964      	ldr	r1, [pc, #400]	; (8005258 <test_sensor_calibration+0x238>)
 80050c6:	2273      	movs	r2, #115	; 0x73
 80050c8:	f44f 70fe 	mov.w	r0, #508	; 0x1fc
 80050cc:	f7fb ff40 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 80050d0:	4607      	mov	r7, r0
 80050d2:	2800      	cmp	r0, #0
 80050d4:	f000 80a0 	beq.w	8005218 <test_sensor_calibration+0x1f8>
 80050d8:	f44f 72fe 	mov.w	r2, #508	; 0x1fc
 80050dc:	4631      	mov	r1, r6
 80050de:	f001 fe36 	bl	8006d4e <memset>
 80050e2:	2301      	movs	r3, #1
 80050e4:	4953      	ldr	r1, [pc, #332]	; (8005234 <test_sensor_calibration+0x214>)
 80050e6:	f8a7 31c4 	strh.w	r3, [r7, #452]	; 0x1c4
 80050ea:	f887 31c6 	strb.w	r3, [r7, #454]	; 0x1c6
 80050ee:	f10d 0216 	add.w	r2, sp, #22
 80050f2:	6029      	str	r1, [r5, #0]
 80050f4:	e9c5 6901 	strd	r6, r9, [r5, #4]
 80050f8:	4631      	mov	r1, r6
 80050fa:	612f      	str	r7, [r5, #16]
 80050fc:	736e      	strb	r6, [r5, #13]
 80050fe:	4648      	mov	r0, r9
 8005100:	f8ad 6016 	strh.w	r6, [sp, #22]
 8005104:	f7fc f854 	bl	80011b0 <acc_sensor_reg_read>
 8005108:	4854      	ldr	r0, [pc, #336]	; (800525c <test_sensor_calibration+0x23c>)
 800510a:	f7fb fc77 	bl	80009fc <acc_diagnostic_log_set_scope>
 800510e:	4854      	ldr	r0, [pc, #336]	; (8005260 <test_sensor_calibration+0x240>)
 8005110:	4649      	mov	r1, r9
 8005112:	f7fb fc6b 	bl	80009ec <acc_diagnostic_log_scalar>
 8005116:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 800511a:	4850      	ldr	r0, [pc, #320]	; (800525c <test_sensor_calibration+0x23c>)
 800511c:	f7fb fc66 	bl	80009ec <acc_diagnostic_log_scalar>
 8005120:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8005124:	f241 2210 	movw	r2, #4624	; 0x1210
 8005128:	4293      	cmp	r3, r2
 800512a:	d036      	beq.n	800519a <test_sensor_calibration+0x17a>
 800512c:	4a4d      	ldr	r2, [pc, #308]	; (8005264 <test_sensor_calibration+0x244>)
 800512e:	494e      	ldr	r1, [pc, #312]	; (8005268 <test_sensor_calibration+0x248>)
 8005130:	f8d8 7040 	ldr.w	r7, [r8, #64]	; 0x40
 8005134:	4630      	mov	r0, r6
 8005136:	47b8      	blx	r7
 8005138:	4628      	mov	r0, r5
 800513a:	f7fc fcf9 	bl	8001b30 <acc_sensor_destroy>
 800513e:	f10d 0216 	add.w	r2, sp, #22
 8005142:	4648      	mov	r0, r9
 8005144:	211c      	movs	r1, #28
 8005146:	f8ad 6016 	strh.w	r6, [sp, #22]
 800514a:	f7fc f831 	bl	80011b0 <acc_sensor_reg_read>
 800514e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8005152:	051b      	lsls	r3, r3, #20
 8005154:	d564      	bpl.n	8005220 <test_sensor_calibration+0x200>
 8005156:	4635      	mov	r5, r6
 8005158:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 800515c:	4a43      	ldr	r2, [pc, #268]	; (800526c <test_sensor_calibration+0x24c>)
 800515e:	4937      	ldr	r1, [pc, #220]	; (800523c <test_sensor_calibration+0x21c>)
 8005160:	2000      	movs	r0, #0
 8005162:	4798      	blx	r3
 8005164:	4628      	mov	r0, r5
 8005166:	f7fc fce3 	bl	8001b30 <acc_sensor_destroy>
 800516a:	2300      	movs	r3, #0
 800516c:	6623      	str	r3, [r4, #96]	; 0x60
 800516e:	2004      	movs	r0, #4
 8005170:	e788      	b.n	8005084 <test_sensor_calibration+0x64>
 8005172:	6841      	ldr	r1, [r0, #4]
 8005174:	b171      	cbz	r1, 8005194 <test_sensor_calibration+0x174>
 8005176:	f104 0364 	add.w	r3, r4, #100	; 0x64
 800517a:	68a8      	ldr	r0, [r5, #8]
 800517c:	68a2      	ldr	r2, [r4, #8]
 800517e:	9300      	str	r3, [sp, #0]
 8005180:	f105 030d 	add.w	r3, r5, #13
 8005184:	f7fe fcfe 	bl	8003b84 <acc_calibration_a121_calibrate>
 8005188:	b120      	cbz	r0, 8005194 <test_sensor_calibration+0x174>
 800518a:	7b6b      	ldrb	r3, [r5, #13]
 800518c:	2b0d      	cmp	r3, #13
 800518e:	d04b      	beq.n	8005228 <test_sensor_calibration+0x208>
 8005190:	2002      	movs	r0, #2
 8005192:	e777      	b.n	8005084 <test_sensor_calibration+0x64>
 8005194:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8005248 <test_sensor_calibration+0x228>
 8005198:	e759      	b.n	800504e <test_sensor_calibration+0x2e>
 800519a:	4648      	mov	r0, r9
 800519c:	f10d 0216 	add.w	r2, sp, #22
 80051a0:	211c      	movs	r1, #28
 80051a2:	f8ad 6016 	strh.w	r6, [sp, #22]
 80051a6:	f7fc f803 	bl	80011b0 <acc_sensor_reg_read>
 80051aa:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80051ae:	f410 6600 	ands.w	r6, r0, #2048	; 0x800
 80051b2:	d1d1      	bne.n	8005158 <test_sensor_calibration+0x138>
 80051b4:	68a8      	ldr	r0, [r5, #8]
 80051b6:	f7fb ffd1 	bl	800115c <acc_sensor_protocol_a121_init_interrupts>
 80051ba:	2203      	movs	r2, #3
 80051bc:	68a8      	ldr	r0, [r5, #8]
 80051be:	9200      	str	r2, [sp, #0]
 80051c0:	4631      	mov	r1, r6
 80051c2:	f240 1349 	movw	r3, #329	; 0x149
 80051c6:	9003      	str	r0, [sp, #12]
 80051c8:	f7fb ff9a 	bl	8001100 <acc_sensor_reg_field_write>
 80051cc:	9803      	ldr	r0, [sp, #12]
 80051ce:	9600      	str	r6, [sp, #0]
 80051d0:	f240 1349 	movw	r3, #329	; 0x149
 80051d4:	2204      	movs	r2, #4
 80051d6:	2102      	movs	r1, #2
 80051d8:	f7fb ff92 	bl	8001100 <acc_sensor_reg_field_write>
 80051dc:	9803      	ldr	r0, [sp, #12]
 80051de:	9600      	str	r6, [sp, #0]
 80051e0:	f240 1349 	movw	r3, #329	; 0x149
 80051e4:	2210      	movs	r2, #16
 80051e6:	2104      	movs	r1, #4
 80051e8:	f7fb ff8a 	bl	8001100 <acc_sensor_reg_field_write>
 80051ec:	9803      	ldr	r0, [sp, #12]
 80051ee:	9600      	str	r6, [sp, #0]
 80051f0:	f240 1349 	movw	r3, #329	; 0x149
 80051f4:	2220      	movs	r2, #32
 80051f6:	2105      	movs	r1, #5
 80051f8:	f7fb ff82 	bl	8001100 <acc_sensor_reg_field_write>
 80051fc:	9803      	ldr	r0, [sp, #12]
 80051fe:	9600      	str	r6, [sp, #0]
 8005200:	f240 1349 	movw	r3, #329	; 0x149
 8005204:	f44f 527f 	mov.w	r2, #16320	; 0x3fc0
 8005208:	2106      	movs	r1, #6
 800520a:	f7fb ff79 	bl	8001100 <acc_sensor_reg_field_write>
 800520e:	4630      	mov	r0, r6
 8005210:	6625      	str	r5, [r4, #96]	; 0x60
 8005212:	b007      	add	sp, #28
 8005214:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005218:	6128      	str	r0, [r5, #16]
 800521a:	4628      	mov	r0, r5
 800521c:	f7fb fe90 	bl	8000f40 <acc_rss_integration_mem_free>
 8005220:	2300      	movs	r3, #0
 8005222:	6623      	str	r3, [r4, #96]	; 0x60
 8005224:	2004      	movs	r0, #4
 8005226:	e72d      	b.n	8005084 <test_sensor_calibration+0x64>
 8005228:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800522a:	f7fc fc81 	bl	8001b30 <acc_sensor_destroy>
 800522e:	2003      	movs	r0, #3
 8005230:	e728      	b.n	8005084 <test_sensor_calibration+0x64>
 8005232:	bf00      	nop
 8005234:	1337b00e 	.word	0x1337b00e
 8005238:	0800aa4c 	.word	0x0800aa4c
 800523c:	0800aa64 	.word	0x0800aa64
 8005240:	0800b558 	.word	0x0800b558
 8005244:	0800a7bc 	.word	0x0800a7bc
 8005248:	200000ac 	.word	0x200000ac
 800524c:	0800b4a8 	.word	0x0800b4a8
 8005250:	0800b4c8 	.word	0x0800b4c8
 8005254:	0800b4e0 	.word	0x0800b4e0
 8005258:	0800b500 	.word	0x0800b500
 800525c:	0800b514 	.word	0x0800b514
 8005260:	0800b03c 	.word	0x0800b03c
 8005264:	0800b51c 	.word	0x0800b51c
 8005268:	0800a634 	.word	0x0800a634
 800526c:	0800b53c 	.word	0x0800b53c

08005270 <acc_integration_log>:
 8005270:	b40c      	push	{r2, r3}
 8005272:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005276:	b0ac      	sub	sp, #176	; 0xb0
 8005278:	ab32      	add	r3, sp, #200	; 0xc8
 800527a:	f10d 0818 	add.w	r8, sp, #24
 800527e:	f853 2b04 	ldr.w	r2, [r3], #4
 8005282:	9305      	str	r3, [sp, #20]
 8005284:	4606      	mov	r6, r0
 8005286:	460f      	mov	r7, r1
 8005288:	4640      	mov	r0, r8
 800528a:	2196      	movs	r1, #150	; 0x96
 800528c:	f001 ff26 	bl	80070dc <__wrap_vsnprintf>
 8005290:	2895      	cmp	r0, #149	; 0x95
 8005292:	dd06      	ble.n	80052a2 <acc_integration_log+0x32>
 8005294:	f642 622e 	movw	r2, #11822	; 0x2e2e
 8005298:	232e      	movs	r3, #46	; 0x2e
 800529a:	f8ad 20aa 	strh.w	r2, [sp, #170]	; 0xaa
 800529e:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 80052a2:	4b1d      	ldr	r3, [pc, #116]	; (8005318 <acc_integration_log+0xa8>)
 80052a4:	4a1d      	ldr	r2, [pc, #116]	; (800531c <acc_integration_log+0xac>)
 80052a6:	6818      	ldr	r0, [r3, #0]
 80052a8:	4d1d      	ldr	r5, [pc, #116]	; (8005320 <acc_integration_log+0xb0>)
 80052aa:	4b1e      	ldr	r3, [pc, #120]	; (8005324 <acc_integration_log+0xb4>)
 80052ac:	4c1e      	ldr	r4, [pc, #120]	; (8005328 <acc_integration_log+0xb8>)
 80052ae:	fba2 1200 	umull	r1, r2, r2, r0
 80052b2:	fba5 1500 	umull	r1, r5, r5, r0
 80052b6:	ea4f 3c92 	mov.w	ip, r2, lsr #14
 80052ba:	09ad      	lsrs	r5, r5, #6
 80052bc:	fba3 120c 	umull	r1, r2, r3, ip
 80052c0:	fba3 1305 	umull	r1, r3, r3, r5
 80052c4:	095b      	lsrs	r3, r3, #5
 80052c6:	fba4 1400 	umull	r1, r4, r4, r0
 80052ca:	2e04      	cmp	r6, #4
 80052cc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80052d0:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 80052d4:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 80052d8:	fb01 0515 	mls	r5, r1, r5, r0
 80052dc:	bf98      	it	ls
 80052de:	4813      	ldrls	r0, [pc, #76]	; (800532c <acc_integration_log+0xbc>)
 80052e0:	ea4f 1252 	mov.w	r2, r2, lsr #5
 80052e4:	bf94      	ite	ls
 80052e6:	5d80      	ldrbls	r0, [r0, r6]
 80052e8:	203f      	movhi	r0, #63	; 0x3f
 80052ea:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
 80052ee:	e9cd 5000 	strd	r5, r0, [sp]
 80052f2:	ebac 0282 	sub.w	r2, ip, r2, lsl #2
 80052f6:	0d61      	lsrs	r1, r4, #21
 80052f8:	e9cd 7802 	strd	r7, r8, [sp, #8]
 80052fc:	480c      	ldr	r0, [pc, #48]	; (8005330 <acc_integration_log+0xc0>)
 80052fe:	f001 fec7 	bl	8007090 <__wrap_printf>
 8005302:	4b0c      	ldr	r3, [pc, #48]	; (8005334 <acc_integration_log+0xc4>)
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	6898      	ldr	r0, [r3, #8]
 8005308:	f001 fbf2 	bl	8006af0 <fflush>
 800530c:	b02c      	add	sp, #176	; 0xb0
 800530e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005312:	b002      	add	sp, #8
 8005314:	4770      	bx	lr
 8005316:	bf00      	nop
 8005318:	200000ac 	.word	0x200000ac
 800531c:	45e7b273 	.word	0x45e7b273
 8005320:	10624dd3 	.word	0x10624dd3
 8005324:	88888889 	.word	0x88888889
 8005328:	95217cb1 	.word	0x95217cb1
 800532c:	0800b59c 	.word	0x0800b59c
 8005330:	0800b578 	.word	0x0800b578
 8005334:	20000028 	.word	0x20000028

08005338 <HAL_UART_Transmit>:
 8005338:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800533c:	4604      	mov	r4, r0
 800533e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8005340:	2820      	cmp	r0, #32
 8005342:	d142      	bne.n	80053ca <HAL_UART_Transmit+0x92>
 8005344:	460d      	mov	r5, r1
 8005346:	2900      	cmp	r1, #0
 8005348:	d03c      	beq.n	80053c4 <HAL_UART_Transmit+0x8c>
 800534a:	2a00      	cmp	r2, #0
 800534c:	d03a      	beq.n	80053c4 <HAL_UART_Transmit+0x8c>
 800534e:	461e      	mov	r6, r3
 8005350:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8005354:	2b01      	cmp	r3, #1
 8005356:	d038      	beq.n	80053ca <HAL_UART_Transmit+0x92>
 8005358:	2321      	movs	r3, #33	; 0x21
 800535a:	2700      	movs	r7, #0
 800535c:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
 8005360:	67a3      	str	r3, [r4, #120]	; 0x78
 8005362:	68a3      	ldr	r3, [r4, #8]
 8005364:	4924      	ldr	r1, [pc, #144]	; (80053f8 <HAL_UART_Transmit+0xc0>)
 8005366:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800536a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800536e:	f8d1 8000 	ldr.w	r8, [r1]
 8005372:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8005376:	d02b      	beq.n	80053d0 <HAL_UART_Transmit+0x98>
 8005378:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800537c:	2200      	movs	r2, #0
 800537e:	b29b      	uxth	r3, r3
 8005380:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
 8005384:	b973      	cbnz	r3, 80053a4 <HAL_UART_Transmit+0x6c>
 8005386:	e02c      	b.n	80053e2 <HAL_UART_Transmit+0xaa>
 8005388:	6823      	ldr	r3, [r4, #0]
 800538a:	f815 2b01 	ldrb.w	r2, [r5], #1
 800538e:	851a      	strh	r2, [r3, #40]	; 0x28
 8005390:	f8b4 0052 	ldrh.w	r0, [r4, #82]	; 0x52
 8005394:	3801      	subs	r0, #1
 8005396:	b280      	uxth	r0, r0
 8005398:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 800539c:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 80053a0:	b289      	uxth	r1, r1
 80053a2:	b1f1      	cbz	r1, 80053e2 <HAL_UART_Transmit+0xaa>
 80053a4:	4633      	mov	r3, r6
 80053a6:	4642      	mov	r2, r8
 80053a8:	2180      	movs	r1, #128	; 0x80
 80053aa:	4620      	mov	r0, r4
 80053ac:	f7fa ff3c 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80053b0:	b9a0      	cbnz	r0, 80053dc <HAL_UART_Transmit+0xa4>
 80053b2:	2d00      	cmp	r5, #0
 80053b4:	d1e8      	bne.n	8005388 <HAL_UART_Transmit+0x50>
 80053b6:	f837 3b02 	ldrh.w	r3, [r7], #2
 80053ba:	6822      	ldr	r2, [r4, #0]
 80053bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80053c0:	8513      	strh	r3, [r2, #40]	; 0x28
 80053c2:	e7e5      	b.n	8005390 <HAL_UART_Transmit+0x58>
 80053c4:	2001      	movs	r0, #1
 80053c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053ca:	2002      	movs	r0, #2
 80053cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053d0:	6923      	ldr	r3, [r4, #16]
 80053d2:	2b00      	cmp	r3, #0
 80053d4:	d1d0      	bne.n	8005378 <HAL_UART_Transmit+0x40>
 80053d6:	462f      	mov	r7, r5
 80053d8:	461d      	mov	r5, r3
 80053da:	e7cd      	b.n	8005378 <HAL_UART_Transmit+0x40>
 80053dc:	2003      	movs	r0, #3
 80053de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053e2:	4633      	mov	r3, r6
 80053e4:	4642      	mov	r2, r8
 80053e6:	2140      	movs	r1, #64	; 0x40
 80053e8:	4620      	mov	r0, r4
 80053ea:	f7fa ff1d 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80053ee:	2800      	cmp	r0, #0
 80053f0:	d1f4      	bne.n	80053dc <HAL_UART_Transmit+0xa4>
 80053f2:	2320      	movs	r3, #32
 80053f4:	67a3      	str	r3, [r4, #120]	; 0x78
 80053f6:	e7e6      	b.n	80053c6 <HAL_UART_Transmit+0x8e>
 80053f8:	200000ac 	.word	0x200000ac

080053fc <SystemInit>:
 80053fc:	4a03      	ldr	r2, [pc, #12]	; (800540c <SystemInit+0x10>)
 80053fe:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8005402:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005406:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800540a:	4770      	bx	lr
 800540c:	e000ed00 	.word	0xe000ed00

08005410 <RTC_Alarm_IRQHandler>:
 8005410:	b510      	push	{r4, lr}
 8005412:	4c18      	ldr	r4, [pc, #96]	; (8005474 <RTC_Alarm_IRQHandler+0x64>)
 8005414:	4a18      	ldr	r2, [pc, #96]	; (8005478 <RTC_Alarm_IRQHandler+0x68>)
 8005416:	6863      	ldr	r3, [r4, #4]
 8005418:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 800541c:	6151      	str	r1, [r2, #20]
 800541e:	689a      	ldr	r2, [r3, #8]
 8005420:	04d2      	lsls	r2, r2, #19
 8005422:	d502      	bpl.n	800542a <RTC_Alarm_IRQHandler+0x1a>
 8005424:	68da      	ldr	r2, [r3, #12]
 8005426:	05d0      	lsls	r0, r2, #23
 8005428:	d409      	bmi.n	800543e <RTC_Alarm_IRQHandler+0x2e>
 800542a:	689a      	ldr	r2, [r3, #8]
 800542c:	0491      	lsls	r1, r2, #18
 800542e:	d502      	bpl.n	8005436 <RTC_Alarm_IRQHandler+0x26>
 8005430:	68da      	ldr	r2, [r3, #12]
 8005432:	0592      	lsls	r2, r2, #22
 8005434:	d412      	bmi.n	800545c <RTC_Alarm_IRQHandler+0x4c>
 8005436:	2301      	movs	r3, #1
 8005438:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800543c:	bd10      	pop	{r4, pc}
 800543e:	68da      	ldr	r2, [r3, #12]
 8005440:	b2d2      	uxtb	r2, r2
 8005442:	f462 72c0 	orn	r2, r2, #384	; 0x180
 8005446:	60da      	str	r2, [r3, #12]
 8005448:	2301      	movs	r3, #1
 800544a:	f884 3148 	strb.w	r3, [r4, #328]	; 0x148
 800544e:	f7fd fd2d 	bl	8002eac <HAL_RTC_DeactivateAlarm.constprop.0>
 8005452:	b960      	cbnz	r0, 800546e <RTC_Alarm_IRQHandler+0x5e>
 8005454:	6863      	ldr	r3, [r4, #4]
 8005456:	f884 0148 	strb.w	r0, [r4, #328]	; 0x148
 800545a:	e7e6      	b.n	800542a <RTC_Alarm_IRQHandler+0x1a>
 800545c:	68da      	ldr	r2, [r3, #12]
 800545e:	b2d2      	uxtb	r2, r2
 8005460:	f462 7220 	orn	r2, r2, #640	; 0x280
 8005464:	60da      	str	r2, [r3, #12]
 8005466:	2301      	movs	r3, #1
 8005468:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800546c:	bd10      	pop	{r4, pc}
 800546e:	f7fd f895 	bl	800259c <__NVIC_SystemReset>
 8005472:	bf00      	nop
 8005474:	200000ac 	.word	0x200000ac
 8005478:	40010400 	.word	0x40010400

0800547c <EXTI15_10_IRQHandler>:
 800547c:	4b03      	ldr	r3, [pc, #12]	; (800548c <EXTI15_10_IRQHandler+0x10>)
 800547e:	695a      	ldr	r2, [r3, #20]
 8005480:	0512      	lsls	r2, r2, #20
 8005482:	bf44      	itt	mi
 8005484:	f44f 6200 	movmi.w	r2, #2048	; 0x800
 8005488:	615a      	strmi	r2, [r3, #20]
 800548a:	4770      	bx	lr
 800548c:	40010400 	.word	0x40010400

08005490 <USART2_IRQHandler>:
 8005490:	b570      	push	{r4, r5, r6, lr}
 8005492:	4ca9      	ldr	r4, [pc, #676]	; (8005738 <USART2_IRQHandler+0x2a8>)
 8005494:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005498:	69da      	ldr	r2, [r3, #28]
 800549a:	6819      	ldr	r1, [r3, #0]
 800549c:	689d      	ldr	r5, [r3, #8]
 800549e:	f640 000f 	movw	r0, #2063	; 0x80f
 80054a2:	4202      	tst	r2, r0
 80054a4:	d14c      	bne.n	8005540 <USART2_IRQHandler+0xb0>
 80054a6:	0690      	lsls	r0, r2, #26
 80054a8:	d502      	bpl.n	80054b0 <USART2_IRQHandler+0x20>
 80054aa:	068e      	lsls	r6, r1, #26
 80054ac:	f100 80e9 	bmi.w	8005682 <USART2_IRQHandler+0x1f2>
 80054b0:	f8d4 01ac 	ldr.w	r0, [r4, #428]	; 0x1ac
 80054b4:	2801      	cmp	r0, #1
 80054b6:	d025      	beq.n	8005504 <USART2_IRQHandler+0x74>
 80054b8:	02d6      	lsls	r6, r2, #11
 80054ba:	d502      	bpl.n	80054c2 <USART2_IRQHandler+0x32>
 80054bc:	0268      	lsls	r0, r5, #9
 80054be:	f100 80ea 	bmi.w	8005696 <USART2_IRQHandler+0x206>
 80054c2:	0616      	lsls	r6, r2, #24
 80054c4:	d414      	bmi.n	80054f0 <USART2_IRQHandler+0x60>
 80054c6:	0650      	lsls	r0, r2, #25
 80054c8:	d501      	bpl.n	80054ce <USART2_IRQHandler+0x3e>
 80054ca:	064a      	lsls	r2, r1, #25
 80054cc:	d402      	bmi.n	80054d4 <USART2_IRQHandler+0x44>
 80054ce:	bd70      	pop	{r4, r5, r6, pc}
 80054d0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80054d4:	e853 2f00 	ldrex	r2, [r3]
 80054d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80054dc:	e843 2100 	strex	r1, r2, [r3]
 80054e0:	2900      	cmp	r1, #0
 80054e2:	d1f5      	bne.n	80054d0 <USART2_IRQHandler+0x40>
 80054e4:	2320      	movs	r3, #32
 80054e6:	f8c4 11b4 	str.w	r1, [r4, #436]	; 0x1b4
 80054ea:	f8c4 31c4 	str.w	r3, [r4, #452]	; 0x1c4
 80054ee:	bd70      	pop	{r4, r5, r6, pc}
 80054f0:	060d      	lsls	r5, r1, #24
 80054f2:	d5e8      	bpl.n	80054c6 <USART2_IRQHandler+0x36>
 80054f4:	f8d4 31b4 	ldr.w	r3, [r4, #436]	; 0x1b4
 80054f8:	2b00      	cmp	r3, #0
 80054fa:	d0e8      	beq.n	80054ce <USART2_IRQHandler+0x3e>
 80054fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005500:	488e      	ldr	r0, [pc, #568]	; (800573c <USART2_IRQHandler+0x2ac>)
 8005502:	4718      	bx	r3
 8005504:	06d6      	lsls	r6, r2, #27
 8005506:	d5d7      	bpl.n	80054b8 <USART2_IRQHandler+0x28>
 8005508:	06c8      	lsls	r0, r1, #27
 800550a:	d5d5      	bpl.n	80054b8 <USART2_IRQHandler+0x28>
 800550c:	2210      	movs	r2, #16
 800550e:	621a      	str	r2, [r3, #32]
 8005510:	689a      	ldr	r2, [r3, #8]
 8005512:	0651      	lsls	r1, r2, #25
 8005514:	f140 80d7 	bpl.w	80056c6 <USART2_IRQHandler+0x236>
 8005518:	f8d4 21bc 	ldr.w	r2, [r4, #444]	; 0x1bc
 800551c:	6811      	ldr	r1, [r2, #0]
 800551e:	684a      	ldr	r2, [r1, #4]
 8005520:	b292      	uxth	r2, r2
 8005522:	2a00      	cmp	r2, #0
 8005524:	d0d3      	beq.n	80054ce <USART2_IRQHandler+0x3e>
 8005526:	f8b4 01a4 	ldrh.w	r0, [r4, #420]	; 0x1a4
 800552a:	4290      	cmp	r0, r2
 800552c:	d9cf      	bls.n	80054ce <USART2_IRQHandler+0x3e>
 800552e:	f8a4 21a6 	strh.w	r2, [r4, #422]	; 0x1a6
 8005532:	680a      	ldr	r2, [r1, #0]
 8005534:	0692      	lsls	r2, r2, #26
 8005536:	f140 8109 	bpl.w	800574c <USART2_IRQHandler+0x2bc>
 800553a:	f8b4 31a6 	ldrh.w	r3, [r4, #422]	; 0x1a6
 800553e:	bd70      	pop	{r4, r5, r6, pc}
 8005540:	487f      	ldr	r0, [pc, #508]	; (8005740 <USART2_IRQHandler+0x2b0>)
 8005542:	f005 0601 	and.w	r6, r5, #1
 8005546:	4008      	ands	r0, r1
 8005548:	4330      	orrs	r0, r6
 800554a:	d0b1      	beq.n	80054b0 <USART2_IRQHandler+0x20>
 800554c:	07d5      	lsls	r5, r2, #31
 800554e:	d509      	bpl.n	8005564 <USART2_IRQHandler+0xd4>
 8005550:	05c8      	lsls	r0, r1, #23
 8005552:	d507      	bpl.n	8005564 <USART2_IRQHandler+0xd4>
 8005554:	2001      	movs	r0, #1
 8005556:	6218      	str	r0, [r3, #32]
 8005558:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 800555c:	f040 0001 	orr.w	r0, r0, #1
 8005560:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005564:	0795      	lsls	r5, r2, #30
 8005566:	d57f      	bpl.n	8005668 <USART2_IRQHandler+0x1d8>
 8005568:	b14e      	cbz	r6, 800557e <USART2_IRQHandler+0xee>
 800556a:	2002      	movs	r0, #2
 800556c:	6218      	str	r0, [r3, #32]
 800556e:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005572:	f040 0004 	orr.w	r0, r0, #4
 8005576:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 800557a:	0750      	lsls	r0, r2, #29
 800557c:	d478      	bmi.n	8005670 <USART2_IRQHandler+0x1e0>
 800557e:	0710      	lsls	r0, r2, #28
 8005580:	d50b      	bpl.n	800559a <USART2_IRQHandler+0x10a>
 8005582:	f001 0020 	and.w	r0, r1, #32
 8005586:	4330      	orrs	r0, r6
 8005588:	d007      	beq.n	800559a <USART2_IRQHandler+0x10a>
 800558a:	2008      	movs	r0, #8
 800558c:	6218      	str	r0, [r3, #32]
 800558e:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005592:	f040 0008 	orr.w	r0, r0, #8
 8005596:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 800559a:	0516      	lsls	r6, r2, #20
 800559c:	d50a      	bpl.n	80055b4 <USART2_IRQHandler+0x124>
 800559e:	014d      	lsls	r5, r1, #5
 80055a0:	d508      	bpl.n	80055b4 <USART2_IRQHandler+0x124>
 80055a2:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80055a6:	6218      	str	r0, [r3, #32]
 80055a8:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80055ac:	f040 0020 	orr.w	r0, r0, #32
 80055b0:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80055b4:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80055b8:	2800      	cmp	r0, #0
 80055ba:	d088      	beq.n	80054ce <USART2_IRQHandler+0x3e>
 80055bc:	0690      	lsls	r0, r2, #26
 80055be:	d501      	bpl.n	80055c4 <USART2_IRQHandler+0x134>
 80055c0:	068a      	lsls	r2, r1, #26
 80055c2:	d477      	bmi.n	80056b4 <USART2_IRQHandler+0x224>
 80055c4:	f8d4 11cc 	ldr.w	r1, [r4, #460]	; 0x1cc
 80055c8:	689a      	ldr	r2, [r3, #8]
 80055ca:	f001 0128 	and.w	r1, r1, #40	; 0x28
 80055ce:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80055d2:	430a      	orrs	r2, r1
 80055d4:	d102      	bne.n	80055dc <USART2_IRQHandler+0x14c>
 80055d6:	e0f5      	b.n	80057c4 <USART2_IRQHandler+0x334>
 80055d8:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80055dc:	e853 2f00 	ldrex	r2, [r3]
 80055e0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80055e4:	e843 2100 	strex	r1, r2, [r3]
 80055e8:	2900      	cmp	r1, #0
 80055ea:	d1f5      	bne.n	80055d8 <USART2_IRQHandler+0x148>
 80055ec:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80055f0:	f102 0308 	add.w	r3, r2, #8
 80055f4:	e853 3f00 	ldrex	r3, [r3]
 80055f8:	f023 0301 	bic.w	r3, r3, #1
 80055fc:	3208      	adds	r2, #8
 80055fe:	e842 3100 	strex	r1, r3, [r2]
 8005602:	2900      	cmp	r1, #0
 8005604:	d1f2      	bne.n	80055ec <USART2_IRQHandler+0x15c>
 8005606:	f8d4 31ac 	ldr.w	r3, [r4, #428]	; 0x1ac
 800560a:	2b01      	cmp	r3, #1
 800560c:	d047      	beq.n	800569e <USART2_IRQHandler+0x20e>
 800560e:	2300      	movs	r3, #0
 8005610:	2120      	movs	r1, #32
 8005612:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005616:	f8c4 11c8 	str.w	r1, [r4, #456]	; 0x1c8
 800561a:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
 800561e:	6891      	ldr	r1, [r2, #8]
 8005620:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
 8005624:	064b      	lsls	r3, r1, #25
 8005626:	d402      	bmi.n	800562e <USART2_IRQHandler+0x19e>
 8005628:	e751      	b.n	80054ce <USART2_IRQHandler+0x3e>
 800562a:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800562e:	f102 0308 	add.w	r3, r2, #8
 8005632:	e853 3f00 	ldrex	r3, [r3]
 8005636:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800563a:	3208      	adds	r2, #8
 800563c:	e842 3100 	strex	r1, r3, [r2]
 8005640:	2900      	cmp	r1, #0
 8005642:	d1f2      	bne.n	800562a <USART2_IRQHandler+0x19a>
 8005644:	f8d4 01bc 	ldr.w	r0, [r4, #444]	; 0x1bc
 8005648:	2800      	cmp	r0, #0
 800564a:	f43f af40 	beq.w	80054ce <USART2_IRQHandler+0x3e>
 800564e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8005652:	4a3c      	ldr	r2, [pc, #240]	; (8005744 <USART2_IRQHandler+0x2b4>)
 8005654:	6382      	str	r2, [r0, #56]	; 0x38
 8005656:	2b02      	cmp	r3, #2
 8005658:	f000 80b7 	beq.w	80057ca <USART2_IRQHandler+0x33a>
 800565c:	2304      	movs	r3, #4
 800565e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005662:	63c3      	str	r3, [r0, #60]	; 0x3c
 8005664:	f7fc ba86 	b.w	8001b74 <UART_DMAAbortOnError>
 8005668:	0755      	lsls	r5, r2, #29
 800566a:	d588      	bpl.n	800557e <USART2_IRQHandler+0xee>
 800566c:	2e00      	cmp	r6, #0
 800566e:	d086      	beq.n	800557e <USART2_IRQHandler+0xee>
 8005670:	2004      	movs	r0, #4
 8005672:	6218      	str	r0, [r3, #32]
 8005674:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005678:	f040 0002 	orr.w	r0, r0, #2
 800567c:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005680:	e77d      	b.n	800557e <USART2_IRQHandler+0xee>
 8005682:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 8005686:	2b00      	cmp	r3, #0
 8005688:	f43f af21 	beq.w	80054ce <USART2_IRQHandler+0x3e>
 800568c:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 8005690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005694:	4718      	bx	r3
 8005696:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800569a:	621a      	str	r2, [r3, #32]
 800569c:	bd70      	pop	{r4, r5, r6, pc}
 800569e:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80056a2:	e852 3f00 	ldrex	r3, [r2]
 80056a6:	f023 0310 	bic.w	r3, r3, #16
 80056aa:	e842 3100 	strex	r1, r3, [r2]
 80056ae:	2900      	cmp	r1, #0
 80056b0:	d1f5      	bne.n	800569e <USART2_IRQHandler+0x20e>
 80056b2:	e7ac      	b.n	800560e <USART2_IRQHandler+0x17e>
 80056b4:	f8d4 21b0 	ldr.w	r2, [r4, #432]	; 0x1b0
 80056b8:	2a00      	cmp	r2, #0
 80056ba:	d083      	beq.n	80055c4 <USART2_IRQHandler+0x134>
 80056bc:	481f      	ldr	r0, [pc, #124]	; (800573c <USART2_IRQHandler+0x2ac>)
 80056be:	4790      	blx	r2
 80056c0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80056c4:	e77e      	b.n	80055c4 <USART2_IRQHandler+0x134>
 80056c6:	f8b4 11a6 	ldrh.w	r1, [r4, #422]	; 0x1a6
 80056ca:	f8b4 21a6 	ldrh.w	r2, [r4, #422]	; 0x1a6
 80056ce:	b292      	uxth	r2, r2
 80056d0:	b289      	uxth	r1, r1
 80056d2:	2a00      	cmp	r2, #0
 80056d4:	f43f aefb 	beq.w	80054ce <USART2_IRQHandler+0x3e>
 80056d8:	f8b4 21a4 	ldrh.w	r2, [r4, #420]	; 0x1a4
 80056dc:	428a      	cmp	r2, r1
 80056de:	f43f aef6 	beq.w	80054ce <USART2_IRQHandler+0x3e>
 80056e2:	e001      	b.n	80056e8 <USART2_IRQHandler+0x258>
 80056e4:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80056e8:	e853 2f00 	ldrex	r2, [r3]
 80056ec:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80056f0:	e843 2100 	strex	r1, r2, [r3]
 80056f4:	2900      	cmp	r1, #0
 80056f6:	d1f5      	bne.n	80056e4 <USART2_IRQHandler+0x254>
 80056f8:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80056fc:	f102 0308 	add.w	r3, r2, #8
 8005700:	e853 3f00 	ldrex	r3, [r3]
 8005704:	f023 0301 	bic.w	r3, r3, #1
 8005708:	3208      	adds	r2, #8
 800570a:	e842 3100 	strex	r1, r3, [r2]
 800570e:	2900      	cmp	r1, #0
 8005710:	d1f2      	bne.n	80056f8 <USART2_IRQHandler+0x268>
 8005712:	2320      	movs	r3, #32
 8005714:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 8005718:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
 800571c:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 8005720:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005724:	e852 3f00 	ldrex	r3, [r2]
 8005728:	f023 0310 	bic.w	r3, r3, #16
 800572c:	e842 3100 	strex	r1, r3, [r2]
 8005730:	2900      	cmp	r1, #0
 8005732:	d1f5      	bne.n	8005720 <USART2_IRQHandler+0x290>
 8005734:	bd70      	pop	{r4, r5, r6, pc}
 8005736:	bf00      	nop
 8005738:	200000ac 	.word	0x200000ac
 800573c:	200001f8 	.word	0x200001f8
 8005740:	04000120 	.word	0x04000120
 8005744:	08001b75 	.word	0x08001b75
 8005748:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 800574c:	e853 2f00 	ldrex	r2, [r3]
 8005750:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005754:	e843 2100 	strex	r1, r2, [r3]
 8005758:	2900      	cmp	r1, #0
 800575a:	d1f5      	bne.n	8005748 <USART2_IRQHandler+0x2b8>
 800575c:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005760:	f102 0308 	add.w	r3, r2, #8
 8005764:	e853 3f00 	ldrex	r3, [r3]
 8005768:	f023 0301 	bic.w	r3, r3, #1
 800576c:	3208      	adds	r2, #8
 800576e:	e842 3100 	strex	r1, r3, [r2]
 8005772:	2900      	cmp	r1, #0
 8005774:	d1f2      	bne.n	800575c <USART2_IRQHandler+0x2cc>
 8005776:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800577a:	f102 0308 	add.w	r3, r2, #8
 800577e:	e853 3f00 	ldrex	r3, [r3]
 8005782:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005786:	3208      	adds	r2, #8
 8005788:	e842 3100 	strex	r1, r3, [r2]
 800578c:	2900      	cmp	r1, #0
 800578e:	d1f2      	bne.n	8005776 <USART2_IRQHandler+0x2e6>
 8005790:	2320      	movs	r3, #32
 8005792:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 8005796:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 800579a:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800579e:	e852 3f00 	ldrex	r3, [r2]
 80057a2:	f023 0310 	bic.w	r3, r3, #16
 80057a6:	e842 3100 	strex	r1, r3, [r2]
 80057aa:	2900      	cmp	r1, #0
 80057ac:	d1f5      	bne.n	800579a <USART2_IRQHandler+0x30a>
 80057ae:	f8d4 31bc 	ldr.w	r3, [r4, #444]	; 0x1bc
 80057b2:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 80057b6:	2a02      	cmp	r2, #2
 80057b8:	d020      	beq.n	80057fc <USART2_IRQHandler+0x36c>
 80057ba:	2204      	movs	r2, #4
 80057bc:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80057c0:	63da      	str	r2, [r3, #60]	; 0x3c
 80057c2:	e6ba      	b.n	800553a <USART2_IRQHandler+0xaa>
 80057c4:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
 80057c8:	bd70      	pop	{r4, r5, r6, pc}
 80057ca:	6802      	ldr	r2, [r0, #0]
 80057cc:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80057ce:	6814      	ldr	r4, [r2, #0]
 80057d0:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80057d2:	f024 040e 	bic.w	r4, r4, #14
 80057d6:	6014      	str	r4, [r2, #0]
 80057d8:	6814      	ldr	r4, [r2, #0]
 80057da:	f024 0401 	bic.w	r4, r4, #1
 80057de:	6014      	str	r4, [r2, #0]
 80057e0:	f003 031c 	and.w	r3, r3, #28
 80057e4:	2201      	movs	r2, #1
 80057e6:	fa02 f303 	lsl.w	r3, r2, r3
 80057ea:	606b      	str	r3, [r5, #4]
 80057ec:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80057f0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80057f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80057f8:	f7fc b9bc 	b.w	8001b74 <UART_DMAAbortOnError>
 80057fc:	6818      	ldr	r0, [r3, #0]
 80057fe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005800:	6805      	ldr	r5, [r0, #0]
 8005802:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8005804:	f025 050e 	bic.w	r5, r5, #14
 8005808:	6005      	str	r5, [r0, #0]
 800580a:	6805      	ldr	r5, [r0, #0]
 800580c:	f025 0501 	bic.w	r5, r5, #1
 8005810:	6005      	str	r5, [r0, #0]
 8005812:	f002 021c 	and.w	r2, r2, #28
 8005816:	2001      	movs	r0, #1
 8005818:	fa00 f202 	lsl.w	r2, r0, r2
 800581c:	6072      	str	r2, [r6, #4]
 800581e:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8005822:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8005826:	e688      	b.n	800553a <USART2_IRQHandler+0xaa>

08005828 <I2C2_EV_IRQHandler>:
 8005828:	4808      	ldr	r0, [pc, #32]	; (800584c <I2C2_EV_IRQHandler+0x24>)
 800582a:	b410      	push	{r4}
 800582c:	f8d0 31d0 	ldr.w	r3, [r0, #464]	; 0x1d0
 8005830:	f8d0 4204 	ldr.w	r4, [r0, #516]	; 0x204
 8005834:	6999      	ldr	r1, [r3, #24]
 8005836:	681a      	ldr	r2, [r3, #0]
 8005838:	b12c      	cbz	r4, 8005846 <I2C2_EV_IRQHandler+0x1e>
 800583a:	4623      	mov	r3, r4
 800583c:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
 8005840:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005844:	4718      	bx	r3
 8005846:	f85d 4b04 	ldr.w	r4, [sp], #4
 800584a:	4770      	bx	lr
 800584c:	200000ac 	.word	0x200000ac

08005850 <DMA1_Channel7_IRQHandler>:
 8005850:	4801      	ldr	r0, [pc, #4]	; (8005858 <DMA1_Channel7_IRQHandler+0x8>)
 8005852:	f7fc bdd9 	b.w	8002408 <HAL_DMA_IRQHandler>
 8005856:	bf00      	nop
 8005858:	20000148 	.word	0x20000148

0800585c <DMA1_Channel6_IRQHandler>:
 800585c:	4801      	ldr	r0, [pc, #4]	; (8005864 <DMA1_Channel6_IRQHandler+0x8>)
 800585e:	f7fc bdd3 	b.w	8002408 <HAL_DMA_IRQHandler>
 8005862:	bf00      	nop
 8005864:	20000100 	.word	0x20000100

08005868 <DMA1_Channel3_IRQHandler>:
 8005868:	4801      	ldr	r0, [pc, #4]	; (8005870 <DMA1_Channel3_IRQHandler+0x8>)
 800586a:	f7fc bdcd 	b.w	8002408 <HAL_DMA_IRQHandler>
 800586e:	bf00      	nop
 8005870:	200002d0 	.word	0x200002d0

08005874 <DMA1_Channel2_IRQHandler>:
 8005874:	4801      	ldr	r0, [pc, #4]	; (800587c <DMA1_Channel2_IRQHandler+0x8>)
 8005876:	f7fc bdc7 	b.w	8002408 <HAL_DMA_IRQHandler>
 800587a:	bf00      	nop
 800587c:	20000318 	.word	0x20000318

08005880 <EXTI3_IRQHandler>:
 8005880:	4b03      	ldr	r3, [pc, #12]	; (8005890 <EXTI3_IRQHandler+0x10>)
 8005882:	695a      	ldr	r2, [r3, #20]
 8005884:	0712      	lsls	r2, r2, #28
 8005886:	bf44      	itt	mi
 8005888:	2208      	movmi	r2, #8
 800588a:	615a      	strmi	r2, [r3, #20]
 800588c:	4770      	bx	lr
 800588e:	bf00      	nop
 8005890:	40010400 	.word	0x40010400

08005894 <RTC_WKUP_IRQHandler>:
 8005894:	4b0c      	ldr	r3, [pc, #48]	; (80058c8 <RTC_WKUP_IRQHandler+0x34>)
 8005896:	490d      	ldr	r1, [pc, #52]	; (80058cc <RTC_WKUP_IRQHandler+0x38>)
 8005898:	685a      	ldr	r2, [r3, #4]
 800589a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800589e:	6148      	str	r0, [r1, #20]
 80058a0:	68d1      	ldr	r1, [r2, #12]
 80058a2:	0549      	lsls	r1, r1, #21
 80058a4:	d403      	bmi.n	80058ae <RTC_WKUP_IRQHandler+0x1a>
 80058a6:	2201      	movs	r2, #1
 80058a8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80058ac:	4770      	bx	lr
 80058ae:	68d1      	ldr	r1, [r2, #12]
 80058b0:	b2c9      	uxtb	r1, r1
 80058b2:	f461 6190 	orn	r1, r1, #1152	; 0x480
 80058b6:	60d1      	str	r1, [r2, #12]
 80058b8:	2001      	movs	r0, #1
 80058ba:	2201      	movs	r2, #1
 80058bc:	f883 0051 	strb.w	r0, [r3, #81]	; 0x51
 80058c0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80058c4:	4770      	bx	lr
 80058c6:	bf00      	nop
 80058c8:	200000ac 	.word	0x200000ac
 80058cc:	40010400 	.word	0x40010400

080058d0 <SysTick_Handler>:
 80058d0:	4a02      	ldr	r2, [pc, #8]	; (80058dc <SysTick_Handler+0xc>)
 80058d2:	6813      	ldr	r3, [r2, #0]
 80058d4:	3301      	adds	r3, #1
 80058d6:	6013      	str	r3, [r2, #0]
 80058d8:	4770      	bx	lr
 80058da:	bf00      	nop
 80058dc:	200000ac 	.word	0x200000ac

080058e0 <PendSV_Handler>:
 80058e0:	4770      	bx	lr
 80058e2:	bf00      	nop

080058e4 <SVC_Handler>:
 80058e4:	4770      	bx	lr
 80058e6:	bf00      	nop

080058e8 <DebugMon_Handler>:
 80058e8:	4770      	bx	lr
 80058ea:	bf00      	nop

080058ec <UsageFault_Handler>:
 80058ec:	e7fe      	b.n	80058ec <UsageFault_Handler>
 80058ee:	bf00      	nop

080058f0 <BusFault_Handler>:
 80058f0:	e7fe      	b.n	80058f0 <BusFault_Handler>
 80058f2:	bf00      	nop

080058f4 <MemManage_Handler>:
 80058f4:	e7fe      	b.n	80058f4 <MemManage_Handler>
 80058f6:	bf00      	nop

080058f8 <HardFault_Handler>:
 80058f8:	e7fe      	b.n	80058f8 <HardFault_Handler>
 80058fa:	bf00      	nop

080058fc <NMI_Handler>:
 80058fc:	e7fe      	b.n	80058fc <NMI_Handler>
 80058fe:	bf00      	nop

08005900 <strlen>:
 8005900:	4603      	mov	r3, r0
 8005902:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005906:	2a00      	cmp	r2, #0
 8005908:	d1fb      	bne.n	8005902 <strlen+0x2>
 800590a:	1a18      	subs	r0, r3, r0
 800590c:	3801      	subs	r0, #1
 800590e:	4770      	bx	lr

08005910 <__aeabi_uldivmod>:
 8005910:	b953      	cbnz	r3, 8005928 <__aeabi_uldivmod+0x18>
 8005912:	b94a      	cbnz	r2, 8005928 <__aeabi_uldivmod+0x18>
 8005914:	2900      	cmp	r1, #0
 8005916:	bf08      	it	eq
 8005918:	2800      	cmpeq	r0, #0
 800591a:	bf1c      	itt	ne
 800591c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8005920:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8005924:	f000 b96e 	b.w	8005c04 <__aeabi_idiv0>
 8005928:	f1ad 0c08 	sub.w	ip, sp, #8
 800592c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8005930:	f000 f806 	bl	8005940 <__udivmoddi4>
 8005934:	f8dd e004 	ldr.w	lr, [sp, #4]
 8005938:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800593c:	b004      	add	sp, #16
 800593e:	4770      	bx	lr

08005940 <__udivmoddi4>:
 8005940:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005944:	9d08      	ldr	r5, [sp, #32]
 8005946:	4604      	mov	r4, r0
 8005948:	468c      	mov	ip, r1
 800594a:	2b00      	cmp	r3, #0
 800594c:	f040 8083 	bne.w	8005a56 <__udivmoddi4+0x116>
 8005950:	428a      	cmp	r2, r1
 8005952:	4617      	mov	r7, r2
 8005954:	d947      	bls.n	80059e6 <__udivmoddi4+0xa6>
 8005956:	fab2 f282 	clz	r2, r2
 800595a:	b142      	cbz	r2, 800596e <__udivmoddi4+0x2e>
 800595c:	f1c2 0020 	rsb	r0, r2, #32
 8005960:	fa24 f000 	lsr.w	r0, r4, r0
 8005964:	4091      	lsls	r1, r2
 8005966:	4097      	lsls	r7, r2
 8005968:	ea40 0c01 	orr.w	ip, r0, r1
 800596c:	4094      	lsls	r4, r2
 800596e:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8005972:	0c23      	lsrs	r3, r4, #16
 8005974:	fbbc f6f8 	udiv	r6, ip, r8
 8005978:	fa1f fe87 	uxth.w	lr, r7
 800597c:	fb08 c116 	mls	r1, r8, r6, ip
 8005980:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005984:	fb06 f10e 	mul.w	r1, r6, lr
 8005988:	4299      	cmp	r1, r3
 800598a:	d909      	bls.n	80059a0 <__udivmoddi4+0x60>
 800598c:	18fb      	adds	r3, r7, r3
 800598e:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8005992:	f080 8119 	bcs.w	8005bc8 <__udivmoddi4+0x288>
 8005996:	4299      	cmp	r1, r3
 8005998:	f240 8116 	bls.w	8005bc8 <__udivmoddi4+0x288>
 800599c:	3e02      	subs	r6, #2
 800599e:	443b      	add	r3, r7
 80059a0:	1a5b      	subs	r3, r3, r1
 80059a2:	b2a4      	uxth	r4, r4
 80059a4:	fbb3 f0f8 	udiv	r0, r3, r8
 80059a8:	fb08 3310 	mls	r3, r8, r0, r3
 80059ac:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80059b0:	fb00 fe0e 	mul.w	lr, r0, lr
 80059b4:	45a6      	cmp	lr, r4
 80059b6:	d909      	bls.n	80059cc <__udivmoddi4+0x8c>
 80059b8:	193c      	adds	r4, r7, r4
 80059ba:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80059be:	f080 8105 	bcs.w	8005bcc <__udivmoddi4+0x28c>
 80059c2:	45a6      	cmp	lr, r4
 80059c4:	f240 8102 	bls.w	8005bcc <__udivmoddi4+0x28c>
 80059c8:	3802      	subs	r0, #2
 80059ca:	443c      	add	r4, r7
 80059cc:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80059d0:	eba4 040e 	sub.w	r4, r4, lr
 80059d4:	2600      	movs	r6, #0
 80059d6:	b11d      	cbz	r5, 80059e0 <__udivmoddi4+0xa0>
 80059d8:	40d4      	lsrs	r4, r2
 80059da:	2300      	movs	r3, #0
 80059dc:	e9c5 4300 	strd	r4, r3, [r5]
 80059e0:	4631      	mov	r1, r6
 80059e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059e6:	b902      	cbnz	r2, 80059ea <__udivmoddi4+0xaa>
 80059e8:	deff      	udf	#255	; 0xff
 80059ea:	fab2 f282 	clz	r2, r2
 80059ee:	2a00      	cmp	r2, #0
 80059f0:	d150      	bne.n	8005a94 <__udivmoddi4+0x154>
 80059f2:	1bcb      	subs	r3, r1, r7
 80059f4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80059f8:	fa1f f887 	uxth.w	r8, r7
 80059fc:	2601      	movs	r6, #1
 80059fe:	fbb3 fcfe 	udiv	ip, r3, lr
 8005a02:	0c21      	lsrs	r1, r4, #16
 8005a04:	fb0e 331c 	mls	r3, lr, ip, r3
 8005a08:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005a0c:	fb08 f30c 	mul.w	r3, r8, ip
 8005a10:	428b      	cmp	r3, r1
 8005a12:	d907      	bls.n	8005a24 <__udivmoddi4+0xe4>
 8005a14:	1879      	adds	r1, r7, r1
 8005a16:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8005a1a:	d202      	bcs.n	8005a22 <__udivmoddi4+0xe2>
 8005a1c:	428b      	cmp	r3, r1
 8005a1e:	f200 80e9 	bhi.w	8005bf4 <__udivmoddi4+0x2b4>
 8005a22:	4684      	mov	ip, r0
 8005a24:	1ac9      	subs	r1, r1, r3
 8005a26:	b2a3      	uxth	r3, r4
 8005a28:	fbb1 f0fe 	udiv	r0, r1, lr
 8005a2c:	fb0e 1110 	mls	r1, lr, r0, r1
 8005a30:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8005a34:	fb08 f800 	mul.w	r8, r8, r0
 8005a38:	45a0      	cmp	r8, r4
 8005a3a:	d907      	bls.n	8005a4c <__udivmoddi4+0x10c>
 8005a3c:	193c      	adds	r4, r7, r4
 8005a3e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005a42:	d202      	bcs.n	8005a4a <__udivmoddi4+0x10a>
 8005a44:	45a0      	cmp	r8, r4
 8005a46:	f200 80d9 	bhi.w	8005bfc <__udivmoddi4+0x2bc>
 8005a4a:	4618      	mov	r0, r3
 8005a4c:	eba4 0408 	sub.w	r4, r4, r8
 8005a50:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8005a54:	e7bf      	b.n	80059d6 <__udivmoddi4+0x96>
 8005a56:	428b      	cmp	r3, r1
 8005a58:	d909      	bls.n	8005a6e <__udivmoddi4+0x12e>
 8005a5a:	2d00      	cmp	r5, #0
 8005a5c:	f000 80b1 	beq.w	8005bc2 <__udivmoddi4+0x282>
 8005a60:	2600      	movs	r6, #0
 8005a62:	e9c5 0100 	strd	r0, r1, [r5]
 8005a66:	4630      	mov	r0, r6
 8005a68:	4631      	mov	r1, r6
 8005a6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a6e:	fab3 f683 	clz	r6, r3
 8005a72:	2e00      	cmp	r6, #0
 8005a74:	d14a      	bne.n	8005b0c <__udivmoddi4+0x1cc>
 8005a76:	428b      	cmp	r3, r1
 8005a78:	d302      	bcc.n	8005a80 <__udivmoddi4+0x140>
 8005a7a:	4282      	cmp	r2, r0
 8005a7c:	f200 80b8 	bhi.w	8005bf0 <__udivmoddi4+0x2b0>
 8005a80:	1a84      	subs	r4, r0, r2
 8005a82:	eb61 0103 	sbc.w	r1, r1, r3
 8005a86:	2001      	movs	r0, #1
 8005a88:	468c      	mov	ip, r1
 8005a8a:	2d00      	cmp	r5, #0
 8005a8c:	d0a8      	beq.n	80059e0 <__udivmoddi4+0xa0>
 8005a8e:	e9c5 4c00 	strd	r4, ip, [r5]
 8005a92:	e7a5      	b.n	80059e0 <__udivmoddi4+0xa0>
 8005a94:	f1c2 0320 	rsb	r3, r2, #32
 8005a98:	fa20 f603 	lsr.w	r6, r0, r3
 8005a9c:	4097      	lsls	r7, r2
 8005a9e:	fa01 f002 	lsl.w	r0, r1, r2
 8005aa2:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005aa6:	40d9      	lsrs	r1, r3
 8005aa8:	4330      	orrs	r0, r6
 8005aaa:	0c03      	lsrs	r3, r0, #16
 8005aac:	fbb1 f6fe 	udiv	r6, r1, lr
 8005ab0:	fa1f f887 	uxth.w	r8, r7
 8005ab4:	fb0e 1116 	mls	r1, lr, r6, r1
 8005ab8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005abc:	fb06 f108 	mul.w	r1, r6, r8
 8005ac0:	4299      	cmp	r1, r3
 8005ac2:	fa04 f402 	lsl.w	r4, r4, r2
 8005ac6:	d909      	bls.n	8005adc <__udivmoddi4+0x19c>
 8005ac8:	18fb      	adds	r3, r7, r3
 8005aca:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8005ace:	f080 808d 	bcs.w	8005bec <__udivmoddi4+0x2ac>
 8005ad2:	4299      	cmp	r1, r3
 8005ad4:	f240 808a 	bls.w	8005bec <__udivmoddi4+0x2ac>
 8005ad8:	3e02      	subs	r6, #2
 8005ada:	443b      	add	r3, r7
 8005adc:	1a5b      	subs	r3, r3, r1
 8005ade:	b281      	uxth	r1, r0
 8005ae0:	fbb3 f0fe 	udiv	r0, r3, lr
 8005ae4:	fb0e 3310 	mls	r3, lr, r0, r3
 8005ae8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005aec:	fb00 f308 	mul.w	r3, r0, r8
 8005af0:	428b      	cmp	r3, r1
 8005af2:	d907      	bls.n	8005b04 <__udivmoddi4+0x1c4>
 8005af4:	1879      	adds	r1, r7, r1
 8005af6:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8005afa:	d273      	bcs.n	8005be4 <__udivmoddi4+0x2a4>
 8005afc:	428b      	cmp	r3, r1
 8005afe:	d971      	bls.n	8005be4 <__udivmoddi4+0x2a4>
 8005b00:	3802      	subs	r0, #2
 8005b02:	4439      	add	r1, r7
 8005b04:	1acb      	subs	r3, r1, r3
 8005b06:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8005b0a:	e778      	b.n	80059fe <__udivmoddi4+0xbe>
 8005b0c:	f1c6 0c20 	rsb	ip, r6, #32
 8005b10:	fa03 f406 	lsl.w	r4, r3, r6
 8005b14:	fa22 f30c 	lsr.w	r3, r2, ip
 8005b18:	431c      	orrs	r4, r3
 8005b1a:	fa20 f70c 	lsr.w	r7, r0, ip
 8005b1e:	fa01 f306 	lsl.w	r3, r1, r6
 8005b22:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8005b26:	fa21 f10c 	lsr.w	r1, r1, ip
 8005b2a:	431f      	orrs	r7, r3
 8005b2c:	0c3b      	lsrs	r3, r7, #16
 8005b2e:	fbb1 f9fe 	udiv	r9, r1, lr
 8005b32:	fa1f f884 	uxth.w	r8, r4
 8005b36:	fb0e 1119 	mls	r1, lr, r9, r1
 8005b3a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8005b3e:	fb09 fa08 	mul.w	sl, r9, r8
 8005b42:	458a      	cmp	sl, r1
 8005b44:	fa02 f206 	lsl.w	r2, r2, r6
 8005b48:	fa00 f306 	lsl.w	r3, r0, r6
 8005b4c:	d908      	bls.n	8005b60 <__udivmoddi4+0x220>
 8005b4e:	1861      	adds	r1, r4, r1
 8005b50:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8005b54:	d248      	bcs.n	8005be8 <__udivmoddi4+0x2a8>
 8005b56:	458a      	cmp	sl, r1
 8005b58:	d946      	bls.n	8005be8 <__udivmoddi4+0x2a8>
 8005b5a:	f1a9 0902 	sub.w	r9, r9, #2
 8005b5e:	4421      	add	r1, r4
 8005b60:	eba1 010a 	sub.w	r1, r1, sl
 8005b64:	b2bf      	uxth	r7, r7
 8005b66:	fbb1 f0fe 	udiv	r0, r1, lr
 8005b6a:	fb0e 1110 	mls	r1, lr, r0, r1
 8005b6e:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8005b72:	fb00 f808 	mul.w	r8, r0, r8
 8005b76:	45b8      	cmp	r8, r7
 8005b78:	d907      	bls.n	8005b8a <__udivmoddi4+0x24a>
 8005b7a:	19e7      	adds	r7, r4, r7
 8005b7c:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8005b80:	d22e      	bcs.n	8005be0 <__udivmoddi4+0x2a0>
 8005b82:	45b8      	cmp	r8, r7
 8005b84:	d92c      	bls.n	8005be0 <__udivmoddi4+0x2a0>
 8005b86:	3802      	subs	r0, #2
 8005b88:	4427      	add	r7, r4
 8005b8a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8005b8e:	eba7 0708 	sub.w	r7, r7, r8
 8005b92:	fba0 8902 	umull	r8, r9, r0, r2
 8005b96:	454f      	cmp	r7, r9
 8005b98:	46c6      	mov	lr, r8
 8005b9a:	4649      	mov	r1, r9
 8005b9c:	d31a      	bcc.n	8005bd4 <__udivmoddi4+0x294>
 8005b9e:	d017      	beq.n	8005bd0 <__udivmoddi4+0x290>
 8005ba0:	b15d      	cbz	r5, 8005bba <__udivmoddi4+0x27a>
 8005ba2:	ebb3 020e 	subs.w	r2, r3, lr
 8005ba6:	eb67 0701 	sbc.w	r7, r7, r1
 8005baa:	fa07 fc0c 	lsl.w	ip, r7, ip
 8005bae:	40f2      	lsrs	r2, r6
 8005bb0:	ea4c 0202 	orr.w	r2, ip, r2
 8005bb4:	40f7      	lsrs	r7, r6
 8005bb6:	e9c5 2700 	strd	r2, r7, [r5]
 8005bba:	2600      	movs	r6, #0
 8005bbc:	4631      	mov	r1, r6
 8005bbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005bc2:	462e      	mov	r6, r5
 8005bc4:	4628      	mov	r0, r5
 8005bc6:	e70b      	b.n	80059e0 <__udivmoddi4+0xa0>
 8005bc8:	4606      	mov	r6, r0
 8005bca:	e6e9      	b.n	80059a0 <__udivmoddi4+0x60>
 8005bcc:	4618      	mov	r0, r3
 8005bce:	e6fd      	b.n	80059cc <__udivmoddi4+0x8c>
 8005bd0:	4543      	cmp	r3, r8
 8005bd2:	d2e5      	bcs.n	8005ba0 <__udivmoddi4+0x260>
 8005bd4:	ebb8 0e02 	subs.w	lr, r8, r2
 8005bd8:	eb69 0104 	sbc.w	r1, r9, r4
 8005bdc:	3801      	subs	r0, #1
 8005bde:	e7df      	b.n	8005ba0 <__udivmoddi4+0x260>
 8005be0:	4608      	mov	r0, r1
 8005be2:	e7d2      	b.n	8005b8a <__udivmoddi4+0x24a>
 8005be4:	4660      	mov	r0, ip
 8005be6:	e78d      	b.n	8005b04 <__udivmoddi4+0x1c4>
 8005be8:	4681      	mov	r9, r0
 8005bea:	e7b9      	b.n	8005b60 <__udivmoddi4+0x220>
 8005bec:	4666      	mov	r6, ip
 8005bee:	e775      	b.n	8005adc <__udivmoddi4+0x19c>
 8005bf0:	4630      	mov	r0, r6
 8005bf2:	e74a      	b.n	8005a8a <__udivmoddi4+0x14a>
 8005bf4:	f1ac 0c02 	sub.w	ip, ip, #2
 8005bf8:	4439      	add	r1, r7
 8005bfa:	e713      	b.n	8005a24 <__udivmoddi4+0xe4>
 8005bfc:	3802      	subs	r0, #2
 8005bfe:	443c      	add	r4, r7
 8005c00:	e724      	b.n	8005a4c <__udivmoddi4+0x10c>
 8005c02:	bf00      	nop

08005c04 <__aeabi_idiv0>:
 8005c04:	4770      	bx	lr
 8005c06:	bf00      	nop

08005c08 <main>:
 8005c08:	4945      	ldr	r1, [pc, #276]	; (8005d20 <main+0x118>)
 8005c0a:	4b46      	ldr	r3, [pc, #280]	; (8005d24 <main+0x11c>)
 8005c0c:	68ca      	ldr	r2, [r1, #12]
 8005c0e:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005c12:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
 8005c16:	4002      	ands	r2, r0
 8005c18:	4313      	orrs	r3, r2
 8005c1a:	b0d1      	sub	sp, #324	; 0x144
 8005c1c:	60cb      	str	r3, [r1, #12]
 8005c1e:	200f      	movs	r0, #15
 8005c20:	f7fc fc92 	bl	8002548 <HAL_InitTick>
 8005c24:	2800      	cmp	r0, #0
 8005c26:	f000 8306 	beq.w	8006236 <main+0x62e>
 8005c2a:	4a3f      	ldr	r2, [pc, #252]	; (8005d28 <main+0x120>)
 8005c2c:	6813      	ldr	r3, [r2, #0]
 8005c2e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005c32:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005c36:	d01e      	beq.n	8005c76 <main+0x6e>
 8005c38:	6813      	ldr	r3, [r2, #0]
 8005c3a:	493c      	ldr	r1, [pc, #240]	; (8005d2c <main+0x124>)
 8005c3c:	483c      	ldr	r0, [pc, #240]	; (8005d30 <main+0x128>)
 8005c3e:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005c42:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005c46:	6013      	str	r3, [r2, #0]
 8005c48:	680c      	ldr	r4, [r1, #0]
 8005c4a:	6951      	ldr	r1, [r2, #20]
 8005c4c:	2332      	movs	r3, #50	; 0x32
 8005c4e:	fb03 f304 	mul.w	r3, r3, r4
 8005c52:	fbb3 f3f0 	udiv	r3, r3, r0
 8005c56:	0548      	lsls	r0, r1, #21
 8005c58:	f103 0301 	add.w	r3, r3, #1
 8005c5c:	d506      	bpl.n	8005c6c <main+0x64>
 8005c5e:	e000      	b.n	8005c62 <main+0x5a>
 8005c60:	b123      	cbz	r3, 8005c6c <main+0x64>
 8005c62:	6951      	ldr	r1, [r2, #20]
 8005c64:	0549      	lsls	r1, r1, #21
 8005c66:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8005c6a:	d4f9      	bmi.n	8005c60 <main+0x58>
 8005c6c:	4b2e      	ldr	r3, [pc, #184]	; (8005d28 <main+0x120>)
 8005c6e:	695b      	ldr	r3, [r3, #20]
 8005c70:	055f      	lsls	r7, r3, #21
 8005c72:	f100 82de 	bmi.w	8006232 <main+0x62a>
 8005c76:	4b2f      	ldr	r3, [pc, #188]	; (8005d34 <main+0x12c>)
 8005c78:	6899      	ldr	r1, [r3, #8]
 8005c7a:	68db      	ldr	r3, [r3, #12]
 8005c7c:	f001 010c 	and.w	r1, r1, #12
 8005c80:	2904      	cmp	r1, #4
 8005c82:	f000 82f1 	beq.w	8006268 <main+0x660>
 8005c86:	290c      	cmp	r1, #12
 8005c88:	f000 82e9 	beq.w	800625e <main+0x656>
 8005c8c:	4b29      	ldr	r3, [pc, #164]	; (8005d34 <main+0x12c>)
 8005c8e:	4c2a      	ldr	r4, [pc, #168]	; (8005d38 <main+0x130>)
 8005c90:	681a      	ldr	r2, [r3, #0]
 8005c92:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005c96:	601a      	str	r2, [r3, #0]
 8005c98:	6820      	ldr	r0, [r4, #0]
 8005c9a:	e004      	b.n	8005ca6 <main+0x9e>
 8005c9c:	6822      	ldr	r2, [r4, #0]
 8005c9e:	1a12      	subs	r2, r2, r0
 8005ca0:	2a02      	cmp	r2, #2
 8005ca2:	f200 82c6 	bhi.w	8006232 <main+0x62a>
 8005ca6:	681a      	ldr	r2, [r3, #0]
 8005ca8:	0556      	lsls	r6, r2, #21
 8005caa:	d5f7      	bpl.n	8005c9c <main+0x94>
 8005cac:	685a      	ldr	r2, [r3, #4]
 8005cae:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
 8005cb2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005cb6:	605a      	str	r2, [r3, #4]
 8005cb8:	e2df      	b.n	800627a <main+0x672>
 8005cba:	f402 40fe 	and.w	r0, r2, #32512	; 0x7f00
 8005cbe:	f5b0 6f20 	cmp.w	r0, #2560	; 0xa00
 8005cc2:	f040 82f1 	bne.w	80062a8 <main+0x6a0>
 8005cc6:	f002 4078 	and.w	r0, r2, #4160749568	; 0xf8000000
 8005cca:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
 8005cce:	f040 82eb 	bne.w	80062a8 <main+0x6a0>
 8005cd2:	481a      	ldr	r0, [pc, #104]	; (8005d3c <main+0x134>)
 8005cd4:	4202      	tst	r2, r0
 8005cd6:	f040 82e7 	bne.w	80062a8 <main+0x6a0>
 8005cda:	681a      	ldr	r2, [r3, #0]
 8005cdc:	0195      	lsls	r5, r2, #6
 8005cde:	f140 83e9 	bpl.w	80064b4 <main+0x8ac>
 8005ce2:	4a17      	ldr	r2, [pc, #92]	; (8005d40 <main+0x138>)
 8005ce4:	6813      	ldr	r3, [r2, #0]
 8005ce6:	0759      	lsls	r1, r3, #29
 8005ce8:	d40b      	bmi.n	8005d02 <main+0xfa>
 8005cea:	6813      	ldr	r3, [r2, #0]
 8005cec:	f023 0307 	bic.w	r3, r3, #7
 8005cf0:	f043 0304 	orr.w	r3, r3, #4
 8005cf4:	6013      	str	r3, [r2, #0]
 8005cf6:	6813      	ldr	r3, [r2, #0]
 8005cf8:	f003 0307 	and.w	r3, r3, #7
 8005cfc:	2b04      	cmp	r3, #4
 8005cfe:	f040 8298 	bne.w	8006232 <main+0x62a>
 8005d02:	4b0c      	ldr	r3, [pc, #48]	; (8005d34 <main+0x12c>)
 8005d04:	689a      	ldr	r2, [r3, #8]
 8005d06:	681a      	ldr	r2, [r3, #0]
 8005d08:	0192      	lsls	r2, r2, #6
 8005d0a:	f140 8292 	bpl.w	8006232 <main+0x62a>
 8005d0e:	689a      	ldr	r2, [r3, #8]
 8005d10:	f042 0203 	orr.w	r2, r2, #3
 8005d14:	609a      	str	r2, [r3, #8]
 8005d16:	6820      	ldr	r0, [r4, #0]
 8005d18:	f241 3188 	movw	r1, #5000	; 0x1388
 8005d1c:	e017      	b.n	8005d4e <main+0x146>
 8005d1e:	bf00      	nop
 8005d20:	e000ed00 	.word	0xe000ed00
 8005d24:	05fa0300 	.word	0x05fa0300
 8005d28:	40007000 	.word	0x40007000
 8005d2c:	20000000 	.word	0x20000000
 8005d30:	000f4240 	.word	0x000f4240
 8005d34:	40021000 	.word	0x40021000
 8005d38:	200000ac 	.word	0x200000ac
 8005d3c:	06600070 	.word	0x06600070
 8005d40:	40022000 	.word	0x40022000
 8005d44:	6822      	ldr	r2, [r4, #0]
 8005d46:	1a12      	subs	r2, r2, r0
 8005d48:	428a      	cmp	r2, r1
 8005d4a:	f200 8272 	bhi.w	8006232 <main+0x62a>
 8005d4e:	689a      	ldr	r2, [r3, #8]
 8005d50:	f002 020c 	and.w	r2, r2, #12
 8005d54:	2a0c      	cmp	r2, #12
 8005d56:	d1f5      	bne.n	8005d44 <main+0x13c>
 8005d58:	689a      	ldr	r2, [r3, #8]
 8005d5a:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8005d5e:	d003      	beq.n	8005d68 <main+0x160>
 8005d60:	689a      	ldr	r2, [r3, #8]
 8005d62:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005d66:	609a      	str	r2, [r3, #8]
 8005d68:	4a9b      	ldr	r2, [pc, #620]	; (8005fd8 <main+0x3d0>)
 8005d6a:	6813      	ldr	r3, [r2, #0]
 8005d6c:	f003 0307 	and.w	r3, r3, #7
 8005d70:	2b04      	cmp	r3, #4
 8005d72:	d90b      	bls.n	8005d8c <main+0x184>
 8005d74:	6813      	ldr	r3, [r2, #0]
 8005d76:	f023 0307 	bic.w	r3, r3, #7
 8005d7a:	f043 0304 	orr.w	r3, r3, #4
 8005d7e:	6013      	str	r3, [r2, #0]
 8005d80:	6813      	ldr	r3, [r2, #0]
 8005d82:	f003 0307 	and.w	r3, r3, #7
 8005d86:	2b04      	cmp	r3, #4
 8005d88:	f040 8253 	bne.w	8006232 <main+0x62a>
 8005d8c:	4d93      	ldr	r5, [pc, #588]	; (8005fdc <main+0x3d4>)
 8005d8e:	f8df 8270 	ldr.w	r8, [pc, #624]	; 8006000 <main+0x3f8>
 8005d92:	68ab      	ldr	r3, [r5, #8]
 8005d94:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005d98:	60ab      	str	r3, [r5, #8]
 8005d9a:	68ab      	ldr	r3, [r5, #8]
 8005d9c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8005da0:	60ab      	str	r3, [r5, #8]
 8005da2:	f7fc f9ef 	bl	8002184 <HAL_RCC_GetSysClockFreq>
 8005da6:	68ab      	ldr	r3, [r5, #8]
 8005da8:	4a8d      	ldr	r2, [pc, #564]	; (8005fe0 <main+0x3d8>)
 8005daa:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005dae:	4443      	add	r3, r8
 8005db0:	f893 3f48 	ldrb.w	r3, [r3, #3912]	; 0xf48
 8005db4:	f003 031f 	and.w	r3, r3, #31
 8005db8:	fa20 f303 	lsr.w	r3, r0, r3
 8005dbc:	6850      	ldr	r0, [r2, #4]
 8005dbe:	6013      	str	r3, [r2, #0]
 8005dc0:	f7fc fbc2 	bl	8002548 <HAL_InitTick>
 8005dc4:	4606      	mov	r6, r0
 8005dc6:	2800      	cmp	r0, #0
 8005dc8:	f040 8233 	bne.w	8006232 <main+0x62a>
 8005dcc:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 8005dd0:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005dd2:	4b84      	ldr	r3, [pc, #528]	; (8005fe4 <main+0x3dc>)
 8005dd4:	f042 0202 	orr.w	r2, r2, #2
 8005dd8:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005dda:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005ddc:	f002 0202 	and.w	r2, r2, #2
 8005de0:	9206      	str	r2, [sp, #24]
 8005de2:	9a06      	ldr	r2, [sp, #24]
 8005de4:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005de6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005dea:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005dec:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005dee:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005df2:	9205      	str	r2, [sp, #20]
 8005df4:	9a05      	ldr	r2, [sp, #20]
 8005df6:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005df8:	f042 0201 	orr.w	r2, r2, #1
 8005dfc:	64ea      	str	r2, [r5, #76]	; 0x4c
 8005dfe:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8005e00:	f04f 4a90 	mov.w	sl, #1207959552	; 0x48000000
 8005e04:	f002 0201 	and.w	r2, r2, #1
 8005e08:	9204      	str	r2, [sp, #16]
 8005e0a:	f04f 0910 	mov.w	r9, #16
 8005e0e:	f241 2201 	movw	r2, #4609	; 0x1201
 8005e12:	2702      	movs	r7, #2
 8005e14:	9904      	ldr	r1, [sp, #16]
 8005e16:	629a      	str	r2, [r3, #40]	; 0x28
 8005e18:	f44f 1c88 	mov.w	ip, #1114112	; 0x110000
 8005e1c:	4618      	mov	r0, r3
 8005e1e:	f8ca 9028 	str.w	r9, [sl, #40]	; 0x28
 8005e22:	2308      	movs	r3, #8
 8005e24:	a939      	add	r1, sp, #228	; 0xe4
 8005e26:	e9cd 3c39 	strd	r3, ip, [sp, #228]	; 0xe4
 8005e2a:	f04f 0b09 	mov.w	fp, #9
 8005e2e:	973b      	str	r7, [sp, #236]	; 0xec
 8005e30:	f7fc f9fe 	bl	8002230 <HAL_GPIO_Init>
 8005e34:	486c      	ldr	r0, [pc, #432]	; (8005fe8 <main+0x3e0>)
 8005e36:	f8cd b0e4 	str.w	fp, [sp, #228]	; 0xe4
 8005e3a:	a939      	add	r1, sp, #228	; 0xe4
 8005e3c:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005e40:	f7fc f9f6 	bl	8002230 <HAL_GPIO_Init>
 8005e44:	f44f 1c44 	mov.w	ip, #3211264	; 0x310000
 8005e48:	f44f 6e00 	mov.w	lr, #2048	; 0x800
 8005e4c:	a939      	add	r1, sp, #228	; 0xe4
 8005e4e:	4650      	mov	r0, sl
 8005e50:	e9cd ec39 	strd	lr, ip, [sp, #228]	; 0xe4
 8005e54:	973b      	str	r7, [sp, #236]	; 0xec
 8005e56:	f7fc f9eb 	bl	8002230 <HAL_GPIO_Init>
 8005e5a:	4b62      	ldr	r3, [pc, #392]	; (8005fe4 <main+0x3dc>)
 8005e5c:	963b      	str	r6, [sp, #236]	; 0xec
 8005e5e:	4618      	mov	r0, r3
 8005e60:	2301      	movs	r3, #1
 8005e62:	f241 2201 	movw	r2, #4609	; 0x1201
 8005e66:	a939      	add	r1, sp, #228	; 0xe4
 8005e68:	933a      	str	r3, [sp, #232]	; 0xe8
 8005e6a:	2303      	movs	r3, #3
 8005e6c:	9239      	str	r2, [sp, #228]	; 0xe4
 8005e6e:	933c      	str	r3, [sp, #240]	; 0xf0
 8005e70:	f7fc f9de 	bl	8002230 <HAL_GPIO_Init>
 8005e74:	4b5b      	ldr	r3, [pc, #364]	; (8005fe4 <main+0x3dc>)
 8005e76:	9739      	str	r7, [sp, #228]	; 0xe4
 8005e78:	4618      	mov	r0, r3
 8005e7a:	a939      	add	r1, sp, #228	; 0xe4
 8005e7c:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 8005e80:	f7fc f9d6 	bl	8002230 <HAL_GPIO_Init>
 8005e84:	2301      	movs	r3, #1
 8005e86:	e9cd 373a 	strd	r3, r7, [sp, #232]	; 0xe8
 8005e8a:	a939      	add	r1, sp, #228	; 0xe4
 8005e8c:	2303      	movs	r3, #3
 8005e8e:	4650      	mov	r0, sl
 8005e90:	933c      	str	r3, [sp, #240]	; 0xf0
 8005e92:	f8cd 90e4 	str.w	r9, [sp, #228]	; 0xe4
 8005e96:	f7fc f9cb 	bl	8002230 <HAL_GPIO_Init>
 8005e9a:	4631      	mov	r1, r6
 8005e9c:	4658      	mov	r0, fp
 8005e9e:	f7fa f997 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005ea2:	4658      	mov	r0, fp
 8005ea4:	f7fc fb44 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005ea8:	4631      	mov	r1, r6
 8005eaa:	2028      	movs	r0, #40	; 0x28
 8005eac:	f7fa f990 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005eb0:	2028      	movs	r0, #40	; 0x28
 8005eb2:	f7fc fb3d 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005eb6:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005eb8:	f043 0301 	orr.w	r3, r3, #1
 8005ebc:	64ab      	str	r3, [r5, #72]	; 0x48
 8005ebe:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8005ec0:	f003 0301 	and.w	r3, r3, #1
 8005ec4:	4631      	mov	r1, r6
 8005ec6:	9303      	str	r3, [sp, #12]
 8005ec8:	200c      	movs	r0, #12
 8005eca:	9b03      	ldr	r3, [sp, #12]
 8005ecc:	f7fa f980 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005ed0:	200c      	movs	r0, #12
 8005ed2:	f7fc fb2d 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005ed6:	4631      	mov	r1, r6
 8005ed8:	200d      	movs	r0, #13
 8005eda:	f7fa f979 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005ede:	200d      	movs	r0, #13
 8005ee0:	f7fc fb26 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005ee4:	4631      	mov	r1, r6
 8005ee6:	4648      	mov	r0, r9
 8005ee8:	f7fa f972 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005eec:	4648      	mov	r0, r9
 8005eee:	f7fc fb1f 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005ef2:	4631      	mov	r1, r6
 8005ef4:	2011      	movs	r0, #17
 8005ef6:	f7fa f96b 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8005efa:	2011      	movs	r0, #17
 8005efc:	f7fc fb18 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8005f00:	493a      	ldr	r1, [pc, #232]	; (8005fec <main+0x3e4>)
 8005f02:	483b      	ldr	r0, [pc, #236]	; (8005ff0 <main+0x3e8>)
 8005f04:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8005f08:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8005f0c:	230c      	movs	r3, #12
 8005f0e:	f44f 7c40 	mov.w	ip, #768	; 0x300
 8005f12:	e9c4 6656 	strd	r6, r6, [r4, #344]	; 0x158
 8005f16:	e9c4 665a 	strd	r6, r6, [r4, #360]	; 0x168
 8005f1a:	e9c4 1253 	strd	r1, r2, [r4, #332]	; 0x14c
 8005f1e:	e9c4 3c58 	strd	r3, ip, [r4, #352]	; 0x160
 8005f22:	f8c4 6170 	str.w	r6, [r4, #368]	; 0x170
 8005f26:	f7fc fbf5 	bl	8002714 <HAL_UART_Init.constprop.0>
 8005f2a:	2800      	cmp	r0, #0
 8005f2c:	f040 8181 	bne.w	8006232 <main+0x62a>
 8005f30:	4b30      	ldr	r3, [pc, #192]	; (8005ff4 <main+0x3ec>)
 8005f32:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8005f36:	f8c4 00ec 	str.w	r0, [r4, #236]	; 0xec
 8005f3a:	f44f 7c82 	mov.w	ip, #260	; 0x104
 8005f3e:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 8005f42:	2608      	movs	r6, #8
 8005f44:	e9c4 3c39 	strd	r3, ip, [r4, #228]	; 0xe4
 8005f48:	f8c4 10f0 	str.w	r1, [r4, #240]	; 0xf0
 8005f4c:	f44f 7c00 	mov.w	ip, #512	; 0x200
 8005f50:	2107      	movs	r1, #7
 8005f52:	f8c4 6118 	str.w	r6, [r4, #280]	; 0x118
 8005f56:	e9c4 003d 	strd	r0, r0, [r4, #244]	; 0xf4
 8005f5a:	e9c4 0040 	strd	r0, r0, [r4, #256]	; 0x100
 8005f5e:	e9c4 0042 	strd	r0, r0, [r4, #264]	; 0x108
 8005f62:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 8005f66:	f002 06ff 	and.w	r6, r2, #255	; 0xff
 8005f6a:	f8c4 c0fc 	str.w	ip, [r4, #252]	; 0xfc
 8005f6e:	f8c4 1110 	str.w	r1, [r4, #272]	; 0x110
 8005f72:	2a00      	cmp	r2, #0
 8005f74:	f000 83cf 	beq.w	8006716 <main+0xb0e>
 8005f78:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 8005f7c:	681a      	ldr	r2, [r3, #0]
 8005f7e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005f82:	601a      	str	r2, [r3, #0]
 8005f84:	f640 7108 	movw	r1, #3848	; 0xf08
 8005f88:	f44f 7241 	mov.w	r2, #772	; 0x304
 8005f8c:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 8005f90:	f405 5500 	and.w	r5, r5, #8192	; 0x2000
 8005f94:	4308      	orrs	r0, r1
 8005f96:	4315      	orrs	r5, r2
 8005f98:	2601      	movs	r6, #1
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	601d      	str	r5, [r3, #0]
 8005f9e:	6058      	str	r0, [r3, #4]
 8005fa0:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
 8005fa4:	f884 6141 	strb.w	r6, [r4, #321]	; 0x141
 8005fa8:	f894 3211 	ldrb.w	r3, [r4, #529]	; 0x211
 8005fac:	4912      	ldr	r1, [pc, #72]	; (8005ff8 <main+0x3f0>)
 8005fae:	4813      	ldr	r0, [pc, #76]	; (8005ffc <main+0x3f4>)
 8005fb0:	f8c4 21f0 	str.w	r2, [r4, #496]	; 0x1f0
 8005fb4:	e9c4 2278 	strd	r2, r2, [r4, #480]	; 0x1e0
 8005fb8:	e9c4 227a 	strd	r2, r2, [r4, #488]	; 0x1e8
 8005fbc:	22a4      	movs	r2, #164	; 0xa4
 8005fbe:	e9c4 1275 	strd	r1, r2, [r4, #468]	; 0x1d4
 8005fc2:	f8c4 61dc 	str.w	r6, [r4, #476]	; 0x1dc
 8005fc6:	f003 05ff 	and.w	r5, r3, #255	; 0xff
 8005fca:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
 8005fce:	2b00      	cmp	r3, #0
 8005fd0:	f000 8362 	beq.w	8006698 <main+0xa90>
 8005fd4:	e016      	b.n	8006004 <main+0x3fc>
 8005fd6:	bf00      	nop
 8005fd8:	40022000 	.word	0x40022000
 8005fdc:	40021000 	.word	0x40021000
 8005fe0:	20000000 	.word	0x20000000
 8005fe4:	48000400 	.word	0x48000400
 8005fe8:	48001c00 	.word	0x48001c00
 8005fec:	40004400 	.word	0x40004400
 8005ff0:	200001f8 	.word	0x200001f8
 8005ff4:	40013000 	.word	0x40013000
 8005ff8:	10909cec 	.word	0x10909cec
 8005ffc:	40005800 	.word	0x40005800
 8006000:	08007b98 	.word	0x08007b98
 8006004:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
 8006008:	2224      	movs	r2, #36	; 0x24
 800600a:	f884 2211 	strb.w	r2, [r4, #529]	; 0x211
 800600e:	6819      	ldr	r1, [r3, #0]
 8006010:	f8d4 21d4 	ldr.w	r2, [r4, #468]	; 0x1d4
 8006014:	f021 0101 	bic.w	r1, r1, #1
 8006018:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800601c:	6019      	str	r1, [r3, #0]
 800601e:	611a      	str	r2, [r3, #16]
 8006020:	689a      	ldr	r2, [r3, #8]
 8006022:	f8d4 11dc 	ldr.w	r1, [r4, #476]	; 0x1dc
 8006026:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800602a:	2901      	cmp	r1, #1
 800602c:	609a      	str	r2, [r3, #8]
 800602e:	f8d4 21d8 	ldr.w	r2, [r4, #472]	; 0x1d8
 8006032:	f000 8300 	beq.w	8006636 <main+0xa2e>
 8006036:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 800603a:	2902      	cmp	r1, #2
 800603c:	609a      	str	r2, [r3, #8]
 800603e:	bf04      	itt	eq
 8006040:	f44f 6200 	moveq.w	r2, #2048	; 0x800
 8006044:	605a      	streq	r2, [r3, #4]
 8006046:	6859      	ldr	r1, [r3, #4]
 8006048:	f8d4 51e8 	ldr.w	r5, [r4, #488]	; 0x1e8
 800604c:	e9d4 2678 	ldrd	r2, r6, [r4, #480]	; 0x1e0
 8006050:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
 8006054:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006058:	6059      	str	r1, [r3, #4]
 800605a:	4332      	orrs	r2, r6
 800605c:	68d8      	ldr	r0, [r3, #12]
 800605e:	f8d4 11ec 	ldr.w	r1, [r4, #492]	; 0x1ec
 8006062:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006066:	f8d4 51f0 	ldr.w	r5, [r4, #496]	; 0x1f0
 800606a:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 800606e:	4329      	orrs	r1, r5
 8006070:	60d8      	str	r0, [r3, #12]
 8006072:	60da      	str	r2, [r3, #12]
 8006074:	6019      	str	r1, [r3, #0]
 8006076:	6819      	ldr	r1, [r3, #0]
 8006078:	2200      	movs	r2, #0
 800607a:	f041 0101 	orr.w	r1, r1, #1
 800607e:	2020      	movs	r0, #32
 8006080:	6019      	str	r1, [r3, #0]
 8006082:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
 8006086:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 800608a:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200
 800608e:	f884 2212 	strb.w	r2, [r4, #530]	; 0x212
 8006092:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 8006096:	4281      	cmp	r1, r0
 8006098:	b2cd      	uxtb	r5, r1
 800609a:	f040 80ca 	bne.w	8006232 <main+0x62a>
 800609e:	f894 1210 	ldrb.w	r1, [r4, #528]	; 0x210
 80060a2:	2901      	cmp	r1, #1
 80060a4:	f000 80c5 	beq.w	8006232 <main+0x62a>
 80060a8:	2024      	movs	r0, #36	; 0x24
 80060aa:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 80060ae:	6819      	ldr	r1, [r3, #0]
 80060b0:	f021 0101 	bic.w	r1, r1, #1
 80060b4:	6019      	str	r1, [r3, #0]
 80060b6:	6819      	ldr	r1, [r3, #0]
 80060b8:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 80060bc:	6019      	str	r1, [r3, #0]
 80060be:	6819      	ldr	r1, [r3, #0]
 80060c0:	6019      	str	r1, [r3, #0]
 80060c2:	6819      	ldr	r1, [r3, #0]
 80060c4:	f041 0101 	orr.w	r1, r1, #1
 80060c8:	6019      	str	r1, [r3, #0]
 80060ca:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 80060ce:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 80060d2:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 80060d6:	2920      	cmp	r1, #32
 80060d8:	b2cd      	uxtb	r5, r1
 80060da:	f040 80aa 	bne.w	8006232 <main+0x62a>
 80060de:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 80060e2:	6819      	ldr	r1, [r3, #0]
 80060e4:	4886      	ldr	r0, [pc, #536]	; (8006300 <main+0x6f8>)
 80060e6:	4e87      	ldr	r6, [pc, #540]	; (8006304 <main+0x6fc>)
 80060e8:	f021 0101 	bic.w	r1, r1, #1
 80060ec:	6019      	str	r1, [r3, #0]
 80060ee:	6819      	ldr	r1, [r3, #0]
 80060f0:	f421 6170 	bic.w	r1, r1, #3840	; 0xf00
 80060f4:	6019      	str	r1, [r3, #0]
 80060f6:	6819      	ldr	r1, [r3, #0]
 80060f8:	f041 0101 	orr.w	r1, r1, #1
 80060fc:	6019      	str	r1, [r3, #0]
 80060fe:	f44f 2161 	mov.w	r1, #921600	; 0xe1000
 8006102:	230c      	movs	r3, #12
 8006104:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 8006108:	e9c0 2202 	strd	r2, r2, [r0, #8]
 800610c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8006110:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8006114:	e9c0 6100 	strd	r6, r1, [r0]
 8006118:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 800611c:	6102      	str	r2, [r0, #16]
 800611e:	6143      	str	r3, [r0, #20]
 8006120:	f7fc faf8 	bl	8002714 <HAL_UART_Init.constprop.0>
 8006124:	4605      	mov	r5, r0
 8006126:	2800      	cmp	r0, #0
 8006128:	f040 8083 	bne.w	8006232 <main+0x62a>
 800612c:	222c      	movs	r2, #44	; 0x2c
 800612e:	4629      	mov	r1, r5
 8006130:	a817      	add	r0, sp, #92	; 0x5c
 8006132:	f000 fe0c 	bl	8006d4e <memset>
 8006136:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800613a:	60a5      	str	r5, [r4, #8]
 800613c:	f5a6 3688 	sub.w	r6, r6, #69632	; 0x11000
 8006140:	201f      	movs	r0, #31
 8006142:	f240 32e7 	movw	r2, #999	; 0x3e7
 8006146:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800614a:	e9c4 5507 	strd	r5, r5, [r4, #28]
 800614e:	e9c4 0203 	strd	r0, r2, [r4, #12]
 8006152:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 8006156:	6066      	str	r6, [r4, #4]
 8006158:	2b00      	cmp	r3, #0
 800615a:	f000 8243 	beq.w	80065e4 <main+0x9dc>
 800615e:	6863      	ldr	r3, [r4, #4]
 8006160:	2702      	movs	r7, #2
 8006162:	f04f 0aca 	mov.w	sl, #202	; 0xca
 8006166:	f04f 0953 	mov.w	r9, #83	; 0x53
 800616a:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 800616e:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 8006172:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8006176:	f7fa fa11 	bl	800059c <RTC_EnterInitMode.constprop.0>
 800617a:	2800      	cmp	r0, #0
 800617c:	d159      	bne.n	8006232 <main+0x62a>
 800617e:	e9d4 1301 	ldrd	r1, r3, [r4, #4]
 8006182:	688a      	ldr	r2, [r1, #8]
 8006184:	6965      	ldr	r5, [r4, #20]
 8006186:	69e0      	ldr	r0, [r4, #28]
 8006188:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 800618c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006190:	608a      	str	r2, [r1, #8]
 8006192:	688a      	ldr	r2, [r1, #8]
 8006194:	432b      	orrs	r3, r5
 8006196:	4303      	orrs	r3, r0
 8006198:	4313      	orrs	r3, r2
 800619a:	6922      	ldr	r2, [r4, #16]
 800619c:	608b      	str	r3, [r1, #8]
 800619e:	610a      	str	r2, [r1, #16]
 80061a0:	690b      	ldr	r3, [r1, #16]
 80061a2:	68e2      	ldr	r2, [r4, #12]
 80061a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80061a8:	610b      	str	r3, [r1, #16]
 80061aa:	f7fa f9cf 	bl	800054c <RTC_ExitInitMode.constprop.0>
 80061ae:	2800      	cmp	r0, #0
 80061b0:	d13f      	bne.n	8006232 <main+0x62a>
 80061b2:	6863      	ldr	r3, [r4, #4]
 80061b4:	6a22      	ldr	r2, [r4, #32]
 80061b6:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 80061b8:	69a0      	ldr	r0, [r4, #24]
 80061ba:	f894 c024 	ldrb.w	ip, [r4, #36]	; 0x24
 80061be:	f021 0103 	bic.w	r1, r1, #3
 80061c2:	64d9      	str	r1, [r3, #76]	; 0x4c
 80061c4:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 80061c6:	2501      	movs	r5, #1
 80061c8:	4302      	orrs	r2, r0
 80061ca:	430a      	orrs	r2, r1
 80061cc:	26ff      	movs	r6, #255	; 0xff
 80061ce:	45ac      	cmp	ip, r5
 80061d0:	64da      	str	r2, [r3, #76]	; 0x4c
 80061d2:	625e      	str	r6, [r3, #36]	; 0x24
 80061d4:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80061d8:	d02b      	beq.n	8006232 <main+0x62a>
 80061da:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 80061de:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 80061e2:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 80061e6:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80061ea:	f7fa f9d7 	bl	800059c <RTC_EnterInitMode.constprop.0>
 80061ee:	6863      	ldr	r3, [r4, #4]
 80061f0:	b9d8      	cbnz	r0, 800622a <main+0x622>
 80061f2:	689a      	ldr	r2, [r3, #8]
 80061f4:	6018      	str	r0, [r3, #0]
 80061f6:	689a      	ldr	r2, [r3, #8]
 80061f8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80061fc:	609a      	str	r2, [r3, #8]
 80061fe:	689a      	ldr	r2, [r3, #8]
 8006200:	609a      	str	r2, [r3, #8]
 8006202:	f7fa f9a3 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006206:	6863      	ldr	r3, [r4, #4]
 8006208:	625e      	str	r6, [r3, #36]	; 0x24
 800620a:	b978      	cbnz	r0, 800622c <main+0x624>
 800620c:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8006210:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8006214:	f8c3 a024 	str.w	sl, [r3, #36]	; 0x24
 8006218:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 800621c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006220:	f7fa f9bc 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8006224:	6863      	ldr	r3, [r4, #4]
 8006226:	2800      	cmp	r0, #0
 8006228:	d076      	beq.n	8006318 <main+0x710>
 800622a:	625e      	str	r6, [r3, #36]	; 0x24
 800622c:	2300      	movs	r3, #0
 800622e:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8006232:	f7fc f9b3 	bl	800259c <__NVIC_SystemReset>
 8006236:	4b34      	ldr	r3, [pc, #208]	; (8006308 <main+0x700>)
 8006238:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800623a:	f042 0201 	orr.w	r2, r2, #1
 800623e:	661a      	str	r2, [r3, #96]	; 0x60
 8006240:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006242:	f002 0201 	and.w	r2, r2, #1
 8006246:	9208      	str	r2, [sp, #32]
 8006248:	9a08      	ldr	r2, [sp, #32]
 800624a:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800624c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006250:	659a      	str	r2, [r3, #88]	; 0x58
 8006252:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006254:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006258:	9307      	str	r3, [sp, #28]
 800625a:	9b07      	ldr	r3, [sp, #28]
 800625c:	e4e5      	b.n	8005c2a <main+0x22>
 800625e:	f003 0303 	and.w	r3, r3, #3
 8006262:	2b02      	cmp	r3, #2
 8006264:	f47f ad12 	bne.w	8005c8c <main+0x84>
 8006268:	4a27      	ldr	r2, [pc, #156]	; (8006308 <main+0x700>)
 800626a:	4c28      	ldr	r4, [pc, #160]	; (800630c <main+0x704>)
 800626c:	6813      	ldr	r3, [r2, #0]
 800626e:	6853      	ldr	r3, [r2, #4]
 8006270:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8006274:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006278:	6053      	str	r3, [r2, #4]
 800627a:	4b23      	ldr	r3, [pc, #140]	; (8006308 <main+0x700>)
 800627c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006280:	f042 0201 	orr.w	r2, r2, #1
 8006284:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8006288:	6820      	ldr	r0, [r4, #0]
 800628a:	e003      	b.n	8006294 <main+0x68c>
 800628c:	6822      	ldr	r2, [r4, #0]
 800628e:	1a12      	subs	r2, r2, r0
 8006290:	2a02      	cmp	r2, #2
 8006292:	d8ce      	bhi.n	8006232 <main+0x62a>
 8006294:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006298:	0795      	lsls	r5, r2, #30
 800629a:	d5f7      	bpl.n	800628c <main+0x684>
 800629c:	68da      	ldr	r2, [r3, #12]
 800629e:	f002 0003 	and.w	r0, r2, #3
 80062a2:	2802      	cmp	r0, #2
 80062a4:	f43f ad09 	beq.w	8005cba <main+0xb2>
 80062a8:	290c      	cmp	r1, #12
 80062aa:	d0c2      	beq.n	8006232 <main+0x62a>
 80062ac:	4b16      	ldr	r3, [pc, #88]	; (8006308 <main+0x700>)
 80062ae:	681a      	ldr	r2, [r3, #0]
 80062b0:	0152      	lsls	r2, r2, #5
 80062b2:	d4be      	bmi.n	8006232 <main+0x62a>
 80062b4:	681a      	ldr	r2, [r3, #0]
 80062b6:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80062ba:	601a      	str	r2, [r3, #0]
 80062bc:	6821      	ldr	r1, [r4, #0]
 80062be:	e003      	b.n	80062c8 <main+0x6c0>
 80062c0:	6822      	ldr	r2, [r4, #0]
 80062c2:	1a52      	subs	r2, r2, r1
 80062c4:	2a02      	cmp	r2, #2
 80062c6:	d8b4      	bhi.n	8006232 <main+0x62a>
 80062c8:	681a      	ldr	r2, [r3, #0]
 80062ca:	0197      	lsls	r7, r2, #6
 80062cc:	d4f8      	bmi.n	80062c0 <main+0x6b8>
 80062ce:	68d8      	ldr	r0, [r3, #12]
 80062d0:	490f      	ldr	r1, [pc, #60]	; (8006310 <main+0x708>)
 80062d2:	4a10      	ldr	r2, [pc, #64]	; (8006314 <main+0x70c>)
 80062d4:	4d0c      	ldr	r5, [pc, #48]	; (8006308 <main+0x700>)
 80062d6:	4001      	ands	r1, r0
 80062d8:	430a      	orrs	r2, r1
 80062da:	60da      	str	r2, [r3, #12]
 80062dc:	681a      	ldr	r2, [r3, #0]
 80062de:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80062e2:	601a      	str	r2, [r3, #0]
 80062e4:	68da      	ldr	r2, [r3, #12]
 80062e6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80062ea:	60da      	str	r2, [r3, #12]
 80062ec:	6822      	ldr	r2, [r4, #0]
 80062ee:	682b      	ldr	r3, [r5, #0]
 80062f0:	019e      	lsls	r6, r3, #6
 80062f2:	f53f acf6 	bmi.w	8005ce2 <main+0xda>
 80062f6:	6823      	ldr	r3, [r4, #0]
 80062f8:	1a9b      	subs	r3, r3, r2
 80062fa:	2b02      	cmp	r3, #2
 80062fc:	d9f7      	bls.n	80062ee <main+0x6e6>
 80062fe:	e798      	b.n	8006232 <main+0x62a>
 8006300:	200003d0 	.word	0x200003d0
 8006304:	40013800 	.word	0x40013800
 8006308:	40021000 	.word	0x40021000
 800630c:	200000ac 	.word	0x200000ac
 8006310:	019d808c 	.word	0x019d808c
 8006314:	38000a02 	.word	0x38000a02
 8006318:	f242 1201 	movw	r2, #8449	; 0x2101
 800631c:	605a      	str	r2, [r3, #4]
 800631e:	f7fa f915 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006322:	6862      	ldr	r2, [r4, #4]
 8006324:	4603      	mov	r3, r0
 8006326:	6256      	str	r6, [r2, #36]	; 0x24
 8006328:	2800      	cmp	r0, #0
 800632a:	f47f af7f 	bne.w	800622c <main+0x624>
 800632e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006332:	a817      	add	r0, sp, #92	; 0x5c
 8006334:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
 8006338:	e9cd 331e 	strd	r3, r3, [sp, #120]	; 0x78
 800633c:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8006340:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8006344:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8006348:	f88d 305e 	strb.w	r3, [sp, #94]	; 0x5e
 800634c:	9318      	str	r3, [sp, #96]	; 0x60
 800634e:	931c      	str	r3, [sp, #112]	; 0x70
 8006350:	f88d 5080 	strb.w	r5, [sp, #128]	; 0x80
 8006354:	9221      	str	r2, [sp, #132]	; 0x84
 8006356:	f7fa f811 	bl	800037c <HAL_RTC_SetAlarm_IT.constprop.0>
 800635a:	2800      	cmp	r0, #0
 800635c:	f47f af69 	bne.w	8006232 <main+0x62a>
 8006360:	4eba      	ldr	r6, [pc, #744]	; (800664c <main+0xa44>)
 8006362:	49bb      	ldr	r1, [pc, #748]	; (8006650 <main+0xa48>)
 8006364:	48bb      	ldr	r0, [pc, #748]	; (8006654 <main+0xa4c>)
 8006366:	4dbc      	ldr	r5, [pc, #752]	; (8006658 <main+0xa50>)
 8006368:	f000 fe92 	bl	8007090 <__wrap_printf>
 800636c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800636e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8006370:	e896 0003 	ldmia.w	r6, {r0, r1}
 8006374:	f8df c310 	ldr.w	ip, [pc, #784]	; 8006688 <main+0xa80>
 8006378:	f884 7048 	strb.w	r7, [r4, #72]	; 0x48
 800637c:	e885 0003 	stmia.w	r5, {r0, r1}
 8006380:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006384:	f8c4 c04c 	str.w	ip, [r4, #76]	; 0x4c
 8006388:	f000 fe48 	bl	800701c <malloc>
 800638c:	4681      	mov	r9, r0
 800638e:	2800      	cmp	r0, #0
 8006390:	f000 817e 	beq.w	8006690 <main+0xa88>
 8006394:	49b1      	ldr	r1, [pc, #708]	; (800665c <main+0xa54>)
 8006396:	22c8      	movs	r2, #200	; 0xc8
 8006398:	f44f 7092 	mov.w	r0, #292	; 0x124
 800639c:	f7fa fdd8 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 80063a0:	4605      	mov	r5, r0
 80063a2:	2800      	cmp	r0, #0
 80063a4:	f000 814b 	beq.w	800663e <main+0xa36>
 80063a8:	f44f 7292 	mov.w	r2, #292	; 0x124
 80063ac:	2100      	movs	r1, #0
 80063ae:	f000 fcce 	bl	8006d4e <memset>
 80063b2:	2301      	movs	r3, #1
 80063b4:	602b      	str	r3, [r5, #0]
 80063b6:	4629      	mov	r1, r5
 80063b8:	f105 0030 	add.w	r0, r5, #48	; 0x30
 80063bc:	462b      	mov	r3, r5
 80063be:	2200      	movs	r2, #0
 80063c0:	631a      	str	r2, [r3, #48]	; 0x30
 80063c2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80063c6:	3308      	adds	r3, #8
 80063c8:	4298      	cmp	r0, r3
 80063ca:	d1f9      	bne.n	80063c0 <main+0x7b8>
 80063cc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80063d0:	f509 6300 	add.w	r3, r9, #2048	; 0x800
 80063d4:	e9c5 2902 	strd	r2, r9, [r5, #8]
 80063d8:	616b      	str	r3, [r5, #20]
 80063da:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80063de:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 80063e2:	612a      	str	r2, [r5, #16]
 80063e4:	61ab      	str	r3, [r5, #24]
 80063e6:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
 80063ea:	f240 1301 	movw	r3, #257	; 0x101
 80063ee:	61ea      	str	r2, [r5, #28]
 80063f0:	f8c5 9004 	str.w	r9, [r5, #4]
 80063f4:	842b      	strh	r3, [r5, #32]
 80063f6:	2200      	movs	r2, #0
 80063f8:	630a      	str	r2, [r1, #48]	; 0x30
 80063fa:	f881 2034 	strb.w	r2, [r1, #52]	; 0x34
 80063fe:	3108      	adds	r1, #8
 8006400:	4288      	cmp	r0, r1
 8006402:	d1f9      	bne.n	80063f8 <main+0x7f0>
 8006404:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8006408:	4f95      	ldr	r7, [pc, #596]	; (8006660 <main+0xa58>)
 800640a:	846a      	strh	r2, [r5, #34]	; 0x22
 800640c:	626a      	str	r2, [r5, #36]	; 0x24
 800640e:	852a      	strh	r2, [r5, #40]	; 0x28
 8006410:	4a94      	ldr	r2, [pc, #592]	; (8006664 <main+0xa5c>)
 8006412:	2b01      	cmp	r3, #1
 8006414:	e9c4 720a 	strd	r7, r2, [r4, #40]	; 0x28
 8006418:	d90f      	bls.n	800643a <main+0x832>
 800641a:	6c26      	ldr	r6, [r4, #64]	; 0x40
 800641c:	4a92      	ldr	r2, [pc, #584]	; (8006668 <main+0xa60>)
 800641e:	4993      	ldr	r1, [pc, #588]	; (800666c <main+0xa64>)
 8006420:	2002      	movs	r0, #2
 8006422:	47b0      	blx	r6
 8006424:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8006428:	2b01      	cmp	r3, #1
 800642a:	d906      	bls.n	800643a <main+0x832>
 800642c:	6c26      	ldr	r6, [r4, #64]	; 0x40
 800642e:	4a90      	ldr	r2, [pc, #576]	; (8006670 <main+0xa68>)
 8006430:	498e      	ldr	r1, [pc, #568]	; (800666c <main+0xa64>)
 8006432:	f1a7 0370 	sub.w	r3, r7, #112	; 0x70
 8006436:	2002      	movs	r0, #2
 8006438:	47b0      	blx	r6
 800643a:	4f8e      	ldr	r7, [pc, #568]	; (8006674 <main+0xa6c>)
 800643c:	f8df b24c 	ldr.w	fp, [pc, #588]	; 800668c <main+0xa84>
 8006440:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006444:	61bb      	str	r3, [r7, #24]
 8006446:	f7fc f8bb 	bl	80025c0 <acc_integration_sleep_us.constprop.0>
 800644a:	2200      	movs	r2, #0
 800644c:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800644e:	2b05      	cmp	r3, #5
 8006450:	d905      	bls.n	800645e <main+0x856>
 8006452:	e042      	b.n	80064da <main+0x8d2>
 8006454:	3301      	adds	r3, #1
 8006456:	b29b      	uxth	r3, r3
 8006458:	2b06      	cmp	r3, #6
 800645a:	846b      	strh	r3, [r5, #34]	; 0x22
 800645c:	d03f      	beq.n	80064de <main+0x8d6>
 800645e:	18e9      	adds	r1, r5, r3
 8006460:	7f09      	ldrb	r1, [r1, #28]
 8006462:	2900      	cmp	r1, #0
 8006464:	d0f6      	beq.n	8006454 <main+0x84c>
 8006466:	2a00      	cmp	r2, #0
 8006468:	d175      	bne.n	8006556 <main+0x94e>
 800646a:	0059      	lsls	r1, r3, #1
 800646c:	f44f 5680 	mov.w	r6, #4096	; 0x1000
 8006470:	f04f 0a01 	mov.w	sl, #1
 8006474:	440b      	add	r3, r1
 8006476:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800647a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800647e:	4628      	mov	r0, r5
 8006480:	681b      	ldr	r3, [r3, #0]
 8006482:	4798      	blx	r3
 8006484:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 8006486:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
 8006488:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800648a:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
 800648e:	eb08 0e8e 	add.w	lr, r8, lr, lsl #2
 8006492:	eb05 0c02 	add.w	ip, r5, r2
 8006496:	3101      	adds	r1, #1
 8006498:	f89e eff8 	ldrb.w	lr, [lr, #4088]	; 0xff8
 800649c:	6269      	str	r1, [r5, #36]	; 0x24
 800649e:	3801      	subs	r0, #1
 80064a0:	f88c e02a 	strb.w	lr, [ip, #42]	; 0x2a
 80064a4:	0059      	lsls	r1, r3, #1
 80064a6:	2803      	cmp	r0, #3
 80064a8:	f200 81e5 	bhi.w	8006876 <main+0xc6e>
 80064ac:	e8df f000 	tbb	[pc, r0]
 80064b0:	67802d48 	.word	0x67802d48
 80064b4:	681a      	ldr	r2, [r3, #0]
 80064b6:	4970      	ldr	r1, [pc, #448]	; (8006678 <main+0xa70>)
 80064b8:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80064bc:	601a      	str	r2, [r3, #0]
 80064be:	68da      	ldr	r2, [r3, #12]
 80064c0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80064c4:	60da      	str	r2, [r3, #12]
 80064c6:	6822      	ldr	r2, [r4, #0]
 80064c8:	680b      	ldr	r3, [r1, #0]
 80064ca:	0198      	lsls	r0, r3, #6
 80064cc:	f53f ac09 	bmi.w	8005ce2 <main+0xda>
 80064d0:	6823      	ldr	r3, [r4, #0]
 80064d2:	1a9b      	subs	r3, r3, r2
 80064d4:	2b02      	cmp	r3, #2
 80064d6:	d9f7      	bls.n	80064c8 <main+0x8c0>
 80064d8:	e6ab      	b.n	8006232 <main+0x62a>
 80064da:	2b06      	cmp	r3, #6
 80064dc:	d1c3      	bne.n	8006466 <main+0x85e>
 80064de:	4628      	mov	r0, r5
 80064e0:	f7fa fd2e 	bl	8000f40 <acc_rss_integration_mem_free>
 80064e4:	4a63      	ldr	r2, [pc, #396]	; (8006674 <main+0xa6c>)
 80064e6:	2300      	movs	r3, #0
 80064e8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80064ec:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 80064f0:	6291      	str	r1, [r2, #40]	; 0x28
 80064f2:	f7fc f865 	bl	80025c0 <acc_integration_sleep_us.constprop.0>
 80064f6:	4648      	mov	r0, r9
 80064f8:	f000 fd98 	bl	800702c <free>
 80064fc:	485f      	ldr	r0, [pc, #380]	; (800667c <main+0xa74>)
 80064fe:	f000 fdb1 	bl	8007064 <__wrap_puts>
 8006502:	485f      	ldr	r0, [pc, #380]	; (8006680 <main+0xa78>)
 8006504:	f000 fdae 	bl	8007064 <__wrap_puts>
 8006508:	e7fe      	b.n	8006508 <main+0x900>
 800650a:	6822      	ldr	r2, [r4, #0]
 800650c:	693b      	ldr	r3, [r7, #16]
 800650e:	0718      	lsls	r0, r3, #28
 8006510:	d505      	bpl.n	800651e <main+0x916>
 8006512:	693a      	ldr	r2, [r7, #16]
 8006514:	f082 0208 	eor.w	r2, r2, #8
 8006518:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800651c:	e796      	b.n	800644c <main+0x844>
 800651e:	6823      	ldr	r3, [r4, #0]
 8006520:	1a9b      	subs	r3, r3, r2
 8006522:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006526:	d2f4      	bcs.n	8006512 <main+0x90a>
 8006528:	b672      	cpsid	i
 800652a:	693b      	ldr	r3, [r7, #16]
 800652c:	0719      	lsls	r1, r3, #28
 800652e:	d400      	bmi.n	8006532 <main+0x92a>
 8006530:	bf30      	wfi
 8006532:	b662      	cpsie	i
 8006534:	f3bf 8f6f 	isb	sy
 8006538:	693b      	ldr	r3, [r7, #16]
 800653a:	071b      	lsls	r3, r3, #28
 800653c:	d4e9      	bmi.n	8006512 <main+0x90a>
 800653e:	e7ee      	b.n	800651e <main+0x916>
 8006540:	62be      	str	r6, [r7, #40]	; 0x28
 8006542:	f7fc f83d 	bl	80025c0 <acc_integration_sleep_us.constprop.0>
 8006546:	61be      	str	r6, [r7, #24]
 8006548:	f7fc f83a 	bl	80025c0 <acc_integration_sleep_us.constprop.0>
 800654c:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800654e:	2b05      	cmp	r3, #5
 8006550:	d843      	bhi.n	80065da <main+0x9d2>
 8006552:	2200      	movs	r2, #0
 8006554:	e783      	b.n	800645e <main+0x856>
 8006556:	f04f 0a0c 	mov.w	sl, #12
 800655a:	fb0a 8303 	mla	r3, sl, r3, r8
 800655e:	493f      	ldr	r1, [pc, #252]	; (800665c <main+0xa54>)
 8006560:	f8d3 3ffc 	ldr.w	r3, [r3, #4092]	; 0xffc
 8006564:	6c26      	ldr	r6, [r4, #64]	; 0x40
 8006566:	465a      	mov	r2, fp
 8006568:	2000      	movs	r0, #0
 800656a:	47b0      	blx	r6
 800656c:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800656e:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
 8006570:	fb0a 8603 	mla	r6, sl, r3, r8
 8006574:	18a9      	adds	r1, r5, r2
 8006576:	f896 0ff8 	ldrb.w	r0, [r6, #4088]	; 0xff8
 800657a:	f881 002a 	strb.w	r0, [r1, #42]	; 0x2a
 800657e:	210c      	movs	r1, #12
 8006580:	fb01 8103 	mla	r1, r1, r3, r8
 8006584:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
 8006588:	3301      	adds	r3, #1
 800658a:	f8d1 1ffc 	ldr.w	r1, [r1, #4092]	; 0xffc
 800658e:	6301      	str	r1, [r0, #48]	; 0x30
 8006590:	b29b      	uxth	r3, r3
 8006592:	1c51      	adds	r1, r2, #1
 8006594:	2b05      	cmp	r3, #5
 8006596:	f04f 0200 	mov.w	r2, #0
 800659a:	f880 2034 	strb.w	r2, [r0, #52]	; 0x34
 800659e:	846b      	strh	r3, [r5, #34]	; 0x22
 80065a0:	8529      	strh	r1, [r5, #40]	; 0x28
 80065a2:	626a      	str	r2, [r5, #36]	; 0x24
 80065a4:	f67f af5b 	bls.w	800645e <main+0x856>
 80065a8:	2b06      	cmp	r3, #6
 80065aa:	f47f af5e 	bne.w	800646a <main+0x862>
 80065ae:	e796      	b.n	80064de <main+0x8d6>
 80065b0:	210c      	movs	r1, #12
 80065b2:	fb01 8103 	mla	r1, r1, r3, r8
 80065b6:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
 80065ba:	3301      	adds	r3, #1
 80065bc:	f8d1 1ffc 	ldr.w	r1, [r1, #4092]	; 0xffc
 80065c0:	6301      	str	r1, [r0, #48]	; 0x30
 80065c2:	b29b      	uxth	r3, r3
 80065c4:	1c51      	adds	r1, r2, #1
 80065c6:	2b05      	cmp	r3, #5
 80065c8:	f04f 0200 	mov.w	r2, #0
 80065cc:	f880 a034 	strb.w	sl, [r0, #52]	; 0x34
 80065d0:	846b      	strh	r3, [r5, #34]	; 0x22
 80065d2:	8529      	strh	r1, [r5, #40]	; 0x28
 80065d4:	626a      	str	r2, [r5, #36]	; 0x24
 80065d6:	f67f af42 	bls.w	800645e <main+0x856>
 80065da:	2b06      	cmp	r3, #6
 80065dc:	f43f af7f 	beq.w	80064de <main+0x8d6>
 80065e0:	0059      	lsls	r1, r3, #1
 80065e2:	e747      	b.n	8006474 <main+0x86c>
 80065e4:	2254      	movs	r2, #84	; 0x54
 80065e6:	a83a      	add	r0, sp, #232	; 0xe8
 80065e8:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80065ec:	f000 fbaf 	bl	8006d4e <memset>
 80065f0:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80065f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80065f8:	a839      	add	r0, sp, #228	; 0xe4
 80065fa:	9239      	str	r2, [sp, #228]	; 0xe4
 80065fc:	934f      	str	r3, [sp, #316]	; 0x13c
 80065fe:	f7fb fc01 	bl	8001e04 <HAL_RCCEx_PeriphCLKConfig>
 8006602:	4601      	mov	r1, r0
 8006604:	2800      	cmp	r0, #0
 8006606:	f47f ae14 	bne.w	8006232 <main+0x62a>
 800660a:	4a1b      	ldr	r2, [pc, #108]	; (8006678 <main+0xa70>)
 800660c:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8006610:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006614:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8006618:	9001      	str	r0, [sp, #4]
 800661a:	2003      	movs	r0, #3
 800661c:	f7f9 fdd8 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006620:	2003      	movs	r0, #3
 8006622:	f7fb ff85 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8006626:	9901      	ldr	r1, [sp, #4]
 8006628:	2029      	movs	r0, #41	; 0x29
 800662a:	f7f9 fdd1 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800662e:	2029      	movs	r0, #41	; 0x29
 8006630:	f7fb ff7e 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8006634:	e593      	b.n	800615e <main+0x556>
 8006636:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800663a:	609a      	str	r2, [r3, #8]
 800663c:	e503      	b.n	8006046 <main+0x43e>
 800663e:	4811      	ldr	r0, [pc, #68]	; (8006684 <main+0xa7c>)
 8006640:	f000 fd10 	bl	8007064 <__wrap_puts>
 8006644:	4648      	mov	r0, r9
 8006646:	f000 fcf1 	bl	800702c <free>
 800664a:	e75d      	b.n	8006508 <main+0x900>
 800664c:	08008b48 	.word	0x08008b48
 8006650:	08008af0 	.word	0x08008af0
 8006654:	0800b5a4 	.word	0x0800b5a4
 8006658:	200000dc 	.word	0x200000dc
 800665c:	0800a7bc 	.word	0x0800a7bc
 8006660:	08008b60 	.word	0x08008b60
 8006664:	20000360 	.word	0x20000360
 8006668:	0800b5f0 	.word	0x0800b5f0
 800666c:	0800a42c 	.word	0x0800a42c
 8006670:	0800b608 	.word	0x0800b608
 8006674:	48000400 	.word	0x48000400
 8006678:	40021000 	.word	0x40021000
 800667c:	0800b63c 	.word	0x0800b63c
 8006680:	0800b660 	.word	0x0800b660
 8006684:	0800b678 	.word	0x0800b678
 8006688:	016e3600 	.word	0x016e3600
 800668c:	0800b61c 	.word	0x0800b61c
 8006690:	487c      	ldr	r0, [pc, #496]	; (8006884 <main+0xc7c>)
 8006692:	f000 fce7 	bl	8007064 <__wrap_puts>
 8006696:	e737      	b.n	8006508 <main+0x900>
 8006698:	2258      	movs	r2, #88	; 0x58
 800669a:	4629      	mov	r1, r5
 800669c:	a823      	add	r0, sp, #140	; 0x8c
 800669e:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 80066a2:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 80066a6:	f884 5210 	strb.w	r5, [r4, #528]	; 0x210
 80066aa:	9516      	str	r5, [sp, #88]	; 0x58
 80066ac:	f000 fb4f 	bl	8006d4e <memset>
 80066b0:	2380      	movs	r3, #128	; 0x80
 80066b2:	a822      	add	r0, sp, #136	; 0x88
 80066b4:	952f      	str	r5, [sp, #188]	; 0xbc
 80066b6:	9322      	str	r3, [sp, #136]	; 0x88
 80066b8:	f7fb fba4 	bl	8001e04 <HAL_RCCEx_PeriphCLKConfig>
 80066bc:	4607      	mov	r7, r0
 80066be:	2800      	cmp	r0, #0
 80066c0:	f47f adb7 	bne.w	8006232 <main+0x62a>
 80066c4:	4d70      	ldr	r5, [pc, #448]	; (8006888 <main+0xc80>)
 80066c6:	4871      	ldr	r0, [pc, #452]	; (800688c <main+0xc84>)
 80066c8:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80066ca:	f043 0302 	orr.w	r3, r3, #2
 80066ce:	64eb      	str	r3, [r5, #76]	; 0x4c
 80066d0:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80066d2:	9614      	str	r6, [sp, #80]	; 0x50
 80066d4:	f003 0302 	and.w	r3, r3, #2
 80066d8:	930c      	str	r3, [sp, #48]	; 0x30
 80066da:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80066de:	9312      	str	r3, [sp, #72]	; 0x48
 80066e0:	2312      	movs	r3, #18
 80066e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80066e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80066e6:	2203      	movs	r2, #3
 80066e8:	a912      	add	r1, sp, #72	; 0x48
 80066ea:	2304      	movs	r3, #4
 80066ec:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
 80066f0:	f7fb fd9e 	bl	8002230 <HAL_GPIO_Init>
 80066f4:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80066f6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80066fa:	65ab      	str	r3, [r5, #88]	; 0x58
 80066fc:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80066fe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006702:	930b      	str	r3, [sp, #44]	; 0x2c
 8006704:	4639      	mov	r1, r7
 8006706:	2021      	movs	r0, #33	; 0x21
 8006708:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800670a:	f7f9 fd61 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 800670e:	2021      	movs	r0, #33	; 0x21
 8006710:	f7fb ff0e 	bl	8002530 <HAL_NVIC_EnableIRQ.part.0>
 8006714:	e476      	b.n	8006004 <main+0x3fc>
 8006716:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 800671a:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800671c:	f8df b178 	ldr.w	fp, [pc, #376]	; 8006898 <main+0xc90>
 8006720:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006724:	662b      	str	r3, [r5, #96]	; 0x60
 8006726:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8006728:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800672c:	930a      	str	r3, [sp, #40]	; 0x28
 800672e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006730:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8006732:	f043 0301 	orr.w	r3, r3, #1
 8006736:	64eb      	str	r3, [r5, #76]	; 0x4c
 8006738:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800673a:	970e      	str	r7, [sp, #56]	; 0x38
 800673c:	f003 0301 	and.w	r3, r3, #1
 8006740:	9309      	str	r3, [sp, #36]	; 0x24
 8006742:	2103      	movs	r1, #3
 8006744:	4650      	mov	r0, sl
 8006746:	22e0      	movs	r2, #224	; 0xe0
 8006748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800674a:	9110      	str	r1, [sp, #64]	; 0x40
 800674c:	2305      	movs	r3, #5
 800674e:	a90d      	add	r1, sp, #52	; 0x34
 8006750:	920d      	str	r2, [sp, #52]	; 0x34
 8006752:	9311      	str	r3, [sp, #68]	; 0x44
 8006754:	960f      	str	r6, [sp, #60]	; 0x3c
 8006756:	2580      	movs	r5, #128	; 0x80
 8006758:	f7fb fd6a 	bl	8002230 <HAL_GPIO_Init>
 800675c:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8006760:	4a4b      	ldr	r2, [pc, #300]	; (8006890 <main+0xc88>)
 8006762:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 8006766:	f44f 7380 	mov.w	r3, #256	; 0x100
 800676a:	2101      	movs	r1, #1
 800676c:	4658      	mov	r0, fp
 800676e:	e9c4 669d 	strd	r6, r6, [r4, #628]	; 0x274
 8006772:	e9c4 66a2 	strd	r6, r6, [r4, #648]	; 0x288
 8006776:	e9c4 539f 	strd	r5, r3, [r4, #636]	; 0x27c
 800677a:	f8c4 1270 	str.w	r1, [r4, #624]	; 0x270
 800677e:	f8c4 a284 	str.w	sl, [r4, #644]	; 0x284
 8006782:	f7f9 fda9 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8006786:	4602      	mov	r2, r0
 8006788:	2800      	cmp	r0, #0
 800678a:	f47f ad52 	bne.w	8006232 <main+0x62a>
 800678e:	f1ab 0648 	sub.w	r6, fp, #72	; 0x48
 8006792:	2301      	movs	r3, #1
 8006794:	493f      	ldr	r1, [pc, #252]	; (8006894 <main+0xc8c>)
 8006796:	f8c4 b13c 	str.w	fp, [r4, #316]	; 0x13c
 800679a:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 800679e:	f5ab 7bc4 	sub.w	fp, fp, #392	; 0x188
 80067a2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80067a6:	4630      	mov	r0, r6
 80067a8:	e9c4 258c 	strd	r2, r5, [r4, #560]	; 0x230
 80067ac:	e9c4 3a8e 	strd	r3, sl, [r4, #568]	; 0x238
 80067b0:	e9c4 2290 	strd	r2, r2, [r4, #576]	; 0x240
 80067b4:	f8c4 922c 	str.w	r9, [r4, #556]	; 0x22c
 80067b8:	f8c4 b294 	str.w	fp, [r4, #660]	; 0x294
 80067bc:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
 80067c0:	f7f9 fd8a 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80067c4:	2800      	cmp	r0, #0
 80067c6:	f47f ad34 	bne.w	8006232 <main+0x62a>
 80067ca:	e9d4 313a 	ldrd	r3, r1, [r4, #232]	; 0xe8
 80067ce:	f8d4 20f4 	ldr.w	r2, [r4, #244]	; 0xf4
 80067d2:	f8d4 50f8 	ldr.w	r5, [r4, #248]	; 0xf8
 80067d6:	f8d4 c0fc 	ldr.w	ip, [r4, #252]	; 0xfc
 80067da:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 80067de:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80067e2:	f401 4104 	and.w	r1, r1, #33792	; 0x8400
 80067e6:	ea43 0701 	orr.w	r7, r3, r1
 80067ea:	f002 0202 	and.w	r2, r2, #2
 80067ee:	433a      	orrs	r2, r7
 80067f0:	f005 0501 	and.w	r5, r5, #1
 80067f4:	432a      	orrs	r2, r5
 80067f6:	f40c 7500 	and.w	r5, ip, #512	; 0x200
 80067fa:	ea42 0e05 	orr.w	lr, r2, r5
 80067fe:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8006802:	f8d4 1108 	ldr.w	r1, [r4, #264]	; 0x108
 8006806:	f8c4 6138 	str.w	r6, [r4, #312]	; 0x138
 800680a:	f8d4 6118 	ldr.w	r6, [r4, #280]	; 0x118
 800680e:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8006812:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 8006816:	f8c4 b24c 	str.w	fp, [r4, #588]	; 0x24c
 800681a:	ea4f 451c 	mov.w	r5, ip, lsr #16
 800681e:	f002 0c38 	and.w	ip, r2, #56	; 0x38
 8006822:	f8d4 2104 	ldr.w	r2, [r4, #260]	; 0x104
 8006826:	f006 0608 	and.w	r6, r6, #8
 800682a:	f001 0110 	and.w	r1, r1, #16
 800682e:	ea4e 0c0c 	orr.w	ip, lr, ip
 8006832:	4331      	orrs	r1, r6
 8006834:	f002 0e80 	and.w	lr, r2, #128	; 0x80
 8006838:	681e      	ldr	r6, [r3, #0]
 800683a:	ea4c 020e 	orr.w	r2, ip, lr
 800683e:	f407 6c70 	and.w	ip, r7, #3840	; 0xf00
 8006842:	f005 0504 	and.w	r5, r5, #4
 8006846:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 800684a:	ea41 010c 	orr.w	r1, r1, ip
 800684e:	f5b7 6fe0 	cmp.w	r7, #1792	; 0x700
 8006852:	ea41 0105 	orr.w	r1, r1, r5
 8006856:	601e      	str	r6, [r3, #0]
 8006858:	d808      	bhi.n	800686c <main+0xc64>
 800685a:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800685e:	f43f ab95 	beq.w	8005f8c <main+0x384>
 8006862:	2500      	movs	r5, #0
 8006864:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 8006868:	f7ff bb90 	b.w	8005f8c <main+0x384>
 800686c:	f5b7 6f70 	cmp.w	r7, #3840	; 0xf00
 8006870:	d1f7      	bne.n	8006862 <main+0xc5a>
 8006872:	f7ff bb8b 	b.w	8005f8c <main+0x384>
 8006876:	2b05      	cmp	r3, #5
 8006878:	f67f ae6b 	bls.w	8006552 <main+0x94a>
 800687c:	2b06      	cmp	r3, #6
 800687e:	f47f adf9 	bne.w	8006474 <main+0x86c>
 8006882:	e62c      	b.n	80064de <main+0x8d6>
 8006884:	0800b5c4 	.word	0x0800b5c4
 8006888:	40021000 	.word	0x40021000
 800688c:	48000400 	.word	0x48000400
 8006890:	4002001c 	.word	0x4002001c
 8006894:	40020030 	.word	0x40020030
 8006898:	20000318 	.word	0x20000318

0800689c <_close>:
int _close(int file)
{
	(void)file;

	return -1;
}
 800689c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80068a0:	4770      	bx	lr
 80068a2:	bf00      	nop

080068a4 <_lseek>:
	(void)file;
	(void)ptr;
	(void)dir;

	return 0;
}
 80068a4:	2000      	movs	r0, #0
 80068a6:	4770      	bx	lr

080068a8 <_read>:
	(void)file;
	(void)ptr;
	(void)len;

	return -1;
}
 80068a8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80068ac:	4770      	bx	lr
 80068ae:	bf00      	nop

080068b0 <_write>:


int _write(int file, char *ptr, int len)
{
 80068b0:	b510      	push	{r4, lr}
	(void)file;
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 80068b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
{
 80068b6:	4614      	mov	r4, r2
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 80068b8:	4802      	ldr	r0, [pc, #8]	; (80068c4 <_write+0x14>)
 80068ba:	b292      	uxth	r2, r2
 80068bc:	f7fe fd3c 	bl	8005338 <HAL_UART_Transmit>
	return len;
}
 80068c0:	4620      	mov	r0, r4
 80068c2:	bd10      	pop	{r4, pc}
 80068c4:	200003d0 	.word	0x200003d0

080068c8 <Reset_Handler>:
 80068c8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006900 <LoopForever+0x2>
 80068cc:	f7fe fd96 	bl	80053fc <SystemInit>
 80068d0:	480c      	ldr	r0, [pc, #48]	; (8006904 <LoopForever+0x6>)
 80068d2:	490d      	ldr	r1, [pc, #52]	; (8006908 <LoopForever+0xa>)
 80068d4:	4a0d      	ldr	r2, [pc, #52]	; (800690c <LoopForever+0xe>)
 80068d6:	2300      	movs	r3, #0
 80068d8:	e002      	b.n	80068e0 <LoopCopyDataInit>

080068da <CopyDataInit>:
 80068da:	58d4      	ldr	r4, [r2, r3]
 80068dc:	50c4      	str	r4, [r0, r3]
 80068de:	3304      	adds	r3, #4

080068e0 <LoopCopyDataInit>:
 80068e0:	18c4      	adds	r4, r0, r3
 80068e2:	428c      	cmp	r4, r1
 80068e4:	d3f9      	bcc.n	80068da <CopyDataInit>
 80068e6:	4a0a      	ldr	r2, [pc, #40]	; (8006910 <LoopForever+0x12>)
 80068e8:	4c0a      	ldr	r4, [pc, #40]	; (8006914 <LoopForever+0x16>)
 80068ea:	2300      	movs	r3, #0
 80068ec:	e001      	b.n	80068f2 <LoopFillZerobss>

080068ee <FillZerobss>:
 80068ee:	6013      	str	r3, [r2, #0]
 80068f0:	3204      	adds	r2, #4

080068f2 <LoopFillZerobss>:
 80068f2:	42a2      	cmp	r2, r4
 80068f4:	d3fb      	bcc.n	80068ee <FillZerobss>
 80068f6:	f000 fa03 	bl	8006d00 <__libc_init_array>
 80068fa:	f7ff f985 	bl	8005c08 <main>

080068fe <LoopForever>:
 80068fe:	e7fe      	b.n	80068fe <LoopForever>
 8006900:	20010000 	.word	0x20010000
 8006904:	20000000 	.word	0x20000000
 8006908:	20000090 	.word	0x20000090
 800690c:	0800b798 	.word	0x0800b798
 8006910:	20000090 	.word	0x20000090
 8006914:	20000464 	.word	0x20000464

08006918 <ADC1_IRQHandler>:
 8006918:	e7fe      	b.n	8006918 <ADC1_IRQHandler>
	...

0800691c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800691c:	490c      	ldr	r1, [pc, #48]	; (8006950 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800691e:	4a0d      	ldr	r2, [pc, #52]	; (8006954 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8006920:	680b      	ldr	r3, [r1, #0]
{
 8006922:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006924:	4c0c      	ldr	r4, [pc, #48]	; (8006958 <_sbrk+0x3c>)
 8006926:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8006928:	b12b      	cbz	r3, 8006936 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800692a:	4418      	add	r0, r3
 800692c:	4290      	cmp	r0, r2
 800692e:	d807      	bhi.n	8006940 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8006930:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8006932:	4618      	mov	r0, r3
 8006934:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8006936:	4b09      	ldr	r3, [pc, #36]	; (800695c <_sbrk+0x40>)
 8006938:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 800693a:	4418      	add	r0, r3
 800693c:	4290      	cmp	r0, r2
 800693e:	d9f7      	bls.n	8006930 <_sbrk+0x14>
    errno = ENOMEM;
 8006940:	f000 f80e 	bl	8006960 <__errno>
 8006944:	230c      	movs	r3, #12
 8006946:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8006948:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800694c:	4618      	mov	r0, r3
 800694e:	bd10      	pop	{r4, pc}
 8006950:	200003c4 	.word	0x200003c4
 8006954:	20010000 	.word	0x20010000
 8006958:	00001400 	.word	0x00001400
 800695c:	20000468 	.word	0x20000468

08006960 <__errno>:
 8006960:	4b01      	ldr	r3, [pc, #4]	; (8006968 <__errno+0x8>)
 8006962:	6818      	ldr	r0, [r3, #0]
 8006964:	4770      	bx	lr
 8006966:	bf00      	nop
 8006968:	20000028 	.word	0x20000028

0800696c <__sflush_r>:
 800696c:	898a      	ldrh	r2, [r1, #12]
 800696e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006972:	4605      	mov	r5, r0
 8006974:	0710      	lsls	r0, r2, #28
 8006976:	460c      	mov	r4, r1
 8006978:	d458      	bmi.n	8006a2c <__sflush_r+0xc0>
 800697a:	684b      	ldr	r3, [r1, #4]
 800697c:	2b00      	cmp	r3, #0
 800697e:	dc05      	bgt.n	800698c <__sflush_r+0x20>
 8006980:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006982:	2b00      	cmp	r3, #0
 8006984:	dc02      	bgt.n	800698c <__sflush_r+0x20>
 8006986:	2000      	movs	r0, #0
 8006988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800698c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800698e:	2e00      	cmp	r6, #0
 8006990:	d0f9      	beq.n	8006986 <__sflush_r+0x1a>
 8006992:	2300      	movs	r3, #0
 8006994:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006998:	682f      	ldr	r7, [r5, #0]
 800699a:	602b      	str	r3, [r5, #0]
 800699c:	d032      	beq.n	8006a04 <__sflush_r+0x98>
 800699e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80069a0:	89a3      	ldrh	r3, [r4, #12]
 80069a2:	075a      	lsls	r2, r3, #29
 80069a4:	d505      	bpl.n	80069b2 <__sflush_r+0x46>
 80069a6:	6863      	ldr	r3, [r4, #4]
 80069a8:	1ac0      	subs	r0, r0, r3
 80069aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80069ac:	b10b      	cbz	r3, 80069b2 <__sflush_r+0x46>
 80069ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80069b0:	1ac0      	subs	r0, r0, r3
 80069b2:	2300      	movs	r3, #0
 80069b4:	4602      	mov	r2, r0
 80069b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80069b8:	6a21      	ldr	r1, [r4, #32]
 80069ba:	4628      	mov	r0, r5
 80069bc:	47b0      	blx	r6
 80069be:	1c43      	adds	r3, r0, #1
 80069c0:	89a3      	ldrh	r3, [r4, #12]
 80069c2:	d106      	bne.n	80069d2 <__sflush_r+0x66>
 80069c4:	6829      	ldr	r1, [r5, #0]
 80069c6:	291d      	cmp	r1, #29
 80069c8:	d82c      	bhi.n	8006a24 <__sflush_r+0xb8>
 80069ca:	4a2a      	ldr	r2, [pc, #168]	; (8006a74 <__sflush_r+0x108>)
 80069cc:	40ca      	lsrs	r2, r1
 80069ce:	07d6      	lsls	r6, r2, #31
 80069d0:	d528      	bpl.n	8006a24 <__sflush_r+0xb8>
 80069d2:	2200      	movs	r2, #0
 80069d4:	6062      	str	r2, [r4, #4]
 80069d6:	04d9      	lsls	r1, r3, #19
 80069d8:	6922      	ldr	r2, [r4, #16]
 80069da:	6022      	str	r2, [r4, #0]
 80069dc:	d504      	bpl.n	80069e8 <__sflush_r+0x7c>
 80069de:	1c42      	adds	r2, r0, #1
 80069e0:	d101      	bne.n	80069e6 <__sflush_r+0x7a>
 80069e2:	682b      	ldr	r3, [r5, #0]
 80069e4:	b903      	cbnz	r3, 80069e8 <__sflush_r+0x7c>
 80069e6:	6560      	str	r0, [r4, #84]	; 0x54
 80069e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80069ea:	602f      	str	r7, [r5, #0]
 80069ec:	2900      	cmp	r1, #0
 80069ee:	d0ca      	beq.n	8006986 <__sflush_r+0x1a>
 80069f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80069f4:	4299      	cmp	r1, r3
 80069f6:	d002      	beq.n	80069fe <__sflush_r+0x92>
 80069f8:	4628      	mov	r0, r5
 80069fa:	f000 f9b1 	bl	8006d60 <_free_r>
 80069fe:	2000      	movs	r0, #0
 8006a00:	6360      	str	r0, [r4, #52]	; 0x34
 8006a02:	e7c1      	b.n	8006988 <__sflush_r+0x1c>
 8006a04:	6a21      	ldr	r1, [r4, #32]
 8006a06:	2301      	movs	r3, #1
 8006a08:	4628      	mov	r0, r5
 8006a0a:	47b0      	blx	r6
 8006a0c:	1c41      	adds	r1, r0, #1
 8006a0e:	d1c7      	bne.n	80069a0 <__sflush_r+0x34>
 8006a10:	682b      	ldr	r3, [r5, #0]
 8006a12:	2b00      	cmp	r3, #0
 8006a14:	d0c4      	beq.n	80069a0 <__sflush_r+0x34>
 8006a16:	2b1d      	cmp	r3, #29
 8006a18:	d001      	beq.n	8006a1e <__sflush_r+0xb2>
 8006a1a:	2b16      	cmp	r3, #22
 8006a1c:	d101      	bne.n	8006a22 <__sflush_r+0xb6>
 8006a1e:	602f      	str	r7, [r5, #0]
 8006a20:	e7b1      	b.n	8006986 <__sflush_r+0x1a>
 8006a22:	89a3      	ldrh	r3, [r4, #12]
 8006a24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006a28:	81a3      	strh	r3, [r4, #12]
 8006a2a:	e7ad      	b.n	8006988 <__sflush_r+0x1c>
 8006a2c:	690f      	ldr	r7, [r1, #16]
 8006a2e:	2f00      	cmp	r7, #0
 8006a30:	d0a9      	beq.n	8006986 <__sflush_r+0x1a>
 8006a32:	0793      	lsls	r3, r2, #30
 8006a34:	680e      	ldr	r6, [r1, #0]
 8006a36:	bf08      	it	eq
 8006a38:	694b      	ldreq	r3, [r1, #20]
 8006a3a:	600f      	str	r7, [r1, #0]
 8006a3c:	bf18      	it	ne
 8006a3e:	2300      	movne	r3, #0
 8006a40:	eba6 0807 	sub.w	r8, r6, r7
 8006a44:	608b      	str	r3, [r1, #8]
 8006a46:	f1b8 0f00 	cmp.w	r8, #0
 8006a4a:	dd9c      	ble.n	8006986 <__sflush_r+0x1a>
 8006a4c:	6a21      	ldr	r1, [r4, #32]
 8006a4e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006a50:	4643      	mov	r3, r8
 8006a52:	463a      	mov	r2, r7
 8006a54:	4628      	mov	r0, r5
 8006a56:	47b0      	blx	r6
 8006a58:	2800      	cmp	r0, #0
 8006a5a:	dc06      	bgt.n	8006a6a <__sflush_r+0xfe>
 8006a5c:	89a3      	ldrh	r3, [r4, #12]
 8006a5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006a62:	81a3      	strh	r3, [r4, #12]
 8006a64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a68:	e78e      	b.n	8006988 <__sflush_r+0x1c>
 8006a6a:	4407      	add	r7, r0
 8006a6c:	eba8 0800 	sub.w	r8, r8, r0
 8006a70:	e7e9      	b.n	8006a46 <__sflush_r+0xda>
 8006a72:	bf00      	nop
 8006a74:	20400001 	.word	0x20400001

08006a78 <_fflush_r>:
 8006a78:	b538      	push	{r3, r4, r5, lr}
 8006a7a:	690b      	ldr	r3, [r1, #16]
 8006a7c:	4605      	mov	r5, r0
 8006a7e:	460c      	mov	r4, r1
 8006a80:	b913      	cbnz	r3, 8006a88 <_fflush_r+0x10>
 8006a82:	2500      	movs	r5, #0
 8006a84:	4628      	mov	r0, r5
 8006a86:	bd38      	pop	{r3, r4, r5, pc}
 8006a88:	b118      	cbz	r0, 8006a92 <_fflush_r+0x1a>
 8006a8a:	6983      	ldr	r3, [r0, #24]
 8006a8c:	b90b      	cbnz	r3, 8006a92 <_fflush_r+0x1a>
 8006a8e:	f000 f899 	bl	8006bc4 <__sinit>
 8006a92:	4b14      	ldr	r3, [pc, #80]	; (8006ae4 <_fflush_r+0x6c>)
 8006a94:	429c      	cmp	r4, r3
 8006a96:	d11b      	bne.n	8006ad0 <_fflush_r+0x58>
 8006a98:	686c      	ldr	r4, [r5, #4]
 8006a9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a9e:	2b00      	cmp	r3, #0
 8006aa0:	d0ef      	beq.n	8006a82 <_fflush_r+0xa>
 8006aa2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006aa4:	07d0      	lsls	r0, r2, #31
 8006aa6:	d404      	bmi.n	8006ab2 <_fflush_r+0x3a>
 8006aa8:	0599      	lsls	r1, r3, #22
 8006aaa:	d402      	bmi.n	8006ab2 <_fflush_r+0x3a>
 8006aac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006aae:	f000 f94c 	bl	8006d4a <__retarget_lock_acquire_recursive>
 8006ab2:	4628      	mov	r0, r5
 8006ab4:	4621      	mov	r1, r4
 8006ab6:	f7ff ff59 	bl	800696c <__sflush_r>
 8006aba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006abc:	07da      	lsls	r2, r3, #31
 8006abe:	4605      	mov	r5, r0
 8006ac0:	d4e0      	bmi.n	8006a84 <_fflush_r+0xc>
 8006ac2:	89a3      	ldrh	r3, [r4, #12]
 8006ac4:	059b      	lsls	r3, r3, #22
 8006ac6:	d4dd      	bmi.n	8006a84 <_fflush_r+0xc>
 8006ac8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006aca:	f000 f93f 	bl	8006d4c <__retarget_lock_release_recursive>
 8006ace:	e7d9      	b.n	8006a84 <_fflush_r+0xc>
 8006ad0:	4b05      	ldr	r3, [pc, #20]	; (8006ae8 <_fflush_r+0x70>)
 8006ad2:	429c      	cmp	r4, r3
 8006ad4:	d101      	bne.n	8006ada <_fflush_r+0x62>
 8006ad6:	68ac      	ldr	r4, [r5, #8]
 8006ad8:	e7df      	b.n	8006a9a <_fflush_r+0x22>
 8006ada:	4b04      	ldr	r3, [pc, #16]	; (8006aec <_fflush_r+0x74>)
 8006adc:	429c      	cmp	r4, r3
 8006ade:	bf08      	it	eq
 8006ae0:	68ec      	ldreq	r4, [r5, #12]
 8006ae2:	e7da      	b.n	8006a9a <_fflush_r+0x22>
 8006ae4:	0800b73c 	.word	0x0800b73c
 8006ae8:	0800b75c 	.word	0x0800b75c
 8006aec:	0800b71c 	.word	0x0800b71c

08006af0 <fflush>:
 8006af0:	4601      	mov	r1, r0
 8006af2:	b920      	cbnz	r0, 8006afe <fflush+0xe>
 8006af4:	4b04      	ldr	r3, [pc, #16]	; (8006b08 <fflush+0x18>)
 8006af6:	4905      	ldr	r1, [pc, #20]	; (8006b0c <fflush+0x1c>)
 8006af8:	6818      	ldr	r0, [r3, #0]
 8006afa:	f000 b8e1 	b.w	8006cc0 <_fwalk_reent>
 8006afe:	4b04      	ldr	r3, [pc, #16]	; (8006b10 <fflush+0x20>)
 8006b00:	6818      	ldr	r0, [r3, #0]
 8006b02:	f7ff bfb9 	b.w	8006a78 <_fflush_r>
 8006b06:	bf00      	nop
 8006b08:	0800b77c 	.word	0x0800b77c
 8006b0c:	08006a79 	.word	0x08006a79
 8006b10:	20000028 	.word	0x20000028

08006b14 <std>:
 8006b14:	2300      	movs	r3, #0
 8006b16:	b510      	push	{r4, lr}
 8006b18:	4604      	mov	r4, r0
 8006b1a:	e9c0 3300 	strd	r3, r3, [r0]
 8006b1e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006b22:	6083      	str	r3, [r0, #8]
 8006b24:	8181      	strh	r1, [r0, #12]
 8006b26:	6643      	str	r3, [r0, #100]	; 0x64
 8006b28:	81c2      	strh	r2, [r0, #14]
 8006b2a:	6183      	str	r3, [r0, #24]
 8006b2c:	4619      	mov	r1, r3
 8006b2e:	2208      	movs	r2, #8
 8006b30:	305c      	adds	r0, #92	; 0x5c
 8006b32:	f000 f90c 	bl	8006d4e <memset>
 8006b36:	4b05      	ldr	r3, [pc, #20]	; (8006b4c <std+0x38>)
 8006b38:	6263      	str	r3, [r4, #36]	; 0x24
 8006b3a:	4b05      	ldr	r3, [pc, #20]	; (8006b50 <std+0x3c>)
 8006b3c:	62a3      	str	r3, [r4, #40]	; 0x28
 8006b3e:	4b05      	ldr	r3, [pc, #20]	; (8006b54 <std+0x40>)
 8006b40:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006b42:	4b05      	ldr	r3, [pc, #20]	; (8006b58 <std+0x44>)
 8006b44:	6224      	str	r4, [r4, #32]
 8006b46:	6323      	str	r3, [r4, #48]	; 0x30
 8006b48:	bd10      	pop	{r4, pc}
 8006b4a:	bf00      	nop
 8006b4c:	08006ed5 	.word	0x08006ed5
 8006b50:	08006ef7 	.word	0x08006ef7
 8006b54:	08006f2f 	.word	0x08006f2f
 8006b58:	08006f53 	.word	0x08006f53

08006b5c <_cleanup_r>:
 8006b5c:	4901      	ldr	r1, [pc, #4]	; (8006b64 <_cleanup_r+0x8>)
 8006b5e:	f000 b8af 	b.w	8006cc0 <_fwalk_reent>
 8006b62:	bf00      	nop
 8006b64:	08006a79 	.word	0x08006a79

08006b68 <__sfmoreglue>:
 8006b68:	b570      	push	{r4, r5, r6, lr}
 8006b6a:	1e4a      	subs	r2, r1, #1
 8006b6c:	2568      	movs	r5, #104	; 0x68
 8006b6e:	4355      	muls	r5, r2
 8006b70:	460e      	mov	r6, r1
 8006b72:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8006b76:	f000 f943 	bl	8006e00 <_malloc_r>
 8006b7a:	4604      	mov	r4, r0
 8006b7c:	b140      	cbz	r0, 8006b90 <__sfmoreglue+0x28>
 8006b7e:	2100      	movs	r1, #0
 8006b80:	e9c0 1600 	strd	r1, r6, [r0]
 8006b84:	300c      	adds	r0, #12
 8006b86:	60a0      	str	r0, [r4, #8]
 8006b88:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006b8c:	f000 f8df 	bl	8006d4e <memset>
 8006b90:	4620      	mov	r0, r4
 8006b92:	bd70      	pop	{r4, r5, r6, pc}

08006b94 <__sfp_lock_acquire>:
 8006b94:	4801      	ldr	r0, [pc, #4]	; (8006b9c <__sfp_lock_acquire+0x8>)
 8006b96:	f000 b8d8 	b.w	8006d4a <__retarget_lock_acquire_recursive>
 8006b9a:	bf00      	nop
 8006b9c:	2000045c 	.word	0x2000045c

08006ba0 <__sfp_lock_release>:
 8006ba0:	4801      	ldr	r0, [pc, #4]	; (8006ba8 <__sfp_lock_release+0x8>)
 8006ba2:	f000 b8d3 	b.w	8006d4c <__retarget_lock_release_recursive>
 8006ba6:	bf00      	nop
 8006ba8:	2000045c 	.word	0x2000045c

08006bac <__sinit_lock_acquire>:
 8006bac:	4801      	ldr	r0, [pc, #4]	; (8006bb4 <__sinit_lock_acquire+0x8>)
 8006bae:	f000 b8cc 	b.w	8006d4a <__retarget_lock_acquire_recursive>
 8006bb2:	bf00      	nop
 8006bb4:	20000457 	.word	0x20000457

08006bb8 <__sinit_lock_release>:
 8006bb8:	4801      	ldr	r0, [pc, #4]	; (8006bc0 <__sinit_lock_release+0x8>)
 8006bba:	f000 b8c7 	b.w	8006d4c <__retarget_lock_release_recursive>
 8006bbe:	bf00      	nop
 8006bc0:	20000457 	.word	0x20000457

08006bc4 <__sinit>:
 8006bc4:	b510      	push	{r4, lr}
 8006bc6:	4604      	mov	r4, r0
 8006bc8:	f7ff fff0 	bl	8006bac <__sinit_lock_acquire>
 8006bcc:	69a3      	ldr	r3, [r4, #24]
 8006bce:	b11b      	cbz	r3, 8006bd8 <__sinit+0x14>
 8006bd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006bd4:	f7ff bff0 	b.w	8006bb8 <__sinit_lock_release>
 8006bd8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8006bdc:	6523      	str	r3, [r4, #80]	; 0x50
 8006bde:	4b13      	ldr	r3, [pc, #76]	; (8006c2c <__sinit+0x68>)
 8006be0:	4a13      	ldr	r2, [pc, #76]	; (8006c30 <__sinit+0x6c>)
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	62a2      	str	r2, [r4, #40]	; 0x28
 8006be6:	42a3      	cmp	r3, r4
 8006be8:	bf04      	itt	eq
 8006bea:	2301      	moveq	r3, #1
 8006bec:	61a3      	streq	r3, [r4, #24]
 8006bee:	4620      	mov	r0, r4
 8006bf0:	f000 f820 	bl	8006c34 <__sfp>
 8006bf4:	6060      	str	r0, [r4, #4]
 8006bf6:	4620      	mov	r0, r4
 8006bf8:	f000 f81c 	bl	8006c34 <__sfp>
 8006bfc:	60a0      	str	r0, [r4, #8]
 8006bfe:	4620      	mov	r0, r4
 8006c00:	f000 f818 	bl	8006c34 <__sfp>
 8006c04:	2200      	movs	r2, #0
 8006c06:	60e0      	str	r0, [r4, #12]
 8006c08:	2104      	movs	r1, #4
 8006c0a:	6860      	ldr	r0, [r4, #4]
 8006c0c:	f7ff ff82 	bl	8006b14 <std>
 8006c10:	68a0      	ldr	r0, [r4, #8]
 8006c12:	2201      	movs	r2, #1
 8006c14:	2109      	movs	r1, #9
 8006c16:	f7ff ff7d 	bl	8006b14 <std>
 8006c1a:	68e0      	ldr	r0, [r4, #12]
 8006c1c:	2202      	movs	r2, #2
 8006c1e:	2112      	movs	r1, #18
 8006c20:	f7ff ff78 	bl	8006b14 <std>
 8006c24:	2301      	movs	r3, #1
 8006c26:	61a3      	str	r3, [r4, #24]
 8006c28:	e7d2      	b.n	8006bd0 <__sinit+0xc>
 8006c2a:	bf00      	nop
 8006c2c:	0800b77c 	.word	0x0800b77c
 8006c30:	08006b5d 	.word	0x08006b5d

08006c34 <__sfp>:
 8006c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c36:	4607      	mov	r7, r0
 8006c38:	f7ff ffac 	bl	8006b94 <__sfp_lock_acquire>
 8006c3c:	4b1e      	ldr	r3, [pc, #120]	; (8006cb8 <__sfp+0x84>)
 8006c3e:	681e      	ldr	r6, [r3, #0]
 8006c40:	69b3      	ldr	r3, [r6, #24]
 8006c42:	b913      	cbnz	r3, 8006c4a <__sfp+0x16>
 8006c44:	4630      	mov	r0, r6
 8006c46:	f7ff ffbd 	bl	8006bc4 <__sinit>
 8006c4a:	3648      	adds	r6, #72	; 0x48
 8006c4c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006c50:	3b01      	subs	r3, #1
 8006c52:	d503      	bpl.n	8006c5c <__sfp+0x28>
 8006c54:	6833      	ldr	r3, [r6, #0]
 8006c56:	b30b      	cbz	r3, 8006c9c <__sfp+0x68>
 8006c58:	6836      	ldr	r6, [r6, #0]
 8006c5a:	e7f7      	b.n	8006c4c <__sfp+0x18>
 8006c5c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006c60:	b9d5      	cbnz	r5, 8006c98 <__sfp+0x64>
 8006c62:	4b16      	ldr	r3, [pc, #88]	; (8006cbc <__sfp+0x88>)
 8006c64:	60e3      	str	r3, [r4, #12]
 8006c66:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006c6a:	6665      	str	r5, [r4, #100]	; 0x64
 8006c6c:	f000 f86c 	bl	8006d48 <__retarget_lock_init_recursive>
 8006c70:	f7ff ff96 	bl	8006ba0 <__sfp_lock_release>
 8006c74:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006c78:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006c7c:	6025      	str	r5, [r4, #0]
 8006c7e:	61a5      	str	r5, [r4, #24]
 8006c80:	2208      	movs	r2, #8
 8006c82:	4629      	mov	r1, r5
 8006c84:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006c88:	f000 f861 	bl	8006d4e <memset>
 8006c8c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006c90:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006c94:	4620      	mov	r0, r4
 8006c96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c98:	3468      	adds	r4, #104	; 0x68
 8006c9a:	e7d9      	b.n	8006c50 <__sfp+0x1c>
 8006c9c:	2104      	movs	r1, #4
 8006c9e:	4638      	mov	r0, r7
 8006ca0:	f7ff ff62 	bl	8006b68 <__sfmoreglue>
 8006ca4:	4604      	mov	r4, r0
 8006ca6:	6030      	str	r0, [r6, #0]
 8006ca8:	2800      	cmp	r0, #0
 8006caa:	d1d5      	bne.n	8006c58 <__sfp+0x24>
 8006cac:	f7ff ff78 	bl	8006ba0 <__sfp_lock_release>
 8006cb0:	230c      	movs	r3, #12
 8006cb2:	603b      	str	r3, [r7, #0]
 8006cb4:	e7ee      	b.n	8006c94 <__sfp+0x60>
 8006cb6:	bf00      	nop
 8006cb8:	0800b77c 	.word	0x0800b77c
 8006cbc:	ffff0001 	.word	0xffff0001

08006cc0 <_fwalk_reent>:
 8006cc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006cc4:	4606      	mov	r6, r0
 8006cc6:	4688      	mov	r8, r1
 8006cc8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006ccc:	2700      	movs	r7, #0
 8006cce:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006cd2:	f1b9 0901 	subs.w	r9, r9, #1
 8006cd6:	d505      	bpl.n	8006ce4 <_fwalk_reent+0x24>
 8006cd8:	6824      	ldr	r4, [r4, #0]
 8006cda:	2c00      	cmp	r4, #0
 8006cdc:	d1f7      	bne.n	8006cce <_fwalk_reent+0xe>
 8006cde:	4638      	mov	r0, r7
 8006ce0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006ce4:	89ab      	ldrh	r3, [r5, #12]
 8006ce6:	2b01      	cmp	r3, #1
 8006ce8:	d907      	bls.n	8006cfa <_fwalk_reent+0x3a>
 8006cea:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006cee:	3301      	adds	r3, #1
 8006cf0:	d003      	beq.n	8006cfa <_fwalk_reent+0x3a>
 8006cf2:	4629      	mov	r1, r5
 8006cf4:	4630      	mov	r0, r6
 8006cf6:	47c0      	blx	r8
 8006cf8:	4307      	orrs	r7, r0
 8006cfa:	3568      	adds	r5, #104	; 0x68
 8006cfc:	e7e9      	b.n	8006cd2 <_fwalk_reent+0x12>
	...

08006d00 <__libc_init_array>:
 8006d00:	b570      	push	{r4, r5, r6, lr}
 8006d02:	4d0d      	ldr	r5, [pc, #52]	; (8006d38 <__libc_init_array+0x38>)
 8006d04:	4c0d      	ldr	r4, [pc, #52]	; (8006d3c <__libc_init_array+0x3c>)
 8006d06:	1b64      	subs	r4, r4, r5
 8006d08:	10a4      	asrs	r4, r4, #2
 8006d0a:	2600      	movs	r6, #0
 8006d0c:	42a6      	cmp	r6, r4
 8006d0e:	d109      	bne.n	8006d24 <__libc_init_array+0x24>
 8006d10:	4d0b      	ldr	r5, [pc, #44]	; (8006d40 <__libc_init_array+0x40>)
 8006d12:	4c0c      	ldr	r4, [pc, #48]	; (8006d44 <__libc_init_array+0x44>)
 8006d14:	f000 ff34 	bl	8007b80 <_init>
 8006d18:	1b64      	subs	r4, r4, r5
 8006d1a:	10a4      	asrs	r4, r4, #2
 8006d1c:	2600      	movs	r6, #0
 8006d1e:	42a6      	cmp	r6, r4
 8006d20:	d105      	bne.n	8006d2e <__libc_init_array+0x2e>
 8006d22:	bd70      	pop	{r4, r5, r6, pc}
 8006d24:	f855 3b04 	ldr.w	r3, [r5], #4
 8006d28:	4798      	blx	r3
 8006d2a:	3601      	adds	r6, #1
 8006d2c:	e7ee      	b.n	8006d0c <__libc_init_array+0xc>
 8006d2e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006d32:	4798      	blx	r3
 8006d34:	3601      	adds	r6, #1
 8006d36:	e7f2      	b.n	8006d1e <__libc_init_array+0x1e>
 8006d38:	0800b788 	.word	0x0800b788
 8006d3c:	0800b788 	.word	0x0800b788
 8006d40:	0800b788 	.word	0x0800b788
 8006d44:	0800b78c 	.word	0x0800b78c

08006d48 <__retarget_lock_init_recursive>:
 8006d48:	4770      	bx	lr

08006d4a <__retarget_lock_acquire_recursive>:
 8006d4a:	4770      	bx	lr

08006d4c <__retarget_lock_release_recursive>:
 8006d4c:	4770      	bx	lr

08006d4e <memset>:
 8006d4e:	4402      	add	r2, r0
 8006d50:	4603      	mov	r3, r0
 8006d52:	4293      	cmp	r3, r2
 8006d54:	d100      	bne.n	8006d58 <memset+0xa>
 8006d56:	4770      	bx	lr
 8006d58:	f803 1b01 	strb.w	r1, [r3], #1
 8006d5c:	e7f9      	b.n	8006d52 <memset+0x4>
	...

08006d60 <_free_r>:
 8006d60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d62:	2900      	cmp	r1, #0
 8006d64:	d048      	beq.n	8006df8 <_free_r+0x98>
 8006d66:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006d6a:	9001      	str	r0, [sp, #4]
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	f1a1 0404 	sub.w	r4, r1, #4
 8006d72:	bfb8      	it	lt
 8006d74:	18e4      	addlt	r4, r4, r3
 8006d76:	f000 f933 	bl	8006fe0 <__malloc_lock>
 8006d7a:	4a20      	ldr	r2, [pc, #128]	; (8006dfc <_free_r+0x9c>)
 8006d7c:	9801      	ldr	r0, [sp, #4]
 8006d7e:	6813      	ldr	r3, [r2, #0]
 8006d80:	4615      	mov	r5, r2
 8006d82:	b933      	cbnz	r3, 8006d92 <_free_r+0x32>
 8006d84:	6063      	str	r3, [r4, #4]
 8006d86:	6014      	str	r4, [r2, #0]
 8006d88:	b003      	add	sp, #12
 8006d8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006d8e:	f000 b92d 	b.w	8006fec <__malloc_unlock>
 8006d92:	42a3      	cmp	r3, r4
 8006d94:	d90b      	bls.n	8006dae <_free_r+0x4e>
 8006d96:	6821      	ldr	r1, [r4, #0]
 8006d98:	1862      	adds	r2, r4, r1
 8006d9a:	4293      	cmp	r3, r2
 8006d9c:	bf04      	itt	eq
 8006d9e:	681a      	ldreq	r2, [r3, #0]
 8006da0:	685b      	ldreq	r3, [r3, #4]
 8006da2:	6063      	str	r3, [r4, #4]
 8006da4:	bf04      	itt	eq
 8006da6:	1852      	addeq	r2, r2, r1
 8006da8:	6022      	streq	r2, [r4, #0]
 8006daa:	602c      	str	r4, [r5, #0]
 8006dac:	e7ec      	b.n	8006d88 <_free_r+0x28>
 8006dae:	461a      	mov	r2, r3
 8006db0:	685b      	ldr	r3, [r3, #4]
 8006db2:	b10b      	cbz	r3, 8006db8 <_free_r+0x58>
 8006db4:	42a3      	cmp	r3, r4
 8006db6:	d9fa      	bls.n	8006dae <_free_r+0x4e>
 8006db8:	6811      	ldr	r1, [r2, #0]
 8006dba:	1855      	adds	r5, r2, r1
 8006dbc:	42a5      	cmp	r5, r4
 8006dbe:	d10b      	bne.n	8006dd8 <_free_r+0x78>
 8006dc0:	6824      	ldr	r4, [r4, #0]
 8006dc2:	4421      	add	r1, r4
 8006dc4:	1854      	adds	r4, r2, r1
 8006dc6:	42a3      	cmp	r3, r4
 8006dc8:	6011      	str	r1, [r2, #0]
 8006dca:	d1dd      	bne.n	8006d88 <_free_r+0x28>
 8006dcc:	681c      	ldr	r4, [r3, #0]
 8006dce:	685b      	ldr	r3, [r3, #4]
 8006dd0:	6053      	str	r3, [r2, #4]
 8006dd2:	4421      	add	r1, r4
 8006dd4:	6011      	str	r1, [r2, #0]
 8006dd6:	e7d7      	b.n	8006d88 <_free_r+0x28>
 8006dd8:	d902      	bls.n	8006de0 <_free_r+0x80>
 8006dda:	230c      	movs	r3, #12
 8006ddc:	6003      	str	r3, [r0, #0]
 8006dde:	e7d3      	b.n	8006d88 <_free_r+0x28>
 8006de0:	6825      	ldr	r5, [r4, #0]
 8006de2:	1961      	adds	r1, r4, r5
 8006de4:	428b      	cmp	r3, r1
 8006de6:	bf04      	itt	eq
 8006de8:	6819      	ldreq	r1, [r3, #0]
 8006dea:	685b      	ldreq	r3, [r3, #4]
 8006dec:	6063      	str	r3, [r4, #4]
 8006dee:	bf04      	itt	eq
 8006df0:	1949      	addeq	r1, r1, r5
 8006df2:	6021      	streq	r1, [r4, #0]
 8006df4:	6054      	str	r4, [r2, #4]
 8006df6:	e7c7      	b.n	8006d88 <_free_r+0x28>
 8006df8:	b003      	add	sp, #12
 8006dfa:	bd30      	pop	{r4, r5, pc}
 8006dfc:	200003c8 	.word	0x200003c8

08006e00 <_malloc_r>:
 8006e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e02:	1ccd      	adds	r5, r1, #3
 8006e04:	f025 0503 	bic.w	r5, r5, #3
 8006e08:	3508      	adds	r5, #8
 8006e0a:	2d0c      	cmp	r5, #12
 8006e0c:	bf38      	it	cc
 8006e0e:	250c      	movcc	r5, #12
 8006e10:	2d00      	cmp	r5, #0
 8006e12:	4606      	mov	r6, r0
 8006e14:	db01      	blt.n	8006e1a <_malloc_r+0x1a>
 8006e16:	42a9      	cmp	r1, r5
 8006e18:	d903      	bls.n	8006e22 <_malloc_r+0x22>
 8006e1a:	230c      	movs	r3, #12
 8006e1c:	6033      	str	r3, [r6, #0]
 8006e1e:	2000      	movs	r0, #0
 8006e20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e22:	f000 f8dd 	bl	8006fe0 <__malloc_lock>
 8006e26:	4921      	ldr	r1, [pc, #132]	; (8006eac <_malloc_r+0xac>)
 8006e28:	680a      	ldr	r2, [r1, #0]
 8006e2a:	4614      	mov	r4, r2
 8006e2c:	b99c      	cbnz	r4, 8006e56 <_malloc_r+0x56>
 8006e2e:	4f20      	ldr	r7, [pc, #128]	; (8006eb0 <_malloc_r+0xb0>)
 8006e30:	683b      	ldr	r3, [r7, #0]
 8006e32:	b923      	cbnz	r3, 8006e3e <_malloc_r+0x3e>
 8006e34:	4621      	mov	r1, r4
 8006e36:	4630      	mov	r0, r6
 8006e38:	f000 f83c 	bl	8006eb4 <_sbrk_r>
 8006e3c:	6038      	str	r0, [r7, #0]
 8006e3e:	4629      	mov	r1, r5
 8006e40:	4630      	mov	r0, r6
 8006e42:	f000 f837 	bl	8006eb4 <_sbrk_r>
 8006e46:	1c43      	adds	r3, r0, #1
 8006e48:	d123      	bne.n	8006e92 <_malloc_r+0x92>
 8006e4a:	230c      	movs	r3, #12
 8006e4c:	6033      	str	r3, [r6, #0]
 8006e4e:	4630      	mov	r0, r6
 8006e50:	f000 f8cc 	bl	8006fec <__malloc_unlock>
 8006e54:	e7e3      	b.n	8006e1e <_malloc_r+0x1e>
 8006e56:	6823      	ldr	r3, [r4, #0]
 8006e58:	1b5b      	subs	r3, r3, r5
 8006e5a:	d417      	bmi.n	8006e8c <_malloc_r+0x8c>
 8006e5c:	2b0b      	cmp	r3, #11
 8006e5e:	d903      	bls.n	8006e68 <_malloc_r+0x68>
 8006e60:	6023      	str	r3, [r4, #0]
 8006e62:	441c      	add	r4, r3
 8006e64:	6025      	str	r5, [r4, #0]
 8006e66:	e004      	b.n	8006e72 <_malloc_r+0x72>
 8006e68:	6863      	ldr	r3, [r4, #4]
 8006e6a:	42a2      	cmp	r2, r4
 8006e6c:	bf0c      	ite	eq
 8006e6e:	600b      	streq	r3, [r1, #0]
 8006e70:	6053      	strne	r3, [r2, #4]
 8006e72:	4630      	mov	r0, r6
 8006e74:	f000 f8ba 	bl	8006fec <__malloc_unlock>
 8006e78:	f104 000b 	add.w	r0, r4, #11
 8006e7c:	1d23      	adds	r3, r4, #4
 8006e7e:	f020 0007 	bic.w	r0, r0, #7
 8006e82:	1ac2      	subs	r2, r0, r3
 8006e84:	d0cc      	beq.n	8006e20 <_malloc_r+0x20>
 8006e86:	1a1b      	subs	r3, r3, r0
 8006e88:	50a3      	str	r3, [r4, r2]
 8006e8a:	e7c9      	b.n	8006e20 <_malloc_r+0x20>
 8006e8c:	4622      	mov	r2, r4
 8006e8e:	6864      	ldr	r4, [r4, #4]
 8006e90:	e7cc      	b.n	8006e2c <_malloc_r+0x2c>
 8006e92:	1cc4      	adds	r4, r0, #3
 8006e94:	f024 0403 	bic.w	r4, r4, #3
 8006e98:	42a0      	cmp	r0, r4
 8006e9a:	d0e3      	beq.n	8006e64 <_malloc_r+0x64>
 8006e9c:	1a21      	subs	r1, r4, r0
 8006e9e:	4630      	mov	r0, r6
 8006ea0:	f000 f808 	bl	8006eb4 <_sbrk_r>
 8006ea4:	3001      	adds	r0, #1
 8006ea6:	d1dd      	bne.n	8006e64 <_malloc_r+0x64>
 8006ea8:	e7cf      	b.n	8006e4a <_malloc_r+0x4a>
 8006eaa:	bf00      	nop
 8006eac:	200003c8 	.word	0x200003c8
 8006eb0:	200003cc 	.word	0x200003cc

08006eb4 <_sbrk_r>:
 8006eb4:	b538      	push	{r3, r4, r5, lr}
 8006eb6:	4d06      	ldr	r5, [pc, #24]	; (8006ed0 <_sbrk_r+0x1c>)
 8006eb8:	2300      	movs	r3, #0
 8006eba:	4604      	mov	r4, r0
 8006ebc:	4608      	mov	r0, r1
 8006ebe:	602b      	str	r3, [r5, #0]
 8006ec0:	f7ff fd2c 	bl	800691c <_sbrk>
 8006ec4:	1c43      	adds	r3, r0, #1
 8006ec6:	d102      	bne.n	8006ece <_sbrk_r+0x1a>
 8006ec8:	682b      	ldr	r3, [r5, #0]
 8006eca:	b103      	cbz	r3, 8006ece <_sbrk_r+0x1a>
 8006ecc:	6023      	str	r3, [r4, #0]
 8006ece:	bd38      	pop	{r3, r4, r5, pc}
 8006ed0:	20000460 	.word	0x20000460

08006ed4 <__sread>:
 8006ed4:	b510      	push	{r4, lr}
 8006ed6:	460c      	mov	r4, r1
 8006ed8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006edc:	f000 f88c 	bl	8006ff8 <_read_r>
 8006ee0:	2800      	cmp	r0, #0
 8006ee2:	bfab      	itete	ge
 8006ee4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006ee6:	89a3      	ldrhlt	r3, [r4, #12]
 8006ee8:	181b      	addge	r3, r3, r0
 8006eea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006eee:	bfac      	ite	ge
 8006ef0:	6563      	strge	r3, [r4, #84]	; 0x54
 8006ef2:	81a3      	strhlt	r3, [r4, #12]
 8006ef4:	bd10      	pop	{r4, pc}

08006ef6 <__swrite>:
 8006ef6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006efa:	461f      	mov	r7, r3
 8006efc:	898b      	ldrh	r3, [r1, #12]
 8006efe:	05db      	lsls	r3, r3, #23
 8006f00:	4605      	mov	r5, r0
 8006f02:	460c      	mov	r4, r1
 8006f04:	4616      	mov	r6, r2
 8006f06:	d505      	bpl.n	8006f14 <__swrite+0x1e>
 8006f08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006f0c:	2302      	movs	r3, #2
 8006f0e:	2200      	movs	r2, #0
 8006f10:	f000 f846 	bl	8006fa0 <_lseek_r>
 8006f14:	89a3      	ldrh	r3, [r4, #12]
 8006f16:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006f1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006f1e:	81a3      	strh	r3, [r4, #12]
 8006f20:	4632      	mov	r2, r6
 8006f22:	463b      	mov	r3, r7
 8006f24:	4628      	mov	r0, r5
 8006f26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006f2a:	f000 b817 	b.w	8006f5c <_write_r>

08006f2e <__sseek>:
 8006f2e:	b510      	push	{r4, lr}
 8006f30:	460c      	mov	r4, r1
 8006f32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006f36:	f000 f833 	bl	8006fa0 <_lseek_r>
 8006f3a:	1c43      	adds	r3, r0, #1
 8006f3c:	89a3      	ldrh	r3, [r4, #12]
 8006f3e:	bf15      	itete	ne
 8006f40:	6560      	strne	r0, [r4, #84]	; 0x54
 8006f42:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006f46:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006f4a:	81a3      	strheq	r3, [r4, #12]
 8006f4c:	bf18      	it	ne
 8006f4e:	81a3      	strhne	r3, [r4, #12]
 8006f50:	bd10      	pop	{r4, pc}

08006f52 <__sclose>:
 8006f52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006f56:	f000 b813 	b.w	8006f80 <_close_r>
	...

08006f5c <_write_r>:
 8006f5c:	b538      	push	{r3, r4, r5, lr}
 8006f5e:	4d07      	ldr	r5, [pc, #28]	; (8006f7c <_write_r+0x20>)
 8006f60:	4604      	mov	r4, r0
 8006f62:	4608      	mov	r0, r1
 8006f64:	4611      	mov	r1, r2
 8006f66:	2200      	movs	r2, #0
 8006f68:	602a      	str	r2, [r5, #0]
 8006f6a:	461a      	mov	r2, r3
 8006f6c:	f7ff fca0 	bl	80068b0 <_write>
 8006f70:	1c43      	adds	r3, r0, #1
 8006f72:	d102      	bne.n	8006f7a <_write_r+0x1e>
 8006f74:	682b      	ldr	r3, [r5, #0]
 8006f76:	b103      	cbz	r3, 8006f7a <_write_r+0x1e>
 8006f78:	6023      	str	r3, [r4, #0]
 8006f7a:	bd38      	pop	{r3, r4, r5, pc}
 8006f7c:	20000460 	.word	0x20000460

08006f80 <_close_r>:
 8006f80:	b538      	push	{r3, r4, r5, lr}
 8006f82:	4d06      	ldr	r5, [pc, #24]	; (8006f9c <_close_r+0x1c>)
 8006f84:	2300      	movs	r3, #0
 8006f86:	4604      	mov	r4, r0
 8006f88:	4608      	mov	r0, r1
 8006f8a:	602b      	str	r3, [r5, #0]
 8006f8c:	f7ff fc86 	bl	800689c <_close>
 8006f90:	1c43      	adds	r3, r0, #1
 8006f92:	d102      	bne.n	8006f9a <_close_r+0x1a>
 8006f94:	682b      	ldr	r3, [r5, #0]
 8006f96:	b103      	cbz	r3, 8006f9a <_close_r+0x1a>
 8006f98:	6023      	str	r3, [r4, #0]
 8006f9a:	bd38      	pop	{r3, r4, r5, pc}
 8006f9c:	20000460 	.word	0x20000460

08006fa0 <_lseek_r>:
 8006fa0:	b538      	push	{r3, r4, r5, lr}
 8006fa2:	4d07      	ldr	r5, [pc, #28]	; (8006fc0 <_lseek_r+0x20>)
 8006fa4:	4604      	mov	r4, r0
 8006fa6:	4608      	mov	r0, r1
 8006fa8:	4611      	mov	r1, r2
 8006faa:	2200      	movs	r2, #0
 8006fac:	602a      	str	r2, [r5, #0]
 8006fae:	461a      	mov	r2, r3
 8006fb0:	f7ff fc78 	bl	80068a4 <_lseek>
 8006fb4:	1c43      	adds	r3, r0, #1
 8006fb6:	d102      	bne.n	8006fbe <_lseek_r+0x1e>
 8006fb8:	682b      	ldr	r3, [r5, #0]
 8006fba:	b103      	cbz	r3, 8006fbe <_lseek_r+0x1e>
 8006fbc:	6023      	str	r3, [r4, #0]
 8006fbe:	bd38      	pop	{r3, r4, r5, pc}
 8006fc0:	20000460 	.word	0x20000460

08006fc4 <memcpy>:
 8006fc4:	440a      	add	r2, r1
 8006fc6:	4291      	cmp	r1, r2
 8006fc8:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8006fcc:	d100      	bne.n	8006fd0 <memcpy+0xc>
 8006fce:	4770      	bx	lr
 8006fd0:	b510      	push	{r4, lr}
 8006fd2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006fd6:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006fda:	4291      	cmp	r1, r2
 8006fdc:	d1f9      	bne.n	8006fd2 <memcpy+0xe>
 8006fde:	bd10      	pop	{r4, pc}

08006fe0 <__malloc_lock>:
 8006fe0:	4801      	ldr	r0, [pc, #4]	; (8006fe8 <__malloc_lock+0x8>)
 8006fe2:	f7ff beb2 	b.w	8006d4a <__retarget_lock_acquire_recursive>
 8006fe6:	bf00      	nop
 8006fe8:	20000458 	.word	0x20000458

08006fec <__malloc_unlock>:
 8006fec:	4801      	ldr	r0, [pc, #4]	; (8006ff4 <__malloc_unlock+0x8>)
 8006fee:	f7ff bead 	b.w	8006d4c <__retarget_lock_release_recursive>
 8006ff2:	bf00      	nop
 8006ff4:	20000458 	.word	0x20000458

08006ff8 <_read_r>:
 8006ff8:	b538      	push	{r3, r4, r5, lr}
 8006ffa:	4d07      	ldr	r5, [pc, #28]	; (8007018 <_read_r+0x20>)
 8006ffc:	4604      	mov	r4, r0
 8006ffe:	4608      	mov	r0, r1
 8007000:	4611      	mov	r1, r2
 8007002:	2200      	movs	r2, #0
 8007004:	602a      	str	r2, [r5, #0]
 8007006:	461a      	mov	r2, r3
 8007008:	f7ff fc4e 	bl	80068a8 <_read>
 800700c:	1c43      	adds	r3, r0, #1
 800700e:	d102      	bne.n	8007016 <_read_r+0x1e>
 8007010:	682b      	ldr	r3, [r5, #0]
 8007012:	b103      	cbz	r3, 8007016 <_read_r+0x1e>
 8007014:	6023      	str	r3, [r4, #0]
 8007016:	bd38      	pop	{r3, r4, r5, pc}
 8007018:	20000460 	.word	0x20000460

0800701c <malloc>:
 800701c:	4b02      	ldr	r3, [pc, #8]	; (8007028 <malloc+0xc>)
 800701e:	4601      	mov	r1, r0
 8007020:	6818      	ldr	r0, [r3, #0]
 8007022:	f7ff beed 	b.w	8006e00 <_malloc_r>
 8007026:	bf00      	nop
 8007028:	20000028 	.word	0x20000028

0800702c <free>:
 800702c:	4b02      	ldr	r3, [pc, #8]	; (8007038 <free+0xc>)
 800702e:	4601      	mov	r1, r0
 8007030:	6818      	ldr	r0, [r3, #0]
 8007032:	f7ff be95 	b.w	8006d60 <_free_r>
 8007036:	bf00      	nop
 8007038:	20000028 	.word	0x20000028

0800703c <out_func>:

static void out_func(char character, void *arg)
{
	print_buffer_t *buf = arg;

	buf->buffer[buf->position++] = character;
 800703c:	f8b1 30c8 	ldrh.w	r3, [r1, #200]	; 0xc8
 8007040:	1c5a      	adds	r2, r3, #1
 8007042:	b292      	uxth	r2, r2
	if (buf->position == BUF_SIZE)
 8007044:	2ac8      	cmp	r2, #200	; 0xc8
	buf->buffer[buf->position++] = character;
 8007046:	f8a1 20c8 	strh.w	r2, [r1, #200]	; 0xc8
 800704a:	54c8      	strb	r0, [r1, r3]
	if (buf->position == BUF_SIZE)
 800704c:	d000      	beq.n	8007050 <out_func+0x14>
 800704e:	4770      	bx	lr
{
 8007050:	b510      	push	{r4, lr}
	{
		_write(0, buf->buffer, BUF_SIZE);
 8007052:	2000      	movs	r0, #0
 8007054:	460c      	mov	r4, r1
 8007056:	f7ff fc2b 	bl	80068b0 <_write>
		buf->position = 0;
 800705a:	2300      	movs	r3, #0
 800705c:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
	}
}
 8007060:	bd10      	pop	{r4, pc}
 8007062:	bf00      	nop

08007064 <__wrap_puts>:


int __wrap_puts(const char *str)
{
 8007064:	b500      	push	{lr}
 8007066:	b083      	sub	sp, #12
 8007068:	9001      	str	r0, [sp, #4]
	size_t len = strlen(str);
 800706a:	f7fe fc49 	bl	8005900 <strlen>

	_write(0, str, len);
 800706e:	9901      	ldr	r1, [sp, #4]
	size_t len = strlen(str);
 8007070:	4602      	mov	r2, r0
	_write(0, str, len);
 8007072:	2000      	movs	r0, #0
 8007074:	f7ff fc1c 	bl	80068b0 <_write>
	_write(0, "\n", 1);
 8007078:	4904      	ldr	r1, [pc, #16]	; (800708c <__wrap_puts+0x28>)
 800707a:	2201      	movs	r2, #1
 800707c:	2000      	movs	r0, #0
 800707e:	f7ff fc17 	bl	80068b0 <_write>
	return 0;
}
 8007082:	2000      	movs	r0, #0
 8007084:	b003      	add	sp, #12
 8007086:	f85d fb04 	ldr.w	pc, [sp], #4
 800708a:	bf00      	nop
 800708c:	0800b598 	.word	0x0800b598

08007090 <__wrap_printf>:
	return 0;
}


int __wrap_printf(const char *format, ...)
{
 8007090:	b40f      	push	{r0, r1, r2, r3}
 8007092:	b530      	push	{r4, r5, lr}
 8007094:	b0b5      	sub	sp, #212	; 0xd4
 8007096:	ac38      	add	r4, sp, #224	; 0xe0
	print_buffer_t buf = {
 8007098:	490e      	ldr	r1, [pc, #56]	; (80070d4 <__wrap_printf+0x44>)
{
 800709a:	f854 5b04 	ldr.w	r5, [r4], #4
	print_buffer_t buf = {
 800709e:	22ca      	movs	r2, #202	; 0xca
 80070a0:	a801      	add	r0, sp, #4
 80070a2:	f7ff ff8f 	bl	8006fc4 <memcpy>
		.buffer   = {0}
	};
	va_list        va;

	va_start(va, format);
	int ret = fctvprintf(out_func, &buf, format, va);
 80070a6:	462a      	mov	r2, r5
 80070a8:	4623      	mov	r3, r4
 80070aa:	480b      	ldr	r0, [pc, #44]	; (80070d8 <__wrap_printf+0x48>)
	va_start(va, format);
 80070ac:	9400      	str	r4, [sp, #0]
	int ret = fctvprintf(out_func, &buf, format, va);
 80070ae:	a901      	add	r1, sp, #4
 80070b0:	f000 fd54 	bl	8007b5c <fctvprintf>
	if (buf.position != 0)
 80070b4:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
	int ret = fctvprintf(out_func, &buf, format, va);
 80070b8:	4604      	mov	r4, r0
	if (buf.position != 0)
 80070ba:	b92a      	cbnz	r2, 80070c8 <__wrap_printf+0x38>
	}

	va_end(va);

	return ret;
}
 80070bc:	4620      	mov	r0, r4
 80070be:	b035      	add	sp, #212	; 0xd4
 80070c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80070c4:	b004      	add	sp, #16
 80070c6:	4770      	bx	lr
		_write(0, buf.buffer, buf.position);
 80070c8:	a901      	add	r1, sp, #4
 80070ca:	2000      	movs	r0, #0
 80070cc:	f7ff fbf0 	bl	80068b0 <_write>
	return ret;
 80070d0:	e7f4      	b.n	80070bc <__wrap_printf+0x2c>
 80070d2:	bf00      	nop
 80070d4:	0800a360 	.word	0x0800a360
 80070d8:	0800703d 	.word	0x0800703d

080070dc <__wrap_vsnprintf>:
}


int __wrap_vsnprintf(char *buffer, size_t count, const char *format, va_list va)
{
	return vsnprintf_(buffer, count, format, va);
 80070dc:	f000 bd2e 	b.w	8007b3c <vsnprintf_>

080070e0 <_out_buffer>:


// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
{
  if (idx < maxlen) {
 80070e0:	429a      	cmp	r2, r3
    ((char*)buffer)[idx] = character;
 80070e2:	bf38      	it	cc
 80070e4:	5488      	strbcc	r0, [r1, r2]
  }
}
 80070e6:	4770      	bx	lr

080070e8 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
 80070e8:	4770      	bx	lr
 80070ea:	bf00      	nop

080070ec <_ntoa_format>:
}


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
 80070ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070f0:	b083      	sub	sp, #12
 80070f2:	4617      	mov	r7, r2
 80070f4:	f8dd c048 	ldr.w	ip, [sp, #72]	; 0x48
 80070f8:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
 80070fc:	f01c 0202 	ands.w	r2, ip, #2
{
 8007100:	e9dd 840c 	ldrd	r8, r4, [sp, #48]	; 0x30
 8007104:	e9dd e610 	ldrd	lr, r6, [sp, #64]	; 0x40
 8007108:	4605      	mov	r5, r0
 800710a:	4689      	mov	r9, r1
  if (!(flags & FLAGS_LEFT)) {
 800710c:	9200      	str	r2, [sp, #0]
 800710e:	d12a      	bne.n	8007166 <_ntoa_format+0x7a>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8007110:	2e00      	cmp	r6, #0
 8007112:	f040 80ae 	bne.w	8007272 <_ntoa_format+0x186>
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007116:	4574      	cmp	r4, lr
 8007118:	f00c 0001 	and.w	r0, ip, #1
 800711c:	f080 811a 	bcs.w	8007354 <_ntoa_format+0x268>
 8007120:	2c1f      	cmp	r4, #31
 8007122:	bf88      	it	hi
 8007124:	2420      	movhi	r4, #32
 8007126:	f200 8115 	bhi.w	8007354 <_ntoa_format+0x268>
 800712a:	1e62      	subs	r2, r4, #1
 800712c:	4442      	add	r2, r8
      buf[len++] = '0';
 800712e:	f04f 0b30 	mov.w	fp, #48	; 0x30
 8007132:	e001      	b.n	8007138 <_ntoa_format+0x4c>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007134:	2c20      	cmp	r4, #32
 8007136:	d004      	beq.n	8007142 <_ntoa_format+0x56>
      buf[len++] = '0';
 8007138:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800713a:	45a6      	cmp	lr, r4
      buf[len++] = '0';
 800713c:	f802 bf01 	strb.w	fp, [r2, #1]!
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007140:	d8f8      	bhi.n	8007134 <_ntoa_format+0x48>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007142:	b180      	cbz	r0, 8007166 <_ntoa_format+0x7a>
 8007144:	42a6      	cmp	r6, r4
 8007146:	d90e      	bls.n	8007166 <_ntoa_format+0x7a>
 8007148:	2c20      	cmp	r4, #32
 800714a:	f000 80a3 	beq.w	8007294 <_ntoa_format+0x1a8>
 800714e:	1e62      	subs	r2, r4, #1
 8007150:	4442      	add	r2, r8
      buf[len++] = '0';
 8007152:	2030      	movs	r0, #48	; 0x30
 8007154:	e002      	b.n	800715c <_ntoa_format+0x70>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007156:	2c20      	cmp	r4, #32
 8007158:	f000 809c 	beq.w	8007294 <_ntoa_format+0x1a8>
      buf[len++] = '0';
 800715c:	3401      	adds	r4, #1
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800715e:	42b4      	cmp	r4, r6
      buf[len++] = '0';
 8007160:	f802 0f01 	strb.w	r0, [r2, #1]!
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007164:	d1f7      	bne.n	8007156 <_ntoa_format+0x6a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
 8007166:	f01c 0f10 	tst.w	ip, #16
 800716a:	d033      	beq.n	80071d4 <_ntoa_format+0xe8>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 800716c:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8007170:	f040 809c 	bne.w	80072ac <_ntoa_format+0x1c0>
 8007174:	2c00      	cmp	r4, #0
 8007176:	f040 8095 	bne.w	80072a4 <_ntoa_format+0x1b8>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800717a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800717c:	2a10      	cmp	r2, #16
 800717e:	f000 80ce 	beq.w	800731e <_ntoa_format+0x232>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007182:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007184:	2a02      	cmp	r2, #2
 8007186:	f000 80e0 	beq.w	800734a <_ntoa_format+0x25e>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
 800718a:	2230      	movs	r2, #48	; 0x30
 800718c:	f888 2000 	strb.w	r2, [r8]
 8007190:	2401      	movs	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
    if (negative) {
 8007192:	f1ba 0f00 	cmp.w	sl, #0
 8007196:	f000 8096 	beq.w	80072c6 <_ntoa_format+0x1da>
      buf[len++] = '-';
 800719a:	222d      	movs	r2, #45	; 0x2d
 800719c:	f808 2004 	strb.w	r2, [r8, r4]
 80071a0:	3401      	adds	r4, #1
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80071a2:	f01c 0f03 	tst.w	ip, #3
 80071a6:	d101      	bne.n	80071ac <_ntoa_format+0xc0>
    for (size_t i = len; i < width; i++) {
 80071a8:	42b4      	cmp	r4, r6
 80071aa:	d31b      	bcc.n	80071e4 <_ntoa_format+0xf8>
 80071ac:	46ba      	mov	sl, r7
 80071ae:	e02f      	b.n	8007210 <_ntoa_format+0x124>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80071b0:	f01c 0f20 	tst.w	ip, #32
 80071b4:	f040 80bb 	bne.w	800732e <_ntoa_format+0x242>
 80071b8:	2c20      	cmp	r4, #32
 80071ba:	d00d      	beq.n	80071d8 <_ntoa_format+0xec>
 80071bc:	eb08 0004 	add.w	r0, r8, r4
 80071c0:	3401      	adds	r4, #1
      buf[len++] = 'x';
 80071c2:	2278      	movs	r2, #120	; 0x78
 80071c4:	7002      	strb	r2, [r0, #0]
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
 80071c6:	2c20      	cmp	r4, #32
 80071c8:	d006      	beq.n	80071d8 <_ntoa_format+0xec>
 80071ca:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = '0';
 80071ce:	2030      	movs	r0, #48	; 0x30
 80071d0:	3401      	adds	r4, #1
 80071d2:	7010      	strb	r0, [r2, #0]
  if (len < PRINTF_NTOA_BUFFER_SIZE) {
 80071d4:	2c20      	cmp	r4, #32
 80071d6:	d1dc      	bne.n	8007192 <_ntoa_format+0xa6>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80071d8:	f01c 0f03 	tst.w	ip, #3
 80071dc:	d116      	bne.n	800720c <_ntoa_format+0x120>
 80071de:	2420      	movs	r4, #32
    for (size_t i = len; i < width; i++) {
 80071e0:	42a6      	cmp	r6, r4
 80071e2:	d979      	bls.n	80072d8 <_ntoa_format+0x1ec>
 80071e4:	eb07 0a06 	add.w	sl, r7, r6
 80071e8:	ebaa 0a04 	sub.w	sl, sl, r4
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80071ec:	9401      	str	r4, [sp, #4]
 80071ee:	46bb      	mov	fp, r7
 80071f0:	461c      	mov	r4, r3
      out(' ', buffer, idx++, maxlen);
 80071f2:	465a      	mov	r2, fp
 80071f4:	4623      	mov	r3, r4
 80071f6:	f10b 0b01 	add.w	fp, fp, #1
 80071fa:	4649      	mov	r1, r9
 80071fc:	2020      	movs	r0, #32
 80071fe:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
 8007200:	45d3      	cmp	fp, sl
 8007202:	d1f6      	bne.n	80071f2 <_ntoa_format+0x106>
  while (len) {
 8007204:	4623      	mov	r3, r4
 8007206:	9c01      	ldr	r4, [sp, #4]
 8007208:	b914      	cbnz	r4, 8007210 <_ntoa_format+0x124>
 800720a:	e012      	b.n	8007232 <_ntoa_format+0x146>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 800720c:	46ba      	mov	sl, r7
 800720e:	2420      	movs	r4, #32
 8007210:	44a2      	add	sl, r4
 8007212:	9611      	str	r6, [sp, #68]	; 0x44
 8007214:	4444      	add	r4, r8
 8007216:	eb08 0b0a 	add.w	fp, r8, sl
 800721a:	461e      	mov	r6, r3
 800721c:	ebab 0204 	sub.w	r2, fp, r4
    out(buf[--len], buffer, idx++, maxlen);
 8007220:	f814 0d01 	ldrb.w	r0, [r4, #-1]!
 8007224:	4633      	mov	r3, r6
 8007226:	4649      	mov	r1, r9
 8007228:	47a8      	blx	r5
  while (len) {
 800722a:	4544      	cmp	r4, r8
 800722c:	d1f6      	bne.n	800721c <_ntoa_format+0x130>
 800722e:	4633      	mov	r3, r6
 8007230:	9e11      	ldr	r6, [sp, #68]	; 0x44
  if (flags & FLAGS_LEFT) {
 8007232:	9a00      	ldr	r2, [sp, #0]
 8007234:	b1ca      	cbz	r2, 800726a <_ntoa_format+0x17e>
    while (idx - start_idx < width) {
 8007236:	ebaa 0407 	sub.w	r4, sl, r7
 800723a:	42a6      	cmp	r6, r4
 800723c:	d915      	bls.n	800726a <_ntoa_format+0x17e>
 800723e:	4698      	mov	r8, r3
      out(' ', buffer, idx++, maxlen);
 8007240:	193a      	adds	r2, r7, r4
 8007242:	4643      	mov	r3, r8
 8007244:	4649      	mov	r1, r9
 8007246:	3401      	adds	r4, #1
 8007248:	2020      	movs	r0, #32
 800724a:	47a8      	blx	r5
    while (idx - start_idx < width) {
 800724c:	42a6      	cmp	r6, r4
 800724e:	d8f7      	bhi.n	8007240 <_ntoa_format+0x154>
 8007250:	1e7b      	subs	r3, r7, #1
 8007252:	4433      	add	r3, r6
 8007254:	f1c7 0701 	rsb	r7, r7, #1
 8007258:	eba3 030a 	sub.w	r3, r3, sl
 800725c:	4457      	add	r7, sl
 800725e:	42b7      	cmp	r7, r6
 8007260:	bf88      	it	hi
 8007262:	2300      	movhi	r3, #0
 8007264:	f10a 0a01 	add.w	sl, sl, #1
 8007268:	449a      	add	sl, r3
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
 800726a:	4650      	mov	r0, sl
 800726c:	b003      	add	sp, #12
 800726e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8007272:	f01c 0001 	ands.w	r0, ip, #1
 8007276:	d033      	beq.n	80072e0 <_ntoa_format+0x1f4>
 8007278:	f1ba 0f00 	cmp.w	sl, #0
 800727c:	d13d      	bne.n	80072fa <_ntoa_format+0x20e>
 800727e:	f01c 0f0c 	tst.w	ip, #12
 8007282:	d13a      	bne.n	80072fa <_ntoa_format+0x20e>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007284:	4574      	cmp	r4, lr
 8007286:	f4bf af5d 	bcs.w	8007144 <_ntoa_format+0x58>
 800728a:	2c1f      	cmp	r4, #31
 800728c:	f67f af4d 	bls.w	800712a <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007290:	2e20      	cmp	r6, #32
 8007292:	d92b      	bls.n	80072ec <_ntoa_format+0x200>
  if (flags & FLAGS_HASH) {
 8007294:	f01c 0f10 	tst.w	ip, #16
 8007298:	d09e      	beq.n	80071d8 <_ntoa_format+0xec>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 800729a:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 800729e:	f04f 0420 	mov.w	r4, #32
 80072a2:	d103      	bne.n	80072ac <_ntoa_format+0x1c0>
 80072a4:	45a6      	cmp	lr, r4
 80072a6:	d02a      	beq.n	80072fe <_ntoa_format+0x212>
 80072a8:	42b4      	cmp	r4, r6
 80072aa:	d028      	beq.n	80072fe <_ntoa_format+0x212>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80072ae:	2a10      	cmp	r2, #16
 80072b0:	f43f af7e 	beq.w	80071b0 <_ntoa_format+0xc4>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80072b6:	2a02      	cmp	r2, #2
 80072b8:	d185      	bne.n	80071c6 <_ntoa_format+0xda>
 80072ba:	2c20      	cmp	r4, #32
 80072bc:	d08c      	beq.n	80071d8 <_ntoa_format+0xec>
 80072be:	eb08 0204 	add.w	r2, r8, r4
 80072c2:	3401      	adds	r4, #1
 80072c4:	e054      	b.n	8007370 <_ntoa_format+0x284>
    else if (flags & FLAGS_PLUS) {
 80072c6:	f01c 0f04 	tst.w	ip, #4
 80072ca:	d111      	bne.n	80072f0 <_ntoa_format+0x204>
    else if (flags & FLAGS_SPACE) {
 80072cc:	f01c 0f08 	tst.w	ip, #8
 80072d0:	d120      	bne.n	8007314 <_ntoa_format+0x228>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80072d2:	f01c 0f03 	tst.w	ip, #3
 80072d6:	d083      	beq.n	80071e0 <_ntoa_format+0xf4>
    for (size_t i = len; i < width; i++) {
 80072d8:	46ba      	mov	sl, r7
  while (len) {
 80072da:	2c00      	cmp	r4, #0
 80072dc:	d198      	bne.n	8007210 <_ntoa_format+0x124>
 80072de:	e7a8      	b.n	8007232 <_ntoa_format+0x146>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072e0:	4574      	cmp	r4, lr
 80072e2:	f4bf af40 	bcs.w	8007166 <_ntoa_format+0x7a>
 80072e6:	2c1f      	cmp	r4, #31
 80072e8:	f67f af1f 	bls.w	800712a <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072ec:	2420      	movs	r4, #32
 80072ee:	e73a      	b.n	8007166 <_ntoa_format+0x7a>
      buf[len++] = '+';  // ignore the space if the '+' exists
 80072f0:	222b      	movs	r2, #43	; 0x2b
 80072f2:	f808 2004 	strb.w	r2, [r8, r4]
 80072f6:	3401      	adds	r4, #1
 80072f8:	e753      	b.n	80071a2 <_ntoa_format+0xb6>
      width--;
 80072fa:	3e01      	subs	r6, #1
 80072fc:	e7c2      	b.n	8007284 <_ntoa_format+0x198>
      if (len && (base == 16U)) {
 80072fe:	1e62      	subs	r2, r4, #1
 8007300:	f43f af3b 	beq.w	800717a <_ntoa_format+0x8e>
 8007304:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007306:	2910      	cmp	r1, #16
 8007308:	d028      	beq.n	800735c <_ntoa_format+0x270>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800730a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800730c:	2902      	cmp	r1, #2
 800730e:	d02e      	beq.n	800736e <_ntoa_format+0x282>
 8007310:	4614      	mov	r4, r2
 8007312:	e75a      	b.n	80071ca <_ntoa_format+0xde>
      buf[len++] = ' ';
 8007314:	2220      	movs	r2, #32
 8007316:	f808 2004 	strb.w	r2, [r8, r4]
 800731a:	3401      	adds	r4, #1
 800731c:	e741      	b.n	80071a2 <_ntoa_format+0xb6>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800731e:	f01c 0f20 	tst.w	ip, #32
 8007322:	d10d      	bne.n	8007340 <_ntoa_format+0x254>
      buf[len++] = 'x';
 8007324:	2278      	movs	r2, #120	; 0x78
 8007326:	f888 2000 	strb.w	r2, [r8]
 800732a:	2401      	movs	r4, #1
 800732c:	e74d      	b.n	80071ca <_ntoa_format+0xde>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800732e:	2c20      	cmp	r4, #32
 8007330:	f43f af52 	beq.w	80071d8 <_ntoa_format+0xec>
 8007334:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = 'X';
 8007338:	2058      	movs	r0, #88	; 0x58
 800733a:	3401      	adds	r4, #1
 800733c:	7010      	strb	r0, [r2, #0]
 800733e:	e742      	b.n	80071c6 <_ntoa_format+0xda>
 8007340:	2258      	movs	r2, #88	; 0x58
 8007342:	f888 2000 	strb.w	r2, [r8]
 8007346:	2401      	movs	r4, #1
 8007348:	e73f      	b.n	80071ca <_ntoa_format+0xde>
      buf[len++] = 'b';
 800734a:	2262      	movs	r2, #98	; 0x62
 800734c:	f888 2000 	strb.w	r2, [r8]
 8007350:	2401      	movs	r4, #1
 8007352:	e73a      	b.n	80071ca <_ntoa_format+0xde>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007354:	2800      	cmp	r0, #0
 8007356:	bf08      	it	eq
 8007358:	2600      	moveq	r6, #0
 800735a:	e704      	b.n	8007166 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800735c:	f01c 0f20 	tst.w	ip, #32
        len--;
 8007360:	f1a4 0402 	sub.w	r4, r4, #2
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007364:	d1e6      	bne.n	8007334 <_ntoa_format+0x248>
 8007366:	eb08 0004 	add.w	r0, r8, r4
 800736a:	4614      	mov	r4, r2
 800736c:	e729      	b.n	80071c2 <_ntoa_format+0xd6>
 800736e:	4442      	add	r2, r8
      buf[len++] = 'b';
 8007370:	2062      	movs	r0, #98	; 0x62
 8007372:	7010      	strb	r0, [r2, #0]
 8007374:	e727      	b.n	80071c6 <_ntoa_format+0xda>
 8007376:	bf00      	nop

08007378 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8007378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800737c:	b093      	sub	sp, #76	; 0x4c
 800737e:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8007380:	f89d 4074 	ldrb.w	r4, [sp, #116]	; 0x74
 8007384:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8007386:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 800738a:	9409      	str	r4, [sp, #36]	; 0x24
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 800738c:	b92d      	cbnz	r5, 800739a <_ntoa_long+0x22>
    flags &= ~FLAGS_HASH;
 800738e:	f02a 0410 	bic.w	r4, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 8007392:	f41a 6f80 	tst.w	sl, #1024	; 0x400
    flags &= ~FLAGS_HASH;
 8007396:	46a2      	mov	sl, r4
  if (!(flags & FLAGS_PRECISION) || value) {
 8007398:	d134      	bne.n	8007404 <_ntoa_long+0x8c>
 800739a:	f01a 0f20 	tst.w	sl, #32
 800739e:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80073a2:	bf14      	ite	ne
 80073a4:	f04f 0937 	movne.w	r9, #55	; 0x37
 80073a8:	f04f 0957 	moveq.w	r9, #87	; 0x57
 80073ac:	46d8      	mov	r8, fp
 80073ae:	2700      	movs	r7, #0
 80073b0:	e002      	b.n	80073b8 <_ntoa_long+0x40>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80073b2:	2f20      	cmp	r7, #32
 80073b4:	d015      	beq.n	80073e2 <_ntoa_long+0x6a>
      value /= base;
 80073b6:	4675      	mov	r5, lr
      const char digit = (char)(value % base);
 80073b8:	fbb5 fef6 	udiv	lr, r5, r6
 80073bc:	fb06 5c1e 	mls	ip, r6, lr, r5
 80073c0:	fa5f f48c 	uxtb.w	r4, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80073c4:	f1bc 0f09 	cmp.w	ip, #9
 80073c8:	f104 0c30 	add.w	ip, r4, #48	; 0x30
 80073cc:	bf8a      	itet	hi
 80073ce:	444c      	addhi	r4, r9
 80073d0:	fa5f f48c 	uxtbls.w	r4, ip
 80073d4:	b2e4      	uxtbhi	r4, r4
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80073d6:	42b5      	cmp	r5, r6
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80073d8:	f808 4b01 	strb.w	r4, [r8], #1
 80073dc:	f107 0701 	add.w	r7, r7, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 80073e0:	d2e7      	bcs.n	80073b2 <_ntoa_long+0x3a>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 80073e2:	9c20      	ldr	r4, [sp, #128]	; 0x80
 80073e4:	9405      	str	r4, [sp, #20]
 80073e6:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80073e8:	f8cd a018 	str.w	sl, [sp, #24]
 80073ec:	e9cd 6403 	strd	r6, r4, [sp, #12]
 80073f0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80073f2:	f8cd b000 	str.w	fp, [sp]
 80073f6:	e9cd 7401 	strd	r7, r4, [sp, #4]
 80073fa:	f7ff fe77 	bl	80070ec <_ntoa_format>
}
 80073fe:	b013      	add	sp, #76	; 0x4c
 8007400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  size_t len = 0U;
 8007404:	462f      	mov	r7, r5
 8007406:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 800740a:	e7ea      	b.n	80073e2 <_ntoa_long+0x6a>

0800740c <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 800740c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007410:	ed2d 8b04 	vpush	{d8-d9}
 8007414:	b093      	sub	sp, #76	; 0x4c
 8007416:	e9dd 4520 	ldrd	r4, r5, [sp, #128]	; 0x80
 800741a:	469b      	mov	fp, r3
 800741c:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 8007420:	9308      	str	r3, [sp, #32]
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 8007422:	ea54 0305 	orrs.w	r3, r4, r5
{
 8007426:	e9dd 8924 	ldrd	r8, r9, [sp, #144]	; 0x90
 800742a:	ee08 0a10 	vmov	s16, r0
 800742e:	ee08 1a90 	vmov	s17, r1
 8007432:	ee09 2a10 	vmov	s18, r2
  if (!value) {
 8007436:	d106      	bne.n	8007446 <_ntoa_long_long+0x3a>
    flags &= ~FLAGS_HASH;
 8007438:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 800743a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    flags &= ~FLAGS_HASH;
 800743c:	f023 0310 	bic.w	r3, r3, #16
 8007440:	9328      	str	r3, [sp, #160]	; 0xa0
  if (!(flags & FLAGS_PRECISION) || value) {
 8007442:	0553      	lsls	r3, r2, #21
 8007444:	d440      	bmi.n	80074c8 <_ntoa_long_long+0xbc>
 8007446:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8007448:	f013 0f20 	tst.w	r3, #32
 800744c:	ab0a      	add	r3, sp, #40	; 0x28
 800744e:	9309      	str	r3, [sp, #36]	; 0x24
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007450:	bf14      	ite	ne
 8007452:	f04f 0a37 	movne.w	sl, #55	; 0x37
 8007456:	f04f 0a57 	moveq.w	sl, #87	; 0x57
 800745a:	461f      	mov	r7, r3
 800745c:	2600      	movs	r6, #0
 800745e:	e003      	b.n	8007468 <_ntoa_long_long+0x5c>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007460:	2e20      	cmp	r6, #32
 8007462:	d017      	beq.n	8007494 <_ntoa_long_long+0x88>
      value /= base;
 8007464:	4604      	mov	r4, r0
 8007466:	460d      	mov	r5, r1
      const char digit = (char)(value % base);
 8007468:	4642      	mov	r2, r8
 800746a:	464b      	mov	r3, r9
 800746c:	4620      	mov	r0, r4
 800746e:	4629      	mov	r1, r5
 8007470:	f7fe fa4e 	bl	8005910 <__aeabi_uldivmod>
 8007474:	b2d2      	uxtb	r2, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007476:	2a09      	cmp	r2, #9
 8007478:	f102 0330 	add.w	r3, r2, #48	; 0x30
 800747c:	bf8a      	itet	hi
 800747e:	4452      	addhi	r2, sl
 8007480:	b2da      	uxtbls	r2, r3
 8007482:	b2d2      	uxtbhi	r2, r2
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007484:	454d      	cmp	r5, r9
 8007486:	bf08      	it	eq
 8007488:	4544      	cmpeq	r4, r8
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800748a:	f807 2b01 	strb.w	r2, [r7], #1
 800748e:	f106 0601 	add.w	r6, r6, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007492:	d2e5      	bcs.n	8007460 <_ntoa_long_long+0x54>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 8007494:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8007496:	9306      	str	r3, [sp, #24]
 8007498:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800749a:	9305      	str	r3, [sp, #20]
 800749c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800749e:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80074a2:	9b08      	ldr	r3, [sp, #32]
 80074a4:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80074a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074aa:	9300      	str	r3, [sp, #0]
 80074ac:	ee19 2a10 	vmov	r2, s18
 80074b0:	ee18 1a90 	vmov	r1, s17
 80074b4:	ee18 0a10 	vmov	r0, s16
 80074b8:	465b      	mov	r3, fp
 80074ba:	f7ff fe17 	bl	80070ec <_ntoa_format>
}
 80074be:	b013      	add	sp, #76	; 0x4c
 80074c0:	ecbd 8b04 	vpop	{d8-d9}
 80074c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074c8:	ab0a      	add	r3, sp, #40	; 0x28
  size_t len = 0U;
 80074ca:	2600      	movs	r6, #0
 80074cc:	9309      	str	r3, [sp, #36]	; 0x24
 80074ce:	e7e1      	b.n	8007494 <_ntoa_long_long+0x88>

080074d0 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
 80074d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
 80074d4:	4eca      	ldr	r6, [pc, #808]	; (8007800 <_vsnprintf+0x330>)
{
 80074d6:	b091      	sub	sp, #68	; 0x44
 80074d8:	461c      	mov	r4, r3
  }

  while (*format)
 80074da:	781b      	ldrb	r3, [r3, #0]
 80074dc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    out = _out_null;
 80074de:	f1b1 0a00 	subs.w	sl, r1, #0
{
 80074e2:	4691      	mov	r9, r2
    out = _out_null;
 80074e4:	bf14      	ite	ne
 80074e6:	4683      	movne	fp, r0
 80074e8:	46b3      	moveq	fp, r6
  while (*format)
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	f000 8279 	beq.w	80079e2 <_vsnprintf+0x512>
 80074f0:	f04f 0800 	mov.w	r8, #0
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80074f4:	4618      	mov	r0, r3
 80074f6:	e00a      	b.n	800750e <_vsnprintf+0x3e>
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default :
        out(*format, buffer, idx++, maxlen);
 80074f8:	4642      	mov	r2, r8
 80074fa:	464b      	mov	r3, r9
 80074fc:	4651      	mov	r1, sl
 80074fe:	f108 0801 	add.w	r8, r8, #1
        format++;
 8007502:	3401      	adds	r4, #1
        out(*format, buffer, idx++, maxlen);
 8007504:	47d8      	blx	fp
  while (*format)
 8007506:	7820      	ldrb	r0, [r4, #0]
 8007508:	2800      	cmp	r0, #0
 800750a:	f000 8125 	beq.w	8007758 <_vsnprintf+0x288>
    if (*format != '%') {
 800750e:	2825      	cmp	r0, #37	; 0x25
 8007510:	d1f2      	bne.n	80074f8 <_vsnprintf+0x28>
      format++;
 8007512:	1c63      	adds	r3, r4, #1
    flags = 0U;
 8007514:	2100      	movs	r1, #0
 8007516:	461c      	mov	r4, r3
      switch (*format) {
 8007518:	f813 0b01 	ldrb.w	r0, [r3], #1
 800751c:	f1a0 0220 	sub.w	r2, r0, #32
 8007520:	2a10      	cmp	r2, #16
 8007522:	d80a      	bhi.n	800753a <_vsnprintf+0x6a>
 8007524:	e8df f002 	tbb	[pc, r2]
 8007528:	3809093b 	.word	0x3809093b
 800752c:	09090909 	.word	0x09090909
 8007530:	35090909 	.word	0x35090909
 8007534:	09093209 	.word	0x09093209
 8007538:	2f          	.byte	0x2f
 8007539:	00          	.byte	0x00
    if (_is_digit(*format)) {
 800753a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800753e:	2b09      	cmp	r3, #9
 8007540:	f240 80eb 	bls.w	800771a <_vsnprintf+0x24a>
    else if (*format == '*') {
 8007544:	282a      	cmp	r0, #42	; 0x2a
 8007546:	f000 8115 	beq.w	8007774 <_vsnprintf+0x2a4>
    width = 0U;
 800754a:	2600      	movs	r6, #0
    if (*format == '.') {
 800754c:	282e      	cmp	r0, #46	; 0x2e
 800754e:	f000 80f4 	beq.w	800773a <_vsnprintf+0x26a>
    precision = 0U;
 8007552:	2700      	movs	r7, #0
    switch (*format) {
 8007554:	f1a0 0368 	sub.w	r3, r0, #104	; 0x68
 8007558:	2b12      	cmp	r3, #18
 800755a:	d82a      	bhi.n	80075b2 <_vsnprintf+0xe2>
 800755c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007560:	00290152 	.word	0x00290152
 8007564:	0029014a 	.word	0x0029014a
 8007568:	00290022 	.word	0x00290022
 800756c:	00290029 	.word	0x00290029
 8007570:	00290029 	.word	0x00290029
 8007574:	00290029 	.word	0x00290029
 8007578:	002900d8 	.word	0x002900d8
 800757c:	00290029 	.word	0x00290029
 8007580:	00290029 	.word	0x00290029
 8007584:	00d8      	.short	0x00d8
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 8007586:	f041 0101 	orr.w	r1, r1, #1
    } while (n);
 800758a:	e7c4      	b.n	8007516 <_vsnprintf+0x46>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 800758c:	f041 0102 	orr.w	r1, r1, #2
    } while (n);
 8007590:	e7c1      	b.n	8007516 <_vsnprintf+0x46>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 8007592:	f041 0104 	orr.w	r1, r1, #4
    } while (n);
 8007596:	e7be      	b.n	8007516 <_vsnprintf+0x46>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 8007598:	f041 0110 	orr.w	r1, r1, #16
    } while (n);
 800759c:	e7bb      	b.n	8007516 <_vsnprintf+0x46>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 800759e:	f041 0108 	orr.w	r1, r1, #8
    } while (n);
 80075a2:	e7b8      	b.n	8007516 <_vsnprintf+0x46>
        if (*format == 'l') {
 80075a4:	7860      	ldrb	r0, [r4, #1]
 80075a6:	286c      	cmp	r0, #108	; 0x6c
 80075a8:	f000 820e 	beq.w	80079c8 <_vsnprintf+0x4f8>
        flags |= FLAGS_LONG;
 80075ac:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 80075b0:	3401      	adds	r4, #1
    switch (*format) {
 80075b2:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
 80075b6:	2b53      	cmp	r3, #83	; 0x53
 80075b8:	d89e      	bhi.n	80074f8 <_vsnprintf+0x28>
 80075ba:	a201      	add	r2, pc, #4	; (adr r2, 80075c0 <_vsnprintf+0xf0>)
 80075bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075c0:	08007815 	.word	0x08007815
 80075c4:	080074f9 	.word	0x080074f9
 80075c8:	080074f9 	.word	0x080074f9
 80075cc:	080074f9 	.word	0x080074f9
 80075d0:	080074f9 	.word	0x080074f9
 80075d4:	080074f9 	.word	0x080074f9
 80075d8:	080074f9 	.word	0x080074f9
 80075dc:	080074f9 	.word	0x080074f9
 80075e0:	080074f9 	.word	0x080074f9
 80075e4:	080074f9 	.word	0x080074f9
 80075e8:	080074f9 	.word	0x080074f9
 80075ec:	080074f9 	.word	0x080074f9
 80075f0:	080074f9 	.word	0x080074f9
 80075f4:	080074f9 	.word	0x080074f9
 80075f8:	080074f9 	.word	0x080074f9
 80075fc:	080074f9 	.word	0x080074f9
 8007600:	080074f9 	.word	0x080074f9
 8007604:	080074f9 	.word	0x080074f9
 8007608:	080074f9 	.word	0x080074f9
 800760c:	080074f9 	.word	0x080074f9
 8007610:	080074f9 	.word	0x080074f9
 8007614:	080074f9 	.word	0x080074f9
 8007618:	080074f9 	.word	0x080074f9
 800761c:	080074f9 	.word	0x080074f9
 8007620:	080074f9 	.word	0x080074f9
 8007624:	080074f9 	.word	0x080074f9
 8007628:	080074f9 	.word	0x080074f9
 800762c:	080074f9 	.word	0x080074f9
 8007630:	080074f9 	.word	0x080074f9
 8007634:	080074f9 	.word	0x080074f9
 8007638:	080074f9 	.word	0x080074f9
 800763c:	080074f9 	.word	0x080074f9
 8007640:	080074f9 	.word	0x080074f9
 8007644:	080074f9 	.word	0x080074f9
 8007648:	080074f9 	.word	0x080074f9
 800764c:	080074f9 	.word	0x080074f9
 8007650:	080074f9 	.word	0x080074f9
 8007654:	080074f9 	.word	0x080074f9
 8007658:	080074f9 	.word	0x080074f9
 800765c:	080074f9 	.word	0x080074f9
 8007660:	080074f9 	.word	0x080074f9
 8007664:	080074f9 	.word	0x080074f9
 8007668:	080074f9 	.word	0x080074f9
 800766c:	080074f9 	.word	0x080074f9
 8007670:	080074f9 	.word	0x080074f9
 8007674:	080074f9 	.word	0x080074f9
 8007678:	080074f9 	.word	0x080074f9
 800767c:	080074f9 	.word	0x080074f9
 8007680:	080074f9 	.word	0x080074f9
 8007684:	080074f9 	.word	0x080074f9
 8007688:	080074f9 	.word	0x080074f9
 800768c:	08007789 	.word	0x08007789
 8007690:	080074f9 	.word	0x080074f9
 8007694:	080074f9 	.word	0x080074f9
 8007698:	080074f9 	.word	0x080074f9
 800769c:	080074f9 	.word	0x080074f9
 80076a0:	080074f9 	.word	0x080074f9
 80076a4:	080074f9 	.word	0x080074f9
 80076a8:	080074f9 	.word	0x080074f9
 80076ac:	080074f9 	.word	0x080074f9
 80076b0:	080074f9 	.word	0x080074f9
 80076b4:	08007789 	.word	0x08007789
 80076b8:	080078e9 	.word	0x080078e9
 80076bc:	08007789 	.word	0x08007789
 80076c0:	080074f9 	.word	0x080074f9
 80076c4:	080074f9 	.word	0x080074f9
 80076c8:	080074f9 	.word	0x080074f9
 80076cc:	080074f9 	.word	0x080074f9
 80076d0:	08007789 	.word	0x08007789
 80076d4:	080074f9 	.word	0x080074f9
 80076d8:	080074f9 	.word	0x080074f9
 80076dc:	080074f9 	.word	0x080074f9
 80076e0:	080074f9 	.word	0x080074f9
 80076e4:	080074f9 	.word	0x080074f9
 80076e8:	08007789 	.word	0x08007789
 80076ec:	080078bd 	.word	0x080078bd
 80076f0:	080074f9 	.word	0x080074f9
 80076f4:	080074f9 	.word	0x080074f9
 80076f8:	08007829 	.word	0x08007829
 80076fc:	080074f9 	.word	0x080074f9
 8007700:	08007789 	.word	0x08007789
 8007704:	080074f9 	.word	0x080074f9
 8007708:	080074f9 	.word	0x080074f9
 800770c:	08007789 	.word	0x08007789
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8007710:	7860      	ldrb	r0, [r4, #1]
 8007712:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 8007716:	3401      	adds	r4, #1
        break;
 8007718:	e74b      	b.n	80075b2 <_vsnprintf+0xe2>
  unsigned int i = 0U;
 800771a:	2600      	movs	r6, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800771c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8007720:	eb00 0646 	add.w	r6, r0, r6, lsl #1
  while (_is_digit(**str)) {
 8007724:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8007728:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800772c:	2b09      	cmp	r3, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800772e:	f1a6 0630 	sub.w	r6, r6, #48	; 0x30
  while (_is_digit(**str)) {
 8007732:	d9f3      	bls.n	800771c <_vsnprintf+0x24c>
    if (*format == '.') {
 8007734:	282e      	cmp	r0, #46	; 0x2e
 8007736:	f47f af0c 	bne.w	8007552 <_vsnprintf+0x82>
      if (_is_digit(*format)) {
 800773a:	7860      	ldrb	r0, [r4, #1]
 800773c:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 8007740:	2a09      	cmp	r2, #9
      flags |= FLAGS_PRECISION;
 8007742:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
      format++;
 8007746:	f104 0301 	add.w	r3, r4, #1
      if (_is_digit(*format)) {
 800774a:	f240 80e7 	bls.w	800791c <_vsnprintf+0x44c>
      else if (*format == '*') {
 800774e:	282a      	cmp	r0, #42	; 0x2a
 8007750:	f000 80f3 	beq.w	800793a <_vsnprintf+0x46a>
      format++;
 8007754:	461c      	mov	r4, r3
 8007756:	e6fc      	b.n	8007552 <_vsnprintf+0x82>
 8007758:	4644      	mov	r4, r8
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 800775a:	45c1      	cmp	r9, r8
 800775c:	d801      	bhi.n	8007762 <_vsnprintf+0x292>
 800775e:	f109 38ff 	add.w	r8, r9, #4294967295	; 0xffffffff
 8007762:	464b      	mov	r3, r9
 8007764:	4642      	mov	r2, r8
 8007766:	4651      	mov	r1, sl
 8007768:	2000      	movs	r0, #0
 800776a:	47d8      	blx	fp

  // return written chars without terminating \0
  return (int)idx;
}
 800776c:	4620      	mov	r0, r4
 800776e:	b011      	add	sp, #68	; 0x44
 8007770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      const int w = va_arg(va, int);
 8007774:	f855 6b04 	ldr.w	r6, [r5], #4
      if (w < 0) {
 8007778:	7860      	ldrb	r0, [r4, #1]
 800777a:	2e00      	cmp	r6, #0
        flags |= FLAGS_LEFT;    // reverse padding
 800777c:	bfbc      	itt	lt
 800777e:	f041 0102 	orrlt.w	r1, r1, #2
        width = (unsigned int)-w;
 8007782:	4276      	neglt	r6, r6
      format++;
 8007784:	3401      	adds	r4, #1
 8007786:	e6e1      	b.n	800754c <_vsnprintf+0x7c>
        if (*format == 'x' || *format == 'X') {
 8007788:	2878      	cmp	r0, #120	; 0x78
 800778a:	f000 8122 	beq.w	80079d2 <_vsnprintf+0x502>
 800778e:	2858      	cmp	r0, #88	; 0x58
 8007790:	f000 80e1 	beq.w	8007956 <_vsnprintf+0x486>
        else if (*format == 'o') {
 8007794:	286f      	cmp	r0, #111	; 0x6f
 8007796:	f000 818a 	beq.w	8007aae <_vsnprintf+0x5de>
        else if (*format == 'b') {
 800779a:	2862      	cmp	r0, #98	; 0x62
 800779c:	f000 80e5 	beq.w	800796a <_vsnprintf+0x49a>
        if ((*format != 'i') && (*format != 'd')) {
 80077a0:	2869      	cmp	r0, #105	; 0x69
          flags &= ~FLAGS_HASH;   // no hash for dec format
 80077a2:	f021 0310 	bic.w	r3, r1, #16
          base = 10U;
 80077a6:	f04f 0c0a 	mov.w	ip, #10
        if ((*format != 'i') && (*format != 'd')) {
 80077aa:	f040 80e1 	bne.w	8007970 <_vsnprintf+0x4a0>
        if (flags & FLAGS_PRECISION) {
 80077ae:	054a      	lsls	r2, r1, #21
 80077b0:	f140 80e5 	bpl.w	800797e <_vsnprintf+0x4ae>
          flags &= ~FLAGS_ZEROPAD;
 80077b4:	f023 0301 	bic.w	r3, r3, #1
        if ((*format == 'i') || (*format == 'd')) {
 80077b8:	2869      	cmp	r0, #105	; 0x69
 80077ba:	f000 80e0 	beq.w	800797e <_vsnprintf+0x4ae>
 80077be:	2864      	cmp	r0, #100	; 0x64
 80077c0:	f000 80dd 	beq.w	800797e <_vsnprintf+0x4ae>
          if (flags & FLAGS_LONG_LONG) {
 80077c4:	f413 7200 	ands.w	r2, r3, #512	; 0x200
 80077c8:	f040 8175 	bne.w	8007ab6 <_vsnprintf+0x5e6>
          else if (flags & FLAGS_LONG) {
 80077cc:	05d8      	lsls	r0, r3, #23
 80077ce:	f100 819a 	bmi.w	8007b06 <_vsnprintf+0x636>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
 80077d2:	0659      	lsls	r1, r3, #25
 80077d4:	f855 2b04 	ldr.w	r2, [r5], #4
 80077d8:	f100 817f 	bmi.w	8007ada <_vsnprintf+0x60a>
 80077dc:	0618      	lsls	r0, r3, #24
 80077de:	bf48      	it	mi
 80077e0:	b292      	uxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80077e2:	2100      	movs	r1, #0
 80077e4:	9200      	str	r2, [sp, #0]
 80077e6:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80077ea:	e9cd c702 	strd	ip, r7, [sp, #8]
 80077ee:	4642      	mov	r2, r8
 80077f0:	9101      	str	r1, [sp, #4]
 80077f2:	e0dd      	b.n	80079b0 <_vsnprintf+0x4e0>
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 80077f4:	7860      	ldrb	r0, [r4, #1]
 80077f6:	f441 7100 	orr.w	r1, r1, #512	; 0x200
        format++;
 80077fa:	3401      	adds	r4, #1
        break;
 80077fc:	e6d9      	b.n	80075b2 <_vsnprintf+0xe2>
 80077fe:	bf00      	nop
 8007800:	080070e9 	.word	0x080070e9
        if (*format == 'h') {
 8007804:	7860      	ldrb	r0, [r4, #1]
 8007806:	2868      	cmp	r0, #104	; 0x68
 8007808:	f000 80d9 	beq.w	80079be <_vsnprintf+0x4ee>
        flags |= FLAGS_SHORT;
 800780c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
        format++;
 8007810:	3401      	adds	r4, #1
 8007812:	e6ce      	b.n	80075b2 <_vsnprintf+0xe2>
        out('%', buffer, idx++, maxlen);
 8007814:	f108 0601 	add.w	r6, r8, #1
 8007818:	4642      	mov	r2, r8
 800781a:	464b      	mov	r3, r9
 800781c:	4651      	mov	r1, sl
 800781e:	2025      	movs	r0, #37	; 0x25
        format++;
 8007820:	3401      	adds	r4, #1
        out('%', buffer, idx++, maxlen);
 8007822:	46b0      	mov	r8, r6
 8007824:	47d8      	blx	fp
        break;
 8007826:	e66e      	b.n	8007506 <_vsnprintf+0x36>
        const char* p = va_arg(va, char*);
 8007828:	462a      	mov	r2, r5
 800782a:	f852 3b04 	ldr.w	r3, [r2], #4
 800782e:	930b      	str	r3, [sp, #44]	; 0x2c
 8007830:	920d      	str	r2, [sp, #52]	; 0x34
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 8007832:	2f00      	cmp	r7, #0
 8007834:	f040 8088 	bne.w	8007948 <_vsnprintf+0x478>
  for (s = str; *s && maxsize--; ++s);
 8007838:	7818      	ldrb	r0, [r3, #0]
 800783a:	f06f 0501 	mvn.w	r5, #1
 800783e:	2800      	cmp	r0, #0
 8007840:	f000 8174 	beq.w	8007b2c <_vsnprintf+0x65c>
 8007844:	1c6b      	adds	r3, r5, #1
 8007846:	461a      	mov	r2, r3
 8007848:	930c      	str	r3, [sp, #48]	; 0x30
 800784a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800784c:	189d      	adds	r5, r3, r2
 800784e:	e001      	b.n	8007854 <_vsnprintf+0x384>
 8007850:	429d      	cmp	r5, r3
 8007852:	d006      	beq.n	8007862 <_vsnprintf+0x392>
 8007854:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8007858:	2a00      	cmp	r2, #0
 800785a:	d1f9      	bne.n	8007850 <_vsnprintf+0x380>
 800785c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800785e:	1a9b      	subs	r3, r3, r2
 8007860:	930c      	str	r3, [sp, #48]	; 0x30
        if (flags & FLAGS_PRECISION) {
 8007862:	f411 6380 	ands.w	r3, r1, #1024	; 0x400
 8007866:	930e      	str	r3, [sp, #56]	; 0x38
 8007868:	d004      	beq.n	8007874 <_vsnprintf+0x3a4>
          l = (l < precision ? l : precision);
 800786a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800786c:	42bb      	cmp	r3, r7
 800786e:	bf28      	it	cs
 8007870:	463b      	movcs	r3, r7
 8007872:	930c      	str	r3, [sp, #48]	; 0x30
        if (!(flags & FLAGS_LEFT)) {
 8007874:	f011 0302 	ands.w	r3, r1, #2
 8007878:	930f      	str	r3, [sp, #60]	; 0x3c
 800787a:	f000 80e0 	beq.w	8007a3e <_vsnprintf+0x56e>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 800787e:	2800      	cmp	r0, #0
 8007880:	f000 80cb 	beq.w	8007a1a <_vsnprintf+0x54a>
 8007884:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007886:	960b      	str	r6, [sp, #44]	; 0x2c
 8007888:	4642      	mov	r2, r8
 800788a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800788c:	e000      	b.n	8007890 <_vsnprintf+0x3c0>
          out(*(p++), buffer, idx++, maxlen);
 800788e:	4642      	mov	r2, r8
 8007890:	464b      	mov	r3, r9
 8007892:	4651      	mov	r1, sl
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007894:	b11e      	cbz	r6, 800789e <_vsnprintf+0x3ce>
 8007896:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 800789a:	b13f      	cbz	r7, 80078ac <_vsnprintf+0x3dc>
 800789c:	4667      	mov	r7, ip
          out(*(p++), buffer, idx++, maxlen);
 800789e:	47d8      	blx	fp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80078a0:	f815 0f01 	ldrb.w	r0, [r5, #1]!
          out(*(p++), buffer, idx++, maxlen);
 80078a4:	f108 0801 	add.w	r8, r8, #1
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 80078a8:	2800      	cmp	r0, #0
 80078aa:	d1f0      	bne.n	800788e <_vsnprintf+0x3be>
        if (flags & FLAGS_LEFT) {
 80078ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80078ae:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	f040 80b2 	bne.w	8007a1a <_vsnprintf+0x54a>
        const char* p = va_arg(va, char*);
 80078b6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
        format++;
 80078b8:	3401      	adds	r4, #1
        break;
 80078ba:	e624      	b.n	8007506 <_vsnprintf+0x36>
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80078bc:	2208      	movs	r2, #8
 80078be:	e9cd 7203 	strd	r7, r2, [sp, #12]
 80078c2:	2300      	movs	r3, #0
 80078c4:	2210      	movs	r2, #16
 80078c6:	e9cd 3201 	strd	r3, r2, [sp, #4]
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 80078ca:	f041 0121 	orr.w	r1, r1, #33	; 0x21
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80078ce:	9105      	str	r1, [sp, #20]
 80078d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80078d4:	9300      	str	r3, [sp, #0]
 80078d6:	4642      	mov	r2, r8
 80078d8:	464b      	mov	r3, r9
 80078da:	4651      	mov	r1, sl
 80078dc:	4658      	mov	r0, fp
 80078de:	f7ff fd4b 	bl	8007378 <_ntoa_long>
        format++;
 80078e2:	3401      	adds	r4, #1
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 80078e4:	4680      	mov	r8, r0
        break;
 80078e6:	e60e      	b.n	8007506 <_vsnprintf+0x36>
        if (!(flags & FLAGS_LEFT)) {
 80078e8:	0789      	lsls	r1, r1, #30
 80078ea:	d57d      	bpl.n	80079e8 <_vsnprintf+0x518>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 80078ec:	f855 0b04 	ldr.w	r0, [r5], #4
 80078f0:	464b      	mov	r3, r9
 80078f2:	4642      	mov	r2, r8
 80078f4:	b2c0      	uxtb	r0, r0
 80078f6:	4651      	mov	r1, sl
 80078f8:	47d8      	blx	fp
          while (l++ < width) {
 80078fa:	2e01      	cmp	r6, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 80078fc:	f108 0701 	add.w	r7, r8, #1
          while (l++ < width) {
 8007900:	bf88      	it	hi
 8007902:	4446      	addhi	r6, r8
 8007904:	d907      	bls.n	8007916 <_vsnprintf+0x446>
            out(' ', buffer, idx++, maxlen);
 8007906:	463a      	mov	r2, r7
 8007908:	464b      	mov	r3, r9
 800790a:	3701      	adds	r7, #1
 800790c:	4651      	mov	r1, sl
 800790e:	2020      	movs	r0, #32
 8007910:	47d8      	blx	fp
          while (l++ < width) {
 8007912:	42b7      	cmp	r7, r6
 8007914:	d1f7      	bne.n	8007906 <_vsnprintf+0x436>
 8007916:	46b8      	mov	r8, r7
        format++;
 8007918:	3401      	adds	r4, #1
        break;
 800791a:	e5f4      	b.n	8007506 <_vsnprintf+0x36>
  unsigned int i = 0U;
 800791c:	2700      	movs	r7, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 800791e:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 8007922:	eb00 0747 	add.w	r7, r0, r7, lsl #1
  while (_is_digit(**str)) {
 8007926:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800792a:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 800792e:	2a09      	cmp	r2, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007930:	f1a7 0730 	sub.w	r7, r7, #48	; 0x30
  while (_is_digit(**str)) {
 8007934:	d9f3      	bls.n	800791e <_vsnprintf+0x44e>
 8007936:	461c      	mov	r4, r3
 8007938:	e60c      	b.n	8007554 <_vsnprintf+0x84>
        precision = prec > 0 ? (unsigned int)prec : 0U;
 800793a:	f855 7b04 	ldr.w	r7, [r5], #4
 800793e:	78a0      	ldrb	r0, [r4, #2]
 8007940:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
        format++;
 8007944:	3402      	adds	r4, #2
 8007946:	e605      	b.n	8007554 <_vsnprintf+0x84>
  for (s = str; *s && maxsize--; ++s);
 8007948:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800794a:	7818      	ldrb	r0, [r3, #0]
 800794c:	2800      	cmp	r0, #0
 800794e:	f000 80eb 	beq.w	8007b28 <_vsnprintf+0x658>
 8007952:	1e7d      	subs	r5, r7, #1
 8007954:	e776      	b.n	8007844 <_vsnprintf+0x374>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007956:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 800795a:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 800795c:	f043 0320 	orr.w	r3, r3, #32
          base = 16U;
 8007960:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 8007964:	f53f af26 	bmi.w	80077b4 <_vsnprintf+0x2e4>
 8007968:	e72c      	b.n	80077c4 <_vsnprintf+0x2f4>
          base =  2U;
 800796a:	f04f 0c02 	mov.w	ip, #2
        format++;
 800796e:	460b      	mov	r3, r1
        if ((*format != 'i') && (*format != 'd')) {
 8007970:	2864      	cmp	r0, #100	; 0x64
 8007972:	bf18      	it	ne
 8007974:	4619      	movne	r1, r3
 8007976:	d12e      	bne.n	80079d6 <_vsnprintf+0x506>
        if (flags & FLAGS_PRECISION) {
 8007978:	0559      	lsls	r1, r3, #21
 800797a:	f53f af1b 	bmi.w	80077b4 <_vsnprintf+0x2e4>
          if (flags & FLAGS_LONG_LONG) {
 800797e:	0599      	lsls	r1, r3, #22
 8007980:	d476      	bmi.n	8007a70 <_vsnprintf+0x5a0>
          else if (flags & FLAGS_LONG) {
 8007982:	05da      	lsls	r2, r3, #23
 8007984:	f100 80b0 	bmi.w	8007ae8 <_vsnprintf+0x618>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8007988:	0658      	lsls	r0, r3, #25
 800798a:	f855 2b04 	ldr.w	r2, [r5], #4
 800798e:	f100 80a2 	bmi.w	8007ad6 <_vsnprintf+0x606>
 8007992:	0619      	lsls	r1, r3, #24
 8007994:	bf48      	it	mi
 8007996:	b212      	sxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007998:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
 800799c:	0fd0      	lsrs	r0, r2, #31
 800799e:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
 80079a2:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80079a6:	e9cd c702 	strd	ip, r7, [sp, #8]
 80079aa:	e9cd 1000 	strd	r1, r0, [sp]
 80079ae:	4642      	mov	r2, r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 80079b0:	464b      	mov	r3, r9
 80079b2:	4651      	mov	r1, sl
 80079b4:	4658      	mov	r0, fp
 80079b6:	f7ff fcdf 	bl	8007378 <_ntoa_long>
 80079ba:	4680      	mov	r8, r0
        format++;
 80079bc:	e7ac      	b.n	8007918 <_vsnprintf+0x448>
          flags |= FLAGS_CHAR;
 80079be:	78a0      	ldrb	r0, [r4, #2]
 80079c0:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
          format++;
 80079c4:	3402      	adds	r4, #2
 80079c6:	e5f4      	b.n	80075b2 <_vsnprintf+0xe2>
          flags |= FLAGS_LONG_LONG;
 80079c8:	78a0      	ldrb	r0, [r4, #2]
 80079ca:	f441 7140 	orr.w	r1, r1, #768	; 0x300
          format++;
 80079ce:	3402      	adds	r4, #2
 80079d0:	e5ef      	b.n	80075b2 <_vsnprintf+0xe2>
          base = 16U;
 80079d2:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 80079d6:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 80079d8:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 80079dc:	f53f aeea 	bmi.w	80077b4 <_vsnprintf+0x2e4>
 80079e0:	e6ea      	b.n	80077b8 <_vsnprintf+0x2e8>
  while (*format)
 80079e2:	461c      	mov	r4, r3
 80079e4:	4698      	mov	r8, r3
 80079e6:	e6b8      	b.n	800775a <_vsnprintf+0x28a>
          while (l++ < width) {
 80079e8:	2e01      	cmp	r6, #1
 80079ea:	f240 809b 	bls.w	8007b24 <_vsnprintf+0x654>
 80079ee:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 80079f2:	441e      	add	r6, r3
            out(' ', buffer, idx++, maxlen);
 80079f4:	4642      	mov	r2, r8
 80079f6:	464b      	mov	r3, r9
 80079f8:	f108 0801 	add.w	r8, r8, #1
 80079fc:	4651      	mov	r1, sl
 80079fe:	2020      	movs	r0, #32
 8007a00:	47d8      	blx	fp
          while (l++ < width) {
 8007a02:	45b0      	cmp	r8, r6
 8007a04:	d1f6      	bne.n	80079f4 <_vsnprintf+0x524>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007a06:	f855 0b04 	ldr.w	r0, [r5], #4
 8007a0a:	464b      	mov	r3, r9
 8007a0c:	4632      	mov	r2, r6
 8007a0e:	b2c0      	uxtb	r0, r0
 8007a10:	4651      	mov	r1, sl
 8007a12:	f106 0801 	add.w	r8, r6, #1
 8007a16:	47d8      	blx	fp
        if (flags & FLAGS_LEFT) {
 8007a18:	e77e      	b.n	8007918 <_vsnprintf+0x448>
          while (l++ < width) {
 8007a1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007a1c:	429e      	cmp	r6, r3
 8007a1e:	4645      	mov	r5, r8
 8007a20:	f67f af49 	bls.w	80078b6 <_vsnprintf+0x3e6>
 8007a24:	eb06 0008 	add.w	r0, r6, r8
 8007a28:	eba0 0803 	sub.w	r8, r0, r3
            out(' ', buffer, idx++, maxlen);
 8007a2c:	462a      	mov	r2, r5
 8007a2e:	464b      	mov	r3, r9
 8007a30:	3501      	adds	r5, #1
 8007a32:	4651      	mov	r1, sl
 8007a34:	2020      	movs	r0, #32
 8007a36:	47d8      	blx	fp
          while (l++ < width) {
 8007a38:	4545      	cmp	r5, r8
 8007a3a:	d1f7      	bne.n	8007a2c <_vsnprintf+0x55c>
 8007a3c:	e73b      	b.n	80078b6 <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007a3e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007a40:	4296      	cmp	r6, r2
 8007a42:	f102 0301 	add.w	r3, r2, #1
 8007a46:	d968      	bls.n	8007b1a <_vsnprintf+0x64a>
 8007a48:	eb06 0508 	add.w	r5, r6, r8
 8007a4c:	1aad      	subs	r5, r5, r2
            out(' ', buffer, idx++, maxlen);
 8007a4e:	4642      	mov	r2, r8
 8007a50:	464b      	mov	r3, r9
 8007a52:	f108 0801 	add.w	r8, r8, #1
 8007a56:	4651      	mov	r1, sl
 8007a58:	2020      	movs	r0, #32
 8007a5a:	47d8      	blx	fp
          while (l++ < width) {
 8007a5c:	45a8      	cmp	r8, r5
 8007a5e:	d1f6      	bne.n	8007a4e <_vsnprintf+0x57e>
 8007a60:	1c73      	adds	r3, r6, #1
 8007a62:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007a64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a66:	7818      	ldrb	r0, [r3, #0]
 8007a68:	2800      	cmp	r0, #0
 8007a6a:	f47f af0b 	bne.w	8007884 <_vsnprintf+0x3b4>
 8007a6e:	e722      	b.n	80078b6 <_vsnprintf+0x3e6>
            const long long value = va_arg(va, long long);
 8007a70:	3507      	adds	r5, #7
 8007a72:	f025 0507 	bic.w	r5, r5, #7
 8007a76:	686a      	ldr	r2, [r5, #4]
 8007a78:	f855 eb08 	ldr.w	lr, [r5], #8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007a7c:	9308      	str	r3, [sp, #32]
 8007a7e:	4670      	mov	r0, lr
 8007a80:	4611      	mov	r1, r2
 8007a82:	2300      	movs	r3, #0
 8007a84:	2800      	cmp	r0, #0
 8007a86:	e9cd c304 	strd	ip, r3, [sp, #16]
 8007a8a:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8007a8e:	f171 0300 	sbcs.w	r3, r1, #0
 8007a92:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8007a96:	9202      	str	r2, [sp, #8]
 8007a98:	db21      	blt.n	8007ade <_vsnprintf+0x60e>
 8007a9a:	e9cd 0100 	strd	r0, r1, [sp]
 8007a9e:	4642      	mov	r2, r8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 8007aa0:	464b      	mov	r3, r9
 8007aa2:	4651      	mov	r1, sl
 8007aa4:	4658      	mov	r0, fp
 8007aa6:	f7ff fcb1 	bl	800740c <_ntoa_long_long>
 8007aaa:	4680      	mov	r8, r0
 8007aac:	e734      	b.n	8007918 <_vsnprintf+0x448>
          base =  8U;
 8007aae:	f04f 0c08 	mov.w	ip, #8
        format++;
 8007ab2:	460b      	mov	r3, r1
 8007ab4:	e75c      	b.n	8007970 <_vsnprintf+0x4a0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 8007ab6:	2200      	movs	r2, #0
 8007ab8:	e9cd c204 	strd	ip, r2, [sp, #16]
 8007abc:	e9cd 6307 	strd	r6, r3, [sp, #28]
 8007ac0:	3507      	adds	r5, #7
 8007ac2:	9202      	str	r2, [sp, #8]
 8007ac4:	f025 0507 	bic.w	r5, r5, #7
 8007ac8:	9706      	str	r7, [sp, #24]
 8007aca:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8007ace:	4642      	mov	r2, r8
 8007ad0:	e9cd 0100 	strd	r0, r1, [sp]
 8007ad4:	e7e4      	b.n	8007aa0 <_vsnprintf+0x5d0>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8007ad6:	b252      	sxtb	r2, r2
 8007ad8:	e75e      	b.n	8007998 <_vsnprintf+0x4c8>
 8007ada:	b2d2      	uxtb	r2, r2
 8007adc:	e681      	b.n	80077e2 <_vsnprintf+0x312>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007ade:	f1de 0000 	rsbs	r0, lr, #0
 8007ae2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007ae6:	e7d8      	b.n	8007a9a <_vsnprintf+0x5ca>
            const long value = va_arg(va, long);
 8007ae8:	f855 1b04 	ldr.w	r1, [r5], #4
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007aec:	9305      	str	r3, [sp, #20]
 8007aee:	2900      	cmp	r1, #0
 8007af0:	ea4f 73d1 	mov.w	r3, r1, lsr #31
 8007af4:	bfb8      	it	lt
 8007af6:	4249      	neglt	r1, r1
 8007af8:	e9cd 7603 	strd	r7, r6, [sp, #12]
 8007afc:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 8007b00:	4642      	mov	r2, r8
 8007b02:	9100      	str	r1, [sp, #0]
 8007b04:	e754      	b.n	80079b0 <_vsnprintf+0x4e0>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
 8007b06:	e9cd 6304 	strd	r6, r3, [sp, #16]
 8007b0a:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007b0e:	9201      	str	r2, [sp, #4]
 8007b10:	f855 3b04 	ldr.w	r3, [r5], #4
 8007b14:	9300      	str	r3, [sp, #0]
 8007b16:	4642      	mov	r2, r8
 8007b18:	e74a      	b.n	80079b0 <_vsnprintf+0x4e0>
          while (l++ < width) {
 8007b1a:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007b1c:	2800      	cmp	r0, #0
 8007b1e:	f47f aeb1 	bne.w	8007884 <_vsnprintf+0x3b4>
 8007b22:	e6c8      	b.n	80078b6 <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007b24:	4646      	mov	r6, r8
 8007b26:	e76e      	b.n	8007a06 <_vsnprintf+0x536>
  for (s = str; *s && maxsize--; ++s);
 8007b28:	900c      	str	r0, [sp, #48]	; 0x30
 8007b2a:	e69a      	b.n	8007862 <_vsnprintf+0x392>
 8007b2c:	970c      	str	r7, [sp, #48]	; 0x30
 8007b2e:	e698      	b.n	8007862 <_vsnprintf+0x392>

08007b30 <_out_fct>:
  if (character) {
 8007b30:	b110      	cbz	r0, 8007b38 <_out_fct+0x8>
    ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 8007b32:	e9d1 3100 	ldrd	r3, r1, [r1]
 8007b36:	4718      	bx	r3
}
 8007b38:	4770      	bx	lr
 8007b3a:	bf00      	nop

08007b3c <vsnprintf_>:
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
}


int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
{
 8007b3c:	b530      	push	{r4, r5, lr}
 8007b3e:	b083      	sub	sp, #12
 8007b40:	460d      	mov	r5, r1
 8007b42:	4614      	mov	r4, r2
  return _vsnprintf(_out_buffer, buffer, count, format, va);
 8007b44:	4601      	mov	r1, r0
 8007b46:	9300      	str	r3, [sp, #0]
 8007b48:	462a      	mov	r2, r5
 8007b4a:	4623      	mov	r3, r4
 8007b4c:	4802      	ldr	r0, [pc, #8]	; (8007b58 <vsnprintf_+0x1c>)
 8007b4e:	f7ff fcbf 	bl	80074d0 <_vsnprintf>
}
 8007b52:	b003      	add	sp, #12
 8007b54:	bd30      	pop	{r4, r5, pc}
 8007b56:	bf00      	nop
 8007b58:	080070e1 	.word	0x080070e1

08007b5c <fctvprintf>:
  va_end(va);
  return ret;
}

int fctvprintf(void (*out)(char character, void* arg), void* arg, const char* format, va_list va)
{
 8007b5c:	b530      	push	{r4, r5, lr}
 8007b5e:	b085      	sub	sp, #20
 8007b60:	4605      	mov	r5, r0
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007b62:	9300      	str	r3, [sp, #0]
{
 8007b64:	460c      	mov	r4, r1
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007b66:	4613      	mov	r3, r2
 8007b68:	a902      	add	r1, sp, #8
 8007b6a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007b6e:	4803      	ldr	r0, [pc, #12]	; (8007b7c <fctvprintf+0x20>)
  const out_fct_wrap_type out_fct_wrap = { out, arg };
 8007b70:	e9cd 5402 	strd	r5, r4, [sp, #8]
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007b74:	f7ff fcac 	bl	80074d0 <_vsnprintf>
}
 8007b78:	b005      	add	sp, #20
 8007b7a:	bd30      	pop	{r4, r5, pc}
 8007b7c:	08007b31 	.word	0x08007b31

08007b80 <_init>:
 8007b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b82:	bf00      	nop
 8007b84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b86:	bc08      	pop	{r3}
 8007b88:	469e      	mov	lr, r3
 8007b8a:	4770      	bx	lr

08007b8c <_fini>:
 8007b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b8e:	bf00      	nop
 8007b90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b92:	bc08      	pop	{r3}
 8007b94:	469e      	mov	lr, r3
 8007b96:	4770      	bx	lr
