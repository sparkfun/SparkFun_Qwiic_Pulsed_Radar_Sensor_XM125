
out/example_bring_up.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000190  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007bb0  08000190  08000190  00010190  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003c80  08007d40  08007d40  00017d40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b9c0  0800b9c0  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  0800b9c0  0800b9c0  0001b9c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b9c8  0800b9c8  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800b9c8  0800b9c8  0001b9c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  0800b9d0  0800b9d0  0001b9d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800b9d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000370  20000090  0800ba68  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00001600  20000400  0800ba68  00020400  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .comment      0000004c  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004066  00000000  00000000  0002010c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000b9f  00000000  00000000  00024172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0000250f  00000000  00000000  00024d11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000158  00000000  00000000  00027220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000002d8  00000000  00000000  00027378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001699  00000000  00000000  00027650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00001008  00000000  00000000  00028ce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000a4c  00000000  00000000  00029cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000090 	.word	0x20000090
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007d28 	.word	0x08007d28

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000094 	.word	0x20000094
 80001cc:	08007d28 	.word	0x08007d28

080001d0 <HAL_NVIC_SetPriority.constprop.0>:
 80001d0:	4b14      	ldr	r3, [pc, #80]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 80001d2:	68db      	ldr	r3, [r3, #12]
 80001d4:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80001d8:	b410      	push	{r4}
 80001da:	f1c3 0407 	rsb	r4, r3, #7
 80001de:	1d1a      	adds	r2, r3, #4
 80001e0:	2c04      	cmp	r4, #4
 80001e2:	bf28      	it	cs
 80001e4:	2404      	movcs	r4, #4
 80001e6:	2a06      	cmp	r2, #6
 80001e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80001ec:	fa02 f204 	lsl.w	r2, r2, r4
 80001f0:	bf8c      	ite	hi
 80001f2:	3b03      	subhi	r3, #3
 80001f4:	2300      	movls	r3, #0
 80001f6:	ea21 0102 	bic.w	r1, r1, r2
 80001fa:	4099      	lsls	r1, r3
 80001fc:	1c43      	adds	r3, r0, #1
 80001fe:	d00a      	beq.n	8000216 <HAL_NVIC_SetPriority.constprop.0+0x46>
 8000200:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8000204:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8000208:	0109      	lsls	r1, r1, #4
 800020a:	b2c9      	uxtb	r1, r1
 800020c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8000210:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000214:	4770      	bx	lr
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <HAL_NVIC_SetPriority.constprop.0+0x54>)
 8000218:	0109      	lsls	r1, r1, #4
 800021a:	b2c9      	uxtb	r1, r1
 800021c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8000220:	e7f6      	b.n	8000210 <HAL_NVIC_SetPriority.constprop.0+0x40>
 8000222:	bf00      	nop
 8000224:	e000ed00 	.word	0xe000ed00

08000228 <UART_WaitOnFlagUntilTimeout.constprop.0>:
 8000228:	b4f0      	push	{r4, r5, r6, r7}
 800022a:	6805      	ldr	r5, [r0, #0]
 800022c:	4f29      	ldr	r7, [pc, #164]	; (80002d4 <UART_WaitOnFlagUntilTimeout.constprop.0+0xac>)
 800022e:	4606      	mov	r6, r0
 8000230:	e001      	b.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000232:	1c58      	adds	r0, r3, #1
 8000234:	d106      	bne.n	8000244 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1c>
 8000236:	69ec      	ldr	r4, [r5, #28]
 8000238:	ea31 0004 	bics.w	r0, r1, r4
 800023c:	d1f9      	bne.n	8000232 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800023e:	2000      	movs	r0, #0
 8000240:	bcf0      	pop	{r4, r5, r6, r7}
 8000242:	4770      	bx	lr
 8000244:	6838      	ldr	r0, [r7, #0]
 8000246:	1a80      	subs	r0, r0, r2
 8000248:	4283      	cmp	r3, r0
 800024a:	d327      	bcc.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024c:	b333      	cbz	r3, 800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 800024e:	6828      	ldr	r0, [r5, #0]
 8000250:	0744      	lsls	r4, r0, #29
 8000252:	d5f0      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 8000254:	69e8      	ldr	r0, [r5, #28]
 8000256:	0500      	lsls	r0, r0, #20
 8000258:	d5ed      	bpl.n	8000236 <UART_WaitOnFlagUntilTimeout.constprop.0+0xe>
 800025a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800025e:	622b      	str	r3, [r5, #32]
 8000260:	e855 3f00 	ldrex	r3, [r5]
 8000264:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8000268:	e845 3200 	strex	r2, r3, [r5]
 800026c:	2a00      	cmp	r2, #0
 800026e:	d1f7      	bne.n	8000260 <UART_WaitOnFlagUntilTimeout.constprop.0+0x38>
 8000270:	6832      	ldr	r2, [r6, #0]
 8000272:	f102 0308 	add.w	r3, r2, #8
 8000276:	e853 3f00 	ldrex	r3, [r3]
 800027a:	f023 0301 	bic.w	r3, r3, #1
 800027e:	f102 0008 	add.w	r0, r2, #8
 8000282:	e840 3100 	strex	r1, r3, [r0]
 8000286:	2900      	cmp	r1, #0
 8000288:	d1f3      	bne.n	8000272 <UART_WaitOnFlagUntilTimeout.constprop.0+0x4a>
 800028a:	2320      	movs	r3, #32
 800028c:	67b3      	str	r3, [r6, #120]	; 0x78
 800028e:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 8000292:	67f3      	str	r3, [r6, #124]	; 0x7c
 8000294:	2003      	movs	r0, #3
 8000296:	f8c6 3080 	str.w	r3, [r6, #128]	; 0x80
 800029a:	e7d1      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 800029c:	e855 3f00 	ldrex	r3, [r5]
 80002a0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80002a4:	e845 3200 	strex	r2, r3, [r5]
 80002a8:	2a00      	cmp	r2, #0
 80002aa:	d1f7      	bne.n	800029c <UART_WaitOnFlagUntilTimeout.constprop.0+0x74>
 80002ac:	6832      	ldr	r2, [r6, #0]
 80002ae:	f102 0308 	add.w	r3, r2, #8
 80002b2:	e853 3f00 	ldrex	r3, [r3]
 80002b6:	f023 0301 	bic.w	r3, r3, #1
 80002ba:	f102 0008 	add.w	r0, r2, #8
 80002be:	e840 3100 	strex	r1, r3, [r0]
 80002c2:	2900      	cmp	r1, #0
 80002c4:	d1f3      	bne.n	80002ae <UART_WaitOnFlagUntilTimeout.constprop.0+0x86>
 80002c6:	2320      	movs	r3, #32
 80002c8:	67b3      	str	r3, [r6, #120]	; 0x78
 80002ca:	f886 1074 	strb.w	r1, [r6, #116]	; 0x74
 80002ce:	2003      	movs	r0, #3
 80002d0:	67f3      	str	r3, [r6, #124]	; 0x7c
 80002d2:	e7b5      	b.n	8000240 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
 80002d4:	200000ac 	.word	0x200000ac

080002d8 <HAL_DMA_Init.constprop.0>:
 80002d8:	4603      	mov	r3, r0
 80002da:	4a21      	ldr	r2, [pc, #132]	; (8000360 <HAL_DMA_Init.constprop.0+0x88>)
 80002dc:	6800      	ldr	r0, [r0, #0]
 80002de:	4290      	cmp	r0, r2
 80002e0:	bf95      	itete	ls
 80002e2:	4a20      	ldrls	r2, [pc, #128]	; (8000364 <HAL_DMA_Init.constprop.0+0x8c>)
 80002e4:	4a20      	ldrhi	r2, [pc, #128]	; (8000368 <HAL_DMA_Init.constprop.0+0x90>)
 80002e6:	4921      	ldrls	r1, [pc, #132]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 80002e8:	4921      	ldrhi	r1, [pc, #132]	; (8000370 <HAL_DMA_Init.constprop.0+0x98>)
 80002ea:	b430      	push	{r4, r5}
 80002ec:	4402      	add	r2, r0
 80002ee:	6419      	str	r1, [r3, #64]	; 0x40
 80002f0:	2114      	movs	r1, #20
 80002f2:	fbb2 f2f1 	udiv	r2, r2, r1
 80002f6:	0092      	lsls	r2, r2, #2
 80002f8:	645a      	str	r2, [r3, #68]	; 0x44
 80002fa:	2202      	movs	r2, #2
 80002fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8000300:	6801      	ldr	r1, [r0, #0]
 8000302:	689d      	ldr	r5, [r3, #8]
 8000304:	e9d3 2405 	ldrd	r2, r4, [r3, #20]
 8000308:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800030c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8000310:	432a      	orrs	r2, r5
 8000312:	430a      	orrs	r2, r1
 8000314:	4322      	orrs	r2, r4
 8000316:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800031a:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 800031e:	6002      	str	r2, [r0, #0]
 8000320:	d014      	beq.n	800034c <HAL_DMA_Init.constprop.0+0x74>
 8000322:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8000324:	4a11      	ldr	r2, [pc, #68]	; (800036c <HAL_DMA_Init.constprop.0+0x94>)
 8000326:	4291      	cmp	r1, r2
 8000328:	bf08      	it	eq
 800032a:	4912      	ldreq	r1, [pc, #72]	; (8000374 <HAL_DMA_Init.constprop.0+0x9c>)
 800032c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800032e:	bf18      	it	ne
 8000330:	4911      	ldrne	r1, [pc, #68]	; (8000378 <HAL_DMA_Init.constprop.0+0xa0>)
 8000332:	f002 001c 	and.w	r0, r2, #28
 8000336:	240f      	movs	r4, #15
 8000338:	680a      	ldr	r2, [r1, #0]
 800033a:	4084      	lsls	r4, r0
 800033c:	ea22 0204 	bic.w	r2, r2, r4
 8000340:	600a      	str	r2, [r1, #0]
 8000342:	685a      	ldr	r2, [r3, #4]
 8000344:	680c      	ldr	r4, [r1, #0]
 8000346:	4082      	lsls	r2, r0
 8000348:	4322      	orrs	r2, r4
 800034a:	600a      	str	r2, [r1, #0]
 800034c:	2000      	movs	r0, #0
 800034e:	2201      	movs	r2, #1
 8000350:	63d8      	str	r0, [r3, #60]	; 0x3c
 8000352:	f883 0024 	strb.w	r0, [r3, #36]	; 0x24
 8000356:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800035a:	bc30      	pop	{r4, r5}
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	40020407 	.word	0x40020407
 8000364:	bffdfff8 	.word	0xbffdfff8
 8000368:	bffdfbf8 	.word	0xbffdfbf8
 800036c:	40020000 	.word	0x40020000
 8000370:	40020400 	.word	0x40020400
 8000374:	400200a8 	.word	0x400200a8
 8000378:	400204a8 	.word	0x400204a8

0800037c <HAL_RTC_SetAlarm_IT.constprop.0>:
 800037c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000380:	4c65      	ldr	r4, [pc, #404]	; (8000518 <HAL_RTC_SetAlarm_IT.constprop.0+0x19c>)
 8000382:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8000386:	2b01      	cmp	r3, #1
 8000388:	f000 80c2 	beq.w	8000510 <HAL_RTC_SetAlarm_IT.constprop.0+0x194>
 800038c:	6861      	ldr	r1, [r4, #4]
 800038e:	2201      	movs	r2, #1
 8000390:	2302      	movs	r3, #2
 8000392:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8000396:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800039a:	688e      	ldr	r6, [r1, #8]
 800039c:	7802      	ldrb	r2, [r0, #0]
 800039e:	6a05      	ldr	r5, [r0, #32]
 80003a0:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80003a4:	bf16      	itet	ne
 80003a6:	78c6      	ldrbne	r6, [r0, #3]
 80003a8:	70c6      	strbeq	r6, [r0, #3]
 80003aa:	05b6      	lslne	r6, r6, #22
 80003ac:	2a09      	cmp	r2, #9
 80003ae:	d909      	bls.n	80003c4 <HAL_RTC_SetAlarm_IT.constprop.0+0x48>
 80003b0:	2300      	movs	r3, #0
 80003b2:	3a0a      	subs	r2, #10
 80003b4:	b2d2      	uxtb	r2, r2
 80003b6:	2a09      	cmp	r2, #9
 80003b8:	f103 0301 	add.w	r3, r3, #1
 80003bc:	d8f9      	bhi.n	80003b2 <HAL_RTC_SetAlarm_IT.constprop.0+0x36>
 80003be:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
 80003c2:	b2d2      	uxtb	r2, r2
 80003c4:	7843      	ldrb	r3, [r0, #1]
 80003c6:	2b09      	cmp	r3, #9
 80003c8:	ea4f 4202 	mov.w	r2, r2, lsl #16
 80003cc:	d909      	bls.n	80003e2 <HAL_RTC_SetAlarm_IT.constprop.0+0x66>
 80003ce:	2700      	movs	r7, #0
 80003d0:	3b0a      	subs	r3, #10
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	2b09      	cmp	r3, #9
 80003d6:	f107 0701 	add.w	r7, r7, #1
 80003da:	d8f9      	bhi.n	80003d0 <HAL_RTC_SetAlarm_IT.constprop.0+0x54>
 80003dc:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f890 e002 	ldrb.w	lr, [r0, #2]
 80003e6:	f1be 0f09 	cmp.w	lr, #9
 80003ea:	ea4f 2803 	mov.w	r8, r3, lsl #8
 80003ee:	d90d      	bls.n	800040c <HAL_RTC_SetAlarm_IT.constprop.0+0x90>
 80003f0:	2700      	movs	r7, #0
 80003f2:	f1ae 0e0a 	sub.w	lr, lr, #10
 80003f6:	fa5f fe8e 	uxtb.w	lr, lr
 80003fa:	f1be 0f09 	cmp.w	lr, #9
 80003fe:	f107 0701 	add.w	r7, r7, #1
 8000402:	d8f6      	bhi.n	80003f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x76>
 8000404:	ea4e 1e07 	orr.w	lr, lr, r7, lsl #4
 8000408:	fa5f fe8e 	uxtb.w	lr, lr
 800040c:	f890 c024 	ldrb.w	ip, [r0, #36]	; 0x24
 8000410:	f1bc 0f09 	cmp.w	ip, #9
 8000414:	d90d      	bls.n	8000432 <HAL_RTC_SetAlarm_IT.constprop.0+0xb6>
 8000416:	2700      	movs	r7, #0
 8000418:	f1ac 0c0a 	sub.w	ip, ip, #10
 800041c:	fa5f fc8c 	uxtb.w	ip, ip
 8000420:	f1bc 0f09 	cmp.w	ip, #9
 8000424:	f107 0701 	add.w	r7, r7, #1
 8000428:	d8f6      	bhi.n	8000418 <HAL_RTC_SetAlarm_IT.constprop.0+0x9c>
 800042a:	ea4c 1c07 	orr.w	ip, ip, r7, lsl #4
 800042e:	fa5f fc8c 	uxtb.w	ip, ip
 8000432:	6943      	ldr	r3, [r0, #20]
 8000434:	6847      	ldr	r7, [r0, #4]
 8000436:	431d      	orrs	r5, r3
 8000438:	432e      	orrs	r6, r5
 800043a:	4332      	orrs	r2, r6
 800043c:	ea48 0302 	orr.w	r3, r8, r2
 8000440:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8000442:	69c6      	ldr	r6, [r0, #28]
 8000444:	25ca      	movs	r5, #202	; 0xca
 8000446:	2053      	movs	r0, #83	; 0x53
 8000448:	624d      	str	r5, [r1, #36]	; 0x24
 800044a:	ea43 0e0e 	orr.w	lr, r3, lr
 800044e:	6248      	str	r0, [r1, #36]	; 0x24
 8000450:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8000454:	ea4e 630c 	orr.w	r3, lr, ip, lsl #24
 8000458:	688a      	ldr	r2, [r1, #8]
 800045a:	ea46 0607 	orr.w	r6, r6, r7
 800045e:	d039      	beq.n	80004d4 <HAL_RTC_SetAlarm_IT.constprop.0+0x158>
 8000460:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000464:	608a      	str	r2, [r1, #8]
 8000466:	68ca      	ldr	r2, [r1, #12]
 8000468:	b2d2      	uxtb	r2, r2
 800046a:	f462 7220 	orn	r2, r2, #640	; 0x280
 800046e:	60ca      	str	r2, [r1, #12]
 8000470:	6825      	ldr	r5, [r4, #0]
 8000472:	e004      	b.n	800047e <HAL_RTC_SetAlarm_IT.constprop.0+0x102>
 8000474:	6820      	ldr	r0, [r4, #0]
 8000476:	1b40      	subs	r0, r0, r5
 8000478:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800047c:	d820      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 800047e:	68ca      	ldr	r2, [r1, #12]
 8000480:	f012 0202 	ands.w	r2, r2, #2
 8000484:	d0f6      	beq.n	8000474 <HAL_RTC_SetAlarm_IT.constprop.0+0xf8>
 8000486:	620b      	str	r3, [r1, #32]
 8000488:	648e      	str	r6, [r1, #72]	; 0x48
 800048a:	688b      	ldr	r3, [r1, #8]
 800048c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000490:	608b      	str	r3, [r1, #8]
 8000492:	688b      	ldr	r3, [r1, #8]
 8000494:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000498:	608b      	str	r3, [r1, #8]
 800049a:	4b20      	ldr	r3, [pc, #128]	; (800051c <HAL_RTC_SetAlarm_IT.constprop.0+0x1a0>)
 800049c:	681a      	ldr	r2, [r3, #0]
 800049e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004a2:	601a      	str	r2, [r3, #0]
 80004a4:	689a      	ldr	r2, [r3, #8]
 80004a6:	26ff      	movs	r6, #255	; 0xff
 80004a8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80004ac:	2501      	movs	r5, #1
 80004ae:	2000      	movs	r0, #0
 80004b0:	609a      	str	r2, [r3, #8]
 80004b2:	624e      	str	r6, [r1, #36]	; 0x24
 80004b4:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80004b8:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80004bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004c0:	2303      	movs	r3, #3
 80004c2:	20ff      	movs	r0, #255	; 0xff
 80004c4:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80004c8:	6248      	str	r0, [r1, #36]	; 0x24
 80004ca:	4618      	mov	r0, r3
 80004cc:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80004d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80004d8:	608a      	str	r2, [r1, #8]
 80004da:	68ca      	ldr	r2, [r1, #12]
 80004dc:	b2d2      	uxtb	r2, r2
 80004de:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80004e2:	60ca      	str	r2, [r1, #12]
 80004e4:	6825      	ldr	r5, [r4, #0]
 80004e6:	e004      	b.n	80004f2 <HAL_RTC_SetAlarm_IT.constprop.0+0x176>
 80004e8:	6820      	ldr	r0, [r4, #0]
 80004ea:	1b40      	subs	r0, r0, r5
 80004ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80004f0:	d8e6      	bhi.n	80004c0 <HAL_RTC_SetAlarm_IT.constprop.0+0x144>
 80004f2:	68ca      	ldr	r2, [r1, #12]
 80004f4:	f012 0201 	ands.w	r2, r2, #1
 80004f8:	d0f6      	beq.n	80004e8 <HAL_RTC_SetAlarm_IT.constprop.0+0x16c>
 80004fa:	61cb      	str	r3, [r1, #28]
 80004fc:	644e      	str	r6, [r1, #68]	; 0x44
 80004fe:	688b      	ldr	r3, [r1, #8]
 8000500:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000504:	608b      	str	r3, [r1, #8]
 8000506:	688b      	ldr	r3, [r1, #8]
 8000508:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800050c:	608b      	str	r3, [r1, #8]
 800050e:	e7c4      	b.n	800049a <HAL_RTC_SetAlarm_IT.constprop.0+0x11e>
 8000510:	2002      	movs	r0, #2
 8000512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000516:	bf00      	nop
 8000518:	200000ac 	.word	0x200000ac
 800051c:	40010400 	.word	0x40010400

08000520 <HAL_RTC_WaitForSynchro.constprop.0>:
 8000520:	4909      	ldr	r1, [pc, #36]	; (8000548 <HAL_RTC_WaitForSynchro.constprop.0+0x28>)
 8000522:	684a      	ldr	r2, [r1, #4]
 8000524:	68d3      	ldr	r3, [r2, #12]
 8000526:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800052a:	60d3      	str	r3, [r2, #12]
 800052c:	6808      	ldr	r0, [r1, #0]
 800052e:	e004      	b.n	800053a <HAL_RTC_WaitForSynchro.constprop.0+0x1a>
 8000530:	680b      	ldr	r3, [r1, #0]
 8000532:	1a1b      	subs	r3, r3, r0
 8000534:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000538:	d804      	bhi.n	8000544 <HAL_RTC_WaitForSynchro.constprop.0+0x24>
 800053a:	68d3      	ldr	r3, [r2, #12]
 800053c:	069b      	lsls	r3, r3, #26
 800053e:	d5f7      	bpl.n	8000530 <HAL_RTC_WaitForSynchro.constprop.0+0x10>
 8000540:	2000      	movs	r0, #0
 8000542:	4770      	bx	lr
 8000544:	2003      	movs	r0, #3
 8000546:	4770      	bx	lr
 8000548:	200000ac 	.word	0x200000ac

0800054c <RTC_ExitInitMode.constprop.0>:
 800054c:	b508      	push	{r3, lr}
 800054e:	4b11      	ldr	r3, [pc, #68]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 8000550:	68da      	ldr	r2, [r3, #12]
 8000552:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000556:	60da      	str	r2, [r3, #12]
 8000558:	689a      	ldr	r2, [r3, #8]
 800055a:	0692      	lsls	r2, r2, #26
 800055c:	d403      	bmi.n	8000566 <RTC_ExitInitMode.constprop.0+0x1a>
 800055e:	f7ff ffdf 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000562:	b988      	cbnz	r0, 8000588 <RTC_ExitInitMode.constprop.0+0x3c>
 8000564:	bd08      	pop	{r3, pc}
 8000566:	689a      	ldr	r2, [r3, #8]
 8000568:	f022 0220 	bic.w	r2, r2, #32
 800056c:	609a      	str	r2, [r3, #8]
 800056e:	f7ff ffd7 	bl	8000520 <HAL_RTC_WaitForSynchro.constprop.0>
 8000572:	b118      	cbz	r0, 800057c <RTC_ExitInitMode.constprop.0+0x30>
 8000574:	4b08      	ldr	r3, [pc, #32]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 8000576:	2003      	movs	r0, #3
 8000578:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 800057c:	4a05      	ldr	r2, [pc, #20]	; (8000594 <RTC_ExitInitMode.constprop.0+0x48>)
 800057e:	6893      	ldr	r3, [r2, #8]
 8000580:	f043 0320 	orr.w	r3, r3, #32
 8000584:	6093      	str	r3, [r2, #8]
 8000586:	bd08      	pop	{r3, pc}
 8000588:	4b03      	ldr	r3, [pc, #12]	; (8000598 <RTC_ExitInitMode.constprop.0+0x4c>)
 800058a:	2003      	movs	r0, #3
 800058c:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8000590:	bd08      	pop	{r3, pc}
 8000592:	bf00      	nop
 8000594:	40002800 	.word	0x40002800
 8000598:	200000ac 	.word	0x200000ac

0800059c <RTC_EnterInitMode.constprop.0>:
 800059c:	490e      	ldr	r1, [pc, #56]	; (80005d8 <RTC_EnterInitMode.constprop.0+0x3c>)
 800059e:	684a      	ldr	r2, [r1, #4]
 80005a0:	68d0      	ldr	r0, [r2, #12]
 80005a2:	f010 0040 	ands.w	r0, r0, #64	; 0x40
 80005a6:	d001      	beq.n	80005ac <RTC_EnterInitMode.constprop.0+0x10>
 80005a8:	2000      	movs	r0, #0
 80005aa:	4770      	bx	lr
 80005ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80005b0:	b430      	push	{r4, r5}
 80005b2:	60d3      	str	r3, [r2, #12]
 80005b4:	680c      	ldr	r4, [r1, #0]
 80005b6:	2503      	movs	r5, #3
 80005b8:	e009      	b.n	80005ce <RTC_EnterInitMode.constprop.0+0x32>
 80005ba:	2803      	cmp	r0, #3
 80005bc:	d00a      	beq.n	80005d4 <RTC_EnterInitMode.constprop.0+0x38>
 80005be:	680b      	ldr	r3, [r1, #0]
 80005c0:	1b1b      	subs	r3, r3, r4
 80005c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80005c6:	bf84      	itt	hi
 80005c8:	f881 5025 	strbhi.w	r5, [r1, #37]	; 0x25
 80005cc:	2003      	movhi	r0, #3
 80005ce:	68d3      	ldr	r3, [r2, #12]
 80005d0:	065b      	lsls	r3, r3, #25
 80005d2:	d5f2      	bpl.n	80005ba <RTC_EnterInitMode.constprop.0+0x1e>
 80005d4:	bc30      	pop	{r4, r5}
 80005d6:	4770      	bx	lr
 80005d8:	200000ac 	.word	0x200000ac

080005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80005dc:	b4f0      	push	{r4, r5, r6, r7}
 80005de:	4b31      	ldr	r3, [pc, #196]	; (80006a4 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xc8>)
 80005e0:	4e31      	ldr	r6, [pc, #196]	; (80006a8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xcc>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6805      	ldr	r5, [r0, #0]
 80005e6:	b082      	sub	sp, #8
 80005e8:	2400      	movs	r4, #0
 80005ea:	f88d 4003 	strb.w	r4, [sp, #3]
 80005ee:	6834      	ldr	r4, [r6, #0]
 80005f0:	6837      	ldr	r7, [r6, #0]
 80005f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80005f6:	f1c4 0464 	rsb	r4, r4, #100	; 0x64
 80005fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80005fe:	4422      	add	r2, r4
 8000600:	0d1b      	lsrs	r3, r3, #20
 8000602:	fb02 f303 	mul.w	r3, r2, r3
 8000606:	9301      	str	r3, [sp, #4]
 8000608:	68ab      	ldr	r3, [r5, #8]
 800060a:	4219      	tst	r1, r3
 800060c:	d10a      	bne.n	8000624 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x48>
 800060e:	e02c      	b.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000610:	9c01      	ldr	r4, [sp, #4]
 8000612:	9b01      	ldr	r3, [sp, #4]
 8000614:	3b01      	subs	r3, #1
 8000616:	9301      	str	r3, [sp, #4]
 8000618:	68ab      	ldr	r3, [r5, #8]
 800061a:	2c00      	cmp	r4, #0
 800061c:	bf08      	it	eq
 800061e:	2200      	moveq	r2, #0
 8000620:	4219      	tst	r1, r3
 8000622:	d022      	beq.n	800066a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8e>
 8000624:	f5b1 6fc0 	cmp.w	r1, #1536	; 0x600
 8000628:	d105      	bne.n	8000636 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5a>
 800062a:	7b2b      	ldrb	r3, [r5, #12]
 800062c:	b2db      	uxtb	r3, r3
 800062e:	f88d 3003 	strb.w	r3, [sp, #3]
 8000632:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8000636:	6833      	ldr	r3, [r6, #0]
 8000638:	1bdb      	subs	r3, r3, r7
 800063a:	429a      	cmp	r2, r3
 800063c:	d8e8      	bhi.n	8000610 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x34>
 800063e:	686b      	ldr	r3, [r5, #4]
 8000640:	6842      	ldr	r2, [r0, #4]
 8000642:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8000646:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800064a:	606b      	str	r3, [r5, #4]
 800064c:	d01a      	beq.n	8000684 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa8>
 800064e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000650:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000654:	d00d      	beq.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 8000656:	2201      	movs	r2, #1
 8000658:	2300      	movs	r3, #0
 800065a:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 800065e:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8000662:	2003      	movs	r0, #3
 8000664:	b002      	add	sp, #8
 8000666:	bcf0      	pop	{r4, r5, r6, r7}
 8000668:	4770      	bx	lr
 800066a:	2000      	movs	r0, #0
 800066c:	b002      	add	sp, #8
 800066e:	bcf0      	pop	{r4, r5, r6, r7}
 8000670:	4770      	bx	lr
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000678:	602b      	str	r3, [r5, #0]
 800067a:	682b      	ldr	r3, [r5, #0]
 800067c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000680:	602b      	str	r3, [r5, #0]
 8000682:	e7e8      	b.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 8000684:	6883      	ldr	r3, [r0, #8]
 8000686:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800068a:	d002      	beq.n	8000692 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xb6>
 800068c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000690:	d1dd      	bne.n	800064e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x72>
 8000692:	682b      	ldr	r3, [r5, #0]
 8000694:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000698:	602b      	str	r3, [r5, #0]
 800069a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800069c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80006a0:	d1d9      	bne.n	8000656 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x7a>
 80006a2:	e7e6      	b.n	8000672 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x96>
 80006a4:	20000000 	.word	0x20000000
 80006a8:	200000ac 	.word	0x200000ac

080006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80006ac:	b470      	push	{r4, r5, r6}
 80006ae:	4d29      	ldr	r5, [pc, #164]	; (8000754 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80006b0:	4b29      	ldr	r3, [pc, #164]	; (8000758 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 80006b2:	682a      	ldr	r2, [r5, #0]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6804      	ldr	r4, [r0, #0]
 80006b8:	682e      	ldr	r6, [r5, #0]
 80006ba:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
 80006be:	4411      	add	r1, r2
 80006c0:	b083      	sub	sp, #12
 80006c2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80006c6:	fb01 f303 	mul.w	r3, r1, r3
 80006ca:	9301      	str	r3, [sp, #4]
 80006cc:	68a3      	ldr	r3, [r4, #8]
 80006ce:	061a      	lsls	r2, r3, #24
 80006d0:	d50d      	bpl.n	80006ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x42>
 80006d2:	682b      	ldr	r3, [r5, #0]
 80006d4:	1b9b      	subs	r3, r3, r6
 80006d6:	428b      	cmp	r3, r1
 80006d8:	d20d      	bcs.n	80006f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4a>
 80006da:	9a01      	ldr	r2, [sp, #4]
 80006dc:	9b01      	ldr	r3, [sp, #4]
 80006de:	3b01      	subs	r3, #1
 80006e0:	9301      	str	r3, [sp, #4]
 80006e2:	68a3      	ldr	r3, [r4, #8]
 80006e4:	2a00      	cmp	r2, #0
 80006e6:	bf08      	it	eq
 80006e8:	2100      	moveq	r1, #0
 80006ea:	061b      	lsls	r3, r3, #24
 80006ec:	d4f1      	bmi.n	80006d2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 80006ee:	2000      	movs	r0, #0
 80006f0:	b003      	add	sp, #12
 80006f2:	bc70      	pop	{r4, r5, r6}
 80006f4:	4770      	bx	lr
 80006f6:	6863      	ldr	r3, [r4, #4]
 80006f8:	6842      	ldr	r2, [r0, #4]
 80006fa:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80006fe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8000702:	6063      	str	r3, [r4, #4]
 8000704:	d016      	beq.n	8000734 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
 8000706:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000708:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800070c:	d009      	beq.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800070e:	2201      	movs	r2, #1
 8000710:	2300      	movs	r3, #0
 8000712:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 8000716:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800071a:	2003      	movs	r0, #3
 800071c:	b003      	add	sp, #12
 800071e:	bc70      	pop	{r4, r5, r6}
 8000720:	4770      	bx	lr
 8000722:	6823      	ldr	r3, [r4, #0]
 8000724:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000728:	6023      	str	r3, [r4, #0]
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	e7ec      	b.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000734:	6883      	ldr	r3, [r0, #8]
 8000736:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800073a:	d002      	beq.n	8000742 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
 800073c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000740:	d1e1      	bne.n	8000706 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x5a>
 8000742:	6823      	ldr	r3, [r4, #0]
 8000744:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000748:	6023      	str	r3, [r4, #0]
 800074a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800074c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000750:	d1dd      	bne.n	800070e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
 8000752:	e7e6      	b.n	8000722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8000754:	200000ac 	.word	0x200000ac
 8000758:	20000000 	.word	0x20000000

0800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>:
 800075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000760:	4604      	mov	r4, r0
 8000762:	b087      	sub	sp, #28
 8000764:	2500      	movs	r5, #0
 8000766:	eb04 0e41 	add.w	lr, r4, r1, lsl #1
 800076a:	9002      	str	r0, [sp, #8]
 800076c:	9205      	str	r2, [sp, #20]
 800076e:	4610      	mov	r0, r2
 8000770:	f8df b1c4 	ldr.w	fp, [pc, #452]	; 8000938 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1dc>
 8000774:	9104      	str	r1, [sp, #16]
 8000776:	9303      	str	r3, [sp, #12]
 8000778:	f1ae 0e22 	sub.w	lr, lr, #34	; 0x22
 800077c:	1ea2      	subs	r2, r4, #2
 800077e:	462f      	mov	r7, r5
 8000780:	9500      	str	r5, [sp, #0]
 8000782:	46aa      	mov	sl, r5
 8000784:	9501      	str	r5, [sp, #4]
 8000786:	f04f 0c01 	mov.w	ip, #1
 800078a:	f240 29ee 	movw	r9, #750	; 0x2ee
 800078e:	e013      	b.n	80007b8 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x5c>
 8000790:	9d01      	ldr	r5, [sp, #4]
 8000792:	bb7d      	cbnz	r5, 80007f4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x98>
 8000794:	4553      	cmp	r3, sl
 8000796:	dd34      	ble.n	8000802 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xa6>
 8000798:	469a      	mov	sl, r3
 800079a:	2501      	movs	r5, #1
 800079c:	9e00      	ldr	r6, [sp, #0]
 800079e:	4276      	negs	r6, r6
 80007a0:	42b3      	cmp	r3, r6
 80007a2:	bfbc      	itt	lt
 80007a4:	eba8 0304 	sublt.w	r3, r8, r4
 80007a8:	9300      	strlt	r3, [sp, #0]
 80007aa:	428f      	cmp	r7, r1
 80007ac:	bf38      	it	cc
 80007ae:	460f      	movcc	r7, r1
 80007b0:	4596      	cmp	lr, r2
 80007b2:	f100 0002 	add.w	r0, r0, #2
 80007b6:	d02a      	beq.n	800080e <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb2>
 80007b8:	8c54      	ldrh	r4, [r2, #34]	; 0x22
 80007ba:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 80007be:	1a63      	subs	r3, r4, r1
 80007c0:	f503 4600 	add.w	r6, r3, #32768	; 0x8000
 80007c4:	f5b6 3f80 	cmp.w	r6, #65536	; 0x10000
 80007c8:	bf38      	it	cc
 80007ca:	8003      	strhcc	r3, [r0, #0]
 80007cc:	4688      	mov	r8, r1
 80007ce:	bf2c      	ite	cs
 80007d0:	f04f 0c00 	movcs.w	ip, #0
 80007d4:	8811      	ldrhcc	r1, [r2, #0]
 80007d6:	454b      	cmp	r3, r9
 80007d8:	dcda      	bgt.n	8000790 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x34>
 80007da:	459a      	cmp	sl, r3
 80007dc:	bfb8      	it	lt
 80007de:	469a      	movlt	sl, r3
 80007e0:	455b      	cmp	r3, fp
 80007e2:	dadb      	bge.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 80007e4:	2d00      	cmp	r5, #0
 80007e6:	bf12      	itee	ne
 80007e8:	462e      	movne	r6, r5
 80007ea:	2601      	moveq	r6, #1
 80007ec:	f04f 0c00 	moveq.w	ip, #0
 80007f0:	9601      	str	r6, [sp, #4]
 80007f2:	e7d3      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 80007f4:	4553      	cmp	r3, sl
 80007f6:	dd06      	ble.n	8000806 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xaa>
 80007f8:	9d01      	ldr	r5, [sp, #4]
 80007fa:	469a      	mov	sl, r3
 80007fc:	f04f 0c00 	mov.w	ip, #0
 8000800:	e7cc      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 8000802:	2501      	movs	r5, #1
 8000804:	e7ca      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 8000806:	9d01      	ldr	r5, [sp, #4]
 8000808:	f04f 0c00 	mov.w	ip, #0
 800080c:	e7c6      	b.n	800079c <acc_cal_algorithms_calc_pulse_params.constprop.0+0x40>
 800080e:	f1bc 0f00 	cmp.w	ip, #0
 8000812:	d105      	bne.n	8000820 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xc4>
 8000814:	2300      	movs	r3, #0
 8000816:	9301      	str	r3, [sp, #4]
 8000818:	9801      	ldr	r0, [sp, #4]
 800081a:	b007      	add	sp, #28
 800081c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000820:	2d00      	cmp	r5, #0
 8000822:	d0f7      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000824:	9b01      	ldr	r3, [sp, #4]
 8000826:	2b00      	cmp	r3, #0
 8000828:	d0f4      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800082a:	9b04      	ldr	r3, [sp, #16]
 800082c:	9e05      	ldr	r6, [sp, #20]
 800082e:	9704      	str	r7, [sp, #16]
 8000830:	f04f 0900 	mov.w	r9, #0
 8000834:	f1a3 0e38 	sub.w	lr, r3, #56	; 0x38
 8000838:	3626      	adds	r6, #38	; 0x26
 800083a:	46c8      	mov	r8, r9
 800083c:	46cc      	mov	ip, r9
 800083e:	464d      	mov	r5, r9
 8000840:	464f      	mov	r7, r9
 8000842:	f936 3f02 	ldrsh.w	r3, [r6, #2]!
 8000846:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800084a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800084e:	4630      	mov	r0, r6
 8000850:	4631      	mov	r1, r6
 8000852:	2214      	movs	r2, #20
 8000854:	f931 bd02 	ldrsh.w	fp, [r1, #-2]!
 8000858:	f930 4f02 	ldrsh.w	r4, [r0, #2]!
 800085c:	fb02 330b 	mla	r3, r2, fp, r3
 8000860:	f1a2 0b04 	sub.w	fp, r2, #4
 8000864:	3a01      	subs	r2, #1
 8000866:	fb0b 3304 	mla	r3, fp, r4, r3
 800086a:	d1f3      	bne.n	8000854 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xf8>
 800086c:	4563      	cmp	r3, ip
 800086e:	dc5b      	bgt.n	8000928 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1cc>
 8000870:	4543      	cmp	r3, r8
 8000872:	da01      	bge.n	8000878 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x11c>
 8000874:	4698      	mov	r8, r3
 8000876:	46a9      	mov	r9, r5
 8000878:	3501      	adds	r5, #1
 800087a:	4575      	cmp	r5, lr
 800087c:	d1e1      	bne.n	8000842 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xe6>
 800087e:	4b2c      	ldr	r3, [pc, #176]	; (8000930 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d4>)
 8000880:	459c      	cmp	ip, r3
 8000882:	4638      	mov	r0, r7
 8000884:	9f04      	ldr	r7, [sp, #16]
 8000886:	ddc5      	ble.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000888:	4b2a      	ldr	r3, [pc, #168]	; (8000934 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1d8>)
 800088a:	4598      	cmp	r8, r3
 800088c:	dac2      	bge.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800088e:	f1ba 0f00 	cmp.w	sl, #0
 8000892:	d0bf      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000894:	9b00      	ldr	r3, [sp, #0]
 8000896:	2b00      	cmp	r3, #0
 8000898:	d0bc      	beq.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800089a:	9b02      	ldr	r3, [sp, #8]
 800089c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800089e:	881b      	ldrh	r3, [r3, #0]
 80008a0:	013f      	lsls	r7, r7, #4
 80008a2:	011b      	lsls	r3, r3, #4
 80008a4:	b141      	cbz	r1, 80008b8 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x15c>
 80008a6:	42bb      	cmp	r3, r7
 80008a8:	d204      	bcs.n	80008b4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x158>
 80008aa:	43da      	mvns	r2, r3
 80008ac:	4452      	add	r2, sl
 80008ae:	443a      	add	r2, r7
 80008b0:	fbb2 f2fa 	udiv	r2, r2, sl
 80008b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80008b6:	600a      	str	r2, [r1, #0]
 80008b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80008ba:	2a00      	cmp	r2, #0
 80008bc:	d0ac      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008be:	9a03      	ldr	r2, [sp, #12]
 80008c0:	2a00      	cmp	r2, #0
 80008c2:	d0a9      	beq.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 80008c4:	4602      	mov	r2, r0
 80008c6:	9902      	ldr	r1, [sp, #8]
 80008c8:	321c      	adds	r2, #28
 80008ca:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80008ce:	ebb3 1f01 	cmp.w	r3, r1, lsl #4
 80008d2:	ea4f 1001 	mov.w	r0, r1, lsl #4
 80008d6:	d205      	bcs.n	80008e4 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x188>
 80008d8:	43db      	mvns	r3, r3
 80008da:	4453      	add	r3, sl
 80008dc:	4403      	add	r3, r0
 80008de:	fbb3 f3fa 	udiv	r3, r3, sl
 80008e2:	1ad2      	subs	r2, r2, r3
 80008e4:	9b02      	ldr	r3, [sp, #8]
 80008e6:	f109 091c 	add.w	r9, r9, #28
 80008ea:	f833 3019 	ldrh.w	r3, [r3, r9, lsl #1]
 80008ee:	ebb7 1f03 	cmp.w	r7, r3, lsl #4
 80008f2:	ea4f 1103 	mov.w	r1, r3, lsl #4
 80008f6:	d907      	bls.n	8000908 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x1ac>
 80008f8:	9800      	ldr	r0, [sp, #0]
 80008fa:	1e43      	subs	r3, r0, #1
 80008fc:	443b      	add	r3, r7
 80008fe:	1a5b      	subs	r3, r3, r1
 8000900:	fbb3 f3f0 	udiv	r3, r3, r0
 8000904:	eba9 0903 	sub.w	r9, r9, r3
 8000908:	2a00      	cmp	r2, #0
 800090a:	db83      	blt.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 800090c:	f1b9 0f00 	cmp.w	r9, #0
 8000910:	db80      	blt.n	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000912:	454a      	cmp	r2, r9
 8000914:	f73f af7e 	bgt.w	8000814 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xb8>
 8000918:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800091a:	eba9 0902 	sub.w	r9, r9, r2
 800091e:	f8c3 9000 	str.w	r9, [r3]
 8000922:	9b03      	ldr	r3, [sp, #12]
 8000924:	601a      	str	r2, [r3, #0]
 8000926:	e777      	b.n	8000818 <acc_cal_algorithms_calc_pulse_params.constprop.0+0xbc>
 8000928:	469c      	mov	ip, r3
 800092a:	462f      	mov	r7, r5
 800092c:	e7a4      	b.n	8000878 <acc_cal_algorithms_calc_pulse_params.constprop.0+0x11c>
 800092e:	bf00      	nop
 8000930:	000186a0 	.word	0x000186a0
 8000934:	fffe7960 	.word	0xfffe7960
 8000938:	fffffd12 	.word	0xfffffd12

0800093c <acc_diagnostic_log_array.constprop.0>:
 800093c:	4b03      	ldr	r3, [pc, #12]	; (800094c <acc_diagnostic_log_array.constprop.0+0x10>)
 800093e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000940:	b113      	cbz	r3, 8000948 <acc_diagnostic_log_array.constprop.0+0xc>
 8000942:	68db      	ldr	r3, [r3, #12]
 8000944:	4902      	ldr	r1, [pc, #8]	; (8000950 <acc_diagnostic_log_array.constprop.0+0x14>)
 8000946:	4718      	bx	r3
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop
 800094c:	200000ac 	.word	0x200000ac
 8000950:	0800ac2c 	.word	0x0800ac2c

08000954 <acc_cal_algorithms_phase_unwrap.constprop.0>:
 8000954:	b470      	push	{r4, r5, r6}
 8000956:	4e12      	ldr	r6, [pc, #72]	; (80009a0 <acc_cal_algorithms_phase_unwrap.constprop.0+0x4c>)
 8000958:	4d12      	ldr	r5, [pc, #72]	; (80009a4 <acc_cal_algorithms_phase_unwrap.constprop.0+0x50>)
 800095a:	f100 04bc 	add.w	r4, r0, #188	; 0xbc
 800095e:	2100      	movs	r1, #0
 8000960:	6843      	ldr	r3, [r0, #4]
 8000962:	440b      	add	r3, r1
 8000964:	4602      	mov	r2, r0
 8000966:	f840 3f04 	str.w	r3, [r0, #4]!
 800096a:	6812      	ldr	r2, [r2, #0]
 800096c:	1a9a      	subs	r2, r3, r2
 800096e:	42b2      	cmp	r2, r6
 8000970:	dd09      	ble.n	8000986 <acc_cal_algorithms_phase_unwrap.constprop.0+0x32>
 8000972:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8000976:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 800097a:	3b7e      	subs	r3, #126	; 0x7e
 800097c:	f5a1 21c9 	sub.w	r1, r1, #411648	; 0x64800
 8000980:	6003      	str	r3, [r0, #0]
 8000982:	397e      	subs	r1, #126	; 0x7e
 8000984:	1a9a      	subs	r2, r3, r2
 8000986:	42aa      	cmp	r2, r5
 8000988:	da06      	bge.n	8000998 <acc_cal_algorithms_phase_unwrap.constprop.0+0x44>
 800098a:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 800098e:	337e      	adds	r3, #126	; 0x7e
 8000990:	f501 21c9 	add.w	r1, r1, #411648	; 0x64800
 8000994:	6003      	str	r3, [r0, #0]
 8000996:	317e      	adds	r1, #126	; 0x7e
 8000998:	4284      	cmp	r4, r0
 800099a:	d1e1      	bne.n	8000960 <acc_cal_algorithms_phase_unwrap.constprop.0+0xc>
 800099c:	bc70      	pop	{r4, r5, r6}
 800099e:	4770      	bx	lr
 80009a0:	0003243f 	.word	0x0003243f
 80009a4:	fffcdbc1 	.word	0xfffcdbc1

080009a8 <diagnostic_log_data_i16.part.0>:
 80009a8:	4b05      	ldr	r3, [pc, #20]	; (80009c0 <diagnostic_log_data_i16.part.0+0x18>)
 80009aa:	4a06      	ldr	r2, [pc, #24]	; (80009c4 <diagnostic_log_data_i16.part.0+0x1c>)
 80009ac:	4906      	ldr	r1, [pc, #24]	; (80009c8 <diagnostic_log_data_i16.part.0+0x20>)
 80009ae:	b410      	push	{r4}
 80009b0:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80009b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80009b4:	46a4      	mov	ip, r4
 80009b6:	2002      	movs	r0, #2
 80009b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009bc:	4760      	bx	ip
 80009be:	bf00      	nop
 80009c0:	200000ac 	.word	0x200000ac
 80009c4:	0800a5a4 	.word	0x0800a5a4
 80009c8:	0800a5a8 	.word	0x0800a5a8

080009cc <acc_diagnostic_log_data_i16>:
 80009cc:	4b02      	ldr	r3, [pc, #8]	; (80009d8 <acc_diagnostic_log_data_i16+0xc>)
 80009ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009d0:	b10b      	cbz	r3, 80009d6 <acc_diagnostic_log_data_i16+0xa>
 80009d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009d4:	4718      	bx	r3
 80009d6:	4770      	bx	lr
 80009d8:	200000ac 	.word	0x200000ac

080009dc <acc_diagnostic_log_data_u16>:
 80009dc:	4b02      	ldr	r3, [pc, #8]	; (80009e8 <acc_diagnostic_log_data_u16+0xc>)
 80009de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009e0:	b10b      	cbz	r3, 80009e6 <acc_diagnostic_log_data_u16+0xa>
 80009e2:	6a1b      	ldr	r3, [r3, #32]
 80009e4:	4718      	bx	r3
 80009e6:	4770      	bx	lr
 80009e8:	200000ac 	.word	0x200000ac

080009ec <acc_diagnostic_log_scalar>:
 80009ec:	4b02      	ldr	r3, [pc, #8]	; (80009f8 <acc_diagnostic_log_scalar+0xc>)
 80009ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009f0:	b10b      	cbz	r3, 80009f6 <acc_diagnostic_log_scalar+0xa>
 80009f2:	695b      	ldr	r3, [r3, #20]
 80009f4:	4718      	bx	r3
 80009f6:	4770      	bx	lr
 80009f8:	200000ac 	.word	0x200000ac

080009fc <acc_diagnostic_log_set_scope>:
 80009fc:	4b02      	ldr	r3, [pc, #8]	; (8000a08 <acc_diagnostic_log_set_scope+0xc>)
 80009fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a00:	b10b      	cbz	r3, 8000a06 <acc_diagnostic_log_set_scope+0xa>
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	4718      	bx	r3
 8000a06:	4770      	bx	lr
 8000a08:	200000ac 	.word	0x200000ac

08000a0c <adl_add_value_to_buffer>:
 8000a0c:	4b18      	ldr	r3, [pc, #96]	; (8000a70 <adl_add_value_to_buffer+0x64>)
 8000a0e:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000a74 <adl_add_value_to_buffer+0x68>
 8000a12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a16:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8000a18:	1873      	adds	r3, r6, r1
 8000a1a:	1e5c      	subs	r4, r3, #1
 8000a1c:	46a6      	mov	lr, r4
 8000a1e:	2200      	movs	r2, #0
 8000a20:	fbac 7500 	umull	r7, r5, ip, r0
 8000a24:	08ed      	lsrs	r5, r5, #3
 8000a26:	eb05 0785 	add.w	r7, r5, r5, lsl #2
 8000a2a:	eba0 0747 	sub.w	r7, r0, r7, lsl #1
 8000a2e:	4680      	mov	r8, r0
 8000a30:	3730      	adds	r7, #48	; 0x30
 8000a32:	f1b8 0f09 	cmp.w	r8, #9
 8000a36:	4628      	mov	r0, r5
 8000a38:	f80e 7f01 	strb.w	r7, [lr, #1]!
 8000a3c:	4615      	mov	r5, r2
 8000a3e:	f102 0201 	add.w	r2, r2, #1
 8000a42:	d8ed      	bhi.n	8000a20 <adl_add_value_to_buffer+0x14>
 8000a44:	2000      	movs	r0, #0
 8000a46:	5498      	strb	r0, [r3, r2]
 8000a48:	4610      	mov	r0, r2
 8000a4a:	4418      	add	r0, r3
 8000a4c:	eb03 0355 	add.w	r3, r3, r5, lsr #1
 8000a50:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8000a54:	f810 7d01 	ldrb.w	r7, [r0, #-1]!
 8000a58:	7027      	strb	r7, [r4, #0]
 8000a5a:	429c      	cmp	r4, r3
 8000a5c:	7005      	strb	r5, [r0, #0]
 8000a5e:	d1f7      	bne.n	8000a50 <adl_add_value_to_buffer+0x44>
 8000a60:	4411      	add	r1, r2
 8000a62:	1c48      	adds	r0, r1, #1
 8000a64:	222c      	movs	r2, #44	; 0x2c
 8000a66:	2300      	movs	r3, #0
 8000a68:	5472      	strb	r2, [r6, r1]
 8000a6a:	5433      	strb	r3, [r6, r0]
 8000a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a70:	200000ac 	.word	0x200000ac
 8000a74:	cccccccd 	.word	0xcccccccd

08000a78 <diagnostic_log_scalar>:
 8000a78:	b510      	push	{r4, lr}
 8000a7a:	4a07      	ldr	r2, [pc, #28]	; (8000a98 <diagnostic_log_scalar+0x20>)
 8000a7c:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000a80:	2c01      	cmp	r4, #1
 8000a82:	b082      	sub	sp, #8
 8000a84:	d906      	bls.n	8000a94 <diagnostic_log_scalar+0x1c>
 8000a86:	9100      	str	r1, [sp, #0]
 8000a88:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000a8a:	4904      	ldr	r1, [pc, #16]	; (8000a9c <diagnostic_log_scalar+0x24>)
 8000a8c:	4a04      	ldr	r2, [pc, #16]	; (8000aa0 <diagnostic_log_scalar+0x28>)
 8000a8e:	4603      	mov	r3, r0
 8000a90:	2002      	movs	r0, #2
 8000a92:	47a0      	blx	r4
 8000a94:	b002      	add	sp, #8
 8000a96:	bd10      	pop	{r4, pc}
 8000a98:	200000ac 	.word	0x200000ac
 8000a9c:	0800a5a8 	.word	0x0800a5a8
 8000aa0:	0800a5ac 	.word	0x0800a5ac

08000aa4 <diagnostic_log_array_sub_name>:
 8000aa4:	b530      	push	{r4, r5, lr}
 8000aa6:	4c08      	ldr	r4, [pc, #32]	; (8000ac8 <diagnostic_log_array_sub_name+0x24>)
 8000aa8:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000aac:	2d01      	cmp	r5, #1
 8000aae:	b083      	sub	sp, #12
 8000ab0:	d907      	bls.n	8000ac2 <diagnostic_log_array_sub_name+0x1e>
 8000ab2:	e9cd 1200 	strd	r1, r2, [sp]
 8000ab6:	4603      	mov	r3, r0
 8000ab8:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000aba:	4a04      	ldr	r2, [pc, #16]	; (8000acc <diagnostic_log_array_sub_name+0x28>)
 8000abc:	4904      	ldr	r1, [pc, #16]	; (8000ad0 <diagnostic_log_array_sub_name+0x2c>)
 8000abe:	2002      	movs	r0, #2
 8000ac0:	47a0      	blx	r4
 8000ac2:	b003      	add	sp, #12
 8000ac4:	bd30      	pop	{r4, r5, pc}
 8000ac6:	bf00      	nop
 8000ac8:	200000ac 	.word	0x200000ac
 8000acc:	0800a5c0 	.word	0x0800a5c0
 8000ad0:	0800a5a8 	.word	0x0800a5a8

08000ad4 <diagnostic_log_array>:
 8000ad4:	b510      	push	{r4, lr}
 8000ad6:	4a07      	ldr	r2, [pc, #28]	; (8000af4 <diagnostic_log_array+0x20>)
 8000ad8:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000adc:	2c01      	cmp	r4, #1
 8000ade:	b082      	sub	sp, #8
 8000ae0:	d906      	bls.n	8000af0 <diagnostic_log_array+0x1c>
 8000ae2:	9100      	str	r1, [sp, #0]
 8000ae4:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000ae6:	4904      	ldr	r1, [pc, #16]	; (8000af8 <diagnostic_log_array+0x24>)
 8000ae8:	4a04      	ldr	r2, [pc, #16]	; (8000afc <diagnostic_log_array+0x28>)
 8000aea:	4603      	mov	r3, r0
 8000aec:	2002      	movs	r0, #2
 8000aee:	47a0      	blx	r4
 8000af0:	b002      	add	sp, #8
 8000af2:	bd10      	pop	{r4, pc}
 8000af4:	200000ac 	.word	0x200000ac
 8000af8:	0800a5a8 	.word	0x0800a5a8
 8000afc:	0800a5d8 	.word	0x0800a5d8

08000b00 <diagnostic_log_set_parameter>:
 8000b00:	b510      	push	{r4, lr}
 8000b02:	4a07      	ldr	r2, [pc, #28]	; (8000b20 <diagnostic_log_set_parameter+0x20>)
 8000b04:	f892 4048 	ldrb.w	r4, [r2, #72]	; 0x48
 8000b08:	2c01      	cmp	r4, #1
 8000b0a:	b082      	sub	sp, #8
 8000b0c:	d906      	bls.n	8000b1c <diagnostic_log_set_parameter+0x1c>
 8000b0e:	9100      	str	r1, [sp, #0]
 8000b10:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b12:	4904      	ldr	r1, [pc, #16]	; (8000b24 <diagnostic_log_set_parameter+0x24>)
 8000b14:	4a04      	ldr	r2, [pc, #16]	; (8000b28 <diagnostic_log_set_parameter+0x28>)
 8000b16:	4603      	mov	r3, r0
 8000b18:	2002      	movs	r0, #2
 8000b1a:	47a0      	blx	r4
 8000b1c:	b002      	add	sp, #8
 8000b1e:	bd10      	pop	{r4, pc}
 8000b20:	200000ac 	.word	0x200000ac
 8000b24:	0800a5a8 	.word	0x0800a5a8
 8000b28:	0800a5ec 	.word	0x0800a5ec

08000b2c <diagnostic_log_declare_parameter>:
 8000b2c:	b530      	push	{r4, r5, lr}
 8000b2e:	4c08      	ldr	r4, [pc, #32]	; (8000b50 <diagnostic_log_declare_parameter+0x24>)
 8000b30:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 8000b34:	2d01      	cmp	r5, #1
 8000b36:	b083      	sub	sp, #12
 8000b38:	d907      	bls.n	8000b4a <diagnostic_log_declare_parameter+0x1e>
 8000b3a:	e9cd 1200 	strd	r1, r2, [sp]
 8000b3e:	4603      	mov	r3, r0
 8000b40:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8000b42:	4a04      	ldr	r2, [pc, #16]	; (8000b54 <diagnostic_log_declare_parameter+0x28>)
 8000b44:	4904      	ldr	r1, [pc, #16]	; (8000b58 <diagnostic_log_declare_parameter+0x2c>)
 8000b46:	2002      	movs	r0, #2
 8000b48:	47a0      	blx	r4
 8000b4a:	b003      	add	sp, #12
 8000b4c:	bd30      	pop	{r4, r5, pc}
 8000b4e:	bf00      	nop
 8000b50:	200000ac 	.word	0x200000ac
 8000b54:	0800a5fc 	.word	0x0800a5fc
 8000b58:	0800a5a8 	.word	0x0800a5a8

08000b5c <diagnostic_log_set_scope>:
 8000b5c:	4a07      	ldr	r2, [pc, #28]	; (8000b7c <diagnostic_log_set_scope+0x20>)
 8000b5e:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8000b62:	2901      	cmp	r1, #1
 8000b64:	d909      	bls.n	8000b7a <diagnostic_log_set_scope+0x1e>
 8000b66:	b410      	push	{r4}
 8000b68:	6c14      	ldr	r4, [r2, #64]	; 0x40
 8000b6a:	4905      	ldr	r1, [pc, #20]	; (8000b80 <diagnostic_log_set_scope+0x24>)
 8000b6c:	4a05      	ldr	r2, [pc, #20]	; (8000b84 <diagnostic_log_set_scope+0x28>)
 8000b6e:	4603      	mov	r3, r0
 8000b70:	46a4      	mov	ip, r4
 8000b72:	2002      	movs	r0, #2
 8000b74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b78:	4760      	bx	ip
 8000b7a:	4770      	bx	lr
 8000b7c:	200000ac 	.word	0x200000ac
 8000b80:	0800a5a8 	.word	0x0800a5a8
 8000b84:	0800a614 	.word	0x0800a614

08000b88 <acc_utils_transfer_buffer_to_uint32>:
 8000b88:	b17a      	cbz	r2, 8000baa <acc_utils_transfer_buffer_to_uint32+0x22>
 8000b8a:	b410      	push	{r4}
 8000b8c:	3904      	subs	r1, #4
 8000b8e:	eb00 0482 	add.w	r4, r0, r2, lsl #2
 8000b92:	8802      	ldrh	r2, [r0, #0]
 8000b94:	8843      	ldrh	r3, [r0, #2]
 8000b96:	3004      	adds	r0, #4
 8000b98:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b9c:	4284      	cmp	r4, r0
 8000b9e:	f841 3f04 	str.w	r3, [r1, #4]!
 8000ba2:	d1f6      	bne.n	8000b92 <acc_utils_transfer_buffer_to_uint32+0xa>
 8000ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ba8:	4770      	bx	lr
 8000baa:	4770      	bx	lr

08000bac <acc_confprogram_copy>:
 8000bac:	b152      	cbz	r2, 8000bc4 <acc_confprogram_copy+0x18>
 8000bae:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8000bb2:	3804      	subs	r0, #4
 8000bb4:	f850 3f04 	ldr.w	r3, [r0, #4]!
 8000bb8:	804b      	strh	r3, [r1, #2]
 8000bba:	0c1b      	lsrs	r3, r3, #16
 8000bbc:	800b      	strh	r3, [r1, #0]
 8000bbe:	3104      	adds	r1, #4
 8000bc0:	4291      	cmp	r1, r2
 8000bc2:	d1f7      	bne.n	8000bb4 <acc_confprogram_copy+0x8>
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <acc_cpd_pll_divisors_calculate>:
 8000bc8:	edd0 7a00 	vldr	s15, [r0]
 8000bcc:	ed9f 6a61 	vldr	s12, [pc, #388]	; 8000d54 <acc_cpd_pll_divisors_calculate+0x18c>
 8000bd0:	eddf 6a61 	vldr	s13, [pc, #388]	; 8000d58 <acc_cpd_pll_divisors_calculate+0x190>
 8000bd4:	ee86 7a27 	vdiv.f32	s14, s12, s15
 8000bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bda:	4606      	mov	r6, r0
 8000bdc:	b083      	sub	sp, #12
 8000bde:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8000be2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000be6:	eef4 7ae6 	vcmpe.f32	s15, s13
 8000bea:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000bf2:	ee17 3a10 	vmov	r3, s14
 8000bf6:	b29c      	uxth	r4, r3
 8000bf8:	dc06      	bgt.n	8000c08 <acc_cpd_pll_divisors_calculate+0x40>
 8000bfa:	ed9f 7a58 	vldr	s14, [pc, #352]	; 8000d5c <acc_cpd_pll_divisors_calculate+0x194>
 8000bfe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c06:	d571      	bpl.n	8000cec <acc_cpd_pll_divisors_calculate+0x124>
 8000c08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c10:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c14:	bf4c      	ite	mi
 8000c16:	4b53      	ldrmi	r3, [pc, #332]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000c18:	4b53      	ldrpl	r3, [pc, #332]	; (8000d68 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000c1a:	ed9f 6a51 	vldr	s12, [pc, #324]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c1e:	eddf 6a53 	vldr	s13, [pc, #332]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c22:	4d53      	ldr	r5, [pc, #332]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000c24:	4953      	ldr	r1, [pc, #332]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c26:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8000c28:	bf48      	it	mi
 8000c2a:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c32:	2000      	movs	r0, #0
 8000c34:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000c38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c40:	ee17 2a10 	vmov	r2, s14
 8000c44:	bf4c      	ite	mi
 8000c46:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000c4a:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000c4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000c52:	9200      	str	r2, [sp, #0]
 8000c54:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000c58:	4a47      	ldr	r2, [pc, #284]	; (8000d78 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000c5a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000c5e:	3c10      	subs	r4, #16
 8000c60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000c64:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000c68:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000c6c:	edcd 7a01 	vstr	s15, [sp, #4]
 8000c70:	47b8      	blx	r7
 8000c72:	2cef      	cmp	r4, #239	; 0xef
 8000c74:	d937      	bls.n	8000ce6 <acc_cpd_pll_divisors_calculate+0x11e>
 8000c76:	edd6 7a00 	vldr	s15, [r6]
 8000c7a:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c7e:	ed9f 6a38 	vldr	s12, [pc, #224]	; 8000d60 <acc_cpd_pll_divisors_calculate+0x198>
 8000c82:	eddf 6a3a 	vldr	s13, [pc, #232]	; 8000d6c <acc_cpd_pll_divisors_calculate+0x1a4>
 8000c86:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8000c88:	493a      	ldr	r1, [pc, #232]	; (8000d74 <acc_cpd_pll_divisors_calculate+0x1ac>)
 8000c8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c92:	bf48      	it	mi
 8000c94:	eef1 7a67 	vnegmi.f32	s15, s15
 8000c98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000c9c:	bf4c      	ite	mi
 8000c9e:	4b31      	ldrmi	r3, [pc, #196]	; (8000d64 <acc_cpd_pll_divisors_calculate+0x19c>)
 8000ca0:	4b31      	ldrpl	r3, [pc, #196]	; (8000d68 <acc_cpd_pll_divisors_calculate+0x1a0>)
 8000ca2:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8000ca6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cae:	ee17 2a10 	vmov	r2, s14
 8000cb2:	bf4c      	ite	mi
 8000cb4:	eeb1 7a67 	vnegmi.f32	s14, s15
 8000cb8:	eeb0 7a67 	vmovpl.f32	s14, s15
 8000cbc:	ee37 7a06 	vadd.f32	s14, s14, s12
 8000cc0:	9200      	str	r2, [sp, #0]
 8000cc2:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8000cc6:	4a2c      	ldr	r2, [pc, #176]	; (8000d78 <acc_cpd_pll_divisors_calculate+0x1b0>)
 8000cc8:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8000ccc:	2000      	movs	r0, #0
 8000cce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cd2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000cd6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000cda:	edcd 7a01 	vstr	s15, [sp, #4]
 8000cde:	47a0      	blx	r4
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	b003      	add	sp, #12
 8000ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ce6:	2000      	movs	r0, #0
 8000ce8:	b003      	add	sp, #12
 8000cea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cec:	f1a4 0310 	sub.w	r3, r4, #16
 8000cf0:	b29b      	uxth	r3, r3
 8000cf2:	2bef      	cmp	r3, #239	; 0xef
 8000cf4:	d901      	bls.n	8000cfa <acc_cpd_pll_divisors_calculate+0x132>
 8000cf6:	4d1e      	ldr	r5, [pc, #120]	; (8000d70 <acc_cpd_pll_divisors_calculate+0x1a8>)
 8000cf8:	e7bf      	b.n	8000c7a <acc_cpd_pll_divisors_calculate+0xb2>
 8000cfa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000cfe:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8000d7c <acc_cpd_pll_divisors_calculate+0x1b4>
 8000d02:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8000d80 <acc_cpd_pll_divisors_calculate+0x1b8>
 8000d06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000d0a:	2c3f      	cmp	r4, #63	; 0x3f
 8000d0c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000d10:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000d14:	ee17 2a90 	vmov	r2, s15
 8000d18:	810a      	strh	r2, [r1, #8]
 8000d1a:	d912      	bls.n	8000d42 <acc_cpd_pll_divisors_calculate+0x17a>
 8000d1c:	2cbf      	cmp	r4, #191	; 0xbf
 8000d1e:	f04f 0301 	mov.w	r3, #1
 8000d22:	bf98      	it	ls
 8000d24:	f1a4 0240 	subls.w	r2, r4, #64	; 0x40
 8000d28:	804b      	strh	r3, [r1, #2]
 8000d2a:	bf8c      	ite	hi
 8000d2c:	08e2      	lsrhi	r2, r4, #3
 8000d2e:	f3c2 02cf 	ubfxls	r2, r2, #3, #16
 8000d32:	f004 0307 	and.w	r3, r4, #7
 8000d36:	808a      	strh	r2, [r1, #4]
 8000d38:	80cb      	strh	r3, [r1, #6]
 8000d3a:	2001      	movs	r0, #1
 8000d3c:	800c      	strh	r4, [r1, #0]
 8000d3e:	b003      	add	sp, #12
 8000d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d42:	2200      	movs	r2, #0
 8000d44:	2c2f      	cmp	r4, #47	; 0x2f
 8000d46:	bf88      	it	hi
 8000d48:	4623      	movhi	r3, r4
 8000d4a:	808b      	strh	r3, [r1, #4]
 8000d4c:	804a      	strh	r2, [r1, #2]
 8000d4e:	80ca      	strh	r2, [r1, #6]
 8000d50:	e7f3      	b.n	8000d3a <acc_cpd_pll_divisors_calculate+0x172>
 8000d52:	bf00      	nop
 8000d54:	4f1502f9 	.word	0x4f1502f9
 8000d58:	4c989680 	.word	0x4c989680
 8000d5c:	4b989680 	.word	0x4b989680
 8000d60:	350637bd 	.word	0x350637bd
 8000d64:	0800a624 	.word	0x0800a624
 8000d68:	0800ac2c 	.word	0x0800ac2c
 8000d6c:	49742400 	.word	0x49742400
 8000d70:	200000ac 	.word	0x200000ac
 8000d74:	0800a654 	.word	0x0800a654
 8000d78:	0800a628 	.word	0x0800a628
 8000d7c:	b55b38e8 	.word	0xb55b38e8
 8000d80:	427c0000 	.word	0x427c0000

08000d84 <acc_confprogram_modify_runif>:
 8000d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d88:	eb00 0542 	add.w	r5, r0, r2, lsl #1
 8000d8c:	b084      	sub	sp, #16
 8000d8e:	4616      	mov	r6, r2
 8000d90:	460f      	mov	r7, r1
 8000d92:	2201      	movs	r2, #1
 8000d94:	4628      	mov	r0, r5
 8000d96:	a903      	add	r1, sp, #12
 8000d98:	4698      	mov	r8, r3
 8000d9a:	f7ff fef5 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8000d9e:	9c03      	ldr	r4, [sp, #12]
 8000da0:	4b12      	ldr	r3, [pc, #72]	; (8000dec <acc_confprogram_modify_runif+0x68>)
 8000da2:	f024 040f 	bic.w	r4, r4, #15
 8000da6:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8000daa:	9402      	str	r4, [sp, #8]
 8000dac:	f1b8 0f00 	cmp.w	r8, #0
 8000db0:	d012      	beq.n	8000dd8 <acc_confprogram_modify_runif+0x54>
 8000db2:	433c      	orrs	r4, r7
 8000db4:	2a03      	cmp	r2, #3
 8000db6:	9402      	str	r4, [sp, #8]
 8000db8:	d906      	bls.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000dba:	9700      	str	r7, [sp, #0]
 8000dbc:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8000dbe:	4a0c      	ldr	r2, [pc, #48]	; (8000df0 <acc_confprogram_modify_runif+0x6c>)
 8000dc0:	490c      	ldr	r1, [pc, #48]	; (8000df4 <acc_confprogram_modify_runif+0x70>)
 8000dc2:	0873      	lsrs	r3, r6, #1
 8000dc4:	2004      	movs	r0, #4
 8000dc6:	47a0      	blx	r4
 8000dc8:	4629      	mov	r1, r5
 8000dca:	2201      	movs	r2, #1
 8000dcc:	a802      	add	r0, sp, #8
 8000dce:	f7ff feed 	bl	8000bac <acc_confprogram_copy>
 8000dd2:	b004      	add	sp, #16
 8000dd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000dd8:	2a03      	cmp	r2, #3
 8000dda:	d9f5      	bls.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000ddc:	9700      	str	r7, [sp, #0]
 8000dde:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8000de0:	4a05      	ldr	r2, [pc, #20]	; (8000df8 <acc_confprogram_modify_runif+0x74>)
 8000de2:	4904      	ldr	r1, [pc, #16]	; (8000df4 <acc_confprogram_modify_runif+0x70>)
 8000de4:	0873      	lsrs	r3, r6, #1
 8000de6:	2004      	movs	r0, #4
 8000de8:	47a0      	blx	r4
 8000dea:	e7ed      	b.n	8000dc8 <acc_confprogram_modify_runif+0x44>
 8000dec:	200000ac 	.word	0x200000ac
 8000df0:	0800a668 	.word	0x0800a668
 8000df4:	0800a6a0 	.word	0x0800a6a0
 8000df8:	0800a6ac 	.word	0x0800a6ac

08000dfc <acc_confprogram_patch_offset>:
 8000dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e00:	f8df a138 	ldr.w	sl, [pc, #312]	; 8000f3c <acc_confprogram_patch_offset+0x140>
 8000e04:	f89a 4048 	ldrb.w	r4, [sl, #72]	; 0x48
 8000e08:	b087      	sub	sp, #28
 8000e0a:	2c03      	cmp	r4, #3
 8000e0c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8000e10:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8000e14:	4681      	mov	r9, r0
 8000e16:	460f      	mov	r7, r1
 8000e18:	4693      	mov	fp, r2
 8000e1a:	461e      	mov	r6, r3
 8000e1c:	d908      	bls.n	8000e30 <acc_confprogram_patch_offset+0x34>
 8000e1e:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8000e22:	4a42      	ldr	r2, [pc, #264]	; (8000f2c <acc_confprogram_patch_offset+0x130>)
 8000e24:	4942      	ldr	r1, [pc, #264]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000e26:	f8cd 8000 	str.w	r8, [sp]
 8000e2a:	462b      	mov	r3, r5
 8000e2c:	2004      	movs	r0, #4
 8000e2e:	47a0      	blx	r4
 8000e30:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8000e34:	8871      	ldrh	r1, [r6, #2]
 8000e36:	b359      	cbz	r1, 8000e90 <acc_confprogram_patch_offset+0x94>
 8000e38:	44bb      	add	fp, r7
 8000e3a:	2500      	movs	r5, #0
 8000e3c:	6873      	ldr	r3, [r6, #4]
 8000e3e:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8000e42:	0062      	lsls	r2, r4, #1
 8000e44:	b292      	uxth	r2, r2
 8000e46:	42ba      	cmp	r2, r7
 8000e48:	f3c4 7001 	ubfx	r0, r4, #28, #2
 8000e4c:	d31d      	bcc.n	8000e8a <acc_confprogram_patch_offset+0x8e>
 8000e4e:	455a      	cmp	r2, fp
 8000e50:	da1b      	bge.n	8000e8a <acc_confprogram_patch_offset+0x8e>
 8000e52:	2801      	cmp	r0, #1
 8000e54:	d00c      	beq.n	8000e70 <acc_confprogram_patch_offset+0x74>
 8000e56:	2802      	cmp	r0, #2
 8000e58:	d035      	beq.n	8000ec6 <acc_confprogram_patch_offset+0xca>
 8000e5a:	b1e8      	cbz	r0, 8000e98 <acc_confprogram_patch_offset+0x9c>
 8000e5c:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8000e60:	4a34      	ldr	r2, [pc, #208]	; (8000f34 <acc_confprogram_patch_offset+0x138>)
 8000e62:	4933      	ldr	r1, [pc, #204]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000e64:	2000      	movs	r0, #0
 8000e66:	4798      	blx	r3
 8000e68:	2000      	movs	r0, #0
 8000e6a:	b007      	add	sp, #28
 8000e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e70:	f1b8 0300 	subs.w	r3, r8, #0
 8000e74:	eba2 0207 	sub.w	r2, r2, r7
 8000e78:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000e7c:	b292      	uxth	r2, r2
 8000e7e:	bf18      	it	ne
 8000e80:	2301      	movne	r3, #1
 8000e82:	4648      	mov	r0, r9
 8000e84:	f7ff ff7e 	bl	8000d84 <acc_confprogram_modify_runif>
 8000e88:	8871      	ldrh	r1, [r6, #2]
 8000e8a:	3501      	adds	r5, #1
 8000e8c:	42a9      	cmp	r1, r5
 8000e8e:	d8d5      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000e90:	2001      	movs	r0, #1
 8000e92:	b007      	add	sp, #28
 8000e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e98:	f3c4 5344 	ubfx	r3, r4, #21, #5
 8000e9c:	2101      	movs	r1, #1
 8000e9e:	4099      	lsls	r1, r3
 8000ea0:	1bd2      	subs	r2, r2, r7
 8000ea2:	4588      	cmp	r8, r1
 8000ea4:	fa1f fc82 	uxth.w	ip, r2
 8000ea8:	d31c      	bcc.n	8000ee4 <acc_confprogram_patch_offset+0xe8>
 8000eaa:	3901      	subs	r1, #1
 8000eac:	e9cd 8100 	strd	r8, r1, [sp]
 8000eb0:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8000eb4:	4a20      	ldr	r2, [pc, #128]	; (8000f38 <acc_confprogram_patch_offset+0x13c>)
 8000eb6:	491e      	ldr	r1, [pc, #120]	; (8000f30 <acc_confprogram_patch_offset+0x134>)
 8000eb8:	9002      	str	r0, [sp, #8]
 8000eba:	4663      	mov	r3, ip
 8000ebc:	47a0      	blx	r4
 8000ebe:	9802      	ldr	r0, [sp, #8]
 8000ec0:	b007      	add	sp, #28
 8000ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ec6:	1bd2      	subs	r2, r2, r7
 8000ec8:	fab8 f388 	clz	r3, r8
 8000ecc:	f3c4 4103 	ubfx	r1, r4, #16, #4
 8000ed0:	b292      	uxth	r2, r2
 8000ed2:	095b      	lsrs	r3, r3, #5
 8000ed4:	4648      	mov	r0, r9
 8000ed6:	f7ff ff55 	bl	8000d84 <acc_confprogram_modify_runif>
 8000eda:	8871      	ldrh	r1, [r6, #2]
 8000edc:	3501      	adds	r5, #1
 8000ede:	42a9      	cmp	r1, r5
 8000ee0:	d8ac      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000ee2:	e7d5      	b.n	8000e90 <acc_confprogram_patch_offset+0x94>
 8000ee4:	eb09 004c 	add.w	r0, r9, ip, lsl #1
 8000ee8:	2201      	movs	r2, #1
 8000eea:	a904      	add	r1, sp, #16
 8000eec:	9303      	str	r3, [sp, #12]
 8000eee:	9002      	str	r0, [sp, #8]
 8000ef0:	f7ff fe4a 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8000ef4:	9b03      	ldr	r3, [sp, #12]
 8000ef6:	9802      	ldr	r0, [sp, #8]
 8000ef8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000efc:	f1c3 0320 	rsb	r3, r3, #32
 8000f00:	f3c4 4404 	ubfx	r4, r4, #16, #5
 8000f04:	fa22 f303 	lsr.w	r3, r2, r3
 8000f08:	9a04      	ldr	r2, [sp, #16]
 8000f0a:	40a3      	lsls	r3, r4
 8000f0c:	ea22 0203 	bic.w	r2, r2, r3
 8000f10:	fa08 f404 	lsl.w	r4, r8, r4
 8000f14:	4601      	mov	r1, r0
 8000f16:	4314      	orrs	r4, r2
 8000f18:	a805      	add	r0, sp, #20
 8000f1a:	2201      	movs	r2, #1
 8000f1c:	9405      	str	r4, [sp, #20]
 8000f1e:	f7ff fe45 	bl	8000bac <acc_confprogram_copy>
 8000f22:	8871      	ldrh	r1, [r6, #2]
 8000f24:	3501      	adds	r5, #1
 8000f26:	42a9      	cmp	r1, r5
 8000f28:	d888      	bhi.n	8000e3c <acc_confprogram_patch_offset+0x40>
 8000f2a:	e7b1      	b.n	8000e90 <acc_confprogram_patch_offset+0x94>
 8000f2c:	0800aeec 	.word	0x0800aeec
 8000f30:	0800a6a0 	.word	0x0800a6a0
 8000f34:	0800a718 	.word	0x0800a718
 8000f38:	0800a6e0 	.word	0x0800a6e0
 8000f3c:	200000ac 	.word	0x200000ac

08000f40 <acc_rss_integration_mem_free>:
 8000f40:	b110      	cbz	r0, 8000f48 <acc_rss_integration_mem_free+0x8>
 8000f42:	4b02      	ldr	r3, [pc, #8]	; (8000f4c <acc_rss_integration_mem_free+0xc>)
 8000f44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000f46:	4718      	bx	r3
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	200000ac 	.word	0x200000ac

08000f50 <acc_rss_integration_mem_alloc_debug>:
 8000f50:	b538      	push	{r3, r4, r5, lr}
 8000f52:	4d06      	ldr	r5, [pc, #24]	; (8000f6c <acc_rss_integration_mem_alloc_debug+0x1c>)
 8000f54:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8000f56:	4798      	blx	r3
 8000f58:	4604      	mov	r4, r0
 8000f5a:	b108      	cbz	r0, 8000f60 <acc_rss_integration_mem_alloc_debug+0x10>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	bd38      	pop	{r3, r4, r5, pc}
 8000f60:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8000f62:	4a03      	ldr	r2, [pc, #12]	; (8000f70 <acc_rss_integration_mem_alloc_debug+0x20>)
 8000f64:	4903      	ldr	r1, [pc, #12]	; (8000f74 <acc_rss_integration_mem_alloc_debug+0x24>)
 8000f66:	4798      	blx	r3
 8000f68:	4620      	mov	r0, r4
 8000f6a:	bd38      	pop	{r3, r4, r5, pc}
 8000f6c:	200000ac 	.word	0x200000ac
 8000f70:	0800a73c 	.word	0x0800a73c
 8000f74:	0800a74c 	.word	0x0800a74c

08000f78 <acc_rss_integration_sensor_device_transfer>:
 8000f78:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000fe0 <acc_rss_integration_sensor_device_transfer+0x68>
 8000f7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f80:	f8dc 5044 	ldr.w	r5, [ip, #68]	; 0x44
 8000f84:	b11d      	cbz	r5, 8000f8e <acc_rss_integration_sensor_device_transfer+0x16>
 8000f86:	462b      	mov	r3, r5
 8000f88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f8c:	4718      	bx	r3
 8000f8e:	b312      	cbz	r2, 8000fd6 <acc_rss_integration_sensor_device_transfer+0x5e>
 8000f90:	0052      	lsls	r2, r2, #1
 8000f92:	f1a1 0802 	sub.w	r8, r1, #2
 8000f96:	f1a2 0902 	sub.w	r9, r2, #2
 8000f9a:	460e      	mov	r6, r1
 8000f9c:	469a      	mov	sl, r3
 8000f9e:	4607      	mov	r7, r0
 8000fa0:	4449      	add	r1, r9
 8000fa2:	4644      	mov	r4, r8
 8000fa4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8000fa8:	ba6d      	rev16	r5, r5
 8000faa:	428c      	cmp	r4, r1
 8000fac:	8025      	strh	r5, [r4, #0]
 8000fae:	d1f9      	bne.n	8000fa4 <acc_rss_integration_sensor_device_transfer+0x2c>
 8000fb0:	f8dc 403c 	ldr.w	r4, [ip, #60]	; 0x3c
 8000fb4:	4638      	mov	r0, r7
 8000fb6:	4631      	mov	r1, r6
 8000fb8:	47a0      	blx	r4
 8000fba:	f1ba 0f00 	cmp.w	sl, #0
 8000fbe:	d101      	bne.n	8000fc4 <acc_rss_integration_sensor_device_transfer+0x4c>
 8000fc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fc4:	444e      	add	r6, r9
 8000fc6:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8000fca:	ba5b      	rev16	r3, r3
 8000fcc:	45b0      	cmp	r8, r6
 8000fce:	f8a8 3000 	strh.w	r3, [r8]
 8000fd2:	d1f8      	bne.n	8000fc6 <acc_rss_integration_sensor_device_transfer+0x4e>
 8000fd4:	e7f4      	b.n	8000fc0 <acc_rss_integration_sensor_device_transfer+0x48>
 8000fd6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fda:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
 8000fde:	4718      	bx	r3
 8000fe0:	200000ac 	.word	0x200000ac

08000fe4 <acc_sensor_a121_conf_write_instr>:
 8000fe4:	b570      	push	{r4, r5, r6, lr}
 8000fe6:	2501      	movs	r5, #1
 8000fe8:	b084      	sub	sp, #16
 8000fea:	f441 43a0 	orr.w	r3, r1, #20480	; 0x5000
 8000fee:	4604      	mov	r4, r0
 8000ff0:	4616      	mov	r6, r2
 8000ff2:	a903      	add	r1, sp, #12
 8000ff4:	462a      	mov	r2, r5
 8000ff6:	a801      	add	r0, sp, #4
 8000ff8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8000ffc:	9601      	str	r6, [sp, #4]
 8000ffe:	f8ad 500a 	strh.w	r5, [sp, #10]
 8001002:	f7ff fdd3 	bl	8000bac <acc_confprogram_copy>
 8001006:	4620      	mov	r0, r4
 8001008:	a902      	add	r1, sp, #8
 800100a:	2300      	movs	r3, #0
 800100c:	2204      	movs	r2, #4
 800100e:	f7ff ffb3 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8001012:	b004      	add	sp, #16
 8001014:	bd70      	pop	{r4, r5, r6, pc}
 8001016:	bf00      	nop

08001018 <acc_confprogram_modify_runif_sensor.constprop.0>:
 8001018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800101a:	4614      	mov	r4, r2
 800101c:	b083      	sub	sp, #12
 800101e:	f851 5024 	ldr.w	r5, [r1, r4, lsl #2]
 8001022:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001026:	f025 050f 	bic.w	r5, r5, #15
 800102a:	4606      	mov	r6, r0
 800102c:	b1a2      	cbz	r2, 8001058 <acc_confprogram_modify_runif_sensor.constprop.0+0x40>
 800102e:	4a10      	ldr	r2, [pc, #64]	; (8001070 <acc_confprogram_modify_runif_sensor.constprop.0+0x58>)
 8001030:	f892 1048 	ldrb.w	r1, [r2, #72]	; 0x48
 8001034:	2903      	cmp	r1, #3
 8001036:	ea45 0503 	orr.w	r5, r5, r3
 800103a:	d906      	bls.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 800103c:	9300      	str	r3, [sp, #0]
 800103e:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8001040:	490c      	ldr	r1, [pc, #48]	; (8001074 <acc_confprogram_modify_runif_sensor.constprop.0+0x5c>)
 8001042:	4a0d      	ldr	r2, [pc, #52]	; (8001078 <acc_confprogram_modify_runif_sensor.constprop.0+0x60>)
 8001044:	4623      	mov	r3, r4
 8001046:	2004      	movs	r0, #4
 8001048:	47b8      	blx	r7
 800104a:	462a      	mov	r2, r5
 800104c:	4621      	mov	r1, r4
 800104e:	4630      	mov	r0, r6
 8001050:	b003      	add	sp, #12
 8001052:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8001056:	e7c5      	b.n	8000fe4 <acc_sensor_a121_conf_write_instr>
 8001058:	4b05      	ldr	r3, [pc, #20]	; (8001070 <acc_confprogram_modify_runif_sensor.constprop.0+0x58>)
 800105a:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 800105e:	2a03      	cmp	r2, #3
 8001060:	d9f3      	bls.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 8001062:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8001064:	4a05      	ldr	r2, [pc, #20]	; (800107c <acc_confprogram_modify_runif_sensor.constprop.0+0x64>)
 8001066:	4903      	ldr	r1, [pc, #12]	; (8001074 <acc_confprogram_modify_runif_sensor.constprop.0+0x5c>)
 8001068:	4623      	mov	r3, r4
 800106a:	2004      	movs	r0, #4
 800106c:	47b8      	blx	r7
 800106e:	e7ec      	b.n	800104a <acc_confprogram_modify_runif_sensor.constprop.0+0x32>
 8001070:	200000ac 	.word	0x200000ac
 8001074:	0800a6a0 	.word	0x0800a6a0
 8001078:	0800a668 	.word	0x0800a668
 800107c:	0800a75c 	.word	0x0800a75c

08001080 <acc_sensor_a121_buffer_write.constprop.0>:
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4c1d      	ldr	r4, [pc, #116]	; (80010fc <acc_sensor_a121_buffer_write.constprop.0+0x7c>)
 8001086:	8e24      	ldrh	r4, [r4, #48]	; 0x30
 8001088:	b085      	sub	sp, #20
 800108a:	3c06      	subs	r4, #6
 800108c:	9202      	str	r2, [sp, #8]
 800108e:	08a2      	lsrs	r2, r4, #2
 8001090:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 8001094:	9201      	str	r2, [sp, #4]
 8001096:	9303      	str	r3, [sp, #12]
 8001098:	b363      	cbz	r3, 80010f4 <acc_sensor_a121_buffer_write.constprop.0+0x74>
 800109a:	4682      	mov	sl, r0
 800109c:	460f      	mov	r7, r1
 800109e:	f101 0b06 	add.w	fp, r1, #6
 80010a2:	4699      	mov	r9, r3
 80010a4:	2500      	movs	r5, #0
 80010a6:	9b01      	ldr	r3, [sp, #4]
 80010a8:	807d      	strh	r5, [r7, #2]
 80010aa:	454b      	cmp	r3, r9
 80010ac:	bf28      	it	cs
 80010ae:	464b      	movcs	r3, r9
 80010b0:	005c      	lsls	r4, r3, #1
 80010b2:	461e      	mov	r6, r3
 80010b4:	1e63      	subs	r3, r4, #1
 80010b6:	80bb      	strh	r3, [r7, #4]
 80010b8:	9b02      	ldr	r3, [sp, #8]
 80010ba:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80010be:	eb03 0085 	add.w	r0, r3, r5, lsl #2
 80010c2:	803a      	strh	r2, [r7, #0]
 80010c4:	3403      	adds	r4, #3
 80010c6:	4632      	mov	r2, r6
 80010c8:	4659      	mov	r1, fp
 80010ca:	f7ff fd6f 	bl	8000bac <acc_confprogram_copy>
 80010ce:	4622      	mov	r2, r4
 80010d0:	2300      	movs	r3, #0
 80010d2:	4639      	mov	r1, r7
 80010d4:	4650      	mov	r0, sl
 80010d6:	f7ff ff4f 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80010da:	e9d8 2300 	ldrd	r2, r3, [r8]
 80010de:	3301      	adds	r3, #1
 80010e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80010e4:	e9c8 4300 	strd	r4, r3, [r8]
 80010e8:	9b03      	ldr	r3, [sp, #12]
 80010ea:	4435      	add	r5, r6
 80010ec:	429d      	cmp	r5, r3
 80010ee:	eba9 0906 	sub.w	r9, r9, r6
 80010f2:	d3d8      	bcc.n	80010a6 <acc_sensor_a121_buffer_write.constprop.0+0x26>
 80010f4:	b005      	add	sp, #20
 80010f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80010fa:	bf00      	nop
 80010fc:	200000ac 	.word	0x200000ac

08001100 <acc_sensor_reg_field_write>:
 8001100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001104:	b082      	sub	sp, #8
 8001106:	461d      	mov	r5, r3
 8001108:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800110c:	f8bd 4028 	ldrh.w	r4, [sp, #40]	; 0x28
 8001110:	f8ad 3000 	strh.w	r3, [sp]
 8001114:	2700      	movs	r7, #0
 8001116:	468a      	mov	sl, r1
 8001118:	4691      	mov	r9, r2
 800111a:	4669      	mov	r1, sp
 800111c:	2301      	movs	r3, #1
 800111e:	2203      	movs	r2, #3
 8001120:	4680      	mov	r8, r0
 8001122:	f8ad 7002 	strh.w	r7, [sp, #2]
 8001126:	f8ad 7004 	strh.w	r7, [sp, #4]
 800112a:	f7ff ff25 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 800112e:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 8001132:	fa04 f10a 	lsl.w	r1, r4, sl
 8001136:	4071      	eors	r1, r6
 8001138:	ea01 0409 	and.w	r4, r1, r9
 800113c:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
 8001140:	4640      	mov	r0, r8
 8001142:	463b      	mov	r3, r7
 8001144:	4669      	mov	r1, sp
 8001146:	4074      	eors	r4, r6
 8001148:	2202      	movs	r2, #2
 800114a:	f8ad 5000 	strh.w	r5, [sp]
 800114e:	f8ad 4002 	strh.w	r4, [sp, #2]
 8001152:	f7ff ff11 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8001156:	b002      	add	sp, #8
 8001158:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800115c <acc_sensor_protocol_a121_init_interrupts>:
 800115c:	b530      	push	{r4, r5, lr}
 800115e:	b083      	sub	sp, #12
 8001160:	2500      	movs	r5, #0
 8001162:	4629      	mov	r1, r5
 8001164:	9500      	str	r5, [sp, #0]
 8001166:	237b      	movs	r3, #123	; 0x7b
 8001168:	22ff      	movs	r2, #255	; 0xff
 800116a:	4604      	mov	r4, r0
 800116c:	f7ff ffc8 	bl	8001100 <acc_sensor_reg_field_write>
 8001170:	2101      	movs	r1, #1
 8001172:	4620      	mov	r0, r4
 8001174:	9100      	str	r1, [sp, #0]
 8001176:	238b      	movs	r3, #139	; 0x8b
 8001178:	2202      	movs	r2, #2
 800117a:	f7ff ffc1 	bl	8001100 <acc_sensor_reg_field_write>
 800117e:	9500      	str	r5, [sp, #0]
 8001180:	4620      	mov	r0, r4
 8001182:	238b      	movs	r3, #139	; 0x8b
 8001184:	2280      	movs	r2, #128	; 0x80
 8001186:	2107      	movs	r1, #7
 8001188:	f7ff ffba 	bl	8001100 <acc_sensor_reg_field_write>
 800118c:	b003      	add	sp, #12
 800118e:	bd30      	pop	{r4, r5, pc}

08001190 <acc_sensor_reg_write>:
 8001190:	b530      	push	{r4, r5, lr}
 8001192:	b083      	sub	sp, #12
 8001194:	f441 5480 	orr.w	r4, r1, #4096	; 0x1000
 8001198:	4615      	mov	r5, r2
 800119a:	2300      	movs	r3, #0
 800119c:	2202      	movs	r2, #2
 800119e:	a901      	add	r1, sp, #4
 80011a0:	f8ad 4004 	strh.w	r4, [sp, #4]
 80011a4:	f8ad 5006 	strh.w	r5, [sp, #6]
 80011a8:	f7ff fee6 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80011ac:	b003      	add	sp, #12
 80011ae:	bd30      	pop	{r4, r5, pc}

080011b0 <acc_sensor_reg_read>:
 80011b0:	b530      	push	{r4, r5, lr}
 80011b2:	b083      	sub	sp, #12
 80011b4:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
 80011b8:	4614      	mov	r4, r2
 80011ba:	2500      	movs	r5, #0
 80011bc:	f8ad 1000 	strh.w	r1, [sp]
 80011c0:	2301      	movs	r3, #1
 80011c2:	2203      	movs	r2, #3
 80011c4:	4669      	mov	r1, sp
 80011c6:	f8ad 5002 	strh.w	r5, [sp, #2]
 80011ca:	f8ad 5004 	strh.w	r5, [sp, #4]
 80011ce:	f7ff fed3 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80011d2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80011d6:	8023      	strh	r3, [r4, #0]
 80011d8:	b003      	add	sp, #12
 80011da:	bd30      	pop	{r4, r5, pc}

080011dc <acc_sensor_protocol_a121_run_program>:
 80011dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011de:	4f19      	ldr	r7, [pc, #100]	; (8001244 <acc_sensor_protocol_a121_run_program+0x68>)
 80011e0:	f897 2048 	ldrb.w	r2, [r7, #72]	; 0x48
 80011e4:	2a03      	cmp	r2, #3
 80011e6:	b085      	sub	sp, #20
 80011e8:	4604      	mov	r4, r0
 80011ea:	460e      	mov	r6, r1
 80011ec:	d906      	bls.n	80011fc <acc_sensor_protocol_a121_run_program+0x20>
 80011ee:	9100      	str	r1, [sp, #0]
 80011f0:	4603      	mov	r3, r0
 80011f2:	6c3d      	ldr	r5, [r7, #64]	; 0x40
 80011f4:	4a14      	ldr	r2, [pc, #80]	; (8001248 <acc_sensor_protocol_a121_run_program+0x6c>)
 80011f6:	4915      	ldr	r1, [pc, #84]	; (800124c <acc_sensor_protocol_a121_run_program+0x70>)
 80011f8:	2004      	movs	r0, #4
 80011fa:	47a8      	blx	r5
 80011fc:	f10d 020e 	add.w	r2, sp, #14
 8001200:	2500      	movs	r5, #0
 8001202:	211c      	movs	r1, #28
 8001204:	4620      	mov	r0, r4
 8001206:	f8ad 500e 	strh.w	r5, [sp, #14]
 800120a:	f7ff ffd1 	bl	80011b0 <acc_sensor_reg_read>
 800120e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8001212:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8001216:	d008      	beq.n	800122a <acc_sensor_protocol_a121_run_program+0x4e>
 8001218:	4628      	mov	r0, r5
 800121a:	6c3e      	ldr	r6, [r7, #64]	; 0x40
 800121c:	4a0c      	ldr	r2, [pc, #48]	; (8001250 <acc_sensor_protocol_a121_run_program+0x74>)
 800121e:	490b      	ldr	r1, [pc, #44]	; (800124c <acc_sensor_protocol_a121_run_program+0x70>)
 8001220:	4623      	mov	r3, r4
 8001222:	47b0      	blx	r6
 8001224:	4628      	mov	r0, r5
 8001226:	b005      	add	sp, #20
 8001228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800122a:	4620      	mov	r0, r4
 800122c:	211b      	movs	r1, #27
 800122e:	f7ff ffaf 	bl	8001190 <acc_sensor_reg_write>
 8001232:	4620      	mov	r0, r4
 8001234:	f446 6200 	orr.w	r2, r6, #2048	; 0x800
 8001238:	211b      	movs	r1, #27
 800123a:	f7ff ffa9 	bl	8001190 <acc_sensor_reg_write>
 800123e:	2001      	movs	r0, #1
 8001240:	b005      	add	sp, #20
 8001242:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001244:	200000ac 	.word	0x200000ac
 8001248:	0800a78c 	.word	0x0800a78c
 800124c:	0800a7b0 	.word	0x0800a7b0
 8001250:	0800a7c8 	.word	0x0800a7c8

08001254 <acc_sensor_protocol_a121_prepare_load>:
 8001254:	b570      	push	{r4, r5, r6, lr}
 8001256:	b082      	sub	sp, #8
 8001258:	f10d 0206 	add.w	r2, sp, #6
 800125c:	2400      	movs	r4, #0
 800125e:	2137      	movs	r1, #55	; 0x37
 8001260:	4605      	mov	r5, r0
 8001262:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001266:	f7ff ffa3 	bl	80011b0 <acc_sensor_reg_read>
 800126a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800126e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8001272:	b9b3      	cbnz	r3, 80012a2 <acc_sensor_protocol_a121_prepare_load+0x4e>
 8001274:	f10d 0206 	add.w	r2, sp, #6
 8001278:	2400      	movs	r4, #0
 800127a:	211c      	movs	r1, #28
 800127c:	4628      	mov	r0, r5
 800127e:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001282:	f7ff ff95 	bl	80011b0 <acc_sensor_reg_read>
 8001286:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800128a:	051b      	lsls	r3, r3, #20
 800128c:	d515      	bpl.n	80012ba <acc_sensor_protocol_a121_prepare_load+0x66>
 800128e:	4b0e      	ldr	r3, [pc, #56]	; (80012c8 <acc_sensor_protocol_a121_prepare_load+0x74>)
 8001290:	4a0e      	ldr	r2, [pc, #56]	; (80012cc <acc_sensor_protocol_a121_prepare_load+0x78>)
 8001292:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8001294:	490e      	ldr	r1, [pc, #56]	; (80012d0 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 8001296:	4620      	mov	r0, r4
 8001298:	462b      	mov	r3, r5
 800129a:	47b0      	blx	r6
 800129c:	4620      	mov	r0, r4
 800129e:	b002      	add	sp, #8
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
 80012a2:	4b09      	ldr	r3, [pc, #36]	; (80012c8 <acc_sensor_protocol_a121_prepare_load+0x74>)
 80012a4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80012a8:	2a00      	cmp	r2, #0
 80012aa:	d0e3      	beq.n	8001274 <acc_sensor_protocol_a121_prepare_load+0x20>
 80012ac:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 80012ae:	4a09      	ldr	r2, [pc, #36]	; (80012d4 <acc_sensor_protocol_a121_prepare_load+0x80>)
 80012b0:	4907      	ldr	r1, [pc, #28]	; (80012d0 <acc_sensor_protocol_a121_prepare_load+0x7c>)
 80012b2:	462b      	mov	r3, r5
 80012b4:	2001      	movs	r0, #1
 80012b6:	47a0      	blx	r4
 80012b8:	e7dc      	b.n	8001274 <acc_sensor_protocol_a121_prepare_load+0x20>
 80012ba:	4628      	mov	r0, r5
 80012bc:	f7ff ff4e 	bl	800115c <acc_sensor_protocol_a121_init_interrupts>
 80012c0:	2001      	movs	r0, #1
 80012c2:	b002      	add	sp, #8
 80012c4:	bd70      	pop	{r4, r5, r6, pc}
 80012c6:	bf00      	nop
 80012c8:	200000ac 	.word	0x200000ac
 80012cc:	0800a824 	.word	0x0800a824
 80012d0:	0800a7b0 	.word	0x0800a7b0
 80012d4:	0800a7f8 	.word	0x0800a7f8

080012d8 <acc_sensor_a121_load_confmem>:
 80012d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012dc:	4e17      	ldr	r6, [pc, #92]	; (800133c <acc_sensor_a121_load_confmem+0x64>)
 80012de:	f896 7048 	ldrb.w	r7, [r6, #72]	; 0x48
 80012e2:	f103 0902 	add.w	r9, r3, #2
 80012e6:	2f03      	cmp	r7, #3
 80012e8:	b083      	sub	sp, #12
 80012ea:	461c      	mov	r4, r3
 80012ec:	4682      	mov	sl, r0
 80012ee:	460d      	mov	r5, r1
 80012f0:	4690      	mov	r8, r2
 80012f2:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 80012f6:	d906      	bls.n	8001306 <acc_sensor_a121_load_confmem+0x2e>
 80012f8:	9100      	str	r1, [sp, #0]
 80012fa:	4603      	mov	r3, r0
 80012fc:	6c37      	ldr	r7, [r6, #64]	; 0x40
 80012fe:	4a10      	ldr	r2, [pc, #64]	; (8001340 <acc_sensor_a121_load_confmem+0x68>)
 8001300:	4910      	ldr	r1, [pc, #64]	; (8001344 <acc_sensor_a121_load_confmem+0x6c>)
 8001302:	2004      	movs	r0, #4
 8001304:	47b8      	blx	r7
 8001306:	8e33      	ldrh	r3, [r6, #48]	; 0x30
 8001308:	459b      	cmp	fp, r3
 800130a:	d907      	bls.n	800131c <acc_sensor_a121_load_confmem+0x44>
 800130c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800130e:	4a0e      	ldr	r2, [pc, #56]	; (8001348 <acc_sensor_a121_load_confmem+0x70>)
 8001310:	490c      	ldr	r1, [pc, #48]	; (8001344 <acc_sensor_a121_load_confmem+0x6c>)
 8001312:	2000      	movs	r0, #0
 8001314:	b003      	add	sp, #12
 8001316:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800131a:	4718      	bx	r3
 800131c:	f445 45a0 	orr.w	r5, r5, #20480	; 0x5000
 8001320:	3c01      	subs	r4, #1
 8001322:	f029 4200 	bic.w	r2, r9, #2147483648	; 0x80000000
 8001326:	4641      	mov	r1, r8
 8001328:	4650      	mov	r0, sl
 800132a:	2300      	movs	r3, #0
 800132c:	f8a8 5000 	strh.w	r5, [r8]
 8001330:	f8a8 4002 	strh.w	r4, [r8, #2]
 8001334:	b003      	add	sp, #12
 8001336:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800133a:	e61d      	b.n	8000f78 <acc_rss_integration_sensor_device_transfer>
 800133c:	200000ac 	.word	0x200000ac
 8001340:	0800a854 	.word	0x0800a854
 8001344:	0800a87c 	.word	0x0800a87c
 8001348:	0800a890 	.word	0x0800a890

0800134c <acc_cpd_assembly_test_load_program>:
 800134c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001350:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 8001500 <acc_cpd_assembly_test_load_program+0x1b4>
 8001354:	b091      	sub	sp, #68	; 0x44
 8001356:	f8ba 7030 	ldrh.w	r7, [sl, #48]	; 0x30
 800135a:	9104      	str	r1, [sp, #16]
 800135c:	4615      	mov	r5, r2
 800135e:	461e      	mov	r6, r3
 8001360:	9007      	str	r0, [sp, #28]
 8001362:	f7ff ff77 	bl	8001254 <acc_sensor_protocol_a121_prepare_load>
 8001366:	4604      	mov	r4, r0
 8001368:	b918      	cbnz	r0, 8001372 <acc_cpd_assembly_test_load_program+0x26>
 800136a:	4620      	mov	r0, r4
 800136c:	b011      	add	sp, #68	; 0x44
 800136e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001372:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001376:	2b03      	cmp	r3, #3
 8001378:	d905      	bls.n	8001386 <acc_cpd_assembly_test_load_program+0x3a>
 800137a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 800137e:	4a5b      	ldr	r2, [pc, #364]	; (80014ec <acc_cpd_assembly_test_load_program+0x1a0>)
 8001380:	495b      	ldr	r1, [pc, #364]	; (80014f0 <acc_cpd_assembly_test_load_program+0x1a4>)
 8001382:	2004      	movs	r0, #4
 8001384:	4798      	blx	r3
 8001386:	edd6 7a00 	vldr	s15, [r6]
 800138a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800138e:	a90d      	add	r1, sp, #52	; 0x34
 8001390:	a80c      	add	r0, sp, #48	; 0x30
 8001392:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
 8001396:	f7ff fc17 	bl	8000bc8 <acc_cpd_pll_divisors_calculate>
 800139a:	4604      	mov	r4, r0
 800139c:	2800      	cmp	r0, #0
 800139e:	d0e4      	beq.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 80013a0:	6833      	ldr	r3, [r6, #0]
 80013a2:	4a54      	ldr	r2, [pc, #336]	; (80014f4 <acc_cpd_assembly_test_load_program+0x1a8>)
 80013a4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80013a8:	9108      	str	r1, [sp, #32]
 80013aa:	fba2 2303 	umull	r2, r3, r2, r3
 80013ae:	0c9b      	lsrs	r3, r3, #18
 80013b0:	086d      	lsrs	r5, r5, #1
 80013b2:	087f      	lsrs	r7, r7, #1
 80013b4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80013b8:	42bd      	cmp	r5, r7
 80013ba:	9305      	str	r3, [sp, #20]
 80013bc:	4b4e      	ldr	r3, [pc, #312]	; (80014f8 <acc_cpd_assembly_test_load_program+0x1ac>)
 80013be:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80013c2:	9109      	str	r1, [sp, #36]	; 0x24
 80013c4:	bf28      	it	cs
 80013c6:	463d      	movcs	r5, r7
 80013c8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 80013cc:	910a      	str	r1, [sp, #40]	; 0x28
 80013ce:	3d02      	subs	r5, #2
 80013d0:	f603 3834 	addw	r8, r3, #2868	; 0xb34
 80013d4:	9b04      	ldr	r3, [sp, #16]
 80013d6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80013da:	910b      	str	r1, [sp, #44]	; 0x2c
 80013dc:	f025 0201 	bic.w	r2, r5, #1
 80013e0:	f240 579a 	movw	r7, #1434	; 0x59a
 80013e4:	9206      	str	r2, [sp, #24]
 80013e6:	fa1f fb82 	uxth.w	fp, r2
 80013ea:	1d1e      	adds	r6, r3, #4
 80013ec:	2500      	movs	r5, #0
 80013ee:	9703      	str	r7, [sp, #12]
 80013f0:	9b06      	ldr	r3, [sp, #24]
 80013f2:	9a03      	ldr	r2, [sp, #12]
 80013f4:	f5c5 69b3 	rsb	r9, r5, #1432	; 0x598
 80013f8:	f109 0902 	add.w	r9, r9, #2
 80013fc:	454b      	cmp	r3, r9
 80013fe:	bf98      	it	ls
 8001400:	465a      	movls	r2, fp
 8001402:	4b3d      	ldr	r3, [pc, #244]	; (80014f8 <acc_cpd_assembly_test_load_program+0x1ac>)
 8001404:	086c      	lsrs	r4, r5, #1
 8001406:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800140a:	4691      	mov	r9, r2
 800140c:	4631      	mov	r1, r6
 800140e:	0852      	lsrs	r2, r2, #1
 8001410:	f7ff fbcc 	bl	8000bac <acc_confprogram_copy>
 8001414:	9b05      	ldr	r3, [sp, #20]
 8001416:	9301      	str	r3, [sp, #4]
 8001418:	231a      	movs	r3, #26
 800141a:	9300      	str	r3, [sp, #0]
 800141c:	464a      	mov	r2, r9
 800141e:	4643      	mov	r3, r8
 8001420:	4629      	mov	r1, r5
 8001422:	4630      	mov	r0, r6
 8001424:	f7ff fcea 	bl	8000dfc <acc_confprogram_patch_offset>
 8001428:	b958      	cbnz	r0, 8001442 <acc_cpd_assembly_test_load_program+0xf6>
 800142a:	2400      	movs	r4, #0
 800142c:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8001430:	2b03      	cmp	r3, #3
 8001432:	d99a      	bls.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 8001434:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8001438:	4a30      	ldr	r2, [pc, #192]	; (80014fc <acc_cpd_assembly_test_load_program+0x1b0>)
 800143a:	492d      	ldr	r1, [pc, #180]	; (80014f0 <acc_cpd_assembly_test_load_program+0x1a4>)
 800143c:	2004      	movs	r0, #4
 800143e:	4798      	blx	r3
 8001440:	e793      	b.n	800136a <acc_cpd_assembly_test_load_program+0x1e>
 8001442:	9a08      	ldr	r2, [sp, #32]
 8001444:	2313      	movs	r3, #19
 8001446:	e9cd 3200 	strd	r3, r2, [sp]
 800144a:	4629      	mov	r1, r5
 800144c:	4643      	mov	r3, r8
 800144e:	464a      	mov	r2, r9
 8001450:	4630      	mov	r0, r6
 8001452:	f7ff fcd3 	bl	8000dfc <acc_confprogram_patch_offset>
 8001456:	4686      	mov	lr, r0
 8001458:	f04f 0c11 	mov.w	ip, #17
 800145c:	4643      	mov	r3, r8
 800145e:	464a      	mov	r2, r9
 8001460:	4629      	mov	r1, r5
 8001462:	4630      	mov	r0, r6
 8001464:	f1be 0f00 	cmp.w	lr, #0
 8001468:	d0df      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 800146a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800146c:	e9cd c700 	strd	ip, r7, [sp]
 8001470:	f7ff fcc4 	bl	8000dfc <acc_confprogram_patch_offset>
 8001474:	4686      	mov	lr, r0
 8001476:	f04f 0c12 	mov.w	ip, #18
 800147a:	4643      	mov	r3, r8
 800147c:	464a      	mov	r2, r9
 800147e:	4629      	mov	r1, r5
 8001480:	4630      	mov	r0, r6
 8001482:	f1be 0f00 	cmp.w	lr, #0
 8001486:	d0d0      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 8001488:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800148a:	e9cd c700 	strd	ip, r7, [sp]
 800148e:	f7ff fcb5 	bl	8000dfc <acc_confprogram_patch_offset>
 8001492:	4686      	mov	lr, r0
 8001494:	f04f 0c10 	mov.w	ip, #16
 8001498:	4643      	mov	r3, r8
 800149a:	464a      	mov	r2, r9
 800149c:	4629      	mov	r1, r5
 800149e:	4630      	mov	r0, r6
 80014a0:	f1be 0f00 	cmp.w	lr, #0
 80014a4:	d0c1      	beq.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 80014a6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80014a8:	e9cd c700 	strd	ip, r7, [sp]
 80014ac:	f7ff fca6 	bl	8000dfc <acc_confprogram_patch_offset>
 80014b0:	4684      	mov	ip, r0
 80014b2:	4621      	mov	r1, r4
 80014b4:	4664      	mov	r4, ip
 80014b6:	9a04      	ldr	r2, [sp, #16]
 80014b8:	9807      	ldr	r0, [sp, #28]
 80014ba:	464b      	mov	r3, r9
 80014bc:	b16c      	cbz	r4, 80014da <acc_cpd_assembly_test_load_program+0x18e>
 80014be:	445d      	add	r5, fp
 80014c0:	f7ff ff0a 	bl	80012d8 <acc_sensor_a121_load_confmem>
 80014c4:	b2ad      	uxth	r5, r5
 80014c6:	f240 5399 	movw	r3, #1433	; 0x599
 80014ca:	429d      	cmp	r5, r3
 80014cc:	9b03      	ldr	r3, [sp, #12]
 80014ce:	eba3 070b 	sub.w	r7, r3, fp
 80014d2:	d8ab      	bhi.n	800142c <acc_cpd_assembly_test_load_program+0xe0>
 80014d4:	b2bb      	uxth	r3, r7
 80014d6:	9303      	str	r3, [sp, #12]
 80014d8:	e78a      	b.n	80013f0 <acc_cpd_assembly_test_load_program+0xa4>
 80014da:	eb0b 0305 	add.w	r3, fp, r5
 80014de:	b29b      	uxth	r3, r3
 80014e0:	f240 5299 	movw	r2, #1433	; 0x599
 80014e4:	4293      	cmp	r3, r2
 80014e6:	d9a0      	bls.n	800142a <acc_cpd_assembly_test_load_program+0xde>
 80014e8:	e7a0      	b.n	800142c <acc_cpd_assembly_test_load_program+0xe0>
 80014ea:	bf00      	nop
 80014ec:	0800a8b0 	.word	0x0800a8b0
 80014f0:	0800a8e0 	.word	0x0800a8e0
 80014f4:	431bde83 	.word	0x431bde83
 80014f8:	08007d40 	.word	0x08007d40
 80014fc:	0800a8f4 	.word	0x0800a8f4
 8001500:	200000ac 	.word	0x200000ac

08001504 <least_sqr_fit>:
 8001504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001508:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 800150c:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 8001510:	b08d      	sub	sp, #52	; 0x34
 8001512:	2600      	movs	r6, #0
 8001514:	4683      	mov	fp, r0
 8001516:	4682      	mov	sl, r0
 8001518:	4680      	mov	r8, r0
 800151a:	4667      	mov	r7, ip
 800151c:	46b1      	mov	r9, r6
 800151e:	a803      	add	r0, sp, #12
 8001520:	ea4f 0589 	mov.w	r5, r9, lsl #2
 8001524:	4686      	mov	lr, r0
 8001526:	ed9f 7a57 	vldr	s14, [pc, #348]	; 8001684 <least_sqr_fit+0x180>
 800152a:	4643      	mov	r3, r8
 800152c:	b16a      	cbz	r2, 800154a <least_sqr_fit+0x46>
 800152e:	199c      	adds	r4, r3, r6
 8001530:	442c      	add	r4, r5
 8001532:	edd4 7a00 	vldr	s15, [r4]
 8001536:	461c      	mov	r4, r3
 8001538:	edd4 6a00 	vldr	s13, [r4]
 800153c:	330c      	adds	r3, #12
 800153e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001542:	42bb      	cmp	r3, r7
 8001544:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001548:	d1f1      	bne.n	800152e <least_sqr_fit+0x2a>
 800154a:	3504      	adds	r5, #4
 800154c:	2d0c      	cmp	r5, #12
 800154e:	ecae 7a01 	vstmia	lr!, {s14}
 8001552:	d1e8      	bne.n	8001526 <least_sqr_fit+0x22>
 8001554:	f109 0901 	add.w	r9, r9, #1
 8001558:	f1b9 0f03 	cmp.w	r9, #3
 800155c:	f100 0010 	add.w	r0, r0, #16
 8001560:	f108 0804 	add.w	r8, r8, #4
 8001564:	f1a6 0604 	sub.w	r6, r6, #4
 8001568:	f107 0704 	add.w	r7, r7, #4
 800156c:	d1d8      	bne.n	8001520 <least_sqr_fit+0x1c>
 800156e:	ed9d 6a04 	vldr	s12, [sp, #16]
 8001572:	eddd 5a05 	vldr	s11, [sp, #20]
 8001576:	eddd 6a08 	vldr	s13, [sp, #32]
 800157a:	4668      	mov	r0, sp
 800157c:	f10b 040c 	add.w	r4, fp, #12
 8001580:	eddf 7a40 	vldr	s15, [pc, #256]	; 8001684 <least_sqr_fit+0x180>
 8001584:	4653      	mov	r3, sl
 8001586:	b13a      	cbz	r2, 8001598 <least_sqr_fit+0x94>
 8001588:	461d      	mov	r5, r3
 800158a:	ed95 7a00 	vldr	s14, [r5]
 800158e:	330c      	adds	r3, #12
 8001590:	4563      	cmp	r3, ip
 8001592:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001596:	d1f7      	bne.n	8001588 <least_sqr_fit+0x84>
 8001598:	f10a 0a04 	add.w	sl, sl, #4
 800159c:	45a2      	cmp	sl, r4
 800159e:	ece0 7a01 	vstmia	r0!, {s15}
 80015a2:	f10c 0c04 	add.w	ip, ip, #4
 80015a6:	d1eb      	bne.n	8001580 <least_sqr_fit+0x7c>
 80015a8:	eddd 7a03 	vldr	s15, [sp, #12]
 80015ac:	eef5 7a40 	vcmp.f32	s15, #0.0
 80015b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015b4:	d010      	beq.n	80015d8 <least_sqr_fit+0xd4>
 80015b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80015ba:	ee87 4a27 	vdiv.f32	s8, s14, s15
 80015be:	eddd 7a07 	vldr	s15, [sp, #28]
 80015c2:	ee66 4a04 	vmul.f32	s9, s12, s8
 80015c6:	ee26 5a24 	vmul.f32	s10, s12, s9
 80015ca:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80015ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80015d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015d6:	d106      	bne.n	80015e6 <least_sqr_fit+0xe2>
 80015d8:	2000      	movs	r0, #0
 80015da:	2300      	movs	r3, #0
 80015dc:	f8cb 3000 	str.w	r3, [fp]
 80015e0:	b00d      	add	sp, #52	; 0x34
 80015e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015e6:	eec7 2a27 	vdiv.f32	s5, s14, s15
 80015ea:	ee65 3a84 	vmul.f32	s7, s11, s8
 80015ee:	ee25 7aa4 	vmul.f32	s14, s11, s9
 80015f2:	ee66 7a23 	vmul.f32	s15, s12, s7
 80015f6:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 80015fa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80015fe:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8001602:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8001606:	ee65 6aa3 	vmul.f32	s13, s11, s7
 800160a:	ee75 6a66 	vsub.f32	s13, s10, s13
 800160e:	ee27 5a27 	vmul.f32	s10, s14, s15
 8001612:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8001616:	eef5 6a40 	vcmp.f32	s13, #0.0
 800161a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800161e:	d0db      	beq.n	80015d8 <least_sqr_fit+0xd4>
 8001620:	ed9d 5a00 	vldr	s10, [sp]
 8001624:	ed9d 3a01 	vldr	s6, [sp, #4]
 8001628:	ed9d 2a02 	vldr	s4, [sp, #8]
 800162c:	ee64 4a85 	vmul.f32	s9, s9, s10
 8001630:	ee63 3a85 	vmul.f32	s7, s7, s10
 8001634:	ee73 4a64 	vsub.f32	s9, s6, s9
 8001638:	2001      	movs	r0, #1
 800163a:	ee67 7aa4 	vmul.f32	s15, s15, s9
 800163e:	2300      	movs	r3, #0
 8001640:	ee72 7a67 	vsub.f32	s15, s4, s15
 8001644:	ee77 3ae3 	vsub.f32	s7, s15, s7
 8001648:	eec3 7aa6 	vdiv.f32	s15, s7, s13
 800164c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001650:	edc1 7a02 	vstr	s15, [r1, #8]
 8001654:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8001658:	ee65 5aa7 	vmul.f32	s11, s11, s15
 800165c:	ee67 7a22 	vmul.f32	s15, s14, s5
 8001660:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001664:	edc1 7a01 	vstr	s15, [r1, #4]
 8001668:	ee35 6a46 	vsub.f32	s12, s10, s12
 800166c:	ee76 5a65 	vsub.f32	s11, s12, s11
 8001670:	ee25 4a84 	vmul.f32	s8, s11, s8
 8001674:	ed81 4a00 	vstr	s8, [r1]
 8001678:	f8cb 3000 	str.w	r3, [fp]
 800167c:	b00d      	add	sp, #52	; 0x34
 800167e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001682:	bf00      	nop
 8001684:	00000000 	.word	0x00000000

08001688 <acc_cal_algorithms_atan2_q16>:
 8001688:	2800      	cmp	r0, #0
 800168a:	bfb8      	it	lt
 800168c:	4240      	neglt	r0, r0
 800168e:	b470      	push	{r4, r5, r6}
 8001690:	bfba      	itte	lt
 8001692:	b200      	sxthlt	r0, r0
 8001694:	2401      	movlt	r4, #1
 8001696:	2400      	movge	r4, #0
 8001698:	2900      	cmp	r1, #0
 800169a:	db3f      	blt.n	800171c <acc_cal_algorithms_atan2_q16+0x94>
 800169c:	4288      	cmp	r0, r1
 800169e:	db38      	blt.n	8001712 <acc_cal_algorithms_atan2_q16+0x8a>
 80016a0:	2200      	movs	r2, #0
 80016a2:	4603      	mov	r3, r0
 80016a4:	b368      	cbz	r0, 8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 80016a6:	4608      	mov	r0, r1
 80016a8:	2600      	movs	r6, #0
 80016aa:	f643 4528 	movw	r5, #15400	; 0x3c28
 80016ae:	0400      	lsls	r0, r0, #16
 80016b0:	fbb0 f1f3 	udiv	r1, r0, r3
 80016b4:	42a9      	cmp	r1, r5
 80016b6:	d94a      	bls.n	800174e <acc_cal_algorithms_atan2_q16+0xc6>
 80016b8:	f246 33d6 	movw	r3, #25558	; 0x63d6
 80016bc:	4299      	cmp	r1, r3
 80016be:	d936      	bls.n	800172e <acc_cal_algorithms_atan2_q16+0xa6>
 80016c0:	f648 0372 	movw	r3, #34930	; 0x8872
 80016c4:	4299      	cmp	r1, r3
 80016c6:	d944      	bls.n	8001752 <acc_cal_algorithms_atan2_q16+0xca>
 80016c8:	f64a 4349 	movw	r3, #44105	; 0xac49
 80016cc:	4299      	cmp	r1, r3
 80016ce:	d942      	bls.n	8001756 <acc_cal_algorithms_atan2_q16+0xce>
 80016d0:	f24d 03a3 	movw	r3, #53411	; 0xd0a3
 80016d4:	4299      	cmp	r1, r3
 80016d6:	d940      	bls.n	800175a <acc_cal_algorithms_atan2_q16+0xd2>
 80016d8:	f24f 734b 	movw	r3, #63307	; 0xf74b
 80016dc:	4299      	cmp	r1, r3
 80016de:	bf98      	it	ls
 80016e0:	2005      	movls	r0, #5
 80016e2:	d925      	bls.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 80016e4:	f24f 754c 	movw	r5, #63308	; 0xf74c
 80016e8:	f248 2333 	movw	r3, #33331	; 0x8233
 80016ec:	f24c 40a3 	movw	r0, #50339	; 0xc4a3
 80016f0:	1b49      	subs	r1, r1, r5
 80016f2:	fb03 f101 	mul.w	r1, r3, r1
 80016f6:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 80016fa:	b116      	cbz	r6, 8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 80016fc:	f5c0 30c9 	rsb	r0, r0, #102912	; 0x19200
 8001700:	301f      	adds	r0, #31
 8001702:	b114      	cbz	r4, 800170a <acc_cal_algorithms_atan2_q16+0x82>
 8001704:	f5c0 3049 	rsb	r0, r0, #205824	; 0x32400
 8001708:	303f      	adds	r0, #63	; 0x3f
 800170a:	b102      	cbz	r2, 800170e <acc_cal_algorithms_atan2_q16+0x86>
 800170c:	4240      	negs	r0, r0
 800170e:	bc70      	pop	{r4, r5, r6}
 8001710:	4770      	bx	lr
 8001712:	460b      	mov	r3, r1
 8001714:	b9c1      	cbnz	r1, 8001748 <acc_cal_algorithms_atan2_q16+0xc0>
 8001716:	4812      	ldr	r0, [pc, #72]	; (8001760 <acc_cal_algorithms_atan2_q16+0xd8>)
 8001718:	460a      	mov	r2, r1
 800171a:	e7f2      	b.n	8001702 <acc_cal_algorithms_atan2_q16+0x7a>
 800171c:	4249      	negs	r1, r1
 800171e:	b209      	sxth	r1, r1
 8001720:	4288      	cmp	r0, r1
 8001722:	f04f 0201 	mov.w	r2, #1
 8001726:	dabc      	bge.n	80016a2 <acc_cal_algorithms_atan2_q16+0x1a>
 8001728:	460b      	mov	r3, r1
 800172a:	4616      	mov	r6, r2
 800172c:	e7bd      	b.n	80016aa <acc_cal_algorithms_atan2_q16+0x22>
 800172e:	2001      	movs	r0, #1
 8001730:	4b0c      	ldr	r3, [pc, #48]	; (8001764 <acc_cal_algorithms_atan2_q16+0xdc>)
 8001732:	eb03 05c0 	add.w	r5, r3, r0, lsl #3
 8001736:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800173a:	f8d5 0c28 	ldr.w	r0, [r5, #3112]	; 0xc28
 800173e:	f8d3 3c5c 	ldr.w	r3, [r3, #3164]	; 0xc5c
 8001742:	f8d5 5c24 	ldr.w	r5, [r5, #3108]	; 0xc24
 8001746:	e7d3      	b.n	80016f0 <acc_cal_algorithms_atan2_q16+0x68>
 8001748:	2200      	movs	r2, #0
 800174a:	2601      	movs	r6, #1
 800174c:	e7ad      	b.n	80016aa <acc_cal_algorithms_atan2_q16+0x22>
 800174e:	2000      	movs	r0, #0
 8001750:	e7ee      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 8001752:	2002      	movs	r0, #2
 8001754:	e7ec      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 8001756:	2003      	movs	r0, #3
 8001758:	e7ea      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 800175a:	2004      	movs	r0, #4
 800175c:	e7e8      	b.n	8001730 <acc_cal_algorithms_atan2_q16+0xa8>
 800175e:	bf00      	nop
 8001760:	0001921f 	.word	0x0001921f
 8001764:	08007d40 	.word	0x08007d40

08001768 <test_interrupt>:
 8001768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800176c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800176e:	b086      	sub	sp, #24
 8001770:	2b00      	cmp	r3, #0
 8001772:	d05c      	beq.n	800182e <test_interrupt+0xc6>
 8001774:	2b01      	cmp	r3, #1
 8001776:	4604      	mov	r4, r0
 8001778:	d068      	beq.n	800184c <test_interrupt+0xe4>
 800177a:	2200      	movs	r2, #0
 800177c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8001780:	07da      	lsls	r2, r3, #31
 8001782:	d402      	bmi.n	800178a <test_interrupt+0x22>
 8001784:	2b0c      	cmp	r3, #12
 8001786:	f240 8093 	bls.w	80018b0 <test_interrupt+0x148>
 800178a:	2600      	movs	r6, #0
 800178c:	6820      	ldr	r0, [r4, #0]
 800178e:	f8ad 600e 	strh.w	r6, [sp, #14]
 8001792:	f10d 020e 	add.w	r2, sp, #14
 8001796:	f240 1113 	movw	r1, #275	; 0x113
 800179a:	f8ad 6010 	strh.w	r6, [sp, #16]
 800179e:	f8ad 6012 	strh.w	r6, [sp, #18]
 80017a2:	f8ad 6014 	strh.w	r6, [sp, #20]
 80017a6:	f7ff fd03 	bl	80011b0 <acc_sensor_reg_read>
 80017aa:	6820      	ldr	r0, [r4, #0]
 80017ac:	aa04      	add	r2, sp, #16
 80017ae:	f44f 718a 	mov.w	r1, #276	; 0x114
 80017b2:	f7ff fcfd 	bl	80011b0 <acc_sensor_reg_read>
 80017b6:	6820      	ldr	r0, [r4, #0]
 80017b8:	f10d 0212 	add.w	r2, sp, #18
 80017bc:	2133      	movs	r1, #51	; 0x33
 80017be:	f7ff fcf7 	bl	80011b0 <acc_sensor_reg_read>
 80017c2:	6820      	ldr	r0, [r4, #0]
 80017c4:	aa05      	add	r2, sp, #20
 80017c6:	2132      	movs	r1, #50	; 0x32
 80017c8:	f7ff fcf2 	bl	80011b0 <acc_sensor_reg_read>
 80017cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80017d0:	2b02      	cmp	r3, #2
 80017d2:	d05e      	beq.n	8001892 <test_interrupt+0x12a>
 80017d4:	2b03      	cmp	r3, #3
 80017d6:	d154      	bne.n	8001882 <test_interrupt+0x11a>
 80017d8:	aa05      	add	r2, sp, #20
 80017da:	6820      	ldr	r0, [r4, #0]
 80017dc:	2132      	movs	r1, #50	; 0x32
 80017de:	f7ff fce7 	bl	80011b0 <acc_sensor_reg_read>
 80017e2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80017e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80017e8:	4293      	cmp	r3, r2
 80017ea:	d07a      	beq.n	80018e2 <test_interrupt+0x17a>
 80017ec:	4d55      	ldr	r5, [pc, #340]	; (8001944 <test_interrupt+0x1dc>)
 80017ee:	9200      	str	r2, [sp, #0]
 80017f0:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80017f2:	4a55      	ldr	r2, [pc, #340]	; (8001948 <test_interrupt+0x1e0>)
 80017f4:	4955      	ldr	r1, [pc, #340]	; (800194c <test_interrupt+0x1e4>)
 80017f6:	4630      	mov	r0, r6
 80017f8:	47a8      	blx	r5
 80017fa:	2504      	movs	r5, #4
 80017fc:	6820      	ldr	r0, [r4, #0]
 80017fe:	aa03      	add	r2, sp, #12
 8001800:	2145      	movs	r1, #69	; 0x45
 8001802:	f7ff fcd5 	bl	80011b0 <acc_sensor_reg_read>
 8001806:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800180a:	2b00      	cmp	r3, #0
 800180c:	f040 8095 	bne.w	800193a <test_interrupt+0x1d2>
 8001810:	4d4c      	ldr	r5, [pc, #304]	; (8001944 <test_interrupt+0x1dc>)
 8001812:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001814:	4a4e      	ldr	r2, [pc, #312]	; (8001950 <test_interrupt+0x1e8>)
 8001816:	494d      	ldr	r1, [pc, #308]	; (800194c <test_interrupt+0x1e4>)
 8001818:	2000      	movs	r0, #0
 800181a:	4798      	blx	r3
 800181c:	2504      	movs	r5, #4
 800181e:	2100      	movs	r1, #0
 8001820:	484c      	ldr	r0, [pc, #304]	; (8001954 <test_interrupt+0x1ec>)
 8001822:	f7ff f8e3 	bl	80009ec <acc_diagnostic_log_scalar>
 8001826:	4628      	mov	r0, r5
 8001828:	b006      	add	sp, #24
 800182a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800182e:	4b45      	ldr	r3, [pc, #276]	; (8001944 <test_interrupt+0x1dc>)
 8001830:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8001834:	2a01      	cmp	r2, #1
 8001836:	d91f      	bls.n	8001878 <test_interrupt+0x110>
 8001838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800183a:	4a47      	ldr	r2, [pc, #284]	; (8001958 <test_interrupt+0x1f0>)
 800183c:	4943      	ldr	r1, [pc, #268]	; (800194c <test_interrupt+0x1e4>)
 800183e:	2002      	movs	r0, #2
 8001840:	4798      	blx	r3
 8001842:	2501      	movs	r5, #1
 8001844:	4628      	mov	r0, r5
 8001846:	b006      	add	sp, #24
 8001848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800184c:	4d3d      	ldr	r5, [pc, #244]	; (8001944 <test_interrupt+0x1dc>)
 800184e:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 8001852:	2b01      	cmp	r3, #1
 8001854:	d904      	bls.n	8001860 <test_interrupt+0xf8>
 8001856:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001858:	4a40      	ldr	r2, [pc, #256]	; (800195c <test_interrupt+0x1f4>)
 800185a:	493c      	ldr	r1, [pc, #240]	; (800194c <test_interrupt+0x1e4>)
 800185c:	2002      	movs	r0, #2
 800185e:	4798      	blx	r3
 8001860:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8001862:	9305      	str	r3, [sp, #20]
 8001864:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8001868:	6820      	ldr	r0, [r4, #0]
 800186a:	ab05      	add	r3, sp, #20
 800186c:	f7ff fd6e 	bl	800134c <acc_cpd_assembly_test_load_program>
 8001870:	bb60      	cbnz	r0, 80018cc <test_interrupt+0x164>
 8001872:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001874:	4a3a      	ldr	r2, [pc, #232]	; (8001960 <test_interrupt+0x1f8>)
 8001876:	e7ce      	b.n	8001816 <test_interrupt+0xae>
 8001878:	2501      	movs	r5, #1
 800187a:	4628      	mov	r0, r5
 800187c:	b006      	add	sp, #24
 800187e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001882:	4d30      	ldr	r5, [pc, #192]	; (8001944 <test_interrupt+0x1dc>)
 8001884:	4a37      	ldr	r2, [pc, #220]	; (8001964 <test_interrupt+0x1fc>)
 8001886:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001888:	4930      	ldr	r1, [pc, #192]	; (800194c <test_interrupt+0x1e4>)
 800188a:	4630      	mov	r0, r6
 800188c:	4798      	blx	r3
 800188e:	2504      	movs	r5, #4
 8001890:	e7b4      	b.n	80017fc <test_interrupt+0x94>
 8001892:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8001896:	f243 0239 	movw	r2, #12345	; 0x3039
 800189a:	4293      	cmp	r3, r2
 800189c:	d01f      	beq.n	80018de <test_interrupt+0x176>
 800189e:	4d29      	ldr	r5, [pc, #164]	; (8001944 <test_interrupt+0x1dc>)
 80018a0:	9200      	str	r2, [sp, #0]
 80018a2:	6c2d      	ldr	r5, [r5, #64]	; 0x40
 80018a4:	4a30      	ldr	r2, [pc, #192]	; (8001968 <test_interrupt+0x200>)
 80018a6:	4929      	ldr	r1, [pc, #164]	; (800194c <test_interrupt+0x1e4>)
 80018a8:	4630      	mov	r0, r6
 80018aa:	47a8      	blx	r5
 80018ac:	2504      	movs	r5, #4
 80018ae:	e7a5      	b.n	80017fc <test_interrupt+0x94>
 80018b0:	6800      	ldr	r0, [r0, #0]
 80018b2:	aa03      	add	r2, sp, #12
 80018b4:	2145      	movs	r1, #69	; 0x45
 80018b6:	f7ff fc7b 	bl	80011b0 <acc_sensor_reg_read>
 80018ba:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d0a6      	beq.n	8001810 <test_interrupt+0xa8>
 80018c2:	2502      	movs	r5, #2
 80018c4:	4628      	mov	r0, r5
 80018c6:	b006      	add	sp, #24
 80018c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018cc:	6820      	ldr	r0, [r4, #0]
 80018ce:	f240 1163 	movw	r1, #355	; 0x163
 80018d2:	f7ff fc83 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 80018d6:	2800      	cmp	r0, #0
 80018d8:	d0cb      	beq.n	8001872 <test_interrupt+0x10a>
 80018da:	2502      	movs	r5, #2
 80018dc:	e7f2      	b.n	80018c4 <test_interrupt+0x15c>
 80018de:	2503      	movs	r5, #3
 80018e0:	e78c      	b.n	80017fc <test_interrupt+0x94>
 80018e2:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80018e6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80018ea:	4d16      	ldr	r5, [pc, #88]	; (8001944 <test_interrupt+0x1dc>)
 80018ec:	440a      	add	r2, r1
 80018ee:	f895 1048 	ldrb.w	r1, [r5, #72]	; 0x48
 80018f2:	3201      	adds	r2, #1
 80018f4:	3b03      	subs	r3, #3
 80018f6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80018fa:	2901      	cmp	r1, #1
 80018fc:	fa1f f882 	uxth.w	r8, r2
 8001900:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8001904:	ea4f 0253 	mov.w	r2, r3, lsr #1
 8001908:	d907      	bls.n	800191a <test_interrupt+0x1b2>
 800190a:	f8cd 8000 	str.w	r8, [sp]
 800190e:	b293      	uxth	r3, r2
 8001910:	490e      	ldr	r1, [pc, #56]	; (800194c <test_interrupt+0x1e4>)
 8001912:	4a16      	ldr	r2, [pc, #88]	; (800196c <test_interrupt+0x204>)
 8001914:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8001916:	2002      	movs	r0, #2
 8001918:	47b8      	blx	r7
 800191a:	b14e      	cbz	r6, 8001930 <test_interrupt+0x1c8>
 800191c:	6820      	ldr	r0, [r4, #0]
 800191e:	aa03      	add	r2, sp, #12
 8001920:	2145      	movs	r1, #69	; 0x45
 8001922:	f7ff fc45 	bl	80011b0 <acc_sensor_reg_read>
 8001926:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800192a:	2b00      	cmp	r3, #0
 800192c:	d1c9      	bne.n	80018c2 <test_interrupt+0x15a>
 800192e:	e770      	b.n	8001812 <test_interrupt+0xaa>
 8001930:	480f      	ldr	r0, [pc, #60]	; (8001970 <test_interrupt+0x208>)
 8001932:	4641      	mov	r1, r8
 8001934:	f7ff f85a 	bl	80009ec <acc_diagnostic_log_scalar>
 8001938:	e7f0      	b.n	800191c <test_interrupt+0x1b4>
 800193a:	1eeb      	subs	r3, r5, #3
 800193c:	4259      	negs	r1, r3
 800193e:	4159      	adcs	r1, r3
 8001940:	e76e      	b.n	8001820 <test_interrupt+0xb8>
 8001942:	bf00      	nop
 8001944:	200000ac 	.word	0x200000ac
 8001948:	0800a9e4 	.word	0x0800a9e4
 800194c:	0800a938 	.word	0x0800a938
 8001950:	0800a980 	.word	0x0800a980
 8001954:	0800aa6c 	.word	0x0800aa6c
 8001958:	0800a920 	.word	0x0800a920
 800195c:	0800a94c 	.word	0x0800a94c
 8001960:	0800a964 	.word	0x0800a964
 8001964:	0800aa48 	.word	0x0800aa48
 8001968:	0800aa18 	.word	0x0800aa18
 800196c:	0800a99c 	.word	0x0800a99c
 8001970:	0800a9cc 	.word	0x0800a9cc

08001974 <test_enable_pin>:
 8001974:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001978:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800197a:	b087      	sub	sp, #28
 800197c:	4605      	mov	r5, r0
 800197e:	b183      	cbz	r3, 80019a2 <test_enable_pin+0x2e>
 8001980:	2b01      	cmp	r3, #1
 8001982:	d04f      	beq.n	8001a24 <test_enable_pin+0xb0>
 8001984:	4b3e      	ldr	r3, [pc, #248]	; (8001a80 <test_enable_pin+0x10c>)
 8001986:	4a3f      	ldr	r2, [pc, #252]	; (8001a84 <test_enable_pin+0x110>)
 8001988:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800198a:	493f      	ldr	r1, [pc, #252]	; (8001a88 <test_enable_pin+0x114>)
 800198c:	2000      	movs	r0, #0
 800198e:	4798      	blx	r3
 8001990:	2504      	movs	r5, #4
 8001992:	2100      	movs	r1, #0
 8001994:	483d      	ldr	r0, [pc, #244]	; (8001a8c <test_enable_pin+0x118>)
 8001996:	f7ff f829 	bl	80009ec <acc_diagnostic_log_scalar>
 800199a:	4628      	mov	r0, r5
 800199c:	b007      	add	sp, #28
 800199e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019a2:	4f37      	ldr	r7, [pc, #220]	; (8001a80 <test_enable_pin+0x10c>)
 80019a4:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	d904      	bls.n	80019b6 <test_enable_pin+0x42>
 80019ac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80019ae:	4a38      	ldr	r2, [pc, #224]	; (8001a90 <test_enable_pin+0x11c>)
 80019b0:	4935      	ldr	r1, [pc, #212]	; (8001a88 <test_enable_pin+0x114>)
 80019b2:	2002      	movs	r0, #2
 80019b4:	4798      	blx	r3
 80019b6:	4837      	ldr	r0, [pc, #220]	; (8001a94 <test_enable_pin+0x120>)
 80019b8:	f7ff f820 	bl	80009fc <acc_diagnostic_log_set_scope>
 80019bc:	4b36      	ldr	r3, [pc, #216]	; (8001a98 <test_enable_pin+0x124>)
 80019be:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019c0:	ac06      	add	r4, sp, #24
 80019c2:	f10d 0806 	add.w	r8, sp, #6
 80019c6:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80019ca:	4646      	mov	r6, r8
 80019cc:	242c      	movs	r4, #44	; 0x2c
 80019ce:	4621      	mov	r1, r4
 80019d0:	3401      	adds	r4, #1
 80019d2:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80019d6:	6828      	ldr	r0, [r5, #0]
 80019d8:	b2a4      	uxth	r4, r4
 80019da:	f7ff fbd9 	bl	8001190 <acc_sensor_reg_write>
 80019de:	2c34      	cmp	r4, #52	; 0x34
 80019e0:	d1f5      	bne.n	80019ce <test_enable_pin+0x5a>
 80019e2:	262c      	movs	r6, #44	; 0x2c
 80019e4:	2401      	movs	r4, #1
 80019e6:	f04f 0900 	mov.w	r9, #0
 80019ea:	f10d 0206 	add.w	r2, sp, #6
 80019ee:	4631      	mov	r1, r6
 80019f0:	6828      	ldr	r0, [r5, #0]
 80019f2:	f8ad 9006 	strh.w	r9, [sp, #6]
 80019f6:	3601      	adds	r6, #1
 80019f8:	f7ff fbda 	bl	80011b0 <acc_sensor_reg_read>
 80019fc:	f838 2f02 	ldrh.w	r2, [r8, #2]!
 8001a00:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001a04:	b2b6      	uxth	r6, r6
 8001a06:	429a      	cmp	r2, r3
 8001a08:	bf18      	it	ne
 8001a0a:	2400      	movne	r4, #0
 8001a0c:	2e34      	cmp	r6, #52	; 0x34
 8001a0e:	d1ec      	bne.n	80019ea <test_enable_pin+0x76>
 8001a10:	2c00      	cmp	r4, #0
 8001a12:	d131      	bne.n	8001a78 <test_enable_pin+0x104>
 8001a14:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a16:	4a21      	ldr	r2, [pc, #132]	; (8001a9c <test_enable_pin+0x128>)
 8001a18:	491b      	ldr	r1, [pc, #108]	; (8001a88 <test_enable_pin+0x114>)
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	4798      	blx	r3
 8001a1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a20:	4a1f      	ldr	r2, [pc, #124]	; (8001aa0 <test_enable_pin+0x12c>)
 8001a22:	e7b2      	b.n	800198a <test_enable_pin+0x16>
 8001a24:	4f16      	ldr	r7, [pc, #88]	; (8001a80 <test_enable_pin+0x10c>)
 8001a26:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8001a2a:	2b01      	cmp	r3, #1
 8001a2c:	d904      	bls.n	8001a38 <test_enable_pin+0xc4>
 8001a2e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a30:	4a1c      	ldr	r2, [pc, #112]	; (8001aa4 <test_enable_pin+0x130>)
 8001a32:	4915      	ldr	r1, [pc, #84]	; (8001a88 <test_enable_pin+0x114>)
 8001a34:	2002      	movs	r0, #2
 8001a36:	4798      	blx	r3
 8001a38:	262c      	movs	r6, #44	; 0x2c
 8001a3a:	2401      	movs	r4, #1
 8001a3c:	f04f 0800 	mov.w	r8, #0
 8001a40:	4631      	mov	r1, r6
 8001a42:	6828      	ldr	r0, [r5, #0]
 8001a44:	f8ad 8008 	strh.w	r8, [sp, #8]
 8001a48:	aa02      	add	r2, sp, #8
 8001a4a:	f7ff fbb1 	bl	80011b0 <acc_sensor_reg_read>
 8001a4e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8001a52:	3601      	adds	r6, #1
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	b2b6      	uxth	r6, r6
 8001a58:	bf18      	it	ne
 8001a5a:	2400      	movne	r4, #0
 8001a5c:	2e34      	cmp	r6, #52	; 0x34
 8001a5e:	d1ef      	bne.n	8001a40 <test_enable_pin+0xcc>
 8001a60:	b93c      	cbnz	r4, 8001a72 <test_enable_pin+0xfe>
 8001a62:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a64:	4a10      	ldr	r2, [pc, #64]	; (8001aa8 <test_enable_pin+0x134>)
 8001a66:	4908      	ldr	r1, [pc, #32]	; (8001a88 <test_enable_pin+0x114>)
 8001a68:	4620      	mov	r0, r4
 8001a6a:	4798      	blx	r3
 8001a6c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001a6e:	4a0f      	ldr	r2, [pc, #60]	; (8001aac <test_enable_pin+0x138>)
 8001a70:	e78b      	b.n	800198a <test_enable_pin+0x16>
 8001a72:	2101      	movs	r1, #1
 8001a74:	2503      	movs	r5, #3
 8001a76:	e78d      	b.n	8001994 <test_enable_pin+0x20>
 8001a78:	2100      	movs	r1, #0
 8001a7a:	2501      	movs	r5, #1
 8001a7c:	e78a      	b.n	8001994 <test_enable_pin+0x20>
 8001a7e:	bf00      	nop
 8001a80:	200000ac 	.word	0x200000ac
 8001a84:	0800ab2c 	.word	0x0800ab2c
 8001a88:	0800a938 	.word	0x0800a938
 8001a8c:	0800ab4c 	.word	0x0800ab4c
 8001a90:	0800aa84 	.word	0x0800aa84
 8001a94:	0800aa9c 	.word	0x0800aa9c
 8001a98:	080089b8 	.word	0x080089b8
 8001a9c:	0800aaac 	.word	0x0800aaac
 8001aa0:	0800aac8 	.word	0x0800aac8
 8001aa4:	0800aae8 	.word	0x0800aae8
 8001aa8:	0800ab00 	.word	0x0800ab00
 8001aac:	0800ab14 	.word	0x0800ab14

08001ab0 <test_basic_read>:
 8001ab0:	b570      	push	{r4, r5, r6, lr}
 8001ab2:	4e19      	ldr	r6, [pc, #100]	; (8001b18 <test_basic_read+0x68>)
 8001ab4:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8001ab8:	2b01      	cmp	r3, #1
 8001aba:	b082      	sub	sp, #8
 8001abc:	4605      	mov	r5, r0
 8001abe:	d904      	bls.n	8001aca <test_basic_read+0x1a>
 8001ac0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001ac2:	4a16      	ldr	r2, [pc, #88]	; (8001b1c <test_basic_read+0x6c>)
 8001ac4:	4916      	ldr	r1, [pc, #88]	; (8001b20 <test_basic_read+0x70>)
 8001ac6:	2002      	movs	r0, #2
 8001ac8:	4798      	blx	r3
 8001aca:	4816      	ldr	r0, [pc, #88]	; (8001b24 <test_basic_read+0x74>)
 8001acc:	2400      	movs	r4, #0
 8001ace:	f7fe ff95 	bl	80009fc <acc_diagnostic_log_set_scope>
 8001ad2:	f10d 0206 	add.w	r2, sp, #6
 8001ad6:	6828      	ldr	r0, [r5, #0]
 8001ad8:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001adc:	4621      	mov	r1, r4
 8001ade:	f7ff fb67 	bl	80011b0 <acc_sensor_reg_read>
 8001ae2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001ae6:	f241 2310 	movw	r3, #4624	; 0x1210
 8001aea:	429a      	cmp	r2, r3
 8001aec:	d00c      	beq.n	8001b08 <test_basic_read+0x58>
 8001aee:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001af0:	4a0d      	ldr	r2, [pc, #52]	; (8001b28 <test_basic_read+0x78>)
 8001af2:	490b      	ldr	r1, [pc, #44]	; (8001b20 <test_basic_read+0x70>)
 8001af4:	4620      	mov	r0, r4
 8001af6:	4798      	blx	r3
 8001af8:	480c      	ldr	r0, [pc, #48]	; (8001b2c <test_basic_read+0x7c>)
 8001afa:	4621      	mov	r1, r4
 8001afc:	f7fe ff76 	bl	80009ec <acc_diagnostic_log_scalar>
 8001b00:	2504      	movs	r5, #4
 8001b02:	4628      	mov	r0, r5
 8001b04:	b002      	add	sp, #8
 8001b06:	bd70      	pop	{r4, r5, r6, pc}
 8001b08:	4808      	ldr	r0, [pc, #32]	; (8001b2c <test_basic_read+0x7c>)
 8001b0a:	2101      	movs	r1, #1
 8001b0c:	f7fe ff6e 	bl	80009ec <acc_diagnostic_log_scalar>
 8001b10:	2503      	movs	r5, #3
 8001b12:	4628      	mov	r0, r5
 8001b14:	b002      	add	sp, #8
 8001b16:	bd70      	pop	{r4, r5, r6, pc}
 8001b18:	200000ac 	.word	0x200000ac
 8001b1c:	0800ab64 	.word	0x0800ab64
 8001b20:	0800a938 	.word	0x0800a938
 8001b24:	0800ab78 	.word	0x0800ab78
 8001b28:	0800ab88 	.word	0x0800ab88
 8001b2c:	0800abac 	.word	0x0800abac

08001b30 <acc_rss_assembly_test_enable>:
 8001b30:	b430      	push	{r4, r5}
 8001b32:	4603      	mov	r3, r0
 8001b34:	f100 0430 	add.w	r4, r0, #48	; 0x30
 8001b38:	2200      	movs	r2, #0
 8001b3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001b40:	3308      	adds	r3, #8
 8001b42:	42a3      	cmp	r3, r4
 8001b44:	d1f9      	bne.n	8001b3a <acc_rss_assembly_test_enable+0xa>
 8001b46:	8442      	strh	r2, [r0, #34]	; 0x22
 8001b48:	6242      	str	r2, [r0, #36]	; 0x24
 8001b4a:	8502      	strh	r2, [r0, #40]	; 0x28
 8001b4c:	f100 031c 	add.w	r3, r0, #28
 8001b50:	4c07      	ldr	r4, [pc, #28]	; (8001b70 <acc_rss_assembly_test_enable+0x40>)
 8001b52:	3022      	adds	r0, #34	; 0x22
 8001b54:	2200      	movs	r2, #0
 8001b56:	2501      	movs	r5, #1
 8001b58:	e001      	b.n	8001b5e <acc_rss_assembly_test_enable+0x2e>
 8001b5a:	f814 2f0c 	ldrb.w	r2, [r4, #12]!
 8001b5e:	4291      	cmp	r1, r2
 8001b60:	bf08      	it	eq
 8001b62:	701d      	strbeq	r5, [r3, #0]
 8001b64:	3301      	adds	r3, #1
 8001b66:	4283      	cmp	r3, r0
 8001b68:	d1f7      	bne.n	8001b5a <acc_rss_assembly_test_enable+0x2a>
 8001b6a:	bc30      	pop	{r4, r5}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop
 8001b70:	080089c8 	.word	0x080089c8

08001b74 <acc_rss_assembly_test_disable_all_tests>:
 8001b74:	2200      	movs	r2, #0
 8001b76:	61c2      	str	r2, [r0, #28]
 8001b78:	8402      	strh	r2, [r0, #32]
 8001b7a:	4603      	mov	r3, r0
 8001b7c:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8001b80:	631a      	str	r2, [r3, #48]	; 0x30
 8001b82:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001b86:	3308      	adds	r3, #8
 8001b88:	428b      	cmp	r3, r1
 8001b8a:	d1f9      	bne.n	8001b80 <acc_rss_assembly_test_disable_all_tests+0xc>
 8001b8c:	8442      	strh	r2, [r0, #34]	; 0x22
 8001b8e:	6242      	str	r2, [r0, #36]	; 0x24
 8001b90:	8502      	strh	r2, [r0, #40]	; 0x28
 8001b92:	4770      	bx	lr

08001b94 <acc_sensor_destroy>:
 8001b94:	b510      	push	{r4, lr}
 8001b96:	b120      	cbz	r0, 8001ba2 <acc_sensor_destroy+0xe>
 8001b98:	4b0b      	ldr	r3, [pc, #44]	; (8001bc8 <acc_sensor_destroy+0x34>)
 8001b9a:	6802      	ldr	r2, [r0, #0]
 8001b9c:	429a      	cmp	r2, r3
 8001b9e:	4604      	mov	r4, r0
 8001ba0:	d007      	beq.n	8001bb2 <acc_sensor_destroy+0x1e>
 8001ba2:	4b0a      	ldr	r3, [pc, #40]	; (8001bcc <acc_sensor_destroy+0x38>)
 8001ba4:	4a0a      	ldr	r2, [pc, #40]	; (8001bd0 <acc_sensor_destroy+0x3c>)
 8001ba6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ba8:	490a      	ldr	r1, [pc, #40]	; (8001bd4 <acc_sensor_destroy+0x40>)
 8001baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bae:	2000      	movs	r0, #0
 8001bb0:	4718      	bx	r3
 8001bb2:	6900      	ldr	r0, [r0, #16]
 8001bb4:	2300      	movs	r3, #0
 8001bb6:	6023      	str	r3, [r4, #0]
 8001bb8:	b108      	cbz	r0, 8001bbe <acc_sensor_destroy+0x2a>
 8001bba:	f7ff f9c1 	bl	8000f40 <acc_rss_integration_mem_free>
 8001bbe:	4620      	mov	r0, r4
 8001bc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bc4:	f7ff b9bc 	b.w	8000f40 <acc_rss_integration_mem_free>
 8001bc8:	1337b00e 	.word	0x1337b00e
 8001bcc:	200000ac 	.word	0x200000ac
 8001bd0:	0800abc8 	.word	0x0800abc8
 8001bd4:	0800abe0 	.word	0x0800abe0

08001bd8 <UART_DMAAbortOnError>:
 8001bd8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001bda:	2200      	movs	r2, #0
 8001bdc:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8001be0:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8001be4:	4770      	bx	lr
 8001be6:	bf00      	nop

08001be8 <SPI_DMAError>:
 8001be8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001bea:	6819      	ldr	r1, [r3, #0]
 8001bec:	684a      	ldr	r2, [r1, #4]
 8001bee:	f022 0203 	bic.w	r2, r2, #3
 8001bf2:	b410      	push	{r4}
 8001bf4:	604a      	str	r2, [r1, #4]
 8001bf6:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001bf8:	2401      	movs	r4, #1
 8001bfa:	f042 0210 	orr.w	r2, r2, #16
 8001bfe:	661a      	str	r2, [r3, #96]	; 0x60
 8001c00:	f883 405d 	strb.w	r4, [r3, #93]	; 0x5d
 8001c04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c08:	4770      	bx	lr
 8001c0a:	bf00      	nop

08001c0c <SPI_DMAHalfReceiveCplt>:
 8001c0c:	4770      	bx	lr
 8001c0e:	bf00      	nop

08001c10 <SPI_DMAHalfTransmitReceiveCplt>:
 8001c10:	4770      	bx	lr
 8001c12:	bf00      	nop

08001c14 <SPI_DMATransmitReceiveCplt>:
 8001c14:	b570      	push	{r4, r5, r6, lr}
 8001c16:	6803      	ldr	r3, [r0, #0]
 8001c18:	4d1b      	ldr	r5, [pc, #108]	; (8001c88 <SPI_DMATransmitReceiveCplt+0x74>)
 8001c1a:	682e      	ldr	r6, [r5, #0]
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	069b      	lsls	r3, r3, #26
 8001c20:	d42e      	bmi.n	8001c80 <SPI_DMATransmitReceiveCplt+0x6c>
 8001c22:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001c24:	6822      	ldr	r2, [r4, #0]
 8001c26:	6853      	ldr	r3, [r2, #4]
 8001c28:	f023 0320 	bic.w	r3, r3, #32
 8001c2c:	6053      	str	r3, [r2, #4]
 8001c2e:	4620      	mov	r0, r4
 8001c30:	4632      	mov	r2, r6
 8001c32:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8001c36:	f7fe fcd1 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001c3a:	b958      	cbnz	r0, 8001c54 <SPI_DMATransmitReceiveCplt+0x40>
 8001c3c:	4631      	mov	r1, r6
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f7fe fd34 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001c44:	b930      	cbnz	r0, 8001c54 <SPI_DMATransmitReceiveCplt+0x40>
 8001c46:	4632      	mov	r2, r6
 8001c48:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001c4c:	4620      	mov	r0, r4
 8001c4e:	f7fe fcc5 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001c52:	b138      	cbz	r0, 8001c64 <SPI_DMATransmitReceiveCplt+0x50>
 8001c54:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c56:	f043 0320 	orr.w	r3, r3, #32
 8001c5a:	6623      	str	r3, [r4, #96]	; 0x60
 8001c5c:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c5e:	f043 0320 	orr.w	r3, r3, #32
 8001c62:	6623      	str	r3, [r4, #96]	; 0x60
 8001c64:	6821      	ldr	r1, [r4, #0]
 8001c66:	684b      	ldr	r3, [r1, #4]
 8001c68:	2200      	movs	r2, #0
 8001c6a:	f023 0303 	bic.w	r3, r3, #3
 8001c6e:	2001      	movs	r0, #1
 8001c70:	604b      	str	r3, [r1, #4]
 8001c72:	87e2      	strh	r2, [r4, #62]	; 0x3e
 8001c74:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001c78:	f884 005d 	strb.w	r0, [r4, #93]	; 0x5d
 8001c7c:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001c7e:	b913      	cbnz	r3, 8001c86 <SPI_DMATransmitReceiveCplt+0x72>
 8001c80:	2301      	movs	r3, #1
 8001c82:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
 8001c86:	bd70      	pop	{r4, r5, r6, pc}
 8001c88:	200000ac 	.word	0x200000ac

08001c8c <SPI_DMAReceiveCplt>:
 8001c8c:	b538      	push	{r3, r4, r5, lr}
 8001c8e:	4a2e      	ldr	r2, [pc, #184]	; (8001d48 <SPI_DMAReceiveCplt+0xbc>)
 8001c90:	6803      	ldr	r3, [r0, #0]
 8001c92:	6815      	ldr	r5, [r2, #0]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	069b      	lsls	r3, r3, #26
 8001c98:	d41f      	bmi.n	8001cda <SPI_DMAReceiveCplt+0x4e>
 8001c9a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001c9c:	6823      	ldr	r3, [r4, #0]
 8001c9e:	68a2      	ldr	r2, [r4, #8]
 8001ca0:	6858      	ldr	r0, [r3, #4]
 8001ca2:	f020 0020 	bic.w	r0, r0, #32
 8001ca6:	6058      	str	r0, [r3, #4]
 8001ca8:	b1c2      	cbz	r2, 8001cdc <SPI_DMAReceiveCplt+0x50>
 8001caa:	6859      	ldr	r1, [r3, #4]
 8001cac:	6860      	ldr	r0, [r4, #4]
 8001cae:	f021 0101 	bic.w	r1, r1, #1
 8001cb2:	f5b0 7f82 	cmp.w	r0, #260	; 0x104
 8001cb6:	6059      	str	r1, [r3, #4]
 8001cb8:	d035      	beq.n	8001d26 <SPI_DMAReceiveCplt+0x9a>
 8001cba:	4629      	mov	r1, r5
 8001cbc:	4620      	mov	r0, r4
 8001cbe:	f7fe fcf5 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001cc2:	b9c8      	cbnz	r0, 8001cf8 <SPI_DMAReceiveCplt+0x6c>
 8001cc4:	6863      	ldr	r3, [r4, #4]
 8001cc6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8001cca:	d01c      	beq.n	8001d06 <SPI_DMAReceiveCplt+0x7a>
 8001ccc:	2301      	movs	r3, #1
 8001cce:	2200      	movs	r2, #0
 8001cd0:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8001cd4:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8001cd8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001cda:	bd38      	pop	{r3, r4, r5, pc}
 8001cdc:	6862      	ldr	r2, [r4, #4]
 8001cde:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8001ce2:	685a      	ldr	r2, [r3, #4]
 8001ce4:	d027      	beq.n	8001d36 <SPI_DMAReceiveCplt+0xaa>
 8001ce6:	f022 0201 	bic.w	r2, r2, #1
 8001cea:	605a      	str	r2, [r3, #4]
 8001cec:	4629      	mov	r1, r5
 8001cee:	4620      	mov	r0, r4
 8001cf0:	f7fe fcdc 	bl	80006ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8001cf4:	2800      	cmp	r0, #0
 8001cf6:	d0e5      	beq.n	8001cc4 <SPI_DMAReceiveCplt+0x38>
 8001cf8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8001cfa:	f043 0320 	orr.w	r3, r3, #32
 8001cfe:	6623      	str	r3, [r4, #96]	; 0x60
 8001d00:	2320      	movs	r3, #32
 8001d02:	6623      	str	r3, [r4, #96]	; 0x60
 8001d04:	e7e2      	b.n	8001ccc <SPI_DMAReceiveCplt+0x40>
 8001d06:	68a3      	ldr	r3, [r4, #8]
 8001d08:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001d0c:	d002      	beq.n	8001d14 <SPI_DMAReceiveCplt+0x88>
 8001d0e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001d12:	d1db      	bne.n	8001ccc <SPI_DMAReceiveCplt+0x40>
 8001d14:	462a      	mov	r2, r5
 8001d16:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8001d1a:	4620      	mov	r0, r4
 8001d1c:	f7fe fc5e 	bl	80005dc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8001d20:	2800      	cmp	r0, #0
 8001d22:	d0d3      	beq.n	8001ccc <SPI_DMAReceiveCplt+0x40>
 8001d24:	e7e8      	b.n	8001cf8 <SPI_DMAReceiveCplt+0x6c>
 8001d26:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8001d2a:	d108      	bne.n	8001d3e <SPI_DMAReceiveCplt+0xb2>
 8001d2c:	681a      	ldr	r2, [r3, #0]
 8001d2e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001d32:	601a      	str	r2, [r3, #0]
 8001d34:	e7c1      	b.n	8001cba <SPI_DMAReceiveCplt+0x2e>
 8001d36:	f022 0203 	bic.w	r2, r2, #3
 8001d3a:	605a      	str	r2, [r3, #4]
 8001d3c:	e7bd      	b.n	8001cba <SPI_DMAReceiveCplt+0x2e>
 8001d3e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8001d42:	d0f3      	beq.n	8001d2c <SPI_DMAReceiveCplt+0xa0>
 8001d44:	e7b9      	b.n	8001cba <SPI_DMAReceiveCplt+0x2e>
 8001d46:	bf00      	nop
 8001d48:	200000ac 	.word	0x200000ac

08001d4c <RCCEx_PLLSAI1_Config>:
 8001d4c:	4a44      	ldr	r2, [pc, #272]	; (8001e60 <RCCEx_PLLSAI1_Config+0x114>)
 8001d4e:	68d3      	ldr	r3, [r2, #12]
 8001d50:	b430      	push	{r4, r5}
 8001d52:	079c      	lsls	r4, r3, #30
 8001d54:	d008      	beq.n	8001d68 <RCCEx_PLLSAI1_Config+0x1c>
 8001d56:	68d3      	ldr	r3, [r2, #12]
 8001d58:	6804      	ldr	r4, [r0, #0]
 8001d5a:	f003 0303 	and.w	r3, r3, #3
 8001d5e:	42a3      	cmp	r3, r4
 8001d60:	d047      	beq.n	8001df2 <RCCEx_PLLSAI1_Config+0xa6>
 8001d62:	2001      	movs	r0, #1
 8001d64:	bc30      	pop	{r4, r5}
 8001d66:	4770      	bx	lr
 8001d68:	6803      	ldr	r3, [r0, #0]
 8001d6a:	2b02      	cmp	r3, #2
 8001d6c:	d052      	beq.n	8001e14 <RCCEx_PLLSAI1_Config+0xc8>
 8001d6e:	2b03      	cmp	r3, #3
 8001d70:	d049      	beq.n	8001e06 <RCCEx_PLLSAI1_Config+0xba>
 8001d72:	2b01      	cmp	r3, #1
 8001d74:	d1f5      	bne.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001d76:	6812      	ldr	r2, [r2, #0]
 8001d78:	0792      	lsls	r2, r2, #30
 8001d7a:	d5f2      	bpl.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001d7c:	4d38      	ldr	r5, [pc, #224]	; (8001e60 <RCCEx_PLLSAI1_Config+0x114>)
 8001d7e:	6844      	ldr	r4, [r0, #4]
 8001d80:	68ea      	ldr	r2, [r5, #12]
 8001d82:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8001d86:	4313      	orrs	r3, r2
 8001d88:	3c01      	subs	r4, #1
 8001d8a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 8001d8e:	60eb      	str	r3, [r5, #12]
 8001d90:	4c33      	ldr	r4, [pc, #204]	; (8001e60 <RCCEx_PLLSAI1_Config+0x114>)
 8001d92:	4a34      	ldr	r2, [pc, #208]	; (8001e64 <RCCEx_PLLSAI1_Config+0x118>)
 8001d94:	6823      	ldr	r3, [r4, #0]
 8001d96:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001d9a:	6023      	str	r3, [r4, #0]
 8001d9c:	6815      	ldr	r5, [r2, #0]
 8001d9e:	e003      	b.n	8001da8 <RCCEx_PLLSAI1_Config+0x5c>
 8001da0:	6813      	ldr	r3, [r2, #0]
 8001da2:	1b5b      	subs	r3, r3, r5
 8001da4:	2b02      	cmp	r3, #2
 8001da6:	d839      	bhi.n	8001e1c <RCCEx_PLLSAI1_Config+0xd0>
 8001da8:	6823      	ldr	r3, [r4, #0]
 8001daa:	011b      	lsls	r3, r3, #4
 8001dac:	d4f8      	bmi.n	8001da0 <RCCEx_PLLSAI1_Config+0x54>
 8001dae:	2900      	cmp	r1, #0
 8001db0:	d136      	bne.n	8001e20 <RCCEx_PLLSAI1_Config+0xd4>
 8001db2:	e9d0 5302 	ldrd	r5, r3, [r0, #8]
 8001db6:	6921      	ldr	r1, [r4, #16]
 8001db8:	06db      	lsls	r3, r3, #27
 8001dba:	f021 4178 	bic.w	r1, r1, #4160749568	; 0xf8000000
 8001dbe:	f421 41fe 	bic.w	r1, r1, #32512	; 0x7f00
 8001dc2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001dc6:	430b      	orrs	r3, r1
 8001dc8:	6123      	str	r3, [r4, #16]
 8001dca:	4925      	ldr	r1, [pc, #148]	; (8001e60 <RCCEx_PLLSAI1_Config+0x114>)
 8001dcc:	680b      	ldr	r3, [r1, #0]
 8001dce:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001dd2:	600b      	str	r3, [r1, #0]
 8001dd4:	6814      	ldr	r4, [r2, #0]
 8001dd6:	e003      	b.n	8001de0 <RCCEx_PLLSAI1_Config+0x94>
 8001dd8:	6813      	ldr	r3, [r2, #0]
 8001dda:	1b1b      	subs	r3, r3, r4
 8001ddc:	2b02      	cmp	r3, #2
 8001dde:	d81d      	bhi.n	8001e1c <RCCEx_PLLSAI1_Config+0xd0>
 8001de0:	680b      	ldr	r3, [r1, #0]
 8001de2:	011b      	lsls	r3, r3, #4
 8001de4:	d5f8      	bpl.n	8001dd8 <RCCEx_PLLSAI1_Config+0x8c>
 8001de6:	6982      	ldr	r2, [r0, #24]
 8001de8:	690b      	ldr	r3, [r1, #16]
 8001dea:	4313      	orrs	r3, r2
 8001dec:	610b      	str	r3, [r1, #16]
 8001dee:	2000      	movs	r0, #0
 8001df0:	e7b8      	b.n	8001d64 <RCCEx_PLLSAI1_Config+0x18>
 8001df2:	2b00      	cmp	r3, #0
 8001df4:	d0b5      	beq.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001df6:	68d3      	ldr	r3, [r2, #12]
 8001df8:	6842      	ldr	r2, [r0, #4]
 8001dfa:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8001dfe:	3301      	adds	r3, #1
 8001e00:	4293      	cmp	r3, r2
 8001e02:	d1ae      	bne.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001e04:	e7c4      	b.n	8001d90 <RCCEx_PLLSAI1_Config+0x44>
 8001e06:	6814      	ldr	r4, [r2, #0]
 8001e08:	03a4      	lsls	r4, r4, #14
 8001e0a:	d4b7      	bmi.n	8001d7c <RCCEx_PLLSAI1_Config+0x30>
 8001e0c:	6812      	ldr	r2, [r2, #0]
 8001e0e:	0352      	lsls	r2, r2, #13
 8001e10:	d5a7      	bpl.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001e12:	e7b3      	b.n	8001d7c <RCCEx_PLLSAI1_Config+0x30>
 8001e14:	6812      	ldr	r2, [r2, #0]
 8001e16:	0555      	lsls	r5, r2, #21
 8001e18:	d5a3      	bpl.n	8001d62 <RCCEx_PLLSAI1_Config+0x16>
 8001e1a:	e7af      	b.n	8001d7c <RCCEx_PLLSAI1_Config+0x30>
 8001e1c:	2003      	movs	r0, #3
 8001e1e:	e7a1      	b.n	8001d64 <RCCEx_PLLSAI1_Config+0x18>
 8001e20:	2901      	cmp	r1, #1
 8001e22:	6923      	ldr	r3, [r4, #16]
 8001e24:	d00d      	beq.n	8001e42 <RCCEx_PLLSAI1_Config+0xf6>
 8001e26:	6941      	ldr	r1, [r0, #20]
 8001e28:	6885      	ldr	r5, [r0, #8]
 8001e2a:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001e2e:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001e32:	0849      	lsrs	r1, r1, #1
 8001e34:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001e38:	3901      	subs	r1, #1
 8001e3a:	ea43 6341 	orr.w	r3, r3, r1, lsl #25
 8001e3e:	6123      	str	r3, [r4, #16]
 8001e40:	e7c3      	b.n	8001dca <RCCEx_PLLSAI1_Config+0x7e>
 8001e42:	6901      	ldr	r1, [r0, #16]
 8001e44:	6885      	ldr	r5, [r0, #8]
 8001e46:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8001e4a:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001e4e:	0849      	lsrs	r1, r1, #1
 8001e50:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8001e54:	3901      	subs	r1, #1
 8001e56:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 8001e5a:	6123      	str	r3, [r4, #16]
 8001e5c:	e7b5      	b.n	8001dca <RCCEx_PLLSAI1_Config+0x7e>
 8001e5e:	bf00      	nop
 8001e60:	40021000 	.word	0x40021000
 8001e64:	200000ac 	.word	0x200000ac

08001e68 <HAL_RCCEx_PeriphCLKConfig>:
 8001e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e6a:	6803      	ldr	r3, [r0, #0]
 8001e6c:	f413 6700 	ands.w	r7, r3, #2048	; 0x800
 8001e70:	b083      	sub	sp, #12
 8001e72:	4604      	mov	r4, r0
 8001e74:	d00c      	beq.n	8001e90 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8001e76:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8001e78:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001e7c:	f000 8132 	beq.w	80020e4 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8001e80:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001e84:	f000 8106 	beq.w	8002094 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8001e88:	2900      	cmp	r1, #0
 8001e8a:	f000 8123 	beq.w	80020d4 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8001e8e:	2701      	movs	r7, #1
 8001e90:	0398      	lsls	r0, r3, #14
 8001e92:	d54f      	bpl.n	8001f34 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8001e94:	4aa4      	ldr	r2, [pc, #656]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001e96:	6d91      	ldr	r1, [r2, #88]	; 0x58
 8001e98:	00c9      	lsls	r1, r1, #3
 8001e9a:	f140 80ef 	bpl.w	800207c <HAL_RCCEx_PeriphCLKConfig+0x214>
 8001e9e:	2000      	movs	r0, #0
 8001ea0:	49a2      	ldr	r1, [pc, #648]	; (800212c <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8001ea2:	4da3      	ldr	r5, [pc, #652]	; (8002130 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 8001ea4:	680a      	ldr	r2, [r1, #0]
 8001ea6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001eaa:	600a      	str	r2, [r1, #0]
 8001eac:	682e      	ldr	r6, [r5, #0]
 8001eae:	e004      	b.n	8001eba <HAL_RCCEx_PeriphCLKConfig+0x52>
 8001eb0:	682a      	ldr	r2, [r5, #0]
 8001eb2:	1b92      	subs	r2, r2, r6
 8001eb4:	2a02      	cmp	r2, #2
 8001eb6:	f200 80f8 	bhi.w	80020aa <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001eba:	680a      	ldr	r2, [r1, #0]
 8001ebc:	05d2      	lsls	r2, r2, #23
 8001ebe:	d5f7      	bpl.n	8001eb0 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8001ec0:	bbaf      	cbnz	r7, 8001f2e <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8001ec2:	4a99      	ldr	r2, [pc, #612]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001ec4:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001ec6:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001eca:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8001ece:	d026      	beq.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001ed0:	428e      	cmp	r6, r1
 8001ed2:	d024      	beq.n	8001f1e <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8001ed4:	f8d2 6090 	ldr.w	r6, [r2, #144]	; 0x90
 8001ed8:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001edc:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8001ee0:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001ee4:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 8001ee8:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8001eec:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
 8001ef0:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
 8001ef4:	07f1      	lsls	r1, r6, #31
 8001ef6:	f8c2 c090 	str.w	ip, [r2, #144]	; 0x90
 8001efa:	d50f      	bpl.n	8001f1c <HAL_RCCEx_PeriphCLKConfig+0xb4>
 8001efc:	f8d5 c000 	ldr.w	ip, [r5]
 8001f00:	4611      	mov	r1, r2
 8001f02:	f241 3688 	movw	r6, #5000	; 0x1388
 8001f06:	e005      	b.n	8001f14 <HAL_RCCEx_PeriphCLKConfig+0xac>
 8001f08:	682a      	ldr	r2, [r5, #0]
 8001f0a:	eba2 020c 	sub.w	r2, r2, ip
 8001f0e:	42b2      	cmp	r2, r6
 8001f10:	f200 80cb 	bhi.w	80020aa <HAL_RCCEx_PeriphCLKConfig+0x242>
 8001f14:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f18:	0792      	lsls	r2, r2, #30
 8001f1a:	d5f5      	bpl.n	8001f08 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8001f1c:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8001f1e:	4982      	ldr	r1, [pc, #520]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f20:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f24:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001f28:	4332      	orrs	r2, r6
 8001f2a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8001f2e:	2800      	cmp	r0, #0
 8001f30:	f040 80bf 	bne.w	80020b2 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8001f34:	07d9      	lsls	r1, r3, #31
 8001f36:	d508      	bpl.n	8001f4a <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8001f38:	497b      	ldr	r1, [pc, #492]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f3a:	6a20      	ldr	r0, [r4, #32]
 8001f3c:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f40:	f022 0203 	bic.w	r2, r2, #3
 8001f44:	4302      	orrs	r2, r0
 8001f46:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f4a:	079a      	lsls	r2, r3, #30
 8001f4c:	d508      	bpl.n	8001f60 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8001f4e:	4976      	ldr	r1, [pc, #472]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f50:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001f52:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f56:	f022 020c 	bic.w	r2, r2, #12
 8001f5a:	4302      	orrs	r2, r0
 8001f5c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f60:	075e      	lsls	r6, r3, #29
 8001f62:	d508      	bpl.n	8001f76 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8001f64:	4970      	ldr	r1, [pc, #448]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f66:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001f68:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f6c:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001f70:	4302      	orrs	r2, r0
 8001f72:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f76:	069d      	lsls	r5, r3, #26
 8001f78:	d508      	bpl.n	8001f8c <HAL_RCCEx_PeriphCLKConfig+0x124>
 8001f7a:	496b      	ldr	r1, [pc, #428]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f7c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001f7e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f82:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001f86:	4302      	orrs	r2, r0
 8001f88:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001f8c:	0598      	lsls	r0, r3, #22
 8001f8e:	d508      	bpl.n	8001fa2 <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8001f90:	4965      	ldr	r1, [pc, #404]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001f92:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001f94:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001f98:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001f9c:	4302      	orrs	r2, r0
 8001f9e:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001fa2:	0559      	lsls	r1, r3, #21
 8001fa4:	d508      	bpl.n	8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x150>
 8001fa6:	4960      	ldr	r1, [pc, #384]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fa8:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001faa:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001fae:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001fb2:	4302      	orrs	r2, r0
 8001fb4:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001fb8:	065a      	lsls	r2, r3, #25
 8001fba:	d508      	bpl.n	8001fce <HAL_RCCEx_PeriphCLKConfig+0x166>
 8001fbc:	495a      	ldr	r1, [pc, #360]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fbe:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001fc0:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001fc4:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001fc8:	4302      	orrs	r2, r0
 8001fca:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001fce:	061e      	lsls	r6, r3, #24
 8001fd0:	d508      	bpl.n	8001fe4 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8001fd2:	4955      	ldr	r1, [pc, #340]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fd4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001fd6:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001fda:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8001fde:	4302      	orrs	r2, r0
 8001fe0:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001fe4:	05dd      	lsls	r5, r3, #23
 8001fe6:	d508      	bpl.n	8001ffa <HAL_RCCEx_PeriphCLKConfig+0x192>
 8001fe8:	494f      	ldr	r1, [pc, #316]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8001fea:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001fec:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001ff0:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001ff4:	4302      	orrs	r2, r0
 8001ff6:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8001ffa:	0318      	lsls	r0, r3, #12
 8001ffc:	d50e      	bpl.n	800201c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8001ffe:	4a4a      	ldr	r2, [pc, #296]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002000:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8002002:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8002006:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800200a:	430b      	orrs	r3, r1
 800200c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8002010:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002014:	d053      	beq.n	80020be <HAL_RCCEx_PeriphCLKConfig+0x256>
 8002016:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 800201a:	d073      	beq.n	8002104 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 800201c:	6823      	ldr	r3, [r4, #0]
 800201e:	0359      	lsls	r1, r3, #13
 8002020:	d50f      	bpl.n	8002042 <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8002022:	4a41      	ldr	r2, [pc, #260]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002024:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8002026:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800202a:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800202e:	430b      	orrs	r3, r1
 8002030:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8002034:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002038:	d046      	beq.n	80020c8 <HAL_RCCEx_PeriphCLKConfig+0x260>
 800203a:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 800203e:	d069      	beq.n	8002114 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8002040:	6823      	ldr	r3, [r4, #0]
 8002042:	045a      	lsls	r2, r3, #17
 8002044:	d50c      	bpl.n	8002060 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8002046:	4938      	ldr	r1, [pc, #224]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002048:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800204a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 800204e:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8002052:	4313      	orrs	r3, r2
 8002054:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
 8002058:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800205c:	d049      	beq.n	80020f2 <HAL_RCCEx_PeriphCLKConfig+0x28a>
 800205e:	6823      	ldr	r3, [r4, #0]
 8002060:	041b      	lsls	r3, r3, #16
 8002062:	d508      	bpl.n	8002076 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8002064:	4a30      	ldr	r2, [pc, #192]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002066:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8002068:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800206c:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8002070:	430b      	orrs	r3, r1
 8002072:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002076:	4638      	mov	r0, r7
 8002078:	b003      	add	sp, #12
 800207a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800207c:	6d91      	ldr	r1, [r2, #88]	; 0x58
 800207e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002082:	6591      	str	r1, [r2, #88]	; 0x58
 8002084:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8002086:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800208a:	9201      	str	r2, [sp, #4]
 800208c:	9a01      	ldr	r2, [sp, #4]
 800208e:	2001      	movs	r0, #1
 8002090:	e706      	b.n	8001ea0 <HAL_RCCEx_PeriphCLKConfig+0x38>
 8002092:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002094:	4a24      	ldr	r2, [pc, #144]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8002096:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800209a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 800209e:	4319      	orrs	r1, r3
 80020a0:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
 80020a4:	6823      	ldr	r3, [r4, #0]
 80020a6:	2700      	movs	r7, #0
 80020a8:	e6f2      	b.n	8001e90 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80020aa:	2703      	movs	r7, #3
 80020ac:	2800      	cmp	r0, #0
 80020ae:	f43f af41 	beq.w	8001f34 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 80020b2:	491d      	ldr	r1, [pc, #116]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80020b4:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 80020b6:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80020ba:	658a      	str	r2, [r1, #88]	; 0x58
 80020bc:	e73a      	b.n	8001f34 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 80020be:	68d3      	ldr	r3, [r2, #12]
 80020c0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80020c4:	60d3      	str	r3, [r2, #12]
 80020c6:	e7a9      	b.n	800201c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 80020c8:	68d3      	ldr	r3, [r2, #12]
 80020ca:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80020ce:	60d3      	str	r3, [r2, #12]
 80020d0:	6823      	ldr	r3, [r4, #0]
 80020d2:	e7b6      	b.n	8002042 <HAL_RCCEx_PeriphCLKConfig+0x1da>
 80020d4:	3004      	adds	r0, #4
 80020d6:	f7ff fe39 	bl	8001d4c <RCCEx_PLLSAI1_Config>
 80020da:	4607      	mov	r7, r0
 80020dc:	2800      	cmp	r0, #0
 80020de:	d0d8      	beq.n	8002092 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80020e0:	6823      	ldr	r3, [r4, #0]
 80020e2:	e6d5      	b.n	8001e90 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80020e4:	4a10      	ldr	r2, [pc, #64]	; (8002128 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80020e6:	68d3      	ldr	r3, [r2, #12]
 80020e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80020ec:	60d3      	str	r3, [r2, #12]
 80020ee:	6c41      	ldr	r1, [r0, #68]	; 0x44
 80020f0:	e7d0      	b.n	8002094 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 80020f2:	2102      	movs	r1, #2
 80020f4:	1d20      	adds	r0, r4, #4
 80020f6:	f7ff fe29 	bl	8001d4c <RCCEx_PLLSAI1_Config>
 80020fa:	6823      	ldr	r3, [r4, #0]
 80020fc:	2800      	cmp	r0, #0
 80020fe:	d0af      	beq.n	8002060 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8002100:	4607      	mov	r7, r0
 8002102:	e7ad      	b.n	8002060 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8002104:	2101      	movs	r1, #1
 8002106:	1d20      	adds	r0, r4, #4
 8002108:	f7ff fe20 	bl	8001d4c <RCCEx_PLLSAI1_Config>
 800210c:	2800      	cmp	r0, #0
 800210e:	bf18      	it	ne
 8002110:	4607      	movne	r7, r0
 8002112:	e783      	b.n	800201c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8002114:	2101      	movs	r1, #1
 8002116:	1d20      	adds	r0, r4, #4
 8002118:	f7ff fe18 	bl	8001d4c <RCCEx_PLLSAI1_Config>
 800211c:	6823      	ldr	r3, [r4, #0]
 800211e:	2800      	cmp	r0, #0
 8002120:	d08f      	beq.n	8002042 <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8002122:	4607      	mov	r7, r0
 8002124:	e78d      	b.n	8002042 <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8002126:	bf00      	nop
 8002128:	40021000 	.word	0x40021000
 800212c:	40007000 	.word	0x40007000
 8002130:	200000ac 	.word	0x200000ac

08002134 <RCC_SetFlashLatencyFromMSIRange>:
 8002134:	491f      	ldr	r1, [pc, #124]	; (80021b4 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8002136:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002138:	00db      	lsls	r3, r3, #3
 800213a:	b082      	sub	sp, #8
 800213c:	d51d      	bpl.n	800217a <RCC_SetFlashLatencyFromMSIRange+0x46>
 800213e:	4b1e      	ldr	r3, [pc, #120]	; (80021b8 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002146:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800214a:	d028      	beq.n	800219e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 800214c:	2880      	cmp	r0, #128	; 0x80
 800214e:	d812      	bhi.n	8002176 <RCC_SetFlashLatencyFromMSIRange+0x42>
 8002150:	d02e      	beq.n	80021b0 <RCC_SetFlashLatencyFromMSIRange+0x7c>
 8002152:	f1a0 0370 	sub.w	r3, r0, #112	; 0x70
 8002156:	425a      	negs	r2, r3
 8002158:	415a      	adcs	r2, r3
 800215a:	4918      	ldr	r1, [pc, #96]	; (80021bc <RCC_SetFlashLatencyFromMSIRange+0x88>)
 800215c:	680b      	ldr	r3, [r1, #0]
 800215e:	f023 0307 	bic.w	r3, r3, #7
 8002162:	4313      	orrs	r3, r2
 8002164:	600b      	str	r3, [r1, #0]
 8002166:	6808      	ldr	r0, [r1, #0]
 8002168:	f000 0007 	and.w	r0, r0, #7
 800216c:	1a80      	subs	r0, r0, r2
 800216e:	bf18      	it	ne
 8002170:	2001      	movne	r0, #1
 8002172:	b002      	add	sp, #8
 8002174:	4770      	bx	lr
 8002176:	2203      	movs	r2, #3
 8002178:	e7ef      	b.n	800215a <RCC_SetFlashLatencyFromMSIRange+0x26>
 800217a:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 800217c:	4a0e      	ldr	r2, [pc, #56]	; (80021b8 <RCC_SetFlashLatencyFromMSIRange+0x84>)
 800217e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002182:	658b      	str	r3, [r1, #88]	; 0x58
 8002184:	6d8b      	ldr	r3, [r1, #88]	; 0x58
 8002186:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800218a:	9301      	str	r3, [sp, #4]
 800218c:	9b01      	ldr	r3, [sp, #4]
 800218e:	6813      	ldr	r3, [r2, #0]
 8002190:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 8002192:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002196:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800219a:	658a      	str	r2, [r1, #88]	; 0x58
 800219c:	e7d3      	b.n	8002146 <RCC_SetFlashLatencyFromMSIRange+0x12>
 800219e:	2880      	cmp	r0, #128	; 0x80
 80021a0:	d904      	bls.n	80021ac <RCC_SetFlashLatencyFromMSIRange+0x78>
 80021a2:	28a0      	cmp	r0, #160	; 0xa0
 80021a4:	bf8c      	ite	hi
 80021a6:	2202      	movhi	r2, #2
 80021a8:	2201      	movls	r2, #1
 80021aa:	e7d6      	b.n	800215a <RCC_SetFlashLatencyFromMSIRange+0x26>
 80021ac:	2200      	movs	r2, #0
 80021ae:	e7d4      	b.n	800215a <RCC_SetFlashLatencyFromMSIRange+0x26>
 80021b0:	2202      	movs	r2, #2
 80021b2:	e7d2      	b.n	800215a <RCC_SetFlashLatencyFromMSIRange+0x26>
 80021b4:	40021000 	.word	0x40021000
 80021b8:	40007000 	.word	0x40007000
 80021bc:	40022000 	.word	0x40022000

080021c0 <HAL_RCC_GetPCLK1Freq>:
 80021c0:	4a06      	ldr	r2, [pc, #24]	; (80021dc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80021c2:	4b07      	ldr	r3, [pc, #28]	; (80021e0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80021c4:	6892      	ldr	r2, [r2, #8]
 80021c6:	4907      	ldr	r1, [pc, #28]	; (80021e4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80021c8:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80021cc:	4413      	add	r3, r2
 80021ce:	6808      	ldr	r0, [r1, #0]
 80021d0:	f893 3cd0 	ldrb.w	r3, [r3, #3280]	; 0xcd0
 80021d4:	f003 031f 	and.w	r3, r3, #31
 80021d8:	40d8      	lsrs	r0, r3
 80021da:	4770      	bx	lr
 80021dc:	40021000 	.word	0x40021000
 80021e0:	08007d40 	.word	0x08007d40
 80021e4:	20000000 	.word	0x20000000

080021e8 <HAL_RCC_GetSysClockFreq>:
 80021e8:	4a26      	ldr	r2, [pc, #152]	; (8002284 <HAL_RCC_GetSysClockFreq+0x9c>)
 80021ea:	6893      	ldr	r3, [r2, #8]
 80021ec:	68d2      	ldr	r2, [r2, #12]
 80021ee:	f013 030c 	ands.w	r3, r3, #12
 80021f2:	d008      	beq.n	8002206 <HAL_RCC_GetSysClockFreq+0x1e>
 80021f4:	2b0c      	cmp	r3, #12
 80021f6:	d03a      	beq.n	800226e <HAL_RCC_GetSysClockFreq+0x86>
 80021f8:	2b04      	cmp	r3, #4
 80021fa:	d036      	beq.n	800226a <HAL_RCC_GetSysClockFreq+0x82>
 80021fc:	2b08      	cmp	r3, #8
 80021fe:	4822      	ldr	r0, [pc, #136]	; (8002288 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002200:	bf18      	it	ne
 8002202:	2000      	movne	r0, #0
 8002204:	4770      	bx	lr
 8002206:	4a1f      	ldr	r2, [pc, #124]	; (8002284 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002208:	6811      	ldr	r1, [r2, #0]
 800220a:	0709      	lsls	r1, r1, #28
 800220c:	bf54      	ite	pl
 800220e:	f8d2 1094 	ldrpl.w	r1, [r2, #148]	; 0x94
 8002212:	6811      	ldrmi	r1, [r2, #0]
 8002214:	4a1d      	ldr	r2, [pc, #116]	; (800228c <HAL_RCC_GetSysClockFreq+0xa4>)
 8002216:	bf54      	ite	pl
 8002218:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
 800221c:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
 8002220:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8002224:	f8d2 0cd8 	ldr.w	r0, [r2, #3288]	; 0xcd8
 8002228:	b303      	cbz	r3, 800226c <HAL_RCC_GetSysClockFreq+0x84>
 800222a:	2b0c      	cmp	r3, #12
 800222c:	d127      	bne.n	800227e <HAL_RCC_GetSysClockFreq+0x96>
 800222e:	4b15      	ldr	r3, [pc, #84]	; (8002284 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002230:	68db      	ldr	r3, [r3, #12]
 8002232:	f003 0303 	and.w	r3, r3, #3
 8002236:	2b02      	cmp	r3, #2
 8002238:	d01f      	beq.n	800227a <HAL_RCC_GetSysClockFreq+0x92>
 800223a:	4a13      	ldr	r2, [pc, #76]	; (8002288 <HAL_RCC_GetSysClockFreq+0xa0>)
 800223c:	2b03      	cmp	r3, #3
 800223e:	bf08      	it	eq
 8002240:	4610      	moveq	r0, r2
 8002242:	4b10      	ldr	r3, [pc, #64]	; (8002284 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002244:	68d9      	ldr	r1, [r3, #12]
 8002246:	68da      	ldr	r2, [r3, #12]
 8002248:	68db      	ldr	r3, [r3, #12]
 800224a:	f3c3 6341 	ubfx	r3, r3, #25, #2
 800224e:	f3c2 2206 	ubfx	r2, r2, #8, #7
 8002252:	f3c1 1102 	ubfx	r1, r1, #4, #3
 8002256:	3301      	adds	r3, #1
 8002258:	3101      	adds	r1, #1
 800225a:	fb00 f002 	mul.w	r0, r0, r2
 800225e:	005b      	lsls	r3, r3, #1
 8002260:	fbb0 f0f1 	udiv	r0, r0, r1
 8002264:	fbb0 f0f3 	udiv	r0, r0, r3
 8002268:	4770      	bx	lr
 800226a:	4809      	ldr	r0, [pc, #36]	; (8002290 <HAL_RCC_GetSysClockFreq+0xa8>)
 800226c:	4770      	bx	lr
 800226e:	f002 0203 	and.w	r2, r2, #3
 8002272:	2a01      	cmp	r2, #1
 8002274:	d0c7      	beq.n	8002206 <HAL_RCC_GetSysClockFreq+0x1e>
 8002276:	2000      	movs	r0, #0
 8002278:	e7d9      	b.n	800222e <HAL_RCC_GetSysClockFreq+0x46>
 800227a:	4805      	ldr	r0, [pc, #20]	; (8002290 <HAL_RCC_GetSysClockFreq+0xa8>)
 800227c:	e7e1      	b.n	8002242 <HAL_RCC_GetSysClockFreq+0x5a>
 800227e:	2000      	movs	r0, #0
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	40021000 	.word	0x40021000
 8002288:	007a1200 	.word	0x007a1200
 800228c:	08007d40 	.word	0x08007d40
 8002290:	00f42400 	.word	0x00f42400

08002294 <HAL_GPIO_Init>:
 8002294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002298:	680c      	ldr	r4, [r1, #0]
 800229a:	b085      	sub	sp, #20
 800229c:	2c00      	cmp	r4, #0
 800229e:	f000 8087 	beq.w	80023b0 <HAL_GPIO_Init+0x11c>
 80022a2:	2300      	movs	r3, #0
 80022a4:	f04f 0b01 	mov.w	fp, #1
 80022a8:	fa0b fe03 	lsl.w	lr, fp, r3
 80022ac:	ea1e 0a04 	ands.w	sl, lr, r4
 80022b0:	d079      	beq.n	80023a6 <HAL_GPIO_Init+0x112>
 80022b2:	684e      	ldr	r6, [r1, #4]
 80022b4:	f006 0203 	and.w	r2, r6, #3
 80022b8:	1e55      	subs	r5, r2, #1
 80022ba:	2d01      	cmp	r5, #1
 80022bc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80022c0:	d979      	bls.n	80023b6 <HAL_GPIO_Init+0x122>
 80022c2:	2a03      	cmp	r2, #3
 80022c4:	f040 80bd 	bne.w	8002442 <HAL_GPIO_Init+0x1ae>
 80022c8:	fa02 f20c 	lsl.w	r2, r2, ip
 80022cc:	43d5      	mvns	r5, r2
 80022ce:	f8d0 c000 	ldr.w	ip, [r0]
 80022d2:	ea0c 0505 	and.w	r5, ip, r5
 80022d6:	432a      	orrs	r2, r5
 80022d8:	f416 3f40 	tst.w	r6, #196608	; 0x30000
 80022dc:	6002      	str	r2, [r0, #0]
 80022de:	d062      	beq.n	80023a6 <HAL_GPIO_Init+0x112>
 80022e0:	4d5f      	ldr	r5, [pc, #380]	; (8002460 <HAL_GPIO_Init+0x1cc>)
 80022e2:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 80022e4:	f042 0201 	orr.w	r2, r2, #1
 80022e8:	662a      	str	r2, [r5, #96]	; 0x60
 80022ea:	6e2d      	ldr	r5, [r5, #96]	; 0x60
 80022ec:	f023 0203 	bic.w	r2, r3, #3
 80022f0:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80022f4:	f005 0501 	and.w	r5, r5, #1
 80022f8:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80022fc:	9503      	str	r5, [sp, #12]
 80022fe:	f003 0503 	and.w	r5, r3, #3
 8002302:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8002306:	f8d2 e008 	ldr.w	lr, [r2, #8]
 800230a:	00ad      	lsls	r5, r5, #2
 800230c:	270f      	movs	r7, #15
 800230e:	fa07 fc05 	lsl.w	ip, r7, r5
 8002312:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 8002316:	ea2e 0e0c 	bic.w	lr, lr, ip
 800231a:	d016      	beq.n	800234a <HAL_GPIO_Init+0xb6>
 800231c:	4f51      	ldr	r7, [pc, #324]	; (8002464 <HAL_GPIO_Init+0x1d0>)
 800231e:	42b8      	cmp	r0, r7
 8002320:	f000 8097 	beq.w	8002452 <HAL_GPIO_Init+0x1be>
 8002324:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8002328:	42b8      	cmp	r0, r7
 800232a:	f000 8095 	beq.w	8002458 <HAL_GPIO_Init+0x1c4>
 800232e:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8002332:	42b8      	cmp	r0, r7
 8002334:	f000 808a 	beq.w	800244c <HAL_GPIO_Init+0x1b8>
 8002338:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 800233c:	42b8      	cmp	r0, r7
 800233e:	bf0c      	ite	eq
 8002340:	f04f 0c04 	moveq.w	ip, #4
 8002344:	f04f 0c07 	movne.w	ip, #7
 8002348:	e001      	b.n	800234e <HAL_GPIO_Init+0xba>
 800234a:	f04f 0c00 	mov.w	ip, #0
 800234e:	fa0c f505 	lsl.w	r5, ip, r5
 8002352:	ea45 050e 	orr.w	r5, r5, lr
 8002356:	6095      	str	r5, [r2, #8]
 8002358:	4a43      	ldr	r2, [pc, #268]	; (8002468 <HAL_GPIO_Init+0x1d4>)
 800235a:	6892      	ldr	r2, [r2, #8]
 800235c:	ea6f 0c0a 	mvn.w	ip, sl
 8002360:	02f5      	lsls	r5, r6, #11
 8002362:	4d41      	ldr	r5, [pc, #260]	; (8002468 <HAL_GPIO_Init+0x1d4>)
 8002364:	bf54      	ite	pl
 8002366:	ea0c 0202 	andpl.w	r2, ip, r2
 800236a:	ea4a 0202 	orrmi.w	r2, sl, r2
 800236e:	60aa      	str	r2, [r5, #8]
 8002370:	68ed      	ldr	r5, [r5, #12]
 8002372:	02b2      	lsls	r2, r6, #10
 8002374:	4a3c      	ldr	r2, [pc, #240]	; (8002468 <HAL_GPIO_Init+0x1d4>)
 8002376:	bf54      	ite	pl
 8002378:	ea0c 0505 	andpl.w	r5, ip, r5
 800237c:	ea4a 0505 	orrmi.w	r5, sl, r5
 8002380:	60d5      	str	r5, [r2, #12]
 8002382:	6855      	ldr	r5, [r2, #4]
 8002384:	4a38      	ldr	r2, [pc, #224]	; (8002468 <HAL_GPIO_Init+0x1d4>)
 8002386:	03b7      	lsls	r7, r6, #14
 8002388:	bf54      	ite	pl
 800238a:	ea0c 0505 	andpl.w	r5, ip, r5
 800238e:	ea4a 0505 	orrmi.w	r5, sl, r5
 8002392:	6055      	str	r5, [r2, #4]
 8002394:	6812      	ldr	r2, [r2, #0]
 8002396:	03f5      	lsls	r5, r6, #15
 8002398:	4d33      	ldr	r5, [pc, #204]	; (8002468 <HAL_GPIO_Init+0x1d4>)
 800239a:	bf54      	ite	pl
 800239c:	ea0c 0202 	andpl.w	r2, ip, r2
 80023a0:	ea4a 0202 	orrmi.w	r2, sl, r2
 80023a4:	602a      	str	r2, [r5, #0]
 80023a6:	3301      	adds	r3, #1
 80023a8:	fa34 f203 	lsrs.w	r2, r4, r3
 80023ac:	f47f af7c 	bne.w	80022a8 <HAL_GPIO_Init+0x14>
 80023b0:	b005      	add	sp, #20
 80023b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80023b6:	f8d0 8008 	ldr.w	r8, [r0, #8]
 80023ba:	68cf      	ldr	r7, [r1, #12]
 80023bc:	2503      	movs	r5, #3
 80023be:	fa05 f50c 	lsl.w	r5, r5, ip
 80023c2:	ea28 0805 	bic.w	r8, r8, r5
 80023c6:	fa07 f90c 	lsl.w	r9, r7, ip
 80023ca:	ea49 0808 	orr.w	r8, r9, r8
 80023ce:	f8c0 8008 	str.w	r8, [r0, #8]
 80023d2:	f8d0 8004 	ldr.w	r8, [r0, #4]
 80023d6:	f3c6 1900 	ubfx	r9, r6, #4, #1
 80023da:	ea28 080e 	bic.w	r8, r8, lr
 80023de:	fa09 fe03 	lsl.w	lr, r9, r3
 80023e2:	ea4e 0e08 	orr.w	lr, lr, r8
 80023e6:	43ed      	mvns	r5, r5
 80023e8:	f8c0 e004 	str.w	lr, [r0, #4]
 80023ec:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80023f0:	688f      	ldr	r7, [r1, #8]
 80023f2:	ea08 0805 	and.w	r8, r8, r5
 80023f6:	fa07 fe0c 	lsl.w	lr, r7, ip
 80023fa:	ea4e 0e08 	orr.w	lr, lr, r8
 80023fe:	2a02      	cmp	r2, #2
 8002400:	f8c0 e00c 	str.w	lr, [r0, #12]
 8002404:	d002      	beq.n	800240c <HAL_GPIO_Init+0x178>
 8002406:	fa02 f20c 	lsl.w	r2, r2, ip
 800240a:	e760      	b.n	80022ce <HAL_GPIO_Init+0x3a>
 800240c:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 8002410:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8002414:	f003 0e07 	and.w	lr, r3, #7
 8002418:	f8d8 7020 	ldr.w	r7, [r8, #32]
 800241c:	9701      	str	r7, [sp, #4]
 800241e:	690f      	ldr	r7, [r1, #16]
 8002420:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8002424:	fa07 f90e 	lsl.w	r9, r7, lr
 8002428:	270f      	movs	r7, #15
 800242a:	fa07 fe0e 	lsl.w	lr, r7, lr
 800242e:	9f01      	ldr	r7, [sp, #4]
 8002430:	ea27 0e0e 	bic.w	lr, r7, lr
 8002434:	ea49 0e0e 	orr.w	lr, r9, lr
 8002438:	fa02 f20c 	lsl.w	r2, r2, ip
 800243c:	f8c8 e020 	str.w	lr, [r8, #32]
 8002440:	e745      	b.n	80022ce <HAL_GPIO_Init+0x3a>
 8002442:	2503      	movs	r5, #3
 8002444:	fa05 f50c 	lsl.w	r5, r5, ip
 8002448:	43ed      	mvns	r5, r5
 800244a:	e7cf      	b.n	80023ec <HAL_GPIO_Init+0x158>
 800244c:	f04f 0c03 	mov.w	ip, #3
 8002450:	e77d      	b.n	800234e <HAL_GPIO_Init+0xba>
 8002452:	f04f 0c01 	mov.w	ip, #1
 8002456:	e77a      	b.n	800234e <HAL_GPIO_Init+0xba>
 8002458:	f04f 0c02 	mov.w	ip, #2
 800245c:	e777      	b.n	800234e <HAL_GPIO_Init+0xba>
 800245e:	bf00      	nop
 8002460:	40021000 	.word	0x40021000
 8002464:	48000400 	.word	0x48000400
 8002468:	40010400 	.word	0x40010400

0800246c <HAL_DMA_IRQHandler>:
 800246c:	b470      	push	{r4, r5, r6}
 800246e:	e9d0 6310 	ldrd	r6, r3, [r0, #64]	; 0x40
 8002472:	2204      	movs	r2, #4
 8002474:	6831      	ldr	r1, [r6, #0]
 8002476:	6805      	ldr	r5, [r0, #0]
 8002478:	f003 031c 	and.w	r3, r3, #28
 800247c:	409a      	lsls	r2, r3
 800247e:	420a      	tst	r2, r1
 8002480:	682c      	ldr	r4, [r5, #0]
 8002482:	d00e      	beq.n	80024a2 <HAL_DMA_IRQHandler+0x36>
 8002484:	f014 0f04 	tst.w	r4, #4
 8002488:	d00b      	beq.n	80024a2 <HAL_DMA_IRQHandler+0x36>
 800248a:	682b      	ldr	r3, [r5, #0]
 800248c:	069b      	lsls	r3, r3, #26
 800248e:	d403      	bmi.n	8002498 <HAL_DMA_IRQHandler+0x2c>
 8002490:	682b      	ldr	r3, [r5, #0]
 8002492:	f023 0304 	bic.w	r3, r3, #4
 8002496:	602b      	str	r3, [r5, #0]
 8002498:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800249a:	6072      	str	r2, [r6, #4]
 800249c:	b1cb      	cbz	r3, 80024d2 <HAL_DMA_IRQHandler+0x66>
 800249e:	bc70      	pop	{r4, r5, r6}
 80024a0:	4718      	bx	r3
 80024a2:	2202      	movs	r2, #2
 80024a4:	409a      	lsls	r2, r3
 80024a6:	420a      	tst	r2, r1
 80024a8:	d015      	beq.n	80024d6 <HAL_DMA_IRQHandler+0x6a>
 80024aa:	f014 0f02 	tst.w	r4, #2
 80024ae:	d012      	beq.n	80024d6 <HAL_DMA_IRQHandler+0x6a>
 80024b0:	682b      	ldr	r3, [r5, #0]
 80024b2:	0699      	lsls	r1, r3, #26
 80024b4:	d406      	bmi.n	80024c4 <HAL_DMA_IRQHandler+0x58>
 80024b6:	682b      	ldr	r3, [r5, #0]
 80024b8:	2101      	movs	r1, #1
 80024ba:	f023 030a 	bic.w	r3, r3, #10
 80024be:	602b      	str	r3, [r5, #0]
 80024c0:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80024c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80024c6:	6072      	str	r2, [r6, #4]
 80024c8:	2200      	movs	r2, #0
 80024ca:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d1e5      	bne.n	800249e <HAL_DMA_IRQHandler+0x32>
 80024d2:	bc70      	pop	{r4, r5, r6}
 80024d4:	4770      	bx	lr
 80024d6:	2208      	movs	r2, #8
 80024d8:	409a      	lsls	r2, r3
 80024da:	420a      	tst	r2, r1
 80024dc:	d0f9      	beq.n	80024d2 <HAL_DMA_IRQHandler+0x66>
 80024de:	0722      	lsls	r2, r4, #28
 80024e0:	d5f7      	bpl.n	80024d2 <HAL_DMA_IRQHandler+0x66>
 80024e2:	682a      	ldr	r2, [r5, #0]
 80024e4:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80024e6:	f022 020e 	bic.w	r2, r2, #14
 80024ea:	602a      	str	r2, [r5, #0]
 80024ec:	2201      	movs	r2, #1
 80024ee:	fa02 f303 	lsl.w	r3, r2, r3
 80024f2:	2400      	movs	r4, #0
 80024f4:	6073      	str	r3, [r6, #4]
 80024f6:	63c2      	str	r2, [r0, #60]	; 0x3c
 80024f8:	f880 4024 	strb.w	r4, [r0, #36]	; 0x24
 80024fc:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8002500:	2900      	cmp	r1, #0
 8002502:	d0e6      	beq.n	80024d2 <HAL_DMA_IRQHandler+0x66>
 8002504:	bc70      	pop	{r4, r5, r6}
 8002506:	4708      	bx	r1

08002508 <HAL_DMA_Start_IT>:
 8002508:	b4f0      	push	{r4, r5, r6, r7}
 800250a:	f890 4024 	ldrb.w	r4, [r0, #36]	; 0x24
 800250e:	2c01      	cmp	r4, #1
 8002510:	d03d      	beq.n	800258e <HAL_DMA_Start_IT+0x86>
 8002512:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002516:	2601      	movs	r6, #1
 8002518:	42b4      	cmp	r4, r6
 800251a:	b2e5      	uxtb	r5, r4
 800251c:	f880 6024 	strb.w	r6, [r0, #36]	; 0x24
 8002520:	d005      	beq.n	800252e <HAL_DMA_Start_IT+0x26>
 8002522:	2300      	movs	r3, #0
 8002524:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8002528:	bcf0      	pop	{r4, r5, r6, r7}
 800252a:	2002      	movs	r0, #2
 800252c:	4770      	bx	lr
 800252e:	6804      	ldr	r4, [r0, #0]
 8002530:	f8d0 c040 	ldr.w	ip, [r0, #64]	; 0x40
 8002534:	2702      	movs	r7, #2
 8002536:	2600      	movs	r6, #0
 8002538:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 800253c:	63c6      	str	r6, [r0, #60]	; 0x3c
 800253e:	6c47      	ldr	r7, [r0, #68]	; 0x44
 8002540:	6826      	ldr	r6, [r4, #0]
 8002542:	f007 071c 	and.w	r7, r7, #28
 8002546:	f026 0601 	bic.w	r6, r6, #1
 800254a:	6026      	str	r6, [r4, #0]
 800254c:	40bd      	lsls	r5, r7
 800254e:	6886      	ldr	r6, [r0, #8]
 8002550:	f8cc 5004 	str.w	r5, [ip, #4]
 8002554:	6063      	str	r3, [r4, #4]
 8002556:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8002558:	2e10      	cmp	r6, #16
 800255a:	bf0b      	itete	eq
 800255c:	60a2      	streq	r2, [r4, #8]
 800255e:	60a1      	strne	r1, [r4, #8]
 8002560:	60e1      	streq	r1, [r4, #12]
 8002562:	60e2      	strne	r2, [r4, #12]
 8002564:	b153      	cbz	r3, 800257c <HAL_DMA_Start_IT+0x74>
 8002566:	6823      	ldr	r3, [r4, #0]
 8002568:	f043 030e 	orr.w	r3, r3, #14
 800256c:	6023      	str	r3, [r4, #0]
 800256e:	6823      	ldr	r3, [r4, #0]
 8002570:	f043 0301 	orr.w	r3, r3, #1
 8002574:	6023      	str	r3, [r4, #0]
 8002576:	2000      	movs	r0, #0
 8002578:	bcf0      	pop	{r4, r5, r6, r7}
 800257a:	4770      	bx	lr
 800257c:	6823      	ldr	r3, [r4, #0]
 800257e:	f023 0304 	bic.w	r3, r3, #4
 8002582:	6023      	str	r3, [r4, #0]
 8002584:	6823      	ldr	r3, [r4, #0]
 8002586:	f043 030a 	orr.w	r3, r3, #10
 800258a:	6023      	str	r3, [r4, #0]
 800258c:	e7ef      	b.n	800256e <HAL_DMA_Start_IT+0x66>
 800258e:	2002      	movs	r0, #2
 8002590:	bcf0      	pop	{r4, r5, r6, r7}
 8002592:	4770      	bx	lr

08002594 <HAL_NVIC_EnableIRQ.part.0>:
 8002594:	4a04      	ldr	r2, [pc, #16]	; (80025a8 <HAL_NVIC_EnableIRQ.part.0+0x14>)
 8002596:	f000 011f 	and.w	r1, r0, #31
 800259a:	2301      	movs	r3, #1
 800259c:	0940      	lsrs	r0, r0, #5
 800259e:	408b      	lsls	r3, r1
 80025a0:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 80025a4:	4770      	bx	lr
 80025a6:	bf00      	nop
 80025a8:	e000e100 	.word	0xe000e100

080025ac <HAL_InitTick>:
 80025ac:	b570      	push	{r4, r5, r6, lr}
 80025ae:	4d10      	ldr	r5, [pc, #64]	; (80025f0 <HAL_InitTick+0x44>)
 80025b0:	4a10      	ldr	r2, [pc, #64]	; (80025f4 <HAL_InitTick+0x48>)
 80025b2:	682b      	ldr	r3, [r5, #0]
 80025b4:	fba2 2303 	umull	r2, r3, r2, r3
 80025b8:	099b      	lsrs	r3, r3, #6
 80025ba:	3b01      	subs	r3, #1
 80025bc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80025c0:	d20c      	bcs.n	80025dc <HAL_InitTick+0x30>
 80025c2:	4a0d      	ldr	r2, [pc, #52]	; (80025f8 <HAL_InitTick+0x4c>)
 80025c4:	490d      	ldr	r1, [pc, #52]	; (80025fc <HAL_InitTick+0x50>)
 80025c6:	6053      	str	r3, [r2, #4]
 80025c8:	23f0      	movs	r3, #240	; 0xf0
 80025ca:	f881 3023 	strb.w	r3, [r1, #35]	; 0x23
 80025ce:	2600      	movs	r6, #0
 80025d0:	2307      	movs	r3, #7
 80025d2:	280f      	cmp	r0, #15
 80025d4:	6096      	str	r6, [r2, #8]
 80025d6:	4604      	mov	r4, r0
 80025d8:	6013      	str	r3, [r2, #0]
 80025da:	d901      	bls.n	80025e0 <HAL_InitTick+0x34>
 80025dc:	2001      	movs	r0, #1
 80025de:	bd70      	pop	{r4, r5, r6, pc}
 80025e0:	4601      	mov	r1, r0
 80025e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80025e6:	f7fd fdf3 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80025ea:	606c      	str	r4, [r5, #4]
 80025ec:	4630      	mov	r0, r6
 80025ee:	bd70      	pop	{r4, r5, r6, pc}
 80025f0:	20000000 	.word	0x20000000
 80025f4:	10624dd3 	.word	0x10624dd3
 80025f8:	e000e010 	.word	0xe000e010
 80025fc:	e000ed00 	.word	0xe000ed00

08002600 <__NVIC_SystemReset>:
 8002600:	f3bf 8f4f 	dsb	sy
 8002604:	4905      	ldr	r1, [pc, #20]	; (800261c <__NVIC_SystemReset+0x1c>)
 8002606:	4b06      	ldr	r3, [pc, #24]	; (8002620 <__NVIC_SystemReset+0x20>)
 8002608:	68ca      	ldr	r2, [r1, #12]
 800260a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 800260e:	4313      	orrs	r3, r2
 8002610:	60cb      	str	r3, [r1, #12]
 8002612:	f3bf 8f4f 	dsb	sy
 8002616:	bf00      	nop
 8002618:	e7fd      	b.n	8002616 <__NVIC_SystemReset+0x16>
 800261a:	bf00      	nop
 800261c:	e000ed00 	.word	0xe000ed00
 8002620:	05fa0004 	.word	0x05fa0004

08002624 <acc_integration_sleep_us.constprop.0>:
 8002624:	b538      	push	{r3, r4, r5, lr}
 8002626:	4b52      	ldr	r3, [pc, #328]	; (8002770 <acc_integration_sleep_us.constprop.0+0x14c>)
 8002628:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800262c:	2100      	movs	r1, #0
 800262e:	2a01      	cmp	r2, #1
 8002630:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 8002634:	f000 808d 	beq.w	8002752 <acc_integration_sleep_us.constprop.0+0x12e>
 8002638:	685a      	ldr	r2, [r3, #4]
 800263a:	2153      	movs	r1, #83	; 0x53
 800263c:	2502      	movs	r5, #2
 800263e:	20ca      	movs	r0, #202	; 0xca
 8002640:	2401      	movs	r4, #1
 8002642:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 8002646:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 800264a:	6250      	str	r0, [r2, #36]	; 0x24
 800264c:	6251      	str	r1, [r2, #36]	; 0x24
 800264e:	6891      	ldr	r1, [r2, #8]
 8002650:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8002654:	6091      	str	r1, [r2, #8]
 8002656:	68d1      	ldr	r1, [r2, #12]
 8002658:	b2c9      	uxtb	r1, r1
 800265a:	f461 6190 	orn	r1, r1, #1152	; 0x480
 800265e:	60d1      	str	r1, [r2, #12]
 8002660:	68d1      	ldr	r1, [r2, #12]
 8002662:	0649      	lsls	r1, r1, #25
 8002664:	d564      	bpl.n	8002730 <acc_integration_sleep_us.constprop.0+0x10c>
 8002666:	211f      	movs	r1, #31
 8002668:	6151      	str	r1, [r2, #20]
 800266a:	6891      	ldr	r1, [r2, #8]
 800266c:	4841      	ldr	r0, [pc, #260]	; (8002774 <acc_integration_sleep_us.constprop.0+0x150>)
 800266e:	f021 0107 	bic.w	r1, r1, #7
 8002672:	f041 0103 	orr.w	r1, r1, #3
 8002676:	6091      	str	r1, [r2, #8]
 8002678:	6801      	ldr	r1, [r0, #0]
 800267a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800267e:	6001      	str	r1, [r0, #0]
 8002680:	6881      	ldr	r1, [r0, #8]
 8002682:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002686:	6081      	str	r1, [r0, #8]
 8002688:	6891      	ldr	r1, [r2, #8]
 800268a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800268e:	6091      	str	r1, [r2, #8]
 8002690:	6891      	ldr	r1, [r2, #8]
 8002692:	24ff      	movs	r4, #255	; 0xff
 8002694:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8002698:	2001      	movs	r0, #1
 800269a:	6091      	str	r1, [r2, #8]
 800269c:	6254      	str	r4, [r2, #36]	; 0x24
 800269e:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 80026a2:	f893 1051 	ldrb.w	r1, [r3, #81]	; 0x51
 80026a6:	2200      	movs	r2, #0
 80026a8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80026ac:	2900      	cmp	r1, #0
 80026ae:	d15b      	bne.n	8002768 <acc_integration_sleep_us.constprop.0+0x144>
 80026b0:	b672      	cpsid	i
 80026b2:	f3bf 8f4f 	dsb	sy
 80026b6:	f3bf 8f6f 	isb	sy
 80026ba:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 80026be:	b902      	cbnz	r2, 80026c2 <acc_integration_sleep_us.constprop.0+0x9e>
 80026c0:	bf30      	wfi
 80026c2:	b662      	cpsie	i
 80026c4:	f3bf 8f4f 	dsb	sy
 80026c8:	f3bf 8f6f 	isb	sy
 80026cc:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
 80026d0:	2a00      	cmp	r2, #0
 80026d2:	d0ed      	beq.n	80026b0 <acc_integration_sleep_us.constprop.0+0x8c>
 80026d4:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 80026d8:	2100      	movs	r1, #0
 80026da:	2a01      	cmp	r2, #1
 80026dc:	f883 1051 	strb.w	r1, [r3, #81]	; 0x51
 80026e0:	d037      	beq.n	8002752 <acc_integration_sleep_us.constprop.0+0x12e>
 80026e2:	6858      	ldr	r0, [r3, #4]
 80026e4:	2253      	movs	r2, #83	; 0x53
 80026e6:	2401      	movs	r4, #1
 80026e8:	2502      	movs	r5, #2
 80026ea:	21ca      	movs	r1, #202	; 0xca
 80026ec:	f883 5025 	strb.w	r5, [r3, #37]	; 0x25
 80026f0:	f883 4024 	strb.w	r4, [r3, #36]	; 0x24
 80026f4:	6241      	str	r1, [r0, #36]	; 0x24
 80026f6:	6242      	str	r2, [r0, #36]	; 0x24
 80026f8:	6882      	ldr	r2, [r0, #8]
 80026fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80026fe:	6082      	str	r2, [r0, #8]
 8002700:	6882      	ldr	r2, [r0, #8]
 8002702:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8002706:	6082      	str	r2, [r0, #8]
 8002708:	681c      	ldr	r4, [r3, #0]
 800270a:	e004      	b.n	8002716 <acc_integration_sleep_us.constprop.0+0xf2>
 800270c:	6819      	ldr	r1, [r3, #0]
 800270e:	1b09      	subs	r1, r1, r4
 8002710:	f5b1 7f7a 	cmp.w	r1, #1000	; 0x3e8
 8002714:	d81f      	bhi.n	8002756 <acc_integration_sleep_us.constprop.0+0x132>
 8002716:	68c2      	ldr	r2, [r0, #12]
 8002718:	f012 0204 	ands.w	r2, r2, #4
 800271c:	d0f6      	beq.n	800270c <acc_integration_sleep_us.constprop.0+0xe8>
 800271e:	24ff      	movs	r4, #255	; 0xff
 8002720:	2201      	movs	r2, #1
 8002722:	2100      	movs	r1, #0
 8002724:	6244      	str	r4, [r0, #36]	; 0x24
 8002726:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800272a:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800272e:	bd38      	pop	{r3, r4, r5, pc}
 8002730:	681c      	ldr	r4, [r3, #0]
 8002732:	68d1      	ldr	r1, [r2, #12]
 8002734:	f011 0104 	ands.w	r1, r1, #4
 8002738:	d195      	bne.n	8002666 <acc_integration_sleep_us.constprop.0+0x42>
 800273a:	6818      	ldr	r0, [r3, #0]
 800273c:	1b00      	subs	r0, r0, r4
 800273e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002742:	d9f6      	bls.n	8002732 <acc_integration_sleep_us.constprop.0+0x10e>
 8002744:	24ff      	movs	r4, #255	; 0xff
 8002746:	2003      	movs	r0, #3
 8002748:	6254      	str	r4, [r2, #36]	; 0x24
 800274a:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800274e:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8002752:	f7ff ff55 	bl	8002600 <__NVIC_SystemReset>
 8002756:	24ff      	movs	r4, #255	; 0xff
 8002758:	2103      	movs	r1, #3
 800275a:	6244      	str	r4, [r0, #36]	; 0x24
 800275c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002760:	f883 1025 	strb.w	r1, [r3, #37]	; 0x25
 8002764:	f7ff ff4c 	bl	8002600 <__NVIC_SystemReset>
 8002768:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800276c:	e7b9      	b.n	80026e2 <acc_integration_sleep_us.constprop.0+0xbe>
 800276e:	bf00      	nop
 8002770:	200000ac 	.word	0x200000ac
 8002774:	40010400 	.word	0x40010400

08002778 <HAL_UART_Init.constprop.0>:
 8002778:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800277c:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800277e:	b0a1      	sub	sp, #132	; 0x84
 8002780:	4604      	mov	r4, r0
 8002782:	2e00      	cmp	r6, #0
 8002784:	d05e      	beq.n	8002844 <HAL_UART_Init.constprop.0+0xcc>
 8002786:	6825      	ldr	r5, [r4, #0]
 8002788:	68a3      	ldr	r3, [r4, #8]
 800278a:	6926      	ldr	r6, [r4, #16]
 800278c:	6960      	ldr	r0, [r4, #20]
 800278e:	4ac6      	ldr	r2, [pc, #792]	; (8002aa8 <HAL_UART_Init.constprop.0+0x330>)
 8002790:	2124      	movs	r1, #36	; 0x24
 8002792:	67a1      	str	r1, [r4, #120]	; 0x78
 8002794:	6829      	ldr	r1, [r5, #0]
 8002796:	f021 0101 	bic.w	r1, r1, #1
 800279a:	6029      	str	r1, [r5, #0]
 800279c:	4333      	orrs	r3, r6
 800279e:	6829      	ldr	r1, [r5, #0]
 80027a0:	4303      	orrs	r3, r0
 80027a2:	69e0      	ldr	r0, [r4, #28]
 80027a4:	400a      	ands	r2, r1
 80027a6:	4303      	orrs	r3, r0
 80027a8:	4313      	orrs	r3, r2
 80027aa:	602b      	str	r3, [r5, #0]
 80027ac:	686b      	ldr	r3, [r5, #4]
 80027ae:	68e1      	ldr	r1, [r4, #12]
 80027b0:	4abe      	ldr	r2, [pc, #760]	; (8002aac <HAL_UART_Init.constprop.0+0x334>)
 80027b2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80027b6:	430b      	orrs	r3, r1
 80027b8:	606b      	str	r3, [r5, #4]
 80027ba:	4295      	cmp	r5, r2
 80027bc:	69a3      	ldr	r3, [r4, #24]
 80027be:	68aa      	ldr	r2, [r5, #8]
 80027c0:	f000 80ba 	beq.w	8002938 <HAL_UART_Init.constprop.0+0x1c0>
 80027c4:	6a26      	ldr	r6, [r4, #32]
 80027c6:	49ba      	ldr	r1, [pc, #744]	; (8002ab0 <HAL_UART_Init.constprop.0+0x338>)
 80027c8:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 80027cc:	4333      	orrs	r3, r6
 80027ce:	4313      	orrs	r3, r2
 80027d0:	428d      	cmp	r5, r1
 80027d2:	60ab      	str	r3, [r5, #8]
 80027d4:	d00e      	beq.n	80027f4 <HAL_UART_Init.constprop.0+0x7c>
 80027d6:	4bb7      	ldr	r3, [pc, #732]	; (8002ab4 <HAL_UART_Init.constprop.0+0x33c>)
 80027d8:	429d      	cmp	r5, r3
 80027da:	f000 8215 	beq.w	8002c08 <HAL_UART_Init.constprop.0+0x490>
 80027de:	4bb6      	ldr	r3, [pc, #728]	; (8002ab8 <HAL_UART_Init.constprop.0+0x340>)
 80027e0:	429d      	cmp	r5, r3
 80027e2:	f000 812e 	beq.w	8002a42 <HAL_UART_Init.constprop.0+0x2ca>
 80027e6:	2300      	movs	r3, #0
 80027e8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80027ec:	2001      	movs	r0, #1
 80027ee:	b021      	add	sp, #132	; 0x84
 80027f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80027f4:	4bb1      	ldr	r3, [pc, #708]	; (8002abc <HAL_UART_Init.constprop.0+0x344>)
 80027f6:	4ab2      	ldr	r2, [pc, #712]	; (8002ac0 <HAL_UART_Init.constprop.0+0x348>)
 80027f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80027fc:	f003 0303 	and.w	r3, r3, #3
 8002800:	3b01      	subs	r3, #1
 8002802:	2b02      	cmp	r3, #2
 8002804:	f200 813f 	bhi.w	8002a86 <HAL_UART_Init.constprop.0+0x30e>
 8002808:	4413      	add	r3, r2
 800280a:	f893 3d08 	ldrb.w	r3, [r3, #3336]	; 0xd08
 800280e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002812:	f000 8163 	beq.w	8002adc <HAL_UART_Init.constprop.0+0x364>
 8002816:	2b08      	cmp	r3, #8
 8002818:	d8e5      	bhi.n	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 800281a:	a101      	add	r1, pc, #4	; (adr r1, 8002820 <HAL_UART_Init.constprop.0+0xa8>)
 800281c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002820:	08002a81 	.word	0x08002a81
 8002824:	08002a8f 	.word	0x08002a8f
 8002828:	08002a3f 	.word	0x08002a3f
 800282c:	080027e7 	.word	0x080027e7
 8002830:	08002a67 	.word	0x08002a67
 8002834:	080027e7 	.word	0x080027e7
 8002838:	080027e7 	.word	0x080027e7
 800283c:	080027e7 	.word	0x080027e7
 8002840:	080029cd 	.word	0x080029cd
 8002844:	f880 6074 	strb.w	r6, [r0, #116]	; 0x74
 8002848:	225c      	movs	r2, #92	; 0x5c
 800284a:	a809      	add	r0, sp, #36	; 0x24
 800284c:	4631      	mov	r1, r6
 800284e:	e9cd 6604 	strd	r6, r6, [sp, #16]
 8002852:	e9cd 6606 	strd	r6, r6, [sp, #24]
 8002856:	9608      	str	r6, [sp, #32]
 8002858:	f004 fb4d 	bl	8006ef6 <memset>
 800285c:	6825      	ldr	r5, [r4, #0]
 800285e:	4b94      	ldr	r3, [pc, #592]	; (8002ab0 <HAL_UART_Init.constprop.0+0x338>)
 8002860:	429d      	cmp	r5, r3
 8002862:	f000 8200 	beq.w	8002c66 <HAL_UART_Init.constprop.0+0x4ee>
 8002866:	4b93      	ldr	r3, [pc, #588]	; (8002ab4 <HAL_UART_Init.constprop.0+0x33c>)
 8002868:	429d      	cmp	r5, r3
 800286a:	d18d      	bne.n	8002788 <HAL_UART_Init.constprop.0+0x10>
 800286c:	a809      	add	r0, sp, #36	; 0x24
 800286e:	2702      	movs	r7, #2
 8002870:	9612      	str	r6, [sp, #72]	; 0x48
 8002872:	9709      	str	r7, [sp, #36]	; 0x24
 8002874:	f7ff faf8 	bl	8001e68 <HAL_RCCEx_PeriphCLKConfig>
 8002878:	4606      	mov	r6, r0
 800287a:	2800      	cmp	r0, #0
 800287c:	f040 821e 	bne.w	8002cbc <HAL_UART_Init.constprop.0+0x544>
 8002880:	4b8e      	ldr	r3, [pc, #568]	; (8002abc <HAL_UART_Init.constprop.0+0x344>)
 8002882:	4d90      	ldr	r5, [pc, #576]	; (8002ac4 <HAL_UART_Init.constprop.0+0x34c>)
 8002884:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002886:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800288a:	659a      	str	r2, [r3, #88]	; 0x58
 800288c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800288e:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8002892:	9201      	str	r2, [sp, #4]
 8002894:	9a01      	ldr	r2, [sp, #4]
 8002896:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002898:	f042 0201 	orr.w	r2, r2, #1
 800289c:	64da      	str	r2, [r3, #76]	; 0x4c
 800289e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80028a0:	9705      	str	r7, [sp, #20]
 80028a2:	f003 0301 	and.w	r3, r3, #1
 80028a6:	200f      	movs	r0, #15
 80028a8:	9300      	str	r3, [sp, #0]
 80028aa:	2203      	movs	r2, #3
 80028ac:	2307      	movs	r3, #7
 80028ae:	a904      	add	r1, sp, #16
 80028b0:	9004      	str	r0, [sp, #16]
 80028b2:	f105 0954 	add.w	r9, r5, #84	; 0x54
 80028b6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80028ba:	f8dd c000 	ldr.w	ip, [sp]
 80028be:	9207      	str	r2, [sp, #28]
 80028c0:	9308      	str	r3, [sp, #32]
 80028c2:	9606      	str	r6, [sp, #24]
 80028c4:	f04f 0880 	mov.w	r8, #128	; 0x80
 80028c8:	f7ff fce4 	bl	8002294 <HAL_GPIO_Init>
 80028cc:	4b7e      	ldr	r3, [pc, #504]	; (8002ac8 <HAL_UART_Init.constprop.0+0x350>)
 80028ce:	656b      	str	r3, [r5, #84]	; 0x54
 80028d0:	4648      	mov	r0, r9
 80028d2:	e9c5 6617 	strd	r6, r6, [r5, #92]	; 0x5c
 80028d6:	e9c5 661a 	strd	r6, r6, [r5, #104]	; 0x68
 80028da:	e9c5 661c 	strd	r6, r6, [r5, #112]	; 0x70
 80028de:	65af      	str	r7, [r5, #88]	; 0x58
 80028e0:	f8c5 8064 	str.w	r8, [r5, #100]	; 0x64
 80028e4:	f7fd fcf8 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 80028e8:	4603      	mov	r3, r0
 80028ea:	2800      	cmp	r0, #0
 80028ec:	f040 81e6 	bne.w	8002cbc <HAL_UART_Init.constprop.0+0x544>
 80028f0:	f105 069c 	add.w	r6, r5, #156	; 0x9c
 80028f4:	4975      	ldr	r1, [pc, #468]	; (8002acc <HAL_UART_Init.constprop.0+0x354>)
 80028f6:	f8c4 9070 	str.w	r9, [r4, #112]	; 0x70
 80028fa:	2210      	movs	r2, #16
 80028fc:	4630      	mov	r0, r6
 80028fe:	f8c5 109c 	str.w	r1, [r5, #156]	; 0x9c
 8002902:	e9c5 382a 	strd	r3, r8, [r5, #168]	; 0xa8
 8002906:	e9c5 332c 	strd	r3, r3, [r5, #176]	; 0xb0
 800290a:	e9c5 332e 	strd	r3, r3, [r5, #184]	; 0xb8
 800290e:	67ec      	str	r4, [r5, #124]	; 0x7c
 8002910:	f8c5 70a0 	str.w	r7, [r5, #160]	; 0xa0
 8002914:	f8c5 20a4 	str.w	r2, [r5, #164]	; 0xa4
 8002918:	f7fd fcde 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 800291c:	4601      	mov	r1, r0
 800291e:	2800      	cmp	r0, #0
 8002920:	f040 81cc 	bne.w	8002cbc <HAL_UART_Init.constprop.0+0x544>
 8002924:	66e6      	str	r6, [r4, #108]	; 0x6c
 8002926:	2026      	movs	r0, #38	; 0x26
 8002928:	f8c5 40c4 	str.w	r4, [r5, #196]	; 0xc4
 800292c:	f7fd fc50 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8002930:	2026      	movs	r0, #38	; 0x26
 8002932:	f7ff fe2f 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 8002936:	e726      	b.n	8002786 <HAL_UART_Init.constprop.0+0xe>
 8002938:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 800293c:	4313      	orrs	r3, r2
 800293e:	495f      	ldr	r1, [pc, #380]	; (8002abc <HAL_UART_Init.constprop.0+0x344>)
 8002940:	60ab      	str	r3, [r5, #8]
 8002942:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8002946:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800294a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800294e:	f000 8188 	beq.w	8002c62 <HAL_UART_Init.constprop.0+0x4ea>
 8002952:	d80c      	bhi.n	800296e <HAL_UART_Init.constprop.0+0x1f6>
 8002954:	2b00      	cmp	r3, #0
 8002956:	f000 817e 	beq.w	8002c56 <HAL_UART_Init.constprop.0+0x4de>
 800295a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800295e:	f47f af42 	bne.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002962:	f7ff fc41 	bl	80021e8 <HAL_RCC_GetSysClockFreq>
 8002966:	2800      	cmp	r0, #0
 8002968:	f000 8081 	beq.w	8002a6e <HAL_UART_Init.constprop.0+0x2f6>
 800296c:	e005      	b.n	800297a <HAL_UART_Init.constprop.0+0x202>
 800296e:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8002972:	f47f af38 	bne.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002976:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800297a:	6862      	ldr	r2, [r4, #4]
 800297c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002980:	4283      	cmp	r3, r0
 8002982:	f63f af30 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002986:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 800298a:	f63f af2c 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 800298e:	0856      	lsrs	r6, r2, #1
 8002990:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002994:	2700      	movs	r7, #0
 8002996:	fbe3 6700 	umlal	r6, r7, r3, r0
 800299a:	f04f 0800 	mov.w	r8, #0
 800299e:	4643      	mov	r3, r8
 80029a0:	4630      	mov	r0, r6
 80029a2:	4639      	mov	r1, r7
 80029a4:	f003 f8e2 	bl	8005b6c <__aeabi_uldivmod>
 80029a8:	4b49      	ldr	r3, [pc, #292]	; (8002ad0 <HAL_UART_Init.constprop.0+0x358>)
 80029aa:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
 80029ae:	429a      	cmp	r2, r3
 80029b0:	f63f af19 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 80029b4:	6825      	ldr	r5, [r4, #0]
 80029b6:	60e8      	str	r0, [r5, #12]
 80029b8:	e9c4 8819 	strd	r8, r8, [r4, #100]	; 0x64
 80029bc:	e019      	b.n	80029f2 <HAL_UART_Init.constprop.0+0x27a>
 80029be:	2b30      	cmp	r3, #48	; 0x30
 80029c0:	f47f af11 	bne.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 80029c4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80029c8:	f000 80a1 	beq.w	8002b0e <HAL_UART_Init.constprop.0+0x396>
 80029cc:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80029d0:	6863      	ldr	r3, [r4, #4]
 80029d2:	f64f 72ef 	movw	r2, #65519	; 0xffef
 80029d6:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 80029da:	fbb0 f0f3 	udiv	r0, r0, r3
 80029de:	f1a0 0310 	sub.w	r3, r0, #16
 80029e2:	4293      	cmp	r3, r2
 80029e4:	f63f aeff 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 80029e8:	6825      	ldr	r5, [r4, #0]
 80029ea:	2300      	movs	r3, #0
 80029ec:	60e8      	str	r0, [r5, #12]
 80029ee:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80029f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	f040 80af 	bne.w	8002b58 <HAL_UART_Init.constprop.0+0x3e0>
 80029fa:	686b      	ldr	r3, [r5, #4]
 80029fc:	4a31      	ldr	r2, [pc, #196]	; (8002ac4 <HAL_UART_Init.constprop.0+0x34c>)
 80029fe:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8002a02:	606b      	str	r3, [r5, #4]
 8002a04:	68ab      	ldr	r3, [r5, #8]
 8002a06:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8002a0a:	60ab      	str	r3, [r5, #8]
 8002a0c:	682b      	ldr	r3, [r5, #0]
 8002a0e:	2100      	movs	r1, #0
 8002a10:	f043 0301 	orr.w	r3, r3, #1
 8002a14:	602b      	str	r3, [r5, #0]
 8002a16:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8002a1a:	6816      	ldr	r6, [r2, #0]
 8002a1c:	682b      	ldr	r3, [r5, #0]
 8002a1e:	071a      	lsls	r2, r3, #28
 8002a20:	f100 808e 	bmi.w	8002b40 <HAL_UART_Init.constprop.0+0x3c8>
 8002a24:	682b      	ldr	r3, [r5, #0]
 8002a26:	075b      	lsls	r3, r3, #29
 8002a28:	f100 80e1 	bmi.w	8002bee <HAL_UART_Init.constprop.0+0x476>
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	2220      	movs	r2, #32
 8002a30:	67a2      	str	r2, [r4, #120]	; 0x78
 8002a32:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
 8002a36:	67e2      	str	r2, [r4, #124]	; 0x7c
 8002a38:	4618      	mov	r0, r3
 8002a3a:	6623      	str	r3, [r4, #96]	; 0x60
 8002a3c:	e6d7      	b.n	80027ee <HAL_UART_Init.constprop.0+0x76>
 8002a3e:	4825      	ldr	r0, [pc, #148]	; (8002ad4 <HAL_UART_Init.constprop.0+0x35c>)
 8002a40:	e7c6      	b.n	80029d0 <HAL_UART_Init.constprop.0+0x258>
 8002a42:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8002a46:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002a4a:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002a4e:	2b20      	cmp	r3, #32
 8002a50:	f000 8136 	beq.w	8002cc0 <HAL_UART_Init.constprop.0+0x548>
 8002a54:	d8b3      	bhi.n	80029be <HAL_UART_Init.constprop.0+0x246>
 8002a56:	b17b      	cbz	r3, 8002a78 <HAL_UART_Init.constprop.0+0x300>
 8002a58:	2b10      	cmp	r3, #16
 8002a5a:	f47f aec4 	bne.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002a5e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002a62:	f000 80e2 	beq.w	8002c2a <HAL_UART_Init.constprop.0+0x4b2>
 8002a66:	f7ff fbbf 	bl	80021e8 <HAL_RCC_GetSysClockFreq>
 8002a6a:	2800      	cmp	r0, #0
 8002a6c:	d1b0      	bne.n	80029d0 <HAL_UART_Init.constprop.0+0x258>
 8002a6e:	2300      	movs	r3, #0
 8002a70:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002a74:	6825      	ldr	r5, [r4, #0]
 8002a76:	e7bc      	b.n	80029f2 <HAL_UART_Init.constprop.0+0x27a>
 8002a78:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002a7c:	f000 80cf 	beq.w	8002c1e <HAL_UART_Init.constprop.0+0x4a6>
 8002a80:	f7ff fb9e 	bl	80021c0 <HAL_RCC_GetPCLK1Freq>
 8002a84:	e7f1      	b.n	8002a6a <HAL_UART_Init.constprop.0+0x2f2>
 8002a86:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002a8a:	f000 80d4 	beq.w	8002c36 <HAL_UART_Init.constprop.0+0x4be>
 8002a8e:	4b0b      	ldr	r3, [pc, #44]	; (8002abc <HAL_UART_Init.constprop.0+0x344>)
 8002a90:	4911      	ldr	r1, [pc, #68]	; (8002ad8 <HAL_UART_Init.constprop.0+0x360>)
 8002a92:	689b      	ldr	r3, [r3, #8]
 8002a94:	6808      	ldr	r0, [r1, #0]
 8002a96:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002a9a:	441a      	add	r2, r3
 8002a9c:	f892 3cd0 	ldrb.w	r3, [r2, #3280]	; 0xcd0
 8002aa0:	f003 031f 	and.w	r3, r3, #31
 8002aa4:	40d8      	lsrs	r0, r3
 8002aa6:	e7e0      	b.n	8002a6a <HAL_UART_Init.constprop.0+0x2f2>
 8002aa8:	efff69f3 	.word	0xefff69f3
 8002aac:	40008000 	.word	0x40008000
 8002ab0:	40013800 	.word	0x40013800
 8002ab4:	40004400 	.word	0x40004400
 8002ab8:	40004800 	.word	0x40004800
 8002abc:	40021000 	.word	0x40021000
 8002ac0:	08007d40 	.word	0x08007d40
 8002ac4:	200000ac 	.word	0x200000ac
 8002ac8:	4002006c 	.word	0x4002006c
 8002acc:	40020080 	.word	0x40020080
 8002ad0:	000ffcff 	.word	0x000ffcff
 8002ad4:	00f42400 	.word	0x00f42400
 8002ad8:	20000000 	.word	0x20000000
 8002adc:	2b08      	cmp	r3, #8
 8002ade:	f63f ae82 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002ae2:	a101      	add	r1, pc, #4	; (adr r1, 8002ae8 <HAL_UART_Init.constprop.0+0x370>)
 8002ae4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002ae8:	08002c1f 	.word	0x08002c1f
 8002aec:	08002c37 	.word	0x08002c37
 8002af0:	08002b0d 	.word	0x08002b0d
 8002af4:	080027e7 	.word	0x080027e7
 8002af8:	08002c2b 	.word	0x08002c2b
 8002afc:	080027e7 	.word	0x080027e7
 8002b00:	080027e7 	.word	0x080027e7
 8002b04:	080027e7 	.word	0x080027e7
 8002b08:	08002b0f 	.word	0x08002b0f
 8002b0c:	486f      	ldr	r0, [pc, #444]	; (8002ccc <HAL_UART_Init.constprop.0+0x554>)
 8002b0e:	6862      	ldr	r2, [r4, #4]
 8002b10:	0853      	lsrs	r3, r2, #1
 8002b12:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002b16:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8002b1a:	fbb0 f0f2 	udiv	r0, r0, r2
 8002b1e:	f1a0 0210 	sub.w	r2, r0, #16
 8002b22:	429a      	cmp	r2, r3
 8002b24:	f63f ae5f 	bhi.w	80027e6 <HAL_UART_Init.constprop.0+0x6e>
 8002b28:	f020 030f 	bic.w	r3, r0, #15
 8002b2c:	b29b      	uxth	r3, r3
 8002b2e:	6825      	ldr	r5, [r4, #0]
 8002b30:	f3c0 0042 	ubfx	r0, r0, #1, #3
 8002b34:	4318      	orrs	r0, r3
 8002b36:	2300      	movs	r3, #0
 8002b38:	60e8      	str	r0, [r5, #12]
 8002b3a:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8002b3e:	e758      	b.n	80029f2 <HAL_UART_Init.constprop.0+0x27a>
 8002b40:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002b44:	4632      	mov	r2, r6
 8002b46:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8002b4a:	4620      	mov	r0, r4
 8002b4c:	f7fd fb6c 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002b50:	2800      	cmp	r0, #0
 8002b52:	d157      	bne.n	8002c04 <HAL_UART_Init.constprop.0+0x48c>
 8002b54:	6825      	ldr	r5, [r4, #0]
 8002b56:	e765      	b.n	8002a24 <HAL_UART_Init.constprop.0+0x2ac>
 8002b58:	07de      	lsls	r6, r3, #31
 8002b5a:	d505      	bpl.n	8002b68 <HAL_UART_Init.constprop.0+0x3f0>
 8002b5c:	686a      	ldr	r2, [r5, #4]
 8002b5e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8002b60:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002b64:	430a      	orrs	r2, r1
 8002b66:	606a      	str	r2, [r5, #4]
 8002b68:	0798      	lsls	r0, r3, #30
 8002b6a:	d505      	bpl.n	8002b78 <HAL_UART_Init.constprop.0+0x400>
 8002b6c:	686a      	ldr	r2, [r5, #4]
 8002b6e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002b70:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002b74:	430a      	orrs	r2, r1
 8002b76:	606a      	str	r2, [r5, #4]
 8002b78:	0759      	lsls	r1, r3, #29
 8002b7a:	d505      	bpl.n	8002b88 <HAL_UART_Init.constprop.0+0x410>
 8002b7c:	686a      	ldr	r2, [r5, #4]
 8002b7e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002b80:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002b84:	430a      	orrs	r2, r1
 8002b86:	606a      	str	r2, [r5, #4]
 8002b88:	071a      	lsls	r2, r3, #28
 8002b8a:	d505      	bpl.n	8002b98 <HAL_UART_Init.constprop.0+0x420>
 8002b8c:	686a      	ldr	r2, [r5, #4]
 8002b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002b90:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002b94:	430a      	orrs	r2, r1
 8002b96:	606a      	str	r2, [r5, #4]
 8002b98:	06df      	lsls	r7, r3, #27
 8002b9a:	d505      	bpl.n	8002ba8 <HAL_UART_Init.constprop.0+0x430>
 8002b9c:	68aa      	ldr	r2, [r5, #8]
 8002b9e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002ba0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002ba4:	430a      	orrs	r2, r1
 8002ba6:	60aa      	str	r2, [r5, #8]
 8002ba8:	069e      	lsls	r6, r3, #26
 8002baa:	d505      	bpl.n	8002bb8 <HAL_UART_Init.constprop.0+0x440>
 8002bac:	68aa      	ldr	r2, [r5, #8]
 8002bae:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8002bb0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002bb4:	430a      	orrs	r2, r1
 8002bb6:	60aa      	str	r2, [r5, #8]
 8002bb8:	0658      	lsls	r0, r3, #25
 8002bba:	d50e      	bpl.n	8002bda <HAL_UART_Init.constprop.0+0x462>
 8002bbc:	686a      	ldr	r2, [r5, #4]
 8002bbe:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8002bc0:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002bc4:	430a      	orrs	r2, r1
 8002bc6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8002bca:	606a      	str	r2, [r5, #4]
 8002bcc:	d105      	bne.n	8002bda <HAL_UART_Init.constprop.0+0x462>
 8002bce:	686a      	ldr	r2, [r5, #4]
 8002bd0:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8002bd2:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002bd6:	430a      	orrs	r2, r1
 8002bd8:	606a      	str	r2, [r5, #4]
 8002bda:	0619      	lsls	r1, r3, #24
 8002bdc:	f57f af0d 	bpl.w	80029fa <HAL_UART_Init.constprop.0+0x282>
 8002be0:	686b      	ldr	r3, [r5, #4]
 8002be2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8002be4:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8002be8:	4313      	orrs	r3, r2
 8002bea:	606b      	str	r3, [r5, #4]
 8002bec:	e705      	b.n	80029fa <HAL_UART_Init.constprop.0+0x282>
 8002bee:	4632      	mov	r2, r6
 8002bf0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002bf4:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	f7fd fb15 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8002bfe:	2800      	cmp	r0, #0
 8002c00:	f43f af14 	beq.w	8002a2c <HAL_UART_Init.constprop.0+0x2b4>
 8002c04:	2003      	movs	r0, #3
 8002c06:	e5f2      	b.n	80027ee <HAL_UART_Init.constprop.0+0x76>
 8002c08:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002c0c:	4a30      	ldr	r2, [pc, #192]	; (8002cd0 <HAL_UART_Init.constprop.0+0x558>)
 8002c0e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002c12:	f003 030c 	and.w	r3, r3, #12
 8002c16:	4413      	add	r3, r2
 8002c18:	f893 3d0c 	ldrb.w	r3, [r3, #3340]	; 0xd0c
 8002c1c:	e5f7      	b.n	800280e <HAL_UART_Init.constprop.0+0x96>
 8002c1e:	f7ff facf 	bl	80021c0 <HAL_RCC_GetPCLK1Freq>
 8002c22:	2800      	cmp	r0, #0
 8002c24:	f43f af23 	beq.w	8002a6e <HAL_UART_Init.constprop.0+0x2f6>
 8002c28:	e771      	b.n	8002b0e <HAL_UART_Init.constprop.0+0x396>
 8002c2a:	f7ff fadd 	bl	80021e8 <HAL_RCC_GetSysClockFreq>
 8002c2e:	2800      	cmp	r0, #0
 8002c30:	f43f af1d 	beq.w	8002a6e <HAL_UART_Init.constprop.0+0x2f6>
 8002c34:	e76b      	b.n	8002b0e <HAL_UART_Init.constprop.0+0x396>
 8002c36:	4b27      	ldr	r3, [pc, #156]	; (8002cd4 <HAL_UART_Init.constprop.0+0x55c>)
 8002c38:	4927      	ldr	r1, [pc, #156]	; (8002cd8 <HAL_UART_Init.constprop.0+0x560>)
 8002c3a:	689b      	ldr	r3, [r3, #8]
 8002c3c:	6808      	ldr	r0, [r1, #0]
 8002c3e:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8002c42:	441a      	add	r2, r3
 8002c44:	f892 3cd0 	ldrb.w	r3, [r2, #3280]	; 0xcd0
 8002c48:	f003 031f 	and.w	r3, r3, #31
 8002c4c:	40d8      	lsrs	r0, r3
 8002c4e:	2800      	cmp	r0, #0
 8002c50:	f43f af0d 	beq.w	8002a6e <HAL_UART_Init.constprop.0+0x2f6>
 8002c54:	e75b      	b.n	8002b0e <HAL_UART_Init.constprop.0+0x396>
 8002c56:	f7ff fab3 	bl	80021c0 <HAL_RCC_GetPCLK1Freq>
 8002c5a:	2800      	cmp	r0, #0
 8002c5c:	f43f af07 	beq.w	8002a6e <HAL_UART_Init.constprop.0+0x2f6>
 8002c60:	e68b      	b.n	800297a <HAL_UART_Init.constprop.0+0x202>
 8002c62:	481a      	ldr	r0, [pc, #104]	; (8002ccc <HAL_UART_Init.constprop.0+0x554>)
 8002c64:	e689      	b.n	800297a <HAL_UART_Init.constprop.0+0x202>
 8002c66:	2301      	movs	r3, #1
 8002c68:	a809      	add	r0, sp, #36	; 0x24
 8002c6a:	9611      	str	r6, [sp, #68]	; 0x44
 8002c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8002c6e:	f7ff f8fb 	bl	8001e68 <HAL_RCCEx_PeriphCLKConfig>
 8002c72:	bb18      	cbnz	r0, 8002cbc <HAL_UART_Init.constprop.0+0x544>
 8002c74:	4b17      	ldr	r3, [pc, #92]	; (8002cd4 <HAL_UART_Init.constprop.0+0x55c>)
 8002c76:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002c78:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002c7c:	661a      	str	r2, [r3, #96]	; 0x60
 8002c7e:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002c80:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002c84:	9203      	str	r2, [sp, #12]
 8002c86:	9a03      	ldr	r2, [sp, #12]
 8002c88:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002c8a:	f042 0201 	orr.w	r2, r2, #1
 8002c8e:	64da      	str	r2, [r3, #76]	; 0x4c
 8002c90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002c92:	9006      	str	r0, [sp, #24]
 8002c94:	f003 0301 	and.w	r3, r3, #1
 8002c98:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002c9c:	9302      	str	r3, [sp, #8]
 8002c9e:	2502      	movs	r5, #2
 8002ca0:	2203      	movs	r2, #3
 8002ca2:	2307      	movs	r3, #7
 8002ca4:	9004      	str	r0, [sp, #16]
 8002ca6:	a904      	add	r1, sp, #16
 8002ca8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002cac:	9505      	str	r5, [sp, #20]
 8002cae:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8002cb2:	9e02      	ldr	r6, [sp, #8]
 8002cb4:	f7ff faee 	bl	8002294 <HAL_GPIO_Init>
 8002cb8:	6825      	ldr	r5, [r4, #0]
 8002cba:	e565      	b.n	8002788 <HAL_UART_Init.constprop.0+0x10>
 8002cbc:	f7ff fca0 	bl	8002600 <__NVIC_SystemReset>
 8002cc0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002cc4:	4801      	ldr	r0, [pc, #4]	; (8002ccc <HAL_UART_Init.constprop.0+0x554>)
 8002cc6:	f47f ae83 	bne.w	80029d0 <HAL_UART_Init.constprop.0+0x258>
 8002cca:	e720      	b.n	8002b0e <HAL_UART_Init.constprop.0+0x396>
 8002ccc:	00f42400 	.word	0x00f42400
 8002cd0:	08007d40 	.word	0x08007d40
 8002cd4:	40021000 	.word	0x40021000
 8002cd8:	20000000 	.word	0x20000000

08002cdc <acc_hal_integration_sensor_transfer16>:
 8002cdc:	b570      	push	{r4, r5, r6, lr}
 8002cde:	4c86      	ldr	r4, [pc, #536]	; (8002ef8 <acc_hal_integration_sensor_transfer16+0x21c>)
 8002ce0:	f894 3140 	ldrb.w	r3, [r4, #320]	; 0x140
 8002ce4:	2000      	movs	r0, #0
 8002ce6:	2b01      	cmp	r3, #1
 8002ce8:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
 8002cec:	d00f      	beq.n	8002d0e <acc_hal_integration_sensor_transfer16+0x32>
 8002cee:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002cf2:	2001      	movs	r0, #1
 8002cf4:	4283      	cmp	r3, r0
 8002cf6:	b2dd      	uxtb	r5, r3
 8002cf8:	f884 0140 	strb.w	r0, [r4, #320]	; 0x140
 8002cfc:	d00e      	beq.n	8002d1c <acc_hal_integration_sensor_transfer16+0x40>
 8002cfe:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8002d02:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002d06:	d003      	beq.n	8002d10 <acc_hal_integration_sensor_transfer16+0x34>
 8002d08:	2300      	movs	r3, #0
 8002d0a:	f884 3140 	strb.w	r3, [r4, #320]	; 0x140
 8002d0e:	bd70      	pop	{r4, r5, r6, pc}
 8002d10:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d1f7      	bne.n	8002d08 <acc_hal_integration_sensor_transfer16+0x2c>
 8002d18:	2d04      	cmp	r5, #4
 8002d1a:	d1f5      	bne.n	8002d08 <acc_hal_integration_sensor_transfer16+0x2c>
 8002d1c:	2900      	cmp	r1, #0
 8002d1e:	d0f3      	beq.n	8002d08 <acc_hal_integration_sensor_transfer16+0x2c>
 8002d20:	b293      	uxth	r3, r2
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	d0f0      	beq.n	8002d08 <acc_hal_integration_sensor_transfer16+0x2c>
 8002d26:	f894 2141 	ldrb.w	r2, [r4, #321]	; 0x141
 8002d2a:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8002d2e:	f8d4 60f0 	ldr.w	r6, [r4, #240]	; 0xf0
 8002d32:	2a04      	cmp	r2, #4
 8002d34:	bf18      	it	ne
 8002d36:	2205      	movne	r2, #5
 8002d38:	f04f 0000 	mov.w	r0, #0
 8002d3c:	bf18      	it	ne
 8002d3e:	f884 2141 	strbne.w	r2, [r4, #321]	; 0x141
 8002d42:	f8c4 0144 	str.w	r0, [r4, #324]	; 0x144
 8002d46:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002d4a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002d4e:	686a      	ldr	r2, [r5, #4]
 8002d50:	f8c4 111c 	str.w	r1, [r4, #284]	; 0x11c
 8002d54:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8002d58:	f5b6 6fe0 	cmp.w	r6, #1792	; 0x700
 8002d5c:	e9c4 004c 	strd	r0, r0, [r4, #304]	; 0x130
 8002d60:	f8a4 3120 	strh.w	r3, [r4, #288]	; 0x120
 8002d64:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8002d68:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002d6c:	606a      	str	r2, [r5, #4]
 8002d6e:	d929      	bls.n	8002dc4 <acc_hal_integration_sensor_transfer16+0xe8>
 8002d70:	686b      	ldr	r3, [r5, #4]
 8002d72:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002d76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d7a:	606b      	str	r3, [r5, #4]
 8002d7c:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8002d80:	2b04      	cmp	r3, #4
 8002d82:	bf07      	ittee	eq
 8002d84:	4a5d      	ldreq	r2, [pc, #372]	; (8002efc <acc_hal_integration_sensor_transfer16+0x220>)
 8002d86:	4b5e      	ldreq	r3, [pc, #376]	; (8002f00 <acc_hal_integration_sensor_transfer16+0x224>)
 8002d88:	4a5e      	ldrne	r2, [pc, #376]	; (8002f04 <acc_hal_integration_sensor_transfer16+0x228>)
 8002d8a:	4b5f      	ldrne	r3, [pc, #380]	; (8002f08 <acc_hal_integration_sensor_transfer16+0x22c>)
 8002d8c:	e9c0 320b 	strd	r3, r2, [r0, #44]	; 0x2c
 8002d90:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002d94:	4a5d      	ldr	r2, [pc, #372]	; (8002f0c <acc_hal_integration_sensor_transfer16+0x230>)
 8002d96:	6342      	str	r2, [r0, #52]	; 0x34
 8002d98:	2600      	movs	r6, #0
 8002d9a:	460a      	mov	r2, r1
 8002d9c:	b29b      	uxth	r3, r3
 8002d9e:	f105 010c 	add.w	r1, r5, #12
 8002da2:	6386      	str	r6, [r0, #56]	; 0x38
 8002da4:	f7ff fbb0 	bl	8002508 <HAL_DMA_Start_IT>
 8002da8:	4605      	mov	r5, r0
 8002daa:	b378      	cbz	r0, 8002e0c <acc_hal_integration_sensor_transfer16+0x130>
 8002dac:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002db0:	f884 6140 	strb.w	r6, [r4, #320]	; 0x140
 8002db4:	f043 0310 	orr.w	r3, r3, #16
 8002db8:	2201      	movs	r2, #1
 8002dba:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002dbe:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002dc2:	bd70      	pop	{r4, r5, r6, pc}
 8002dc4:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002dc8:	686a      	ldr	r2, [r5, #4]
 8002dca:	6980      	ldr	r0, [r0, #24]
 8002dcc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002dd0:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002dd4:	606a      	str	r2, [r5, #4]
 8002dd6:	d05f      	beq.n	8002e98 <acc_hal_integration_sensor_transfer16+0x1bc>
 8002dd8:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002ddc:	6983      	ldr	r3, [r0, #24]
 8002dde:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002de2:	d1cb      	bne.n	8002d7c <acc_hal_integration_sensor_transfer16+0xa0>
 8002de4:	686b      	ldr	r3, [r5, #4]
 8002de6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002dea:	606b      	str	r3, [r5, #4]
 8002dec:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002df0:	f013 0f01 	tst.w	r3, #1
 8002df4:	686b      	ldr	r3, [r5, #4]
 8002df6:	d169      	bne.n	8002ecc <acc_hal_integration_sensor_transfer16+0x1f0>
 8002df8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002dfc:	606b      	str	r3, [r5, #4]
 8002dfe:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002e02:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002e06:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002e0a:	e7b7      	b.n	8002d7c <acc_hal_integration_sensor_transfer16+0xa0>
 8002e0c:	f8d4 20e4 	ldr.w	r2, [r4, #228]	; 0xe4
 8002e10:	f8d4 0138 	ldr.w	r0, [r4, #312]	; 0x138
 8002e14:	6853      	ldr	r3, [r2, #4]
 8002e16:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002e1a:	f043 0301 	orr.w	r3, r3, #1
 8002e1e:	6053      	str	r3, [r2, #4]
 8002e20:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002e24:	6305      	str	r5, [r0, #48]	; 0x30
 8002e26:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8002e2a:	320c      	adds	r2, #12
 8002e2c:	b29b      	uxth	r3, r3
 8002e2e:	62c5      	str	r5, [r0, #44]	; 0x2c
 8002e30:	f7ff fb6a 	bl	8002508 <HAL_DMA_Start_IT>
 8002e34:	2800      	cmp	r0, #0
 8002e36:	d13d      	bne.n	8002eb4 <acc_hal_integration_sensor_transfer16+0x1d8>
 8002e38:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8002e3c:	681a      	ldr	r2, [r3, #0]
 8002e3e:	0652      	lsls	r2, r2, #25
 8002e40:	d525      	bpl.n	8002e8e <acc_hal_integration_sensor_transfer16+0x1b2>
 8002e42:	685a      	ldr	r2, [r3, #4]
 8002e44:	f042 0220 	orr.w	r2, r2, #32
 8002e48:	605a      	str	r2, [r3, #4]
 8002e4a:	685a      	ldr	r2, [r3, #4]
 8002e4c:	f042 0202 	orr.w	r2, r2, #2
 8002e50:	605a      	str	r2, [r3, #4]
 8002e52:	6822      	ldr	r2, [r4, #0]
 8002e54:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002e58:	2100      	movs	r1, #0
 8002e5a:	f884 1140 	strb.w	r1, [r4, #320]	; 0x140
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	f47f af55 	bne.w	8002d0e <acc_hal_integration_sensor_transfer16+0x32>
 8002e64:	f241 3187 	movw	r1, #4999	; 0x1387
 8002e68:	e00c      	b.n	8002e84 <acc_hal_integration_sensor_transfer16+0x1a8>
 8002e6a:	b672      	cpsid	i
 8002e6c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002e70:	b903      	cbnz	r3, 8002e74 <acc_hal_integration_sensor_transfer16+0x198>
 8002e72:	bf30      	wfi
 8002e74:	b662      	cpsie	i
 8002e76:	f3bf 8f6f 	isb	sy
 8002e7a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	f47f af45 	bne.w	8002d0e <acc_hal_integration_sensor_transfer16+0x32>
 8002e84:	6823      	ldr	r3, [r4, #0]
 8002e86:	1a9b      	subs	r3, r3, r2
 8002e88:	428b      	cmp	r3, r1
 8002e8a:	d9ee      	bls.n	8002e6a <acc_hal_integration_sensor_transfer16+0x18e>
 8002e8c:	bd70      	pop	{r4, r5, r6, pc}
 8002e8e:	681a      	ldr	r2, [r3, #0]
 8002e90:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	e7d4      	b.n	8002e42 <acc_hal_integration_sensor_transfer16+0x166>
 8002e98:	f013 0f01 	tst.w	r3, #1
 8002e9c:	686b      	ldr	r3, [r5, #4]
 8002e9e:	d120      	bne.n	8002ee2 <acc_hal_integration_sensor_transfer16+0x206>
 8002ea0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002ea4:	606b      	str	r3, [r5, #4]
 8002ea6:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002eaa:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002eae:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002eb2:	e791      	b.n	8002dd8 <acc_hal_integration_sensor_transfer16+0xfc>
 8002eb4:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8002eb8:	f884 5140 	strb.w	r5, [r4, #320]	; 0x140
 8002ebc:	f043 0310 	orr.w	r3, r3, #16
 8002ec0:	2201      	movs	r2, #1
 8002ec2:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8002ec6:	f884 2141 	strb.w	r2, [r4, #321]	; 0x141
 8002eca:	bd70      	pop	{r4, r5, r6, pc}
 8002ecc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002ed0:	606b      	str	r3, [r5, #4]
 8002ed2:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8002ed6:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002eda:	3301      	adds	r3, #1
 8002edc:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8002ee0:	e74c      	b.n	8002d7c <acc_hal_integration_sensor_transfer16+0xa0>
 8002ee2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002ee6:	606b      	str	r3, [r5, #4]
 8002ee8:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 8002eec:	f3c3 034e 	ubfx	r3, r3, #1, #15
 8002ef0:	3301      	adds	r3, #1
 8002ef2:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 8002ef6:	e76f      	b.n	8002dd8 <acc_hal_integration_sensor_transfer16+0xfc>
 8002ef8:	200000ac 	.word	0x200000ac
 8002efc:	08001c0d 	.word	0x08001c0d
 8002f00:	08001c8d 	.word	0x08001c8d
 8002f04:	08001c11 	.word	0x08001c11
 8002f08:	08001c15 	.word	0x08001c15
 8002f0c:	08001be9 	.word	0x08001be9

08002f10 <run_test.constprop.0>:
 8002f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f14:	4d74      	ldr	r5, [pc, #464]	; (80030e8 <run_test.constprop.0+0x1d8>)
 8002f16:	4e75      	ldr	r6, [pc, #468]	; (80030ec <run_test.constprop.0+0x1dc>)
 8002f18:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002f1c:	4604      	mov	r4, r0
 8002f1e:	61ab      	str	r3, [r5, #24]
 8002f20:	f7ff fb80 	bl	8002624 <acc_integration_sleep_us.constprop.0>
 8002f24:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002f26:	2b05      	cmp	r3, #5
 8002f28:	f04f 0100 	mov.w	r1, #0
 8002f2c:	d905      	bls.n	8002f3a <run_test.constprop.0+0x2a>
 8002f2e:	e037      	b.n	8002fa0 <run_test.constprop.0+0x90>
 8002f30:	3301      	adds	r3, #1
 8002f32:	b29b      	uxth	r3, r3
 8002f34:	2b06      	cmp	r3, #6
 8002f36:	8463      	strh	r3, [r4, #34]	; 0x22
 8002f38:	d034      	beq.n	8002fa4 <run_test.constprop.0+0x94>
 8002f3a:	18e2      	adds	r2, r4, r3
 8002f3c:	7f12      	ldrb	r2, [r2, #28]
 8002f3e:	2a00      	cmp	r2, #0
 8002f40:	d0f6      	beq.n	8002f30 <run_test.constprop.0+0x20>
 8002f42:	2900      	cmp	r1, #0
 8002f44:	d17e      	bne.n	8003044 <run_test.constprop.0+0x134>
 8002f46:	005a      	lsls	r2, r3, #1
 8002f48:	2700      	movs	r7, #0
 8002f4a:	4413      	add	r3, r2
 8002f4c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002f50:	4620      	mov	r0, r4
 8002f52:	f8d3 3c90 	ldr.w	r3, [r3, #3216]	; 0xc90
 8002f56:	4798      	blx	r3
 8002f58:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8002f5a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 8002f5c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002f5e:	eb03 0c43 	add.w	ip, r3, r3, lsl #1
 8002f62:	eb06 0c8c 	add.w	ip, r6, ip, lsl #2
 8002f66:	eb04 0e01 	add.w	lr, r4, r1
 8002f6a:	3201      	adds	r2, #1
 8002f6c:	f89c cc88 	ldrb.w	ip, [ip, #3208]	; 0xc88
 8002f70:	6262      	str	r2, [r4, #36]	; 0x24
 8002f72:	3801      	subs	r0, #1
 8002f74:	005a      	lsls	r2, r3, #1
 8002f76:	f88e c02a 	strb.w	ip, [lr, #42]	; 0x2a
 8002f7a:	2803      	cmp	r0, #3
 8002f7c:	f200 80ab 	bhi.w	80030d6 <run_test.constprop.0+0x1c6>
 8002f80:	e8df f000 	tbb	[pc, r0]
 8002f84:	7891024c 	.word	0x7891024c
 8002f88:	4a59      	ldr	r2, [pc, #356]	; (80030f0 <run_test.constprop.0+0x1e0>)
 8002f8a:	6811      	ldr	r1, [r2, #0]
 8002f8c:	6928      	ldr	r0, [r5, #16]
 8002f8e:	0707      	lsls	r7, r0, #28
 8002f90:	d532      	bpl.n	8002ff8 <run_test.constprop.0+0xe8>
 8002f92:	6929      	ldr	r1, [r5, #16]
 8002f94:	2b05      	cmp	r3, #5
 8002f96:	f081 0108 	eor.w	r1, r1, #8
 8002f9a:	f3c1 01c0 	ubfx	r1, r1, #3, #1
 8002f9e:	d9cc      	bls.n	8002f3a <run_test.constprop.0+0x2a>
 8002fa0:	2b06      	cmp	r3, #6
 8002fa2:	d1ce      	bne.n	8002f42 <run_test.constprop.0+0x32>
 8002fa4:	4b50      	ldr	r3, [pc, #320]	; (80030e8 <run_test.constprop.0+0x1d8>)
 8002fa6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002faa:	629a      	str	r2, [r3, #40]	; 0x28
 8002fac:	f7ff fb3a 	bl	8002624 <acc_integration_sleep_us.constprop.0>
 8002fb0:	8d26      	ldrh	r6, [r4, #40]	; 0x28
 8002fb2:	2501      	movs	r5, #1
 8002fb4:	b1ee      	cbz	r6, 8002ff2 <run_test.constprop.0+0xe2>
 8002fb6:	3e01      	subs	r6, #1
 8002fb8:	b2b3      	uxth	r3, r6
 8002fba:	f8df 8144 	ldr.w	r8, [pc, #324]	; 8003100 <run_test.constprop.0+0x1f0>
 8002fbe:	4f4d      	ldr	r7, [pc, #308]	; (80030f4 <run_test.constprop.0+0x1e4>)
 8002fc0:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8003104 <run_test.constprop.0+0x1f4>
 8002fc4:	f104 0608 	add.w	r6, r4, #8
 8002fc8:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
 8002fcc:	2501      	movs	r5, #1
 8002fce:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8002fd2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002fd4:	2a00      	cmp	r2, #0
 8002fd6:	bf14      	ite	ne
 8002fd8:	4642      	movne	r2, r8
 8002fda:	463a      	moveq	r2, r7
 8002fdc:	4648      	mov	r0, r9
 8002fde:	f004 f92b 	bl	8007238 <__wrap_printf>
 8002fe2:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
 8002fe6:	3408      	adds	r4, #8
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	bf08      	it	eq
 8002fec:	2500      	moveq	r5, #0
 8002fee:	42a6      	cmp	r6, r4
 8002ff0:	d1ed      	bne.n	8002fce <run_test.constprop.0+0xbe>
 8002ff2:	4628      	mov	r0, r5
 8002ff4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002ff8:	6813      	ldr	r3, [r2, #0]
 8002ffa:	1a5b      	subs	r3, r3, r1
 8002ffc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003000:	d20a      	bcs.n	8003018 <run_test.constprop.0+0x108>
 8003002:	b672      	cpsid	i
 8003004:	692b      	ldr	r3, [r5, #16]
 8003006:	0718      	lsls	r0, r3, #28
 8003008:	d400      	bmi.n	800300c <run_test.constprop.0+0xfc>
 800300a:	bf30      	wfi
 800300c:	b662      	cpsie	i
 800300e:	f3bf 8f6f 	isb	sy
 8003012:	692b      	ldr	r3, [r5, #16]
 8003014:	071b      	lsls	r3, r3, #28
 8003016:	d5ef      	bpl.n	8002ff8 <run_test.constprop.0+0xe8>
 8003018:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800301a:	e7ba      	b.n	8002f92 <run_test.constprop.0+0x82>
 800301c:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 8003020:	f8c5 8028 	str.w	r8, [r5, #40]	; 0x28
 8003024:	f7ff fafe 	bl	8002624 <acc_integration_sleep_us.constprop.0>
 8003028:	f8c5 8018 	str.w	r8, [r5, #24]
 800302c:	f7ff fafa 	bl	8002624 <acc_integration_sleep_us.constprop.0>
 8003030:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8003032:	2b05      	cmp	r3, #5
 8003034:	f04f 0100 	mov.w	r1, #0
 8003038:	f67f af7f 	bls.w	8002f3a <run_test.constprop.0+0x2a>
 800303c:	2b06      	cmp	r3, #6
 800303e:	d0b1      	beq.n	8002fa4 <run_test.constprop.0+0x94>
 8003040:	005a      	lsls	r2, r3, #1
 8003042:	e782      	b.n	8002f4a <run_test.constprop.0+0x3a>
 8003044:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8003048:	4a29      	ldr	r2, [pc, #164]	; (80030f0 <run_test.constprop.0+0x1e0>)
 800304a:	492b      	ldr	r1, [pc, #172]	; (80030f8 <run_test.constprop.0+0x1e8>)
 800304c:	6c17      	ldr	r7, [r2, #64]	; 0x40
 800304e:	4a2b      	ldr	r2, [pc, #172]	; (80030fc <run_test.constprop.0+0x1ec>)
 8003050:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8003054:	2000      	movs	r0, #0
 8003056:	f8d3 3c8c 	ldr.w	r3, [r3, #3212]	; 0xc8c
 800305a:	47b8      	blx	r7
 800305c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800305e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 8003060:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8003064:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8003068:	1860      	adds	r0, r4, r1
 800306a:	f892 2c88 	ldrb.w	r2, [r2, #3208]	; 0xc88
 800306e:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8003072:	005a      	lsls	r2, r3, #1
 8003074:	441a      	add	r2, r3
 8003076:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 800307a:	eb04 07c1 	add.w	r7, r4, r1, lsl #3
 800307e:	3301      	adds	r3, #1
 8003080:	f8d2 2c8c 	ldr.w	r2, [r2, #3212]	; 0xc8c
 8003084:	633a      	str	r2, [r7, #48]	; 0x30
 8003086:	b29b      	uxth	r3, r3
 8003088:	2000      	movs	r0, #0
 800308a:	1c4a      	adds	r2, r1, #1
 800308c:	2b05      	cmp	r3, #5
 800308e:	f887 0034 	strb.w	r0, [r7, #52]	; 0x34
 8003092:	4601      	mov	r1, r0
 8003094:	8463      	strh	r3, [r4, #34]	; 0x22
 8003096:	8522      	strh	r2, [r4, #40]	; 0x28
 8003098:	6260      	str	r0, [r4, #36]	; 0x24
 800309a:	f67f af4e 	bls.w	8002f3a <run_test.constprop.0+0x2a>
 800309e:	2b06      	cmp	r3, #6
 80030a0:	f47f af51 	bne.w	8002f46 <run_test.constprop.0+0x36>
 80030a4:	e77e      	b.n	8002fa4 <run_test.constprop.0+0x94>
 80030a6:	441a      	add	r2, r3
 80030a8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80030ac:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
 80030b0:	3301      	adds	r3, #1
 80030b2:	f8d2 2c8c 	ldr.w	r2, [r2, #3212]	; 0xc8c
 80030b6:	6302      	str	r2, [r0, #48]	; 0x30
 80030b8:	b29b      	uxth	r3, r3
 80030ba:	1c4a      	adds	r2, r1, #1
 80030bc:	2b05      	cmp	r3, #5
 80030be:	f04f 0101 	mov.w	r1, #1
 80030c2:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 80030c6:	f04f 0100 	mov.w	r1, #0
 80030ca:	8463      	strh	r3, [r4, #34]	; 0x22
 80030cc:	8522      	strh	r2, [r4, #40]	; 0x28
 80030ce:	6267      	str	r7, [r4, #36]	; 0x24
 80030d0:	f67f af33 	bls.w	8002f3a <run_test.constprop.0+0x2a>
 80030d4:	e7b2      	b.n	800303c <run_test.constprop.0+0x12c>
 80030d6:	2b05      	cmp	r3, #5
 80030d8:	f04f 0100 	mov.w	r1, #0
 80030dc:	f67f af2d 	bls.w	8002f3a <run_test.constprop.0+0x2a>
 80030e0:	2b06      	cmp	r3, #6
 80030e2:	f47f af32 	bne.w	8002f4a <run_test.constprop.0+0x3a>
 80030e6:	e75d      	b.n	8002fa4 <run_test.constprop.0+0x94>
 80030e8:	48000400 	.word	0x48000400
 80030ec:	08007d40 	.word	0x08007d40
 80030f0:	200000ac 	.word	0x200000ac
 80030f4:	0800abf0 	.word	0x0800abf0
 80030f8:	0800a938 	.word	0x0800a938
 80030fc:	0800abf8 	.word	0x0800abf8
 8003100:	0800abe8 	.word	0x0800abe8
 8003104:	0800ac18 	.word	0x0800ac18

08003108 <HAL_RTC_DeactivateAlarm.constprop.0>:
 8003108:	491c      	ldr	r1, [pc, #112]	; (800317c <HAL_RTC_DeactivateAlarm.constprop.0+0x74>)
 800310a:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 800310e:	2b01      	cmp	r3, #1
 8003110:	d032      	beq.n	8003178 <HAL_RTC_DeactivateAlarm.constprop.0+0x70>
 8003112:	b430      	push	{r4, r5}
 8003114:	684c      	ldr	r4, [r1, #4]
 8003116:	2353      	movs	r3, #83	; 0x53
 8003118:	2001      	movs	r0, #1
 800311a:	2502      	movs	r5, #2
 800311c:	22ca      	movs	r2, #202	; 0xca
 800311e:	f881 5025 	strb.w	r5, [r1, #37]	; 0x25
 8003122:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 8003126:	6262      	str	r2, [r4, #36]	; 0x24
 8003128:	6263      	str	r3, [r4, #36]	; 0x24
 800312a:	68a3      	ldr	r3, [r4, #8]
 800312c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003130:	60a3      	str	r3, [r4, #8]
 8003132:	68a3      	ldr	r3, [r4, #8]
 8003134:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003138:	60a3      	str	r3, [r4, #8]
 800313a:	6808      	ldr	r0, [r1, #0]
 800313c:	e004      	b.n	8003148 <HAL_RTC_DeactivateAlarm.constprop.0+0x40>
 800313e:	680a      	ldr	r2, [r1, #0]
 8003140:	1a12      	subs	r2, r2, r0
 8003142:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
 8003146:	d80d      	bhi.n	8003164 <HAL_RTC_DeactivateAlarm.constprop.0+0x5c>
 8003148:	68e3      	ldr	r3, [r4, #12]
 800314a:	f013 0301 	ands.w	r3, r3, #1
 800314e:	d0f6      	beq.n	800313e <HAL_RTC_DeactivateAlarm.constprop.0+0x36>
 8003150:	2000      	movs	r0, #0
 8003152:	22ff      	movs	r2, #255	; 0xff
 8003154:	2301      	movs	r3, #1
 8003156:	6262      	str	r2, [r4, #36]	; 0x24
 8003158:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 800315c:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
 8003160:	bc30      	pop	{r4, r5}
 8003162:	4770      	bx	lr
 8003164:	20ff      	movs	r0, #255	; 0xff
 8003166:	2203      	movs	r2, #3
 8003168:	6260      	str	r0, [r4, #36]	; 0x24
 800316a:	f881 3024 	strb.w	r3, [r1, #36]	; 0x24
 800316e:	f881 2025 	strb.w	r2, [r1, #37]	; 0x25
 8003172:	4610      	mov	r0, r2
 8003174:	bc30      	pop	{r4, r5}
 8003176:	4770      	bx	lr
 8003178:	2002      	movs	r0, #2
 800317a:	4770      	bx	lr
 800317c:	200000ac 	.word	0x200000ac

08003180 <acc_a121_cal_session_ack_program>:
 8003180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003182:	b085      	sub	sp, #20
 8003184:	f10d 020e 	add.w	r2, sp, #14
 8003188:	2700      	movs	r7, #0
 800318a:	2133      	movs	r1, #51	; 0x33
 800318c:	4605      	mov	r5, r0
 800318e:	f8ad 700e 	strh.w	r7, [sp, #14]
 8003192:	f7fe f80d 	bl	80011b0 <acc_sensor_reg_read>
 8003196:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800319a:	f003 0407 	and.w	r4, r3, #7
 800319e:	2c01      	cmp	r4, #1
 80031a0:	d046      	beq.n	8003230 <acc_a121_cal_session_ack_program+0xb0>
 80031a2:	f013 0f06 	tst.w	r3, #6
 80031a6:	d129      	bne.n	80031fc <acc_a121_cal_session_ack_program+0x7c>
 80031a8:	2c00      	cmp	r4, #0
 80031aa:	d138      	bne.n	800321e <acc_a121_cal_session_ack_program+0x9e>
 80031ac:	4e24      	ldr	r6, [pc, #144]	; (8003240 <acc_a121_cal_session_ack_program+0xc0>)
 80031ae:	9500      	str	r5, [sp, #0]
 80031b0:	6c37      	ldr	r7, [r6, #64]	; 0x40
 80031b2:	4a24      	ldr	r2, [pc, #144]	; (8003244 <acc_a121_cal_session_ack_program+0xc4>)
 80031b4:	4924      	ldr	r1, [pc, #144]	; (8003248 <acc_a121_cal_session_ack_program+0xc8>)
 80031b6:	4620      	mov	r0, r4
 80031b8:	47b8      	blx	r7
 80031ba:	2300      	movs	r3, #0
 80031bc:	f10d 020e 	add.w	r2, sp, #14
 80031c0:	2145      	movs	r1, #69	; 0x45
 80031c2:	4628      	mov	r0, r5
 80031c4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80031c8:	f7fd fff2 	bl	80011b0 <acc_sensor_reg_read>
 80031cc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80031d0:	b95b      	cbnz	r3, 80031ea <acc_a121_cal_session_ack_program+0x6a>
 80031d2:	6c36      	ldr	r6, [r6, #64]	; 0x40
 80031d4:	4a1d      	ldr	r2, [pc, #116]	; (800324c <acc_a121_cal_session_ack_program+0xcc>)
 80031d6:	491c      	ldr	r1, [pc, #112]	; (8003248 <acc_a121_cal_session_ack_program+0xc8>)
 80031d8:	462b      	mov	r3, r5
 80031da:	2000      	movs	r0, #0
 80031dc:	47b0      	blx	r6
 80031de:	2c02      	cmp	r4, #2
 80031e0:	d102      	bne.n	80031e8 <acc_a121_cal_session_ack_program+0x68>
 80031e2:	2001      	movs	r0, #1
 80031e4:	b005      	add	sp, #20
 80031e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031e8:	4e15      	ldr	r6, [pc, #84]	; (8003240 <acc_a121_cal_session_ack_program+0xc0>)
 80031ea:	6c35      	ldr	r5, [r6, #64]	; 0x40
 80031ec:	4a18      	ldr	r2, [pc, #96]	; (8003250 <acc_a121_cal_session_ack_program+0xd0>)
 80031ee:	4919      	ldr	r1, [pc, #100]	; (8003254 <acc_a121_cal_session_ack_program+0xd4>)
 80031f0:	4623      	mov	r3, r4
 80031f2:	2000      	movs	r0, #0
 80031f4:	47a8      	blx	r5
 80031f6:	2000      	movs	r0, #0
 80031f8:	b005      	add	sp, #20
 80031fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031fc:	1ea2      	subs	r2, r4, #2
 80031fe:	2a01      	cmp	r2, #1
 8003200:	d80d      	bhi.n	800321e <acc_a121_cal_session_ack_program+0x9e>
 8003202:	f10d 020e 	add.w	r2, sp, #14
 8003206:	2145      	movs	r1, #69	; 0x45
 8003208:	4628      	mov	r0, r5
 800320a:	f8ad 700e 	strh.w	r7, [sp, #14]
 800320e:	f7fd ffcf 	bl	80011b0 <acc_sensor_reg_read>
 8003212:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003216:	2b00      	cmp	r3, #0
 8003218:	d1e1      	bne.n	80031de <acc_a121_cal_session_ack_program+0x5e>
 800321a:	4e09      	ldr	r6, [pc, #36]	; (8003240 <acc_a121_cal_session_ack_program+0xc0>)
 800321c:	e7d9      	b.n	80031d2 <acc_a121_cal_session_ack_program+0x52>
 800321e:	4e08      	ldr	r6, [pc, #32]	; (8003240 <acc_a121_cal_session_ack_program+0xc0>)
 8003220:	9500      	str	r5, [sp, #0]
 8003222:	6c34      	ldr	r4, [r6, #64]	; 0x40
 8003224:	4a0c      	ldr	r2, [pc, #48]	; (8003258 <acc_a121_cal_session_ack_program+0xd8>)
 8003226:	4908      	ldr	r1, [pc, #32]	; (8003248 <acc_a121_cal_session_ack_program+0xc8>)
 8003228:	2000      	movs	r0, #0
 800322a:	47a0      	blx	r4
 800322c:	2400      	movs	r4, #0
 800322e:	e7c4      	b.n	80031ba <acc_a121_cal_session_ack_program+0x3a>
 8003230:	4e03      	ldr	r6, [pc, #12]	; (8003240 <acc_a121_cal_session_ack_program+0xc0>)
 8003232:	9500      	str	r5, [sp, #0]
 8003234:	4638      	mov	r0, r7
 8003236:	4a09      	ldr	r2, [pc, #36]	; (800325c <acc_a121_cal_session_ack_program+0xdc>)
 8003238:	6c37      	ldr	r7, [r6, #64]	; 0x40
 800323a:	4903      	ldr	r1, [pc, #12]	; (8003248 <acc_a121_cal_session_ack_program+0xc8>)
 800323c:	47b8      	blx	r7
 800323e:	e7bc      	b.n	80031ba <acc_a121_cal_session_ack_program+0x3a>
 8003240:	200000ac 	.word	0x200000ac
 8003244:	0800ac30 	.word	0x0800ac30
 8003248:	0800a7b0 	.word	0x0800a7b0
 800324c:	0800acc8 	.word	0x0800acc8
 8003250:	0800acfc 	.word	0x0800acfc
 8003254:	0800ad44 	.word	0x0800ad44
 8003258:	0800ac94 	.word	0x0800ac94
 800325c:	0800ac60 	.word	0x0800ac60

08003260 <acc_sensor_a121_lut_buffer_write.constprop.0>:
 8003260:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003264:	4c16      	ldr	r4, [pc, #88]	; (80032c0 <acc_sensor_a121_lut_buffer_write.constprop.0+0x60>)
 8003266:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8003268:	8e27      	ldrh	r7, [r4, #48]	; 0x30
 800326a:	3a04      	subs	r2, #4
 800326c:	3f04      	subs	r7, #4
 800326e:	0852      	lsrs	r2, r2, #1
 8003270:	087f      	lsrs	r7, r7, #1
 8003272:	4297      	cmp	r7, r2
 8003274:	460d      	mov	r5, r1
 8003276:	4681      	mov	r9, r0
 8003278:	4698      	mov	r8, r3
 800327a:	bf28      	it	cs
 800327c:	4617      	movcs	r7, r2
 800327e:	f101 0a04 	add.w	sl, r1, #4
 8003282:	2400      	movs	r4, #0
 8003284:	1b33      	subs	r3, r6, r4
 8003286:	42bb      	cmp	r3, r7
 8003288:	bf28      	it	cs
 800328a:	463b      	movcs	r3, r7
 800328c:	ea6f 4184 	mvn.w	r1, r4, lsl #18
 8003290:	1e5a      	subs	r2, r3, #1
 8003292:	ea6f 4191 	mvn.w	r1, r1, lsr #18
 8003296:	469b      	mov	fp, r3
 8003298:	806a      	strh	r2, [r5, #2]
 800329a:	8029      	strh	r1, [r5, #0]
 800329c:	005a      	lsls	r2, r3, #1
 800329e:	eb08 0144 	add.w	r1, r8, r4, lsl #1
 80032a2:	4650      	mov	r0, sl
 80032a4:	441c      	add	r4, r3
 80032a6:	f003 ff61 	bl	800716c <memcpy>
 80032aa:	f10b 0202 	add.w	r2, fp, #2
 80032ae:	2300      	movs	r3, #0
 80032b0:	4629      	mov	r1, r5
 80032b2:	4648      	mov	r0, r9
 80032b4:	f7fd fe60 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80032b8:	42a6      	cmp	r6, r4
 80032ba:	d8e3      	bhi.n	8003284 <acc_sensor_a121_lut_buffer_write.constprop.0+0x24>
 80032bc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032c0:	200000ac 	.word	0x200000ac

080032c4 <adl_data_new_line_test>:
 80032c4:	b138      	cbz	r0, 80032d6 <adl_data_new_line_test+0x12>
 80032c6:	b538      	push	{r3, r4, r5, lr}
 80032c8:	fbb0 f3f1 	udiv	r3, r0, r1
 80032cc:	fb01 0113 	mls	r1, r1, r3, r0
 80032d0:	b119      	cbz	r1, 80032da <adl_data_new_line_test+0x16>
 80032d2:	4610      	mov	r0, r2
 80032d4:	bd38      	pop	{r3, r4, r5, pc}
 80032d6:	4610      	mov	r0, r2
 80032d8:	4770      	bx	lr
 80032da:	4c0a      	ldr	r4, [pc, #40]	; (8003304 <adl_data_new_line_test+0x40>)
 80032dc:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 80032e0:	2b01      	cmp	r3, #1
 80032e2:	d905      	bls.n	80032f0 <adl_data_new_line_test+0x2c>
 80032e4:	6c25      	ldr	r5, [r4, #64]	; 0x40
 80032e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80032e8:	4a07      	ldr	r2, [pc, #28]	; (8003308 <adl_data_new_line_test+0x44>)
 80032ea:	4908      	ldr	r1, [pc, #32]	; (800330c <adl_data_new_line_test+0x48>)
 80032ec:	2002      	movs	r0, #2
 80032ee:	47a8      	blx	r5
 80032f0:	4b07      	ldr	r3, [pc, #28]	; (8003310 <adl_data_new_line_test+0x4c>)
 80032f2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80032f4:	cb03      	ldmia	r3!, {r0, r1}
 80032f6:	781b      	ldrb	r3, [r3, #0]
 80032f8:	6010      	str	r0, [r2, #0]
 80032fa:	7213      	strb	r3, [r2, #8]
 80032fc:	6051      	str	r1, [r2, #4]
 80032fe:	2209      	movs	r2, #9
 8003300:	4610      	mov	r0, r2
 8003302:	bd38      	pop	{r3, r4, r5, pc}
 8003304:	200000ac 	.word	0x200000ac
 8003308:	0800a5a4 	.word	0x0800a5a4
 800330c:	0800a5a8 	.word	0x0800a5a8
 8003310:	0800ad64 	.word	0x0800ad64

08003314 <diagnostic_log_data_i8>:
 8003314:	4b1b      	ldr	r3, [pc, #108]	; (8003384 <diagnostic_log_data_i8+0x70>)
 8003316:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800331a:	4e1b      	ldr	r6, [pc, #108]	; (8003388 <diagnostic_log_data_i8+0x74>)
 800331c:	4605      	mov	r5, r0
 800331e:	460c      	mov	r4, r1
 8003320:	cb03      	ldmia	r3!, {r0, r1}
 8003322:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003324:	781b      	ldrb	r3, [r3, #0]
 8003326:	7213      	strb	r3, [r2, #8]
 8003328:	6010      	str	r0, [r2, #0]
 800332a:	6051      	str	r1, [r2, #4]
 800332c:	b1fc      	cbz	r4, 800336e <diagnostic_log_data_i8+0x5a>
 800332e:	192c      	adds	r4, r5, r4
 8003330:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8003334:	3c01      	subs	r4, #1
 8003336:	f1c5 0501 	rsb	r5, r5, #1
 800333a:	2209      	movs	r2, #9
 800333c:	272d      	movs	r7, #45	; 0x2d
 800333e:	2112      	movs	r1, #18
 8003340:	eb05 0008 	add.w	r0, r5, r8
 8003344:	f7ff ffbe 	bl	80032c4 <adl_data_new_line_test>
 8003348:	f918 3f01 	ldrsb.w	r3, [r8, #1]!
 800334c:	2b00      	cmp	r3, #0
 800334e:	4601      	mov	r1, r0
 8003350:	da04      	bge.n	800335c <diagnostic_log_data_i8+0x48>
 8003352:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 8003354:	541f      	strb	r7, [r3, r0]
 8003356:	f998 3000 	ldrsb.w	r3, [r8]
 800335a:	3101      	adds	r1, #1
 800335c:	2b00      	cmp	r3, #0
 800335e:	bfd8      	it	le
 8003360:	425b      	negle	r3, r3
 8003362:	b298      	uxth	r0, r3
 8003364:	f7fd fb52 	bl	8000a0c <adl_add_value_to_buffer>
 8003368:	45a0      	cmp	r8, r4
 800336a:	4602      	mov	r2, r0
 800336c:	d1e7      	bne.n	800333e <diagnostic_log_data_i8+0x2a>
 800336e:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003372:	2b01      	cmp	r3, #1
 8003374:	d903      	bls.n	800337e <diagnostic_log_data_i8+0x6a>
 8003376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800337a:	f7fd bb15 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 800337e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003382:	bf00      	nop
 8003384:	0800ad64 	.word	0x0800ad64
 8003388:	200000ac 	.word	0x200000ac

0800338c <diagnostic_log_data_u8>:
 800338c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800338e:	4b13      	ldr	r3, [pc, #76]	; (80033dc <diagnostic_log_data_u8+0x50>)
 8003390:	4e13      	ldr	r6, [pc, #76]	; (80033e0 <diagnostic_log_data_u8+0x54>)
 8003392:	4607      	mov	r7, r0
 8003394:	460d      	mov	r5, r1
 8003396:	cb03      	ldmia	r3!, {r0, r1}
 8003398:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800339a:	781b      	ldrb	r3, [r3, #0]
 800339c:	7213      	strb	r3, [r2, #8]
 800339e:	6010      	str	r0, [r2, #0]
 80033a0:	6051      	str	r1, [r2, #4]
 80033a2:	b18d      	cbz	r5, 80033c8 <diagnostic_log_data_u8+0x3c>
 80033a4:	197d      	adds	r5, r7, r5
 80033a6:	1e7c      	subs	r4, r7, #1
 80033a8:	3d01      	subs	r5, #1
 80033aa:	f1c7 0701 	rsb	r7, r7, #1
 80033ae:	2209      	movs	r2, #9
 80033b0:	2116      	movs	r1, #22
 80033b2:	1938      	adds	r0, r7, r4
 80033b4:	f7ff ff86 	bl	80032c4 <adl_data_new_line_test>
 80033b8:	4601      	mov	r1, r0
 80033ba:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80033be:	f7fd fb25 	bl	8000a0c <adl_add_value_to_buffer>
 80033c2:	42ac      	cmp	r4, r5
 80033c4:	4602      	mov	r2, r0
 80033c6:	d1f3      	bne.n	80033b0 <diagnostic_log_data_u8+0x24>
 80033c8:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 80033cc:	2b01      	cmp	r3, #1
 80033ce:	d903      	bls.n	80033d8 <diagnostic_log_data_u8+0x4c>
 80033d0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80033d4:	f7fd bae8 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 80033d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033da:	bf00      	nop
 80033dc:	0800ad64 	.word	0x0800ad64
 80033e0:	200000ac 	.word	0x200000ac

080033e4 <diagnostic_log_data_i16>:
 80033e4:	4b1a      	ldr	r3, [pc, #104]	; (8003450 <diagnostic_log_data_i16+0x6c>)
 80033e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80033ea:	4e1a      	ldr	r6, [pc, #104]	; (8003454 <diagnostic_log_data_i16+0x70>)
 80033ec:	4604      	mov	r4, r0
 80033ee:	460d      	mov	r5, r1
 80033f0:	cb03      	ldmia	r3!, {r0, r1}
 80033f2:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80033f4:	781b      	ldrb	r3, [r3, #0]
 80033f6:	7213      	strb	r3, [r2, #8]
 80033f8:	6010      	str	r0, [r2, #0]
 80033fa:	6051      	str	r1, [r2, #4]
 80033fc:	b1ed      	cbz	r5, 800343a <diagnostic_log_data_i16+0x56>
 80033fe:	3c02      	subs	r4, #2
 8003400:	f04f 0800 	mov.w	r8, #0
 8003404:	2209      	movs	r2, #9
 8003406:	272d      	movs	r7, #45	; 0x2d
 8003408:	210c      	movs	r1, #12
 800340a:	4640      	mov	r0, r8
 800340c:	f7ff ff5a 	bl	80032c4 <adl_data_new_line_test>
 8003410:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 8003414:	2b00      	cmp	r3, #0
 8003416:	4601      	mov	r1, r0
 8003418:	da04      	bge.n	8003424 <diagnostic_log_data_i16+0x40>
 800341a:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 800341c:	541f      	strb	r7, [r3, r0]
 800341e:	f9b4 3000 	ldrsh.w	r3, [r4]
 8003422:	3101      	adds	r1, #1
 8003424:	2b00      	cmp	r3, #0
 8003426:	bfd8      	it	le
 8003428:	425b      	negle	r3, r3
 800342a:	b298      	uxth	r0, r3
 800342c:	f7fd faee 	bl	8000a0c <adl_add_value_to_buffer>
 8003430:	f108 0801 	add.w	r8, r8, #1
 8003434:	4545      	cmp	r5, r8
 8003436:	4602      	mov	r2, r0
 8003438:	d1e6      	bne.n	8003408 <diagnostic_log_data_i16+0x24>
 800343a:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 800343e:	2b01      	cmp	r3, #1
 8003440:	d903      	bls.n	800344a <diagnostic_log_data_i16+0x66>
 8003442:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003446:	f7fd baaf 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 800344a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800344e:	bf00      	nop
 8003450:	0800ad64 	.word	0x0800ad64
 8003454:	200000ac 	.word	0x200000ac

08003458 <diagnostic_log_data_u16>:
 8003458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800345a:	4b12      	ldr	r3, [pc, #72]	; (80034a4 <diagnostic_log_data_u16+0x4c>)
 800345c:	4e12      	ldr	r6, [pc, #72]	; (80034a8 <diagnostic_log_data_u16+0x50>)
 800345e:	4605      	mov	r5, r0
 8003460:	460f      	mov	r7, r1
 8003462:	cb03      	ldmia	r3!, {r0, r1}
 8003464:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8003466:	781b      	ldrb	r3, [r3, #0]
 8003468:	7213      	strb	r3, [r2, #8]
 800346a:	6010      	str	r0, [r2, #0]
 800346c:	6051      	str	r1, [r2, #4]
 800346e:	b17f      	cbz	r7, 8003490 <diagnostic_log_data_u16+0x38>
 8003470:	3d02      	subs	r5, #2
 8003472:	2400      	movs	r4, #0
 8003474:	2209      	movs	r2, #9
 8003476:	210f      	movs	r1, #15
 8003478:	4620      	mov	r0, r4
 800347a:	f7ff ff23 	bl	80032c4 <adl_data_new_line_test>
 800347e:	4601      	mov	r1, r0
 8003480:	f835 0f02 	ldrh.w	r0, [r5, #2]!
 8003484:	f7fd fac2 	bl	8000a0c <adl_add_value_to_buffer>
 8003488:	3401      	adds	r4, #1
 800348a:	42a7      	cmp	r7, r4
 800348c:	4602      	mov	r2, r0
 800348e:	d1f2      	bne.n	8003476 <diagnostic_log_data_u16+0x1e>
 8003490:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003494:	2b01      	cmp	r3, #1
 8003496:	d903      	bls.n	80034a0 <diagnostic_log_data_u16+0x48>
 8003498:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800349c:	f7fd ba84 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 80034a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80034a2:	bf00      	nop
 80034a4:	0800ad64 	.word	0x0800ad64
 80034a8:	200000ac 	.word	0x200000ac

080034ac <diagnostic_log_data_i32>:
 80034ac:	4b19      	ldr	r3, [pc, #100]	; (8003514 <diagnostic_log_data_i32+0x68>)
 80034ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034b2:	4e19      	ldr	r6, [pc, #100]	; (8003518 <diagnostic_log_data_i32+0x6c>)
 80034b4:	4604      	mov	r4, r0
 80034b6:	460d      	mov	r5, r1
 80034b8:	cb03      	ldmia	r3!, {r0, r1}
 80034ba:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 80034bc:	781b      	ldrb	r3, [r3, #0]
 80034be:	7213      	strb	r3, [r2, #8]
 80034c0:	6010      	str	r0, [r2, #0]
 80034c2:	6051      	str	r1, [r2, #4]
 80034c4:	b1e5      	cbz	r5, 8003500 <diagnostic_log_data_i32+0x54>
 80034c6:	3c04      	subs	r4, #4
 80034c8:	f04f 0800 	mov.w	r8, #0
 80034cc:	2209      	movs	r2, #9
 80034ce:	272d      	movs	r7, #45	; 0x2d
 80034d0:	2107      	movs	r1, #7
 80034d2:	4640      	mov	r0, r8
 80034d4:	f7ff fef6 	bl	80032c4 <adl_data_new_line_test>
 80034d8:	f854 3f04 	ldr.w	r3, [r4, #4]!
 80034dc:	2b00      	cmp	r3, #0
 80034de:	f108 0801 	add.w	r8, r8, #1
 80034e2:	4601      	mov	r1, r0
 80034e4:	da03      	bge.n	80034ee <diagnostic_log_data_i32+0x42>
 80034e6:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 80034e8:	541f      	strb	r7, [r3, r0]
 80034ea:	6823      	ldr	r3, [r4, #0]
 80034ec:	3101      	adds	r1, #1
 80034ee:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
 80034f2:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
 80034f6:	f7fd fa89 	bl	8000a0c <adl_add_value_to_buffer>
 80034fa:	4545      	cmp	r5, r8
 80034fc:	4602      	mov	r2, r0
 80034fe:	d1e7      	bne.n	80034d0 <diagnostic_log_data_i32+0x24>
 8003500:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003504:	2b01      	cmp	r3, #1
 8003506:	d903      	bls.n	8003510 <diagnostic_log_data_i32+0x64>
 8003508:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800350c:	f7fd ba4c 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 8003510:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003514:	0800ad64 	.word	0x0800ad64
 8003518:	200000ac 	.word	0x200000ac

0800351c <diagnostic_log_data_u32>:
 800351c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800351e:	4b12      	ldr	r3, [pc, #72]	; (8003568 <diagnostic_log_data_u32+0x4c>)
 8003520:	4e12      	ldr	r6, [pc, #72]	; (800356c <diagnostic_log_data_u32+0x50>)
 8003522:	4605      	mov	r5, r0
 8003524:	460f      	mov	r7, r1
 8003526:	cb03      	ldmia	r3!, {r0, r1}
 8003528:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800352a:	781b      	ldrb	r3, [r3, #0]
 800352c:	7213      	strb	r3, [r2, #8]
 800352e:	6010      	str	r0, [r2, #0]
 8003530:	6051      	str	r1, [r2, #4]
 8003532:	b17f      	cbz	r7, 8003554 <diagnostic_log_data_u32+0x38>
 8003534:	3d04      	subs	r5, #4
 8003536:	2400      	movs	r4, #0
 8003538:	2209      	movs	r2, #9
 800353a:	2108      	movs	r1, #8
 800353c:	4620      	mov	r0, r4
 800353e:	f7ff fec1 	bl	80032c4 <adl_data_new_line_test>
 8003542:	4601      	mov	r1, r0
 8003544:	f855 0f04 	ldr.w	r0, [r5, #4]!
 8003548:	f7fd fa60 	bl	8000a0c <adl_add_value_to_buffer>
 800354c:	3401      	adds	r4, #1
 800354e:	42a7      	cmp	r7, r4
 8003550:	4602      	mov	r2, r0
 8003552:	d1f2      	bne.n	800353a <diagnostic_log_data_u32+0x1e>
 8003554:	f896 3048 	ldrb.w	r3, [r6, #72]	; 0x48
 8003558:	2b01      	cmp	r3, #1
 800355a:	d903      	bls.n	8003564 <diagnostic_log_data_u32+0x48>
 800355c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003560:	f7fd ba22 	b.w	80009a8 <diagnostic_log_data_i16.part.0>
 8003564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003566:	bf00      	nop
 8003568:	0800ad64 	.word	0x0800ad64
 800356c:	200000ac 	.word	0x200000ac

08003570 <internal_buffer_processed_read.part.0.constprop.0>:
 8003570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003574:	4b23      	ldr	r3, [pc, #140]	; (8003604 <internal_buffer_processed_read.part.0.constprop.0+0x94>)
 8003576:	f8b3 9030 	ldrh.w	r9, [r3, #48]	; 0x30
 800357a:	b083      	sub	sp, #12
 800357c:	2300      	movs	r3, #0
 800357e:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8003582:	e9cd 3300 	strd	r3, r3, [sp]
 8003586:	4688      	mov	r8, r1
 8003588:	4692      	mov	sl, r2
 800358a:	461e      	mov	r6, r3
 800358c:	4683      	mov	fp, r0
 800358e:	f1a9 0904 	sub.w	r9, r9, #4
 8003592:	460d      	mov	r5, r1
 8003594:	4617      	mov	r7, r2
 8003596:	e024      	b.n	80035e2 <internal_buffer_processed_read.part.0.constprop.0+0x72>
 8003598:	f248 0200 	movw	r2, #32768	; 0x8000
 800359c:	1e63      	subs	r3, r4, #1
 800359e:	802a      	strh	r2, [r5, #0]
 80035a0:	f04f 0200 	mov.w	r2, #0
 80035a4:	806e      	strh	r6, [r5, #2]
 80035a6:	80ea      	strh	r2, [r5, #6]
 80035a8:	80ab      	strh	r3, [r5, #4]
 80035aa:	0062      	lsls	r2, r4, #1
 80035ac:	2100      	movs	r1, #0
 80035ae:	f105 0008 	add.w	r0, r5, #8
 80035b2:	f003 fca0 	bl	8006ef6 <memset>
 80035b6:	4629      	mov	r1, r5
 80035b8:	2301      	movs	r3, #1
 80035ba:	4658      	mov	r0, fp
 80035bc:	1d22      	adds	r2, r4, #4
 80035be:	f7fd fcdb 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 80035c2:	466b      	mov	r3, sp
 80035c4:	cb03      	ldmia	r3!, {r0, r1}
 80035c6:	4426      	add	r6, r4
 80035c8:	6069      	str	r1, [r5, #4]
 80035ca:	6028      	str	r0, [r5, #0]
 80035cc:	eb08 0546 	add.w	r5, r8, r6, lsl #1
 80035d0:	f858 0016 	ldr.w	r0, [r8, r6, lsl #1]
 80035d4:	6869      	ldr	r1, [r5, #4]
 80035d6:	466b      	mov	r3, sp
 80035d8:	4556      	cmp	r6, sl
 80035da:	c303      	stmia	r3!, {r0, r1}
 80035dc:	eba7 0704 	sub.w	r7, r7, r4
 80035e0:	d20a      	bcs.n	80035f8 <internal_buffer_processed_read.part.0.constprop.0+0x88>
 80035e2:	45b9      	cmp	r9, r7
 80035e4:	464c      	mov	r4, r9
 80035e6:	bf28      	it	cs
 80035e8:	463c      	movcs	r4, r7
 80035ea:	45b9      	cmp	r9, r7
 80035ec:	d2d4      	bcs.n	8003598 <internal_buffer_processed_read.part.0.constprop.0+0x28>
 80035ee:	e000      	b.n	80035f2 <internal_buffer_processed_read.part.0.constprop.0+0x82>
 80035f0:	3c01      	subs	r4, #1
 80035f2:	07e3      	lsls	r3, r4, #31
 80035f4:	d4fc      	bmi.n	80035f0 <internal_buffer_processed_read.part.0.constprop.0+0x80>
 80035f6:	e7cf      	b.n	8003598 <internal_buffer_processed_read.part.0.constprop.0+0x28>
 80035f8:	f108 0008 	add.w	r0, r8, #8
 80035fc:	b003      	add	sp, #12
 80035fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003602:	bf00      	nop
 8003604:	200000ac 	.word	0x200000ac

08003608 <acc_a121_cal_session_get_10_ps_wavelet_program_data>:
 8003608:	b510      	push	{r4, lr}
 800360a:	4614      	mov	r4, r2
 800360c:	f44f 7240 	mov.w	r2, #768	; 0x300
 8003610:	f7ff ffae 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8003614:	6020      	str	r0, [r4, #0]
 8003616:	bd10      	pop	{r4, pc}

08003618 <test_clock_and_supply_test.isra.0>:
 8003618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800361c:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
 8003620:	f10d 021e 	add.w	r2, sp, #30
 8003624:	4604      	mov	r4, r0
 8003626:	460d      	mov	r5, r1
 8003628:	6800      	ldr	r0, [r0, #0]
 800362a:	2132      	movs	r1, #50	; 0x32
 800362c:	f7fd fdc0 	bl	80011b0 <acc_sensor_reg_read>
 8003630:	4862      	ldr	r0, [pc, #392]	; (80037bc <test_clock_and_supply_test.isra.0+0x1a4>)
 8003632:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8003636:	f7fd f9d9 	bl	80009ec <acc_diagnostic_log_scalar>
 800363a:	f8bd 001e 	ldrh.w	r0, [sp, #30]
 800363e:	b9a0      	cbnz	r0, 800366a <test_clock_and_supply_test.isra.0+0x52>
 8003640:	4b5f      	ldr	r3, [pc, #380]	; (80037c0 <test_clock_and_supply_test.isra.0+0x1a8>)
 8003642:	4960      	ldr	r1, [pc, #384]	; (80037c4 <test_clock_and_supply_test.isra.0+0x1ac>)
 8003644:	4a60      	ldr	r2, [pc, #384]	; (80037c8 <test_clock_and_supply_test.isra.0+0x1b0>)
 8003646:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003648:	4607      	mov	r7, r0
 800364a:	f04f 0b04 	mov.w	fp, #4
 800364e:	4798      	blx	r3
 8003650:	4639      	mov	r1, r7
 8003652:	485e      	ldr	r0, [pc, #376]	; (80037cc <test_clock_and_supply_test.isra.0+0x1b4>)
 8003654:	f7fd f9ca 	bl	80009ec <acc_diagnostic_log_scalar>
 8003658:	485d      	ldr	r0, [pc, #372]	; (80037d0 <test_clock_and_supply_test.isra.0+0x1b8>)
 800365a:	4639      	mov	r1, r7
 800365c:	f7fd f9c6 	bl	80009ec <acc_diagnostic_log_scalar>
 8003660:	4658      	mov	r0, fp
 8003662:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
 8003666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800366a:	6829      	ldr	r1, [r5, #0]
 800366c:	6820      	ldr	r0, [r4, #0]
 800366e:	4f59      	ldr	r7, [pc, #356]	; (80037d4 <test_clock_and_supply_test.isra.0+0x1bc>)
 8003670:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003674:	f7ff ff7c 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8003678:	4682      	mov	sl, r0
 800367a:	4857      	ldr	r0, [pc, #348]	; (80037d8 <test_clock_and_supply_test.isra.0+0x1c0>)
 800367c:	f7fd f95e 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003680:	ae48      	add	r6, sp, #288	; 0x120
 8003682:	4650      	mov	r0, sl
 8003684:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003688:	f7fd f9a8 	bl	80009dc <acc_diagnostic_log_data_u16>
 800368c:	f1aa 0402 	sub.w	r4, sl, #2
 8003690:	4631      	mov	r1, r6
 8003692:	ad88      	add	r5, sp, #544	; 0x220
 8003694:	2000      	movs	r0, #0
 8003696:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 800369a:	fb07 f203 	mul.w	r2, r7, r3
 800369e:	2b00      	cmp	r3, #0
 80036a0:	bfa8      	it	ge
 80036a2:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 80036a6:	ea4f 4212 	mov.w	r2, r2, lsr #16
 80036aa:	bfa8      	it	ge
 80036ac:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 80036b0:	f1c2 0200 	rsb	r2, r2, #0
 80036b4:	bfb4      	ite	lt
 80036b6:	b213      	sxthlt	r3, r2
 80036b8:	131b      	asrge	r3, r3, #12
 80036ba:	f821 3b02 	strh.w	r3, [r1], #2
 80036be:	42a9      	cmp	r1, r5
 80036c0:	4418      	add	r0, r3
 80036c2:	d1e8      	bne.n	8003696 <test_clock_and_supply_test.isra.0+0x7e>
 80036c4:	2800      	cmp	r0, #0
 80036c6:	bfb8      	it	lt
 80036c8:	307f      	addlt	r0, #127	; 0x7f
 80036ca:	f340 15cf 	sbfx	r5, r0, #7, #16
 80036ce:	4629      	mov	r1, r5
 80036d0:	4842      	ldr	r0, [pc, #264]	; (80037dc <test_clock_and_supply_test.isra.0+0x1c4>)
 80036d2:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80037ec <test_clock_and_supply_test.isra.0+0x1d4>
 80036d6:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 80037d4 <test_clock_and_supply_test.isra.0+0x1bc>
 80036da:	f7fd f987 	bl	80009ec <acc_diagnostic_log_scalar>
 80036de:	4840      	ldr	r0, [pc, #256]	; (80037e0 <test_clock_and_supply_test.isra.0+0x1c8>)
 80036e0:	f7fd f92c 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80036e4:	2180      	movs	r1, #128	; 0x80
 80036e6:	4630      	mov	r0, r6
 80036e8:	f7fd f970 	bl	80009cc <acc_diagnostic_log_data_i16>
 80036ec:	2301      	movs	r3, #1
 80036ee:	461f      	mov	r7, r3
 80036f0:	f44f 6cfa 	mov.w	ip, #2000	; 0x7d0
 80036f4:	f44f 60c8 	mov.w	r0, #1600	; 0x640
 80036f8:	f04f 0b03 	mov.w	fp, #3
 80036fc:	4619      	mov	r1, r3
 80036fe:	eb0a 2101 	add.w	r1, sl, r1, lsl #8
 8003702:	3902      	subs	r1, #2
 8003704:	aa08      	add	r2, sp, #32
 8003706:	f647 74ff 	movw	r4, #32767	; 0x7fff
 800370a:	f931 3f02 	ldrsh.w	r3, [r1, #2]!
 800370e:	fb08 fe03 	mul.w	lr, r8, r3
 8003712:	2b00      	cmp	r3, #0
 8003714:	bfa8      	it	ge
 8003716:	eb03 0383 	addge.w	r3, r3, r3, lsl #2
 800371a:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 800371e:	bfa8      	it	ge
 8003720:	ebc3 1303 	rsbge	r3, r3, r3, lsl #4
 8003724:	f1ce 0e00 	rsb	lr, lr, #0
 8003728:	bfb4      	ite	lt
 800372a:	fa0f f38e 	sxthlt.w	r3, lr
 800372e:	131b      	asrge	r3, r3, #12
 8003730:	442b      	add	r3, r5
 8003732:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8003736:	02db      	lsls	r3, r3, #11
 8003738:	f1c3 0e00 	rsb	lr, r3, #0
 800373c:	ea4f 3e1e 	mov.w	lr, lr, lsr #12
 8003740:	f1ce 0e00 	rsb	lr, lr, #0
 8003744:	bf4c      	ite	mi
 8003746:	fa0f f38e 	sxthmi.w	r3, lr
 800374a:	f343 330f 	sbfxpl	r3, r3, #12, #16
 800374e:	f822 3b02 	strh.w	r3, [r2], #2
 8003752:	429c      	cmp	r4, r3
 8003754:	bfa8      	it	ge
 8003756:	461c      	movge	r4, r3
 8003758:	4296      	cmp	r6, r2
 800375a:	b224      	sxth	r4, r4
 800375c:	d1d5      	bne.n	800370a <test_clock_and_supply_test.isra.0+0xf2>
 800375e:	4284      	cmp	r4, r0
 8003760:	db01      	blt.n	8003766 <test_clock_and_supply_test.isra.0+0x14e>
 8003762:	4564      	cmp	r4, ip
 8003764:	dd0f      	ble.n	8003786 <test_clock_and_supply_test.isra.0+0x16e>
 8003766:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800376a:	e9cd 9c03 	strd	r9, ip, [sp, #12]
 800376e:	4b14      	ldr	r3, [pc, #80]	; (80037c0 <test_clock_and_supply_test.isra.0+0x1a8>)
 8003770:	f8cd 9000 	str.w	r9, [sp]
 8003774:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8003776:	4a1b      	ldr	r2, [pc, #108]	; (80037e4 <test_clock_and_supply_test.isra.0+0x1cc>)
 8003778:	4912      	ldr	r1, [pc, #72]	; (80037c4 <test_clock_and_supply_test.isra.0+0x1ac>)
 800377a:	464b      	mov	r3, r9
 800377c:	2000      	movs	r0, #0
 800377e:	47b8      	blx	r7
 8003780:	f04f 0b04 	mov.w	fp, #4
 8003784:	2700      	movs	r7, #0
 8003786:	4621      	mov	r1, r4
 8003788:	4648      	mov	r0, r9
 800378a:	f7fd f92f 	bl	80009ec <acc_diagnostic_log_scalar>
 800378e:	f109 000c 	add.w	r0, r9, #12
 8003792:	f7fd f8d3 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003796:	2180      	movs	r1, #128	; 0x80
 8003798:	a808      	add	r0, sp, #32
 800379a:	f7fd f917 	bl	80009cc <acc_diagnostic_log_data_i16>
 800379e:	4b12      	ldr	r3, [pc, #72]	; (80037e8 <test_clock_and_supply_test.isra.0+0x1d0>)
 80037a0:	f109 091c 	add.w	r9, r9, #28
 80037a4:	4599      	cmp	r9, r3
 80037a6:	d006      	beq.n	80037b6 <test_clock_and_supply_test.isra.0+0x19e>
 80037a8:	f8d9 1014 	ldr.w	r1, [r9, #20]
 80037ac:	f9b9 0018 	ldrsh.w	r0, [r9, #24]
 80037b0:	f9b9 c01a 	ldrsh.w	ip, [r9, #26]
 80037b4:	e7a3      	b.n	80036fe <test_clock_and_supply_test.isra.0+0xe6>
 80037b6:	2101      	movs	r1, #1
 80037b8:	e74b      	b.n	8003652 <test_clock_and_supply_test.isra.0+0x3a>
 80037ba:	bf00      	nop
 80037bc:	0800ad70 	.word	0x0800ad70
 80037c0:	200000ac 	.word	0x200000ac
 80037c4:	0800a938 	.word	0x0800a938
 80037c8:	0800ad7c 	.word	0x0800ad7c
 80037cc:	0800ae44 	.word	0x0800ae44
 80037d0:	0800ae58 	.word	0x0800ae58
 80037d4:	fffffb50 	.word	0xfffffb50
 80037d8:	0800add0 	.word	0x0800add0
 80037dc:	0800ade8 	.word	0x0800ade8
 80037e0:	0800adf4 	.word	0x0800adf4
 80037e4:	0800adfc 	.word	0x0800adfc
 80037e8:	08008ab0 	.word	0x08008ab0
 80037ec:	08008a5c 	.word	0x08008a5c

080037f0 <test_clock_and_supply>:
 80037f0:	b530      	push	{r4, r5, lr}
 80037f2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80037f4:	2b01      	cmp	r3, #1
 80037f6:	b083      	sub	sp, #12
 80037f8:	4604      	mov	r4, r0
 80037fa:	d005      	beq.n	8003808 <test_clock_and_supply+0x18>
 80037fc:	2b02      	cmp	r3, #2
 80037fe:	d02e      	beq.n	800385e <test_clock_and_supply+0x6e>
 8003800:	b1eb      	cbz	r3, 800383e <test_clock_and_supply+0x4e>
 8003802:	2000      	movs	r0, #0
 8003804:	b003      	add	sp, #12
 8003806:	bd30      	pop	{r4, r5, pc}
 8003808:	4d1d      	ldr	r5, [pc, #116]	; (8003880 <test_clock_and_supply+0x90>)
 800380a:	f895 3048 	ldrb.w	r3, [r5, #72]	; 0x48
 800380e:	2b01      	cmp	r3, #1
 8003810:	d904      	bls.n	800381c <test_clock_and_supply+0x2c>
 8003812:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8003814:	4a1b      	ldr	r2, [pc, #108]	; (8003884 <test_clock_and_supply+0x94>)
 8003816:	491c      	ldr	r1, [pc, #112]	; (8003888 <test_clock_and_supply+0x98>)
 8003818:	2002      	movs	r0, #2
 800381a:	4798      	blx	r3
 800381c:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800381e:	9301      	str	r3, [sp, #4]
 8003820:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8003824:	6820      	ldr	r0, [r4, #0]
 8003826:	ab01      	add	r3, sp, #4
 8003828:	f7fd fd90 	bl	800134c <acc_cpd_assembly_test_load_program>
 800382c:	b9e8      	cbnz	r0, 800386a <test_clock_and_supply+0x7a>
 800382e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8003830:	4a16      	ldr	r2, [pc, #88]	; (800388c <test_clock_and_supply+0x9c>)
 8003832:	4915      	ldr	r1, [pc, #84]	; (8003888 <test_clock_and_supply+0x98>)
 8003834:	2000      	movs	r0, #0
 8003836:	4798      	blx	r3
 8003838:	2004      	movs	r0, #4
 800383a:	b003      	add	sp, #12
 800383c:	bd30      	pop	{r4, r5, pc}
 800383e:	4b10      	ldr	r3, [pc, #64]	; (8003880 <test_clock_and_supply+0x90>)
 8003840:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8003844:	2a01      	cmp	r2, #1
 8003846:	d904      	bls.n	8003852 <test_clock_and_supply+0x62>
 8003848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800384a:	4a11      	ldr	r2, [pc, #68]	; (8003890 <test_clock_and_supply+0xa0>)
 800384c:	490e      	ldr	r1, [pc, #56]	; (8003888 <test_clock_and_supply+0x98>)
 800384e:	2002      	movs	r0, #2
 8003850:	4798      	blx	r3
 8003852:	4810      	ldr	r0, [pc, #64]	; (8003894 <test_clock_and_supply+0xa4>)
 8003854:	f7fd f8d2 	bl	80009fc <acc_diagnostic_log_set_scope>
 8003858:	2001      	movs	r0, #1
 800385a:	b003      	add	sp, #12
 800385c:	bd30      	pop	{r4, r5, pc}
 800385e:	f100 010c 	add.w	r1, r0, #12
 8003862:	f7ff fed9 	bl	8003618 <test_clock_and_supply_test.isra.0>
 8003866:	b003      	add	sp, #12
 8003868:	bd30      	pop	{r4, r5, pc}
 800386a:	6820      	ldr	r0, [r4, #0]
 800386c:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 8003870:	f7fd fcb4 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8003874:	2800      	cmp	r0, #0
 8003876:	d0da      	beq.n	800382e <test_clock_and_supply+0x3e>
 8003878:	2002      	movs	r0, #2
 800387a:	b003      	add	sp, #12
 800387c:	bd30      	pop	{r4, r5, pc}
 800387e:	bf00      	nop
 8003880:	200000ac 	.word	0x200000ac
 8003884:	0800aea4 	.word	0x0800aea4
 8003888:	0800a938 	.word	0x0800a938
 800388c:	0800aec4 	.word	0x0800aec4
 8003890:	0800ae6c 	.word	0x0800ae6c
 8003894:	0800ae8c 	.word	0x0800ae8c

08003898 <acc_confprogram_live_patch.constprop.0>:
 8003898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800389c:	f8df b11c 	ldr.w	fp, [pc, #284]	; 80039bc <acc_confprogram_live_patch.constprop.0+0x124>
 80038a0:	f89b 4048 	ldrb.w	r4, [fp, #72]	; 0x48
 80038a4:	b089      	sub	sp, #36	; 0x24
 80038a6:	2c03      	cmp	r4, #3
 80038a8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80038aa:	4680      	mov	r8, r0
 80038ac:	4689      	mov	r9, r1
 80038ae:	4615      	mov	r5, r2
 80038b0:	461e      	mov	r6, r3
 80038b2:	d906      	bls.n	80038c2 <acc_confprogram_live_patch.constprop.0+0x2a>
 80038b4:	f8db 4040 	ldr.w	r4, [fp, #64]	; 0x40
 80038b8:	4a3c      	ldr	r2, [pc, #240]	; (80039ac <acc_confprogram_live_patch.constprop.0+0x114>)
 80038ba:	493d      	ldr	r1, [pc, #244]	; (80039b0 <acc_confprogram_live_patch.constprop.0+0x118>)
 80038bc:	9700      	str	r7, [sp, #0]
 80038be:	2004      	movs	r0, #4
 80038c0:	47a0      	blx	r4
 80038c2:	eb05 06c6 	add.w	r6, r5, r6, lsl #3
 80038c6:	8873      	ldrh	r3, [r6, #2]
 80038c8:	b31b      	cbz	r3, 8003912 <acc_confprogram_live_patch.constprop.0+0x7a>
 80038ca:	2500      	movs	r5, #0
 80038cc:	6873      	ldr	r3, [r6, #4]
 80038ce:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 80038d2:	f3c4 7001 	ubfx	r0, r4, #28, #2
 80038d6:	2801      	cmp	r0, #1
 80038d8:	d00c      	beq.n	80038f4 <acc_confprogram_live_patch.constprop.0+0x5c>
 80038da:	2802      	cmp	r0, #2
 80038dc:	d032      	beq.n	8003944 <acc_confprogram_live_patch.constprop.0+0xac>
 80038de:	b1e0      	cbz	r0, 800391a <acc_confprogram_live_patch.constprop.0+0x82>
 80038e0:	f8db 3040 	ldr.w	r3, [fp, #64]	; 0x40
 80038e4:	4a33      	ldr	r2, [pc, #204]	; (80039b4 <acc_confprogram_live_patch.constprop.0+0x11c>)
 80038e6:	4932      	ldr	r1, [pc, #200]	; (80039b0 <acc_confprogram_live_patch.constprop.0+0x118>)
 80038e8:	2000      	movs	r0, #0
 80038ea:	4798      	blx	r3
 80038ec:	2000      	movs	r0, #0
 80038ee:	b009      	add	sp, #36	; 0x24
 80038f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038f4:	1e3b      	subs	r3, r7, #0
 80038f6:	bf18      	it	ne
 80038f8:	2301      	movne	r3, #1
 80038fa:	9300      	str	r3, [sp, #0]
 80038fc:	b2a2      	uxth	r2, r4
 80038fe:	f3c4 4303 	ubfx	r3, r4, #16, #4
 8003902:	4649      	mov	r1, r9
 8003904:	4640      	mov	r0, r8
 8003906:	f7fd fb87 	bl	8001018 <acc_confprogram_modify_runif_sensor.constprop.0>
 800390a:	8873      	ldrh	r3, [r6, #2]
 800390c:	3501      	adds	r5, #1
 800390e:	429d      	cmp	r5, r3
 8003910:	d3dc      	bcc.n	80038cc <acc_confprogram_live_patch.constprop.0+0x34>
 8003912:	2001      	movs	r0, #1
 8003914:	b009      	add	sp, #36	; 0x24
 8003916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800391a:	f3c4 5a44 	ubfx	sl, r4, #21, #5
 800391e:	2301      	movs	r3, #1
 8003920:	fa03 f30a 	lsl.w	r3, r3, sl
 8003924:	429f      	cmp	r7, r3
 8003926:	d311      	bcc.n	800394c <acc_confprogram_live_patch.constprop.0+0xb4>
 8003928:	3b01      	subs	r3, #1
 800392a:	e9cd 7300 	strd	r7, r3, [sp]
 800392e:	f8db 5040 	ldr.w	r5, [fp, #64]	; 0x40
 8003932:	4a21      	ldr	r2, [pc, #132]	; (80039b8 <acc_confprogram_live_patch.constprop.0+0x120>)
 8003934:	491e      	ldr	r1, [pc, #120]	; (80039b0 <acc_confprogram_live_patch.constprop.0+0x118>)
 8003936:	9003      	str	r0, [sp, #12]
 8003938:	b2a3      	uxth	r3, r4
 800393a:	47a8      	blx	r5
 800393c:	9803      	ldr	r0, [sp, #12]
 800393e:	b009      	add	sp, #36	; 0x24
 8003940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003944:	fab7 f387 	clz	r3, r7
 8003948:	095b      	lsrs	r3, r3, #5
 800394a:	e7d6      	b.n	80038fa <acc_confprogram_live_patch.constprop.0+0x62>
 800394c:	b2a3      	uxth	r3, r4
 800394e:	f443 4c20 	orr.w	ip, r3, #40960	; 0xa000
 8003952:	f04f 0e01 	mov.w	lr, #1
 8003956:	9303      	str	r3, [sp, #12]
 8003958:	a905      	add	r1, sp, #20
 800395a:	2301      	movs	r3, #1
 800395c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8003960:	f8cd 001a 	str.w	r0, [sp, #26]
 8003964:	2205      	movs	r2, #5
 8003966:	4640      	mov	r0, r8
 8003968:	f8ad e016 	strh.w	lr, [sp, #22]
 800396c:	f8ad c014 	strh.w	ip, [sp, #20]
 8003970:	f7fd fb02 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8003974:	a904      	add	r1, sp, #16
 8003976:	f10d 001a 	add.w	r0, sp, #26
 800397a:	2201      	movs	r2, #1
 800397c:	f7fd f904 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8003980:	f1ca 0a20 	rsb	sl, sl, #32
 8003984:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003988:	f3c4 4404 	ubfx	r4, r4, #16, #5
 800398c:	fa23 fa0a 	lsr.w	sl, r3, sl
 8003990:	9b04      	ldr	r3, [sp, #16]
 8003992:	9903      	ldr	r1, [sp, #12]
 8003994:	fa0a fa04 	lsl.w	sl, sl, r4
 8003998:	ea23 020a 	bic.w	r2, r3, sl
 800399c:	fa07 f404 	lsl.w	r4, r7, r4
 80039a0:	4322      	orrs	r2, r4
 80039a2:	4640      	mov	r0, r8
 80039a4:	f7fd fb1e 	bl	8000fe4 <acc_sensor_a121_conf_write_instr>
 80039a8:	e7af      	b.n	800390a <acc_confprogram_live_patch.constprop.0+0x72>
 80039aa:	bf00      	nop
 80039ac:	0800aee8 	.word	0x0800aee8
 80039b0:	0800a6a0 	.word	0x0800a6a0
 80039b4:	0800af44 	.word	0x0800af44
 80039b8:	0800af0c 	.word	0x0800af0c
 80039bc:	200000ac 	.word	0x200000ac

080039c0 <test_communication>:
 80039c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039c4:	f8df a340 	ldr.w	sl, [pc, #832]	; 8003d08 <test_communication+0x348>
 80039c8:	ed2d 8b02 	vpush	{d8}
 80039cc:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 80039d0:	2b01      	cmp	r3, #1
 80039d2:	b095      	sub	sp, #84	; 0x54
 80039d4:	4683      	mov	fp, r0
 80039d6:	d905      	bls.n	80039e4 <test_communication+0x24>
 80039d8:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 80039dc:	4aba      	ldr	r2, [pc, #744]	; (8003cc8 <test_communication+0x308>)
 80039de:	49bb      	ldr	r1, [pc, #748]	; (8003ccc <test_communication+0x30c>)
 80039e0:	2002      	movs	r0, #2
 80039e2:	4798      	blx	r3
 80039e4:	48ba      	ldr	r0, [pc, #744]	; (8003cd0 <test_communication+0x310>)
 80039e6:	f8df 92e4 	ldr.w	r9, [pc, #740]	; 8003ccc <test_communication+0x30c>
 80039ea:	f7fd f807 	bl	80009fc <acc_diagnostic_log_set_scope>
 80039ee:	4bb9      	ldr	r3, [pc, #740]	; (8003cd4 <test_communication+0x314>)
 80039f0:	f8da 404c 	ldr.w	r4, [sl, #76]	; 0x4c
 80039f4:	f8db 0000 	ldr.w	r0, [fp]
 80039f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80039fc:	2101      	movs	r1, #1
 80039fe:	fba3 3404 	umull	r3, r4, r3, r4
 8003a02:	f7fd fbc5 	bl	8001190 <acc_sensor_reg_write>
 8003a06:	f8db 0000 	ldr.w	r0, [fp]
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	2101      	movs	r1, #1
 8003a0e:	f7fd fbbf 	bl	8001190 <acc_sensor_reg_write>
 8003a12:	f8db 0000 	ldr.w	r0, [fp]
 8003a16:	2201      	movs	r2, #1
 8003a18:	215d      	movs	r1, #93	; 0x5d
 8003a1a:	f7fd fbb9 	bl	8001190 <acc_sensor_reg_write>
 8003a1e:	f8db 0000 	ldr.w	r0, [fp]
 8003a22:	2200      	movs	r2, #0
 8003a24:	215d      	movs	r1, #93	; 0x5d
 8003a26:	f7fd fbb3 	bl	8001190 <acc_sensor_reg_write>
 8003a2a:	f8db 0000 	ldr.w	r0, [fp]
 8003a2e:	2200      	movs	r2, #0
 8003a30:	2174      	movs	r1, #116	; 0x74
 8003a32:	f7fd fbad 	bl	8001190 <acc_sensor_reg_write>
 8003a36:	f8db 0000 	ldr.w	r0, [fp]
 8003a3a:	2201      	movs	r2, #1
 8003a3c:	21d5      	movs	r1, #213	; 0xd5
 8003a3e:	f7fd fba7 	bl	8001190 <acc_sensor_reg_write>
 8003a42:	09a5      	lsrs	r5, r4, #6
 8003a44:	0da2      	lsrs	r2, r4, #22
 8003a46:	f8db 0000 	ldr.w	r0, [fp]
 8003a4a:	2155      	movs	r1, #85	; 0x55
 8003a4c:	f7fd fba0 	bl	8001190 <acc_sensor_reg_write>
 8003a50:	b2aa      	uxth	r2, r5
 8003a52:	f8db 0000 	ldr.w	r0, [fp]
 8003a56:	2156      	movs	r1, #86	; 0x56
 8003a58:	f7fd fb9a 	bl	8001190 <acc_sensor_reg_write>
 8003a5c:	f8db 0000 	ldr.w	r0, [fp]
 8003a60:	2203      	movs	r2, #3
 8003a62:	2154      	movs	r1, #84	; 0x54
 8003a64:	f7fd fb94 	bl	8001190 <acc_sensor_reg_write>
 8003a68:	4b9b      	ldr	r3, [pc, #620]	; (8003cd8 <test_communication+0x318>)
 8003a6a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003a6e:	ab0f      	add	r3, sp, #60	; 0x3c
 8003a70:	c303      	stmia	r3!, {r0, r1}
 8003a72:	2500      	movs	r5, #0
 8003a74:	801a      	strh	r2, [r3, #0]
 8003a76:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
 8003a7a:	240a      	movs	r4, #10
 8003a7c:	af0f      	add	r7, sp, #60	; 0x3c
 8003a7e:	2601      	movs	r6, #1
 8003a80:	9402      	str	r4, [sp, #8]
 8003a82:	f837 8b02 	ldrh.w	r8, [r7], #2
 8003a86:	f8db 0000 	ldr.w	r0, [fp]
 8003a8a:	4642      	mov	r2, r8
 8003a8c:	212c      	movs	r1, #44	; 0x2c
 8003a8e:	f7fd fb7f 	bl	8001190 <acc_sensor_reg_write>
 8003a92:	f8db 0000 	ldr.w	r0, [fp]
 8003a96:	aa0d      	add	r2, sp, #52	; 0x34
 8003a98:	212c      	movs	r1, #44	; 0x2c
 8003a9a:	f7fd fb89 	bl	80011b0 <acc_sensor_reg_read>
 8003a9e:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 8003aa2:	45e0      	cmp	r8, ip
 8003aa4:	d00e      	beq.n	8003ac4 <test_communication+0x104>
 8003aa6:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003aaa:	4a8c      	ldr	r2, [pc, #560]	; (8003cdc <test_communication+0x31c>)
 8003aac:	2b03      	cmp	r3, #3
 8003aae:	4649      	mov	r1, r9
 8003ab0:	4633      	mov	r3, r6
 8003ab2:	f04f 0004 	mov.w	r0, #4
 8003ab6:	d904      	bls.n	8003ac2 <test_communication+0x102>
 8003ab8:	e9cd 8c00 	strd	r8, ip, [sp]
 8003abc:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003ac0:	47a0      	blx	r4
 8003ac2:	3501      	adds	r5, #1
 8003ac4:	3601      	adds	r6, #1
 8003ac6:	2e06      	cmp	r6, #6
 8003ac8:	d1db      	bne.n	8003a82 <test_communication+0xc2>
 8003aca:	9c02      	ldr	r4, [sp, #8]
 8003acc:	3c01      	subs	r4, #1
 8003ace:	d1d5      	bne.n	8003a7c <test_communication+0xbc>
 8003ad0:	2d00      	cmp	r5, #0
 8003ad2:	f000 816b 	beq.w	8003dac <test_communication+0x3ec>
 8003ad6:	2232      	movs	r2, #50	; 0x32
 8003ad8:	462b      	mov	r3, r5
 8003ada:	497c      	ldr	r1, [pc, #496]	; (8003ccc <test_communication+0x30c>)
 8003adc:	9200      	str	r2, [sp, #0]
 8003ade:	4620      	mov	r0, r4
 8003ae0:	4a7f      	ldr	r2, [pc, #508]	; (8003ce0 <test_communication+0x320>)
 8003ae2:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 8003ae6:	47a8      	blx	r5
 8003ae8:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003aec:	4977      	ldr	r1, [pc, #476]	; (8003ccc <test_communication+0x30c>)
 8003aee:	4a7d      	ldr	r2, [pc, #500]	; (8003ce4 <test_communication+0x324>)
 8003af0:	4620      	mov	r0, r4
 8003af2:	4798      	blx	r3
 8003af4:	2304      	movs	r3, #4
 8003af6:	9305      	str	r3, [sp, #20]
 8003af8:	4621      	mov	r1, r4
 8003afa:	4d7b      	ldr	r5, [pc, #492]	; (8003ce8 <test_communication+0x328>)
 8003afc:	487b      	ldr	r0, [pc, #492]	; (8003cec <test_communication+0x32c>)
 8003afe:	f7fc ff75 	bl	80009ec <acc_diagnostic_log_scalar>
 8003b02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003b04:	ac0f      	add	r4, sp, #60	; 0x3c
 8003b06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003b08:	f8db 2018 	ldr.w	r2, [fp, #24]
 8003b0c:	682b      	ldr	r3, [r5, #0]
 8003b0e:	6023      	str	r3, [r4, #0]
 8003b10:	2300      	movs	r3, #0
 8003b12:	0897      	lsrs	r7, r2, #2
 8003b14:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8003b18:	920a      	str	r2, [sp, #40]	; 0x28
 8003b1a:	9302      	str	r3, [sp, #8]
 8003b1c:	f022 0203 	bic.w	r2, r2, #3
 8003b20:	230a      	movs	r3, #10
 8003b22:	46d9      	mov	r9, fp
 8003b24:	920b      	str	r2, [sp, #44]	; 0x2c
 8003b26:	9306      	str	r3, [sp, #24]
 8003b28:	46bb      	mov	fp, r7
 8003b2a:	ab0f      	add	r3, sp, #60	; 0x3c
 8003b2c:	9303      	str	r3, [sp, #12]
 8003b2e:	465f      	mov	r7, fp
 8003b30:	2f00      	cmp	r7, #0
 8003b32:	f000 80bc 	beq.w	8003cae <test_communication+0x2ee>
 8003b36:	9b03      	ldr	r3, [sp, #12]
 8003b38:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003b40:	9307      	str	r3, [sp, #28]
 8003b42:	1f13      	subs	r3, r2, #4
 8003b44:	1859      	adds	r1, r3, r1
 8003b46:	9807      	ldr	r0, [sp, #28]
 8003b48:	f843 0f04 	str.w	r0, [r3, #4]!
 8003b4c:	4299      	cmp	r1, r3
 8003b4e:	d1fa      	bne.n	8003b46 <test_communication+0x186>
 8003b50:	ab0d      	add	r3, sp, #52	; 0x34
 8003b52:	9300      	str	r3, [sp, #0]
 8003b54:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003b58:	f8d9 0000 	ldr.w	r0, [r9]
 8003b5c:	463b      	mov	r3, r7
 8003b5e:	f7fd fa8f 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003b64:	f8d9 0014 	ldr.w	r0, [r9, #20]
 8003b68:	f023 0203 	bic.w	r2, r3, #3
 8003b6c:	2100      	movs	r1, #0
 8003b6e:	f003 f9c2 	bl	8006ef6 <memset>
 8003b72:	f8ba 3030 	ldrh.w	r3, [sl, #48]	; 0x30
 8003b76:	f8d9 2000 	ldr.w	r2, [r9]
 8003b7a:	f8d9 600c 	ldr.w	r6, [r9, #12]
 8003b7e:	9704      	str	r7, [sp, #16]
 8003b80:	3b08      	subs	r3, #8
 8003b82:	ee08 2a10 	vmov	s16, r2
 8003b86:	089b      	lsrs	r3, r3, #2
 8003b88:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003b8c:	9209      	str	r2, [sp, #36]	; 0x24
 8003b8e:	9308      	str	r3, [sp, #32]
 8003b90:	f04f 0800 	mov.w	r8, #0
 8003b94:	e00f      	b.n	8003bb6 <test_communication+0x1f6>
 8003b96:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003b9a:	4798      	blx	r3
 8003b9c:	2500      	movs	r5, #0
 8003b9e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003ba2:	4415      	add	r5, r2
 8003ba4:	9a04      	ldr	r2, [sp, #16]
 8003ba6:	44a0      	add	r8, r4
 8003ba8:	3301      	adds	r3, #1
 8003baa:	1b12      	subs	r2, r2, r4
 8003bac:	4547      	cmp	r7, r8
 8003bae:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
 8003bb2:	9204      	str	r2, [sp, #16]
 8003bb4:	d92e      	bls.n	8003c14 <test_communication+0x254>
 8003bb6:	9b08      	ldr	r3, [sp, #32]
 8003bb8:	9a04      	ldr	r2, [sp, #16]
 8003bba:	494d      	ldr	r1, [pc, #308]	; (8003cf0 <test_communication+0x330>)
 8003bbc:	4293      	cmp	r3, r2
 8003bbe:	bf28      	it	cs
 8003bc0:	4613      	movcs	r3, r2
 8003bc2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003bc6:	4a4b      	ldr	r2, [pc, #300]	; (8003cf4 <test_communication+0x334>)
 8003bc8:	461c      	mov	r4, r3
 8003bca:	f04f 0000 	mov.w	r0, #0
 8003bce:	d8e2      	bhi.n	8003b96 <test_communication+0x1d6>
 8003bd0:	005b      	lsls	r3, r3, #1
 8003bd2:	3b01      	subs	r3, #1
 8003bd4:	2100      	movs	r1, #0
 8003bd6:	00a5      	lsls	r5, r4, #2
 8003bd8:	f106 0b08 	add.w	fp, r6, #8
 8003bdc:	f249 0200 	movw	r2, #36864	; 0x9000
 8003be0:	8032      	strh	r2, [r6, #0]
 8003be2:	80b3      	strh	r3, [r6, #4]
 8003be4:	462a      	mov	r2, r5
 8003be6:	80f1      	strh	r1, [r6, #6]
 8003be8:	f8a6 8002 	strh.w	r8, [r6, #2]
 8003bec:	4658      	mov	r0, fp
 8003bee:	f003 f982 	bl	8006ef6 <memset>
 8003bf2:	1ca2      	adds	r2, r4, #2
 8003bf4:	ee18 0a10 	vmov	r0, s16
 8003bf8:	0052      	lsls	r2, r2, #1
 8003bfa:	2301      	movs	r3, #1
 8003bfc:	4631      	mov	r1, r6
 8003bfe:	f7fd f9bb 	bl	8000f78 <acc_rss_integration_sensor_device_transfer>
 8003c02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c04:	4622      	mov	r2, r4
 8003c06:	4658      	mov	r0, fp
 8003c08:	eb03 0188 	add.w	r1, r3, r8, lsl #2
 8003c0c:	f7fc ffbc 	bl	8000b88 <acc_utils_transfer_buffer_to_uint32>
 8003c10:	3508      	adds	r5, #8
 8003c12:	e7c4      	b.n	8003b9e <test_communication+0x1de>
 8003c14:	9e07      	ldr	r6, [sp, #28]
 8003c16:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8003c1a:	2500      	movs	r5, #0
 8003c1c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003c20:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8003c24:	42a6      	cmp	r6, r4
 8003c26:	d00f      	beq.n	8003c48 <test_communication+0x288>
 8003c28:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003c2c:	4a32      	ldr	r2, [pc, #200]	; (8003cf8 <test_communication+0x338>)
 8003c2e:	4927      	ldr	r1, [pc, #156]	; (8003ccc <test_communication+0x30c>)
 8003c30:	2b03      	cmp	r3, #3
 8003c32:	f04f 0004 	mov.w	r0, #4
 8003c36:	462b      	mov	r3, r5
 8003c38:	d904      	bls.n	8003c44 <test_communication+0x284>
 8003c3a:	e9cd 6400 	strd	r6, r4, [sp]
 8003c3e:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003c42:	47a0      	blx	r4
 8003c44:	f108 0801 	add.w	r8, r8, #1
 8003c48:	3501      	adds	r5, #1
 8003c4a:	42af      	cmp	r7, r5
 8003c4c:	d1e6      	bne.n	8003c1c <test_communication+0x25c>
 8003c4e:	f8cd 8008 	str.w	r8, [sp, #8]
 8003c52:	9b03      	ldr	r3, [sp, #12]
 8003c54:	aa14      	add	r2, sp, #80	; 0x50
 8003c56:	3304      	adds	r3, #4
 8003c58:	4293      	cmp	r3, r2
 8003c5a:	9303      	str	r3, [sp, #12]
 8003c5c:	f47f af68 	bne.w	8003b30 <test_communication+0x170>
 8003c60:	9b06      	ldr	r3, [sp, #24]
 8003c62:	3b01      	subs	r3, #1
 8003c64:	46bb      	mov	fp, r7
 8003c66:	9306      	str	r3, [sp, #24]
 8003c68:	f47f af5f 	bne.w	8003b2a <test_communication+0x16a>
 8003c6c:	9b02      	ldr	r3, [sp, #8]
 8003c6e:	46cb      	mov	fp, r9
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d04b      	beq.n	8003d0c <test_communication+0x34c>
 8003c74:	9d06      	ldr	r5, [sp, #24]
 8003c76:	4915      	ldr	r1, [pc, #84]	; (8003ccc <test_communication+0x30c>)
 8003c78:	f8da 4040 	ldr.w	r4, [sl, #64]	; 0x40
 8003c7c:	2232      	movs	r2, #50	; 0x32
 8003c7e:	fb02 f207 	mul.w	r2, r2, r7
 8003c82:	9200      	str	r2, [sp, #0]
 8003c84:	4628      	mov	r0, r5
 8003c86:	4a1d      	ldr	r2, [pc, #116]	; (8003cfc <test_communication+0x33c>)
 8003c88:	47a0      	blx	r4
 8003c8a:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003c8e:	4a1c      	ldr	r2, [pc, #112]	; (8003d00 <test_communication+0x340>)
 8003c90:	490e      	ldr	r1, [pc, #56]	; (8003ccc <test_communication+0x30c>)
 8003c92:	4628      	mov	r0, r5
 8003c94:	4798      	blx	r3
 8003c96:	481b      	ldr	r0, [pc, #108]	; (8003d04 <test_communication+0x344>)
 8003c98:	4629      	mov	r1, r5
 8003c9a:	f7fc fea7 	bl	80009ec <acc_diagnostic_log_scalar>
 8003c9e:	2304      	movs	r3, #4
 8003ca0:	9305      	str	r3, [sp, #20]
 8003ca2:	9805      	ldr	r0, [sp, #20]
 8003ca4:	b015      	add	sp, #84	; 0x54
 8003ca6:	ecbd 8b02 	vpop	{d8}
 8003caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cae:	ab0d      	add	r3, sp, #52	; 0x34
 8003cb0:	9300      	str	r3, [sp, #0]
 8003cb2:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8003cb6:	f8d9 100c 	ldr.w	r1, [r9, #12]
 8003cba:	f8d9 0000 	ldr.w	r0, [r9]
 8003cbe:	463b      	mov	r3, r7
 8003cc0:	f7fd f9de 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003cc4:	e7c5      	b.n	8003c52 <test_communication+0x292>
 8003cc6:	bf00      	nop
 8003cc8:	0800af6c 	.word	0x0800af6c
 8003ccc:	0800a938 	.word	0x0800a938
 8003cd0:	0800af88 	.word	0x0800af88
 8003cd4:	10624dd3 	.word	0x10624dd3
 8003cd8:	08008ab0 	.word	0x08008ab0
 8003cdc:	0800af9c 	.word	0x0800af9c
 8003ce0:	0800b008 	.word	0x0800b008
 8003ce4:	0800b03c 	.word	0x0800b03c
 8003ce8:	08008abc 	.word	0x08008abc
 8003cec:	0800b05c 	.word	0x0800b05c
 8003cf0:	0800a87c 	.word	0x0800a87c
 8003cf4:	0800b080 	.word	0x0800b080
 8003cf8:	0800b098 	.word	0x0800b098
 8003cfc:	0800b0ec 	.word	0x0800b0ec
 8003d00:	0800b11c 	.word	0x0800b11c
 8003d04:	0800b13c 	.word	0x0800b13c
 8003d08:	200000ac 	.word	0x200000ac
 8003d0c:	482f      	ldr	r0, [pc, #188]	; (8003dcc <test_communication+0x40c>)
 8003d0e:	2101      	movs	r1, #1
 8003d10:	f7fc fe6c 	bl	80009ec <acc_diagnostic_log_scalar>
 8003d14:	9b05      	ldr	r3, [sp, #20]
 8003d16:	2b04      	cmp	r3, #4
 8003d18:	d0c3      	beq.n	8003ca2 <test_communication+0x2e2>
 8003d1a:	9c02      	ldr	r4, [sp, #8]
 8003d1c:	f8db 0000 	ldr.w	r0, [fp]
 8003d20:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 8003d24:	aa0f      	add	r2, sp, #60	; 0x3c
 8003d26:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003d2a:	f7fd fa41 	bl	80011b0 <acc_sensor_reg_read>
 8003d2e:	f8db 5018 	ldr.w	r5, [fp, #24]
 8003d32:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8003d36:	9410      	str	r4, [sp, #64]	; 0x40
 8003d38:	940f      	str	r4, [sp, #60]	; 0x3c
 8003d3a:	08ad      	lsrs	r5, r5, #2
 8003d3c:	2464      	movs	r4, #100	; 0x64
 8003d3e:	ab0f      	add	r3, sp, #60	; 0x3c
 8003d40:	9300      	str	r3, [sp, #0]
 8003d42:	f8db 2014 	ldr.w	r2, [fp, #20]
 8003d46:	f8db 100c 	ldr.w	r1, [fp, #12]
 8003d4a:	f8db 0000 	ldr.w	r0, [fp]
 8003d4e:	462b      	mov	r3, r5
 8003d50:	f7fd f996 	bl	8001080 <acc_sensor_a121_buffer_write.constprop.0>
 8003d54:	3c01      	subs	r4, #1
 8003d56:	d1f2      	bne.n	8003d3e <test_communication+0x37e>
 8003d58:	f8db 0000 	ldr.w	r0, [fp]
 8003d5c:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 8003d60:	aa0d      	add	r2, sp, #52	; 0x34
 8003d62:	f44f 718a 	mov.w	r1, #276	; 0x114
 8003d66:	f7fd fa23 	bl	80011b0 <acc_sensor_reg_read>
 8003d6a:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8003d6e:	1b9b      	subs	r3, r3, r6
 8003d70:	b29b      	uxth	r3, r3
 8003d72:	b1fb      	cbz	r3, 8003db4 <test_communication+0x3f4>
 8003d74:	f89a 2048 	ldrb.w	r2, [sl, #72]	; 0x48
 8003d78:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8003d7a:	2a01      	cmp	r2, #1
 8003d7c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8003d80:	fbb4 f4f3 	udiv	r4, r4, r3
 8003d84:	d906      	bls.n	8003d94 <test_communication+0x3d4>
 8003d86:	f8da 5040 	ldr.w	r5, [sl, #64]	; 0x40
 8003d8a:	4a11      	ldr	r2, [pc, #68]	; (8003dd0 <test_communication+0x410>)
 8003d8c:	4911      	ldr	r1, [pc, #68]	; (8003dd4 <test_communication+0x414>)
 8003d8e:	4623      	mov	r3, r4
 8003d90:	2002      	movs	r0, #2
 8003d92:	47a8      	blx	r5
 8003d94:	4810      	ldr	r0, [pc, #64]	; (8003dd8 <test_communication+0x418>)
 8003d96:	4621      	mov	r1, r4
 8003d98:	f7fc fe28 	bl	80009ec <acc_diagnostic_log_scalar>
 8003d9c:	2303      	movs	r3, #3
 8003d9e:	9305      	str	r3, [sp, #20]
 8003da0:	9805      	ldr	r0, [sp, #20]
 8003da2:	b015      	add	sp, #84	; 0x54
 8003da4:	ecbd 8b02 	vpop	{d8}
 8003da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003dac:	2303      	movs	r3, #3
 8003dae:	2101      	movs	r1, #1
 8003db0:	9305      	str	r3, [sp, #20]
 8003db2:	e6a2      	b.n	8003afa <test_communication+0x13a>
 8003db4:	f89a 3048 	ldrb.w	r3, [sl, #72]	; 0x48
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d0ef      	beq.n	8003d9c <test_communication+0x3dc>
 8003dbc:	f8da 3040 	ldr.w	r3, [sl, #64]	; 0x40
 8003dc0:	4a06      	ldr	r2, [pc, #24]	; (8003ddc <test_communication+0x41c>)
 8003dc2:	4904      	ldr	r1, [pc, #16]	; (8003dd4 <test_communication+0x414>)
 8003dc4:	2001      	movs	r0, #1
 8003dc6:	4798      	blx	r3
 8003dc8:	e7e8      	b.n	8003d9c <test_communication+0x3dc>
 8003dca:	bf00      	nop
 8003dcc:	0800b13c 	.word	0x0800b13c
 8003dd0:	0800b160 	.word	0x0800b160
 8003dd4:	0800a938 	.word	0x0800a938
 8003dd8:	0800b190 	.word	0x0800b190
 8003ddc:	0800b1a8 	.word	0x0800b1a8

08003de0 <acc_calibration_a121_calibrate>:
 8003de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003de4:	ed2d 8b02 	vpush	{d8}
 8003de8:	f2ad 7d14 	subw	sp, sp, #1812	; 0x714
 8003dec:	4604      	mov	r4, r0
 8003dee:	9302      	str	r3, [sp, #8]
 8003df0:	781b      	ldrb	r3, [r3, #0]
 8003df2:	9203      	str	r2, [sp, #12]
 8003df4:	4689      	mov	r9, r1
 8003df6:	2b0d      	cmp	r3, #13
 8003df8:	d816      	bhi.n	8003e28 <acc_calibration_a121_calibrate+0x48>
 8003dfa:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003dfe:	0025      	.short	0x0025
 8003e00:	01ad000e 	.word	0x01ad000e
 8003e04:	013600e4 	.word	0x013600e4
 8003e08:	02650233 	.word	0x02650233
 8003e0c:	047d0353 	.word	0x047d0353
 8003e10:	06970641 	.word	0x06970641
 8003e14:	074106c8 	.word	0x074106c8
 8003e18:	0025      	.short	0x0025
 8003e1a:	f7ff f9b1 	bl	8003180 <acc_a121_cal_session_ack_program>
 8003e1e:	2800      	cmp	r0, #0
 8003e20:	f040 87f6 	bne.w	8004e10 <acc_calibration_a121_calibrate+0x1030>
 8003e24:	9b02      	ldr	r3, [sp, #8]
 8003e26:	781b      	ldrb	r3, [r3, #0]
 8003e28:	49bc      	ldr	r1, [pc, #752]	; (800411c <acc_calibration_a121_calibrate+0x33c>)
 8003e2a:	4abd      	ldr	r2, [pc, #756]	; (8004120 <acc_calibration_a121_calibrate+0x340>)
 8003e2c:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8003e2e:	49bd      	ldr	r1, [pc, #756]	; (8004124 <acc_calibration_a121_calibrate+0x344>)
 8003e30:	2000      	movs	r0, #0
 8003e32:	47a0      	blx	r4
 8003e34:	2000      	movs	r0, #0
 8003e36:	4604      	mov	r4, r0
 8003e38:	9b02      	ldr	r3, [sp, #8]
 8003e3a:	701c      	strb	r4, [r3, #0]
 8003e3c:	f20d 7d14 	addw	sp, sp, #1812	; 0x714
 8003e40:	ecbd 8b02 	vpop	{d8}
 8003e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e48:	4eb4      	ldr	r6, [pc, #720]	; (800411c <acc_calibration_a121_calibrate+0x33c>)
 8003e4a:	f8dd 0740 	ldr.w	r0, [sp, #1856]	; 0x740
 8003e4e:	2288      	movs	r2, #136	; 0x88
 8003e50:	2100      	movs	r1, #0
 8003e52:	f003 f850 	bl	8006ef6 <memset>
 8003e56:	edd6 7a13 	vldr	s15, [r6, #76]	; 0x4c
 8003e5a:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e5e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003e62:	f103 017c 	add.w	r1, r3, #124	; 0x7c
 8003e66:	a844      	add	r0, sp, #272	; 0x110
 8003e68:	edcd 7a44 	vstr	s15, [sp, #272]	; 0x110
 8003e6c:	f7fc feac 	bl	8000bc8 <acc_cpd_pll_divisors_calculate>
 8003e70:	4605      	mov	r5, r0
 8003e72:	48ad      	ldr	r0, [pc, #692]	; (8004128 <acc_calibration_a121_calibrate+0x348>)
 8003e74:	f7fc fdc2 	bl	80009fc <acc_diagnostic_log_set_scope>
 8003e78:	48ac      	ldr	r0, [pc, #688]	; (800412c <acc_calibration_a121_calibrate+0x34c>)
 8003e7a:	4621      	mov	r1, r4
 8003e7c:	f7fc fdb6 	bl	80009ec <acc_diagnostic_log_scalar>
 8003e80:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e84:	48aa      	ldr	r0, [pc, #680]	; (8004130 <acc_calibration_a121_calibrate+0x350>)
 8003e86:	f8b3 107e 	ldrh.w	r1, [r3, #126]	; 0x7e
 8003e8a:	f7fc fdaf 	bl	80009ec <acc_diagnostic_log_scalar>
 8003e8e:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003e92:	48a8      	ldr	r0, [pc, #672]	; (8004134 <acc_calibration_a121_calibrate+0x354>)
 8003e94:	f8b3 1080 	ldrh.w	r1, [r3, #128]	; 0x80
 8003e98:	f7fc fda8 	bl	80009ec <acc_diagnostic_log_scalar>
 8003e9c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003ea0:	48a5      	ldr	r0, [pc, #660]	; (8004138 <acc_calibration_a121_calibrate+0x358>)
 8003ea2:	f8b3 1082 	ldrh.w	r1, [r3, #130]	; 0x82
 8003ea6:	f7fc fda1 	bl	80009ec <acc_diagnostic_log_scalar>
 8003eaa:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8003eae:	48a3      	ldr	r0, [pc, #652]	; (800413c <acc_calibration_a121_calibrate+0x35c>)
 8003eb0:	f8b3 107c 	ldrh.w	r1, [r3, #124]	; 0x7c
 8003eb4:	f7fc fd9a 	bl	80009ec <acc_diagnostic_log_scalar>
 8003eb8:	2d00      	cmp	r5, #0
 8003eba:	d0b3      	beq.n	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	8e35      	ldrh	r5, [r6, #48]	; 0x30
 8003ec0:	f7fd f9c8 	bl	8001254 <acc_sensor_protocol_a121_prepare_load>
 8003ec4:	2800      	cmp	r0, #0
 8003ec6:	d0ad      	beq.n	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003ec8:	9b03      	ldr	r3, [sp, #12]
 8003eca:	f8cd 9010 	str.w	r9, [sp, #16]
 8003ece:	085b      	lsrs	r3, r3, #1
 8003ed0:	086d      	lsrs	r5, r5, #1
 8003ed2:	42ab      	cmp	r3, r5
 8003ed4:	bf28      	it	cs
 8003ed6:	462b      	movcs	r3, r5
 8003ed8:	3b02      	subs	r3, #2
 8003eda:	f023 0301 	bic.w	r3, r3, #1
 8003ede:	b29a      	uxth	r2, r3
 8003ee0:	f109 0704 	add.w	r7, r9, #4
 8003ee4:	f8df a26c 	ldr.w	sl, [pc, #620]	; 8004154 <acc_calibration_a121_calibrate+0x374>
 8003ee8:	f8dd 9740 	ldr.w	r9, [sp, #1856]	; 0x740
 8003eec:	9203      	str	r2, [sp, #12]
 8003eee:	ee08 4a10 	vmov	s16, r4
 8003ef2:	f640 2bfc 	movw	fp, #2812	; 0xafc
 8003ef6:	2500      	movs	r5, #0
 8003ef8:	461c      	mov	r4, r3
 8003efa:	9b03      	ldr	r3, [sp, #12]
 8003efc:	4990      	ldr	r1, [pc, #576]	; (8004140 <acc_calibration_a121_calibrate+0x360>)
 8003efe:	f5c5 662f 	rsb	r6, r5, #2800	; 0xaf0
 8003f02:	461a      	mov	r2, r3
 8003f04:	360c      	adds	r6, #12
 8003f06:	42b4      	cmp	r4, r6
 8003f08:	bf88      	it	hi
 8003f0a:	465a      	movhi	r2, fp
 8003f0c:	ea4f 0855 	mov.w	r8, r5, lsr #1
 8003f10:	eb01 0088 	add.w	r0, r1, r8, lsl #2
 8003f14:	4616      	mov	r6, r2
 8003f16:	4639      	mov	r1, r7
 8003f18:	0852      	lsrs	r2, r2, #1
 8003f1a:	f7fc fe47 	bl	8000bac <acc_confprogram_copy>
 8003f1e:	f8b9 307e 	ldrh.w	r3, [r9, #126]	; 0x7e
 8003f22:	9301      	str	r3, [sp, #4]
 8003f24:	221c      	movs	r2, #28
 8003f26:	9200      	str	r2, [sp, #0]
 8003f28:	4653      	mov	r3, sl
 8003f2a:	4632      	mov	r2, r6
 8003f2c:	4629      	mov	r1, r5
 8003f2e:	4638      	mov	r0, r7
 8003f30:	f7fc ff64 	bl	8000dfc <acc_confprogram_patch_offset>
 8003f34:	2800      	cmp	r0, #0
 8003f36:	f43f af75 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003f3a:	f8b9 3080 	ldrh.w	r3, [r9, #128]	; 0x80
 8003f3e:	9301      	str	r3, [sp, #4]
 8003f40:	231a      	movs	r3, #26
 8003f42:	9300      	str	r3, [sp, #0]
 8003f44:	4632      	mov	r2, r6
 8003f46:	4653      	mov	r3, sl
 8003f48:	4629      	mov	r1, r5
 8003f4a:	4638      	mov	r0, r7
 8003f4c:	f7fc ff56 	bl	8000dfc <acc_confprogram_patch_offset>
 8003f50:	4684      	mov	ip, r0
 8003f52:	f04f 0e1b 	mov.w	lr, #27
 8003f56:	4653      	mov	r3, sl
 8003f58:	4632      	mov	r2, r6
 8003f5a:	4629      	mov	r1, r5
 8003f5c:	4638      	mov	r0, r7
 8003f5e:	f1bc 0f00 	cmp.w	ip, #0
 8003f62:	f43f af5f 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003f66:	f8b9 c082 	ldrh.w	ip, [r9, #130]	; 0x82
 8003f6a:	e9cd ec00 	strd	lr, ip, [sp]
 8003f6e:	f7fc ff45 	bl	8000dfc <acc_confprogram_patch_offset>
 8003f72:	4684      	mov	ip, r0
 8003f74:	f04f 0e19 	mov.w	lr, #25
 8003f78:	4653      	mov	r3, sl
 8003f7a:	4632      	mov	r2, r6
 8003f7c:	4629      	mov	r1, r5
 8003f7e:	4638      	mov	r0, r7
 8003f80:	f1bc 0f00 	cmp.w	ip, #0
 8003f84:	f43f af4e 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003f88:	f8b9 c084 	ldrh.w	ip, [r9, #132]	; 0x84
 8003f8c:	e9cd ec00 	strd	lr, ip, [sp]
 8003f90:	f7fc ff34 	bl	8000dfc <acc_confprogram_patch_offset>
 8003f94:	4684      	mov	ip, r0
 8003f96:	9a04      	ldr	r2, [sp, #16]
 8003f98:	ee18 0a10 	vmov	r0, s16
 8003f9c:	4633      	mov	r3, r6
 8003f9e:	4641      	mov	r1, r8
 8003fa0:	f1bc 0f00 	cmp.w	ip, #0
 8003fa4:	f43f af3e 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003fa8:	f7fd f996 	bl	80012d8 <acc_sensor_a121_load_confmem>
 8003fac:	9a03      	ldr	r2, [sp, #12]
 8003fae:	4415      	add	r5, r2
 8003fb0:	b2ad      	uxth	r5, r5
 8003fb2:	f640 23fb 	movw	r3, #2811	; 0xafb
 8003fb6:	429d      	cmp	r5, r3
 8003fb8:	ebab 0b02 	sub.w	fp, fp, r2
 8003fbc:	f201 80b8 	bhi.w	8005130 <acc_calibration_a121_calibrate+0x1350>
 8003fc0:	fa1f fb8b 	uxth.w	fp, fp
 8003fc4:	e799      	b.n	8003efa <acc_calibration_a121_calibrate+0x11a>
 8003fc6:	f7ff f8db 	bl	8003180 <acc_a121_cal_session_ack_program>
 8003fca:	4680      	mov	r8, r0
 8003fcc:	2800      	cmp	r0, #0
 8003fce:	f43f af29 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8003fd2:	4649      	mov	r1, r9
 8003fd4:	2210      	movs	r2, #16
 8003fd6:	4620      	mov	r0, r4
 8003fd8:	f7ff faca 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8003fdc:	4681      	mov	r9, r0
 8003fde:	4859      	ldr	r0, [pc, #356]	; (8004144 <acc_calibration_a121_calibrate+0x364>)
 8003fe0:	f7fc fcac 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8003fe4:	4648      	mov	r0, r9
 8003fe6:	2110      	movs	r1, #16
 8003fe8:	f7fc fcf0 	bl	80009cc <acc_diagnostic_log_data_i16>
 8003fec:	2100      	movs	r1, #0
 8003fee:	ee07 4a90 	vmov	s15, r4
 8003ff2:	f1a9 0b02 	sub.w	fp, r9, #2
 8003ff6:	460f      	mov	r7, r1
 8003ff8:	460d      	mov	r5, r1
 8003ffa:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8003ffe:	f241 7a70 	movw	sl, #6000	; 0x1770
 8004002:	e01c      	b.n	800403e <acc_calibration_a121_calibrate+0x25e>
 8004004:	f939 c011 	ldrsh.w	ip, [r9, r1, lsl #1]
 8004008:	f93b 4011 	ldrsh.w	r4, [fp, r1, lsl #1]
 800400c:	eb0c 020a 	add.w	r2, ip, sl
 8004010:	ebac 0c04 	sub.w	ip, ip, r4
 8004014:	459c      	cmp	ip, r3
 8004016:	f6ff af05 	blt.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800401a:	45f4      	cmp	ip, lr
 800401c:	f73f af02 	bgt.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004020:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 8004024:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 8004028:	b29b      	uxth	r3, r3
 800402a:	4283      	cmp	r3, r0
 800402c:	d203      	bcs.n	8004036 <acc_calibration_a121_calibrate+0x256>
 800402e:	00b7      	lsls	r7, r6, #2
 8004030:	4618      	mov	r0, r3
 8004032:	b2bf      	uxth	r7, r7
 8004034:	4645      	mov	r5, r8
 8004036:	2e0f      	cmp	r6, #15
 8004038:	f000 8769 	beq.w	8004f0e <acc_calibration_a121_calibrate+0x112e>
 800403c:	3101      	adds	r1, #1
 800403e:	1e4b      	subs	r3, r1, #1
 8004040:	fb03 f303 	mul.w	r3, r3, r3
 8004044:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8004048:	005a      	lsls	r2, r3, #1
 800404a:	f502 7e16 	add.w	lr, r2, #600	; 0x258
 800404e:	3bc8      	subs	r3, #200	; 0xc8
 8004050:	b28e      	uxth	r6, r1
 8004052:	2900      	cmp	r1, #0
 8004054:	d1d6      	bne.n	8004004 <acc_calibration_a121_calibrate+0x224>
 8004056:	f9b9 3000 	ldrsh.w	r3, [r9]
 800405a:	4453      	add	r3, sl
 800405c:	2b00      	cmp	r3, #0
 800405e:	bfb8      	it	lt
 8004060:	425b      	neglt	r3, r3
 8004062:	b29b      	uxth	r3, r3
 8004064:	4283      	cmp	r3, r0
 8004066:	d2e9      	bcs.n	800403c <acc_calibration_a121_calibrate+0x25c>
 8004068:	e7e1      	b.n	800402e <acc_calibration_a121_calibrate+0x24e>
 800406a:	f7ff f889 	bl	8003180 <acc_a121_cal_session_ack_program>
 800406e:	4680      	mov	r8, r0
 8004070:	2800      	cmp	r0, #0
 8004072:	f43f aed7 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004076:	2231      	movs	r2, #49	; 0x31
 8004078:	4649      	mov	r1, r9
 800407a:	4620      	mov	r0, r4
 800407c:	f7ff fa78 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8004080:	4607      	mov	r7, r0
 8004082:	4605      	mov	r5, r0
 8004084:	f837 bb02 	ldrh.w	fp, [r7], #2
 8004088:	4828      	ldr	r0, [pc, #160]	; (800412c <acc_calibration_a121_calibrate+0x34c>)
 800408a:	4621      	mov	r1, r4
 800408c:	f7fc fcae 	bl	80009ec <acc_diagnostic_log_scalar>
 8004090:	482d      	ldr	r0, [pc, #180]	; (8004148 <acc_calibration_a121_calibrate+0x368>)
 8004092:	f7fc fc53 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004096:	4638      	mov	r0, r7
 8004098:	2130      	movs	r1, #48	; 0x30
 800409a:	f7fc fc9f 	bl	80009dc <acc_diagnostic_log_data_u16>
 800409e:	4659      	mov	r1, fp
 80040a0:	482a      	ldr	r0, [pc, #168]	; (800414c <acc_calibration_a121_calibrate+0x36c>)
 80040a2:	f7fc fca3 	bl	80009ec <acc_diagnostic_log_scalar>
 80040a6:	8869      	ldrh	r1, [r5, #2]
 80040a8:	f8b5 3060 	ldrh.w	r3, [r5, #96]	; 0x60
 80040ac:	1a5b      	subs	r3, r3, r1
 80040ae:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 80040b2:	f6ff aeb7 	blt.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80040b6:	4a26      	ldr	r2, [pc, #152]	; (8004150 <acc_calibration_a121_calibrate+0x370>)
 80040b8:	f8cd 9010 	str.w	r9, [sp, #16]
 80040bc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80040c0:	fba2 3a0a 	umull	r3, sl, r2, sl
 80040c4:	2500      	movs	r5, #0
 80040c6:	ee07 4a90 	vmov	s15, r4
 80040ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80040ce:	2210      	movs	r2, #16
 80040d0:	f64f 7cff 	movw	ip, #65535	; 0xffff
 80040d4:	462c      	mov	r4, r5
 80040d6:	4689      	mov	r9, r1
 80040d8:	e00b      	b.n	80040f2 <acc_calibration_a121_calibrate+0x312>
 80040da:	4570      	cmp	r0, lr
 80040dc:	bf88      	it	hi
 80040de:	f04f 0800 	movhi.w	r8, #0
 80040e2:	3201      	adds	r2, #1
 80040e4:	b292      	uxth	r2, r2
 80040e6:	2a40      	cmp	r2, #64	; 0x40
 80040e8:	4455      	add	r5, sl
 80040ea:	f000 8738 	beq.w	8004f5e <acc_calibration_a121_calibrate+0x117e>
 80040ee:	f837 1f02 	ldrh.w	r1, [r7, #2]!
 80040f2:	eba1 030b 	sub.w	r3, r1, fp
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	bfb8      	it	lt
 80040fa:	425b      	neglt	r3, r3
 80040fc:	b29b      	uxth	r3, r3
 80040fe:	eb09 4015 	add.w	r0, r9, r5, lsr #16
 8004102:	4563      	cmp	r3, ip
 8004104:	f500 7648 	add.w	r6, r0, #800	; 0x320
 8004108:	bf3c      	itt	cc
 800410a:	469c      	movcc	ip, r3
 800410c:	4614      	movcc	r4, r2
 800410e:	42b1      	cmp	r1, r6
 8004110:	f501 7e48 	add.w	lr, r1, #800	; 0x320
 8004114:	d9e1      	bls.n	80040da <acc_calibration_a121_calibrate+0x2fa>
 8004116:	f04f 0800 	mov.w	r8, #0
 800411a:	e7e2      	b.n	80040e2 <acc_calibration_a121_calibrate+0x302>
 800411c:	200000ac 	.word	0x200000ac
 8004120:	0800b5f8 	.word	0x0800b5f8
 8004124:	0800b5e4 	.word	0x0800b5e4
 8004128:	0800a658 	.word	0x0800a658
 800412c:	0800b200 	.word	0x0800b200
 8004130:	0800b20c 	.word	0x0800b20c
 8004134:	0800b21c 	.word	0x0800b21c
 8004138:	0800b228 	.word	0x0800b228
 800413c:	0800b234 	.word	0x0800b234
 8004140:	08008ee0 	.word	0x08008ee0
 8004144:	0800b27c 	.word	0x0800b27c
 8004148:	0800b2c0 	.word	0x0800b2c0
 800414c:	0800b2d4 	.word	0x0800b2d4
 8004150:	aaaaaaab 	.word	0xaaaaaaab
 8004154:	08008ad0 	.word	0x08008ad0
 8004158:	f7ff f812 	bl	8003180 <acc_a121_cal_session_ack_program>
 800415c:	2800      	cmp	r0, #0
 800415e:	f43f ae61 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004162:	ab44      	add	r3, sp, #272	; 0x110
 8004164:	461a      	mov	r2, r3
 8004166:	2132      	movs	r1, #50	; 0x32
 8004168:	4620      	mov	r0, r4
 800416a:	4698      	mov	r8, r3
 800416c:	9303      	str	r3, [sp, #12]
 800416e:	f7fd f81f 	bl	80011b0 <acc_sensor_reg_read>
 8004172:	2212      	movs	r2, #18
 8004174:	4649      	mov	r1, r9
 8004176:	4620      	mov	r0, r4
 8004178:	f7ff f9fa 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 800417c:	8847      	ldrh	r7, [r0, #2]
 800417e:	4605      	mov	r5, r0
 8004180:	4621      	mov	r1, r4
 8004182:	48b9      	ldr	r0, [pc, #740]	; (8004468 <acc_calibration_a121_calibrate+0x688>)
 8004184:	882e      	ldrh	r6, [r5, #0]
 8004186:	f7fc fc31 	bl	80009ec <acc_diagnostic_log_scalar>
 800418a:	4639      	mov	r1, r7
 800418c:	48b7      	ldr	r0, [pc, #732]	; (800446c <acc_calibration_a121_calibrate+0x68c>)
 800418e:	f7fc fc2d 	bl	80009ec <acc_diagnostic_log_scalar>
 8004192:	3504      	adds	r5, #4
 8004194:	48b6      	ldr	r0, [pc, #728]	; (8004470 <acc_calibration_a121_calibrate+0x690>)
 8004196:	f7fc fbd1 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 800419a:	4628      	mov	r0, r5
 800419c:	2110      	movs	r1, #16
 800419e:	f7fc fc1d 	bl	80009dc <acc_diagnostic_log_data_u16>
 80041a2:	2300      	movs	r3, #0
 80041a4:	f8b8 0000 	ldrh.w	r0, [r8]
 80041a8:	f64f 7cff 	movw	ip, #65535	; 0xffff
 80041ac:	4698      	mov	r8, r3
 80041ae:	fa40 f203 	asr.w	r2, r0, r3
 80041b2:	07d2      	lsls	r2, r2, #31
 80041b4:	b299      	uxth	r1, r3
 80041b6:	d50a      	bpl.n	80041ce <acc_calibration_a121_calibrate+0x3ee>
 80041b8:	f835 2013 	ldrh.w	r2, [r5, r3, lsl #1]
 80041bc:	1bd2      	subs	r2, r2, r7
 80041be:	2a00      	cmp	r2, #0
 80041c0:	bfb8      	it	lt
 80041c2:	4252      	neglt	r2, r2
 80041c4:	b292      	uxth	r2, r2
 80041c6:	4562      	cmp	r2, ip
 80041c8:	bf3c      	itt	cc
 80041ca:	4694      	movcc	ip, r2
 80041cc:	4688      	movcc	r8, r1
 80041ce:	3301      	adds	r3, #1
 80041d0:	2b10      	cmp	r3, #16
 80041d2:	d1ec      	bne.n	80041ae <acc_calibration_a121_calibrate+0x3ce>
 80041d4:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 80041d8:	2b0d      	cmp	r3, #13
 80041da:	f63f ae23 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80041de:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 80041e2:	3b01      	subs	r3, #1
 80041e4:	eb05 0743 	add.w	r7, r5, r3, lsl #1
 80041e8:	f835 3013 	ldrh.w	r3, [r5, r3, lsl #1]
 80041ec:	887a      	ldrh	r2, [r7, #2]
 80041ee:	f241 3187 	movw	r1, #4999	; 0x1387
 80041f2:	1a9b      	subs	r3, r3, r2
 80041f4:	428b      	cmp	r3, r1
 80041f6:	f77f ae15 	ble.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80041fa:	88bb      	ldrh	r3, [r7, #4]
 80041fc:	1ad2      	subs	r2, r2, r3
 80041fe:	428a      	cmp	r2, r1
 8004200:	f77f ae10 	ble.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004204:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004208:	4298      	cmp	r0, r3
 800420a:	f43f ae0b 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800420e:	4899      	ldr	r0, [pc, #612]	; (8004474 <acc_calibration_a121_calibrate+0x694>)
 8004210:	4631      	mov	r1, r6
 8004212:	f7fc fbeb 	bl	80009ec <acc_diagnostic_log_scalar>
 8004216:	9b03      	ldr	r3, [sp, #12]
 8004218:	4897      	ldr	r0, [pc, #604]	; (8004478 <acc_calibration_a121_calibrate+0x698>)
 800421a:	8819      	ldrh	r1, [r3, #0]
 800421c:	f7fc fbe6 	bl	80009ec <acc_diagnostic_log_scalar>
 8004220:	4896      	ldr	r0, [pc, #600]	; (800447c <acc_calibration_a121_calibrate+0x69c>)
 8004222:	4641      	mov	r1, r8
 8004224:	f7fc fbe2 	bl	80009ec <acc_diagnostic_log_scalar>
 8004228:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800422c:	4a94      	ldr	r2, [pc, #592]	; (8004480 <acc_calibration_a121_calibrate+0x6a0>)
 800422e:	801e      	strh	r6, [r3, #0]
 8004230:	f8a3 8002 	strh.w	r8, [r3, #2]
 8004234:	4993      	ldr	r1, [pc, #588]	; (8004484 <acc_calibration_a121_calibrate+0x6a4>)
 8004236:	f8cd 8000 	str.w	r8, [sp]
 800423a:	2325      	movs	r3, #37	; 0x25
 800423c:	4620      	mov	r0, r4
 800423e:	f7ff fb2b 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004242:	4620      	mov	r0, r4
 8004244:	f240 211d 	movw	r1, #541	; 0x21d
 8004248:	f7fc ffc8 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 800424c:	2403      	movs	r4, #3
 800424e:	2800      	cmp	r0, #0
 8004250:	f43f ade8 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004254:	4b8c      	ldr	r3, [pc, #560]	; (8004488 <acc_calibration_a121_calibrate+0x6a8>)
 8004256:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 800425a:	2a03      	cmp	r2, #3
 800425c:	f200 85c7 	bhi.w	8004dee <acc_calibration_a121_calibrate+0x100e>
 8004260:	2001      	movs	r0, #1
 8004262:	e5e9      	b.n	8003e38 <acc_calibration_a121_calibrate+0x58>
 8004264:	f7fe ff8c 	bl	8003180 <acc_a121_cal_session_ack_program>
 8004268:	2800      	cmp	r0, #0
 800426a:	f43f addb 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800426e:	2220      	movs	r2, #32
 8004270:	4649      	mov	r1, r9
 8004272:	4620      	mov	r0, r4
 8004274:	f7ff f97c 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8004278:	4621      	mov	r1, r4
 800427a:	4605      	mov	r5, r0
 800427c:	487a      	ldr	r0, [pc, #488]	; (8004468 <acc_calibration_a121_calibrate+0x688>)
 800427e:	f7fc fbb5 	bl	80009ec <acc_diagnostic_log_scalar>
 8004282:	4882      	ldr	r0, [pc, #520]	; (800448c <acc_calibration_a121_calibrate+0x6ac>)
 8004284:	f7fc fb5a 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004288:	4628      	mov	r0, r5
 800428a:	2120      	movs	r1, #32
 800428c:	f7fc fb9e 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004290:	f9b5 2000 	ldrsh.w	r2, [r5]
 8004294:	4628      	mov	r0, r5
 8004296:	4616      	mov	r6, r2
 8004298:	2101      	movs	r1, #1
 800429a:	2700      	movs	r7, #0
 800429c:	e009      	b.n	80042b2 <acc_calibration_a121_calibrate+0x4d2>
 800429e:	42b2      	cmp	r2, r6
 80042a0:	bfa8      	it	ge
 80042a2:	460f      	movge	r7, r1
 80042a4:	f101 0101 	add.w	r1, r1, #1
 80042a8:	bfa8      	it	ge
 80042aa:	4616      	movge	r6, r2
 80042ac:	2920      	cmp	r1, #32
 80042ae:	f000 86b7 	beq.w	8005020 <acc_calibration_a121_calibrate+0x1240>
 80042b2:	4613      	mov	r3, r2
 80042b4:	f930 2f02 	ldrsh.w	r2, [r0, #2]!
 80042b8:	f5c3 7316 	rsb	r3, r3, #600	; 0x258
 80042bc:	4413      	add	r3, r2
 80042be:	b29b      	uxth	r3, r3
 80042c0:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 80042c4:	d9eb      	bls.n	800429e <acc_calibration_a121_calibrate+0x4be>
 80042c6:	e5ad      	b.n	8003e24 <acc_calibration_a121_calibrate+0x44>
 80042c8:	f7fe ff5a 	bl	8003180 <acc_a121_cal_session_ack_program>
 80042cc:	2800      	cmp	r0, #0
 80042ce:	f43f ada9 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80042d2:	2250      	movs	r2, #80	; 0x50
 80042d4:	4649      	mov	r1, r9
 80042d6:	4620      	mov	r0, r4
 80042d8:	f7ff f94a 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 80042dc:	4621      	mov	r1, r4
 80042de:	4682      	mov	sl, r0
 80042e0:	4861      	ldr	r0, [pc, #388]	; (8004468 <acc_calibration_a121_calibrate+0x688>)
 80042e2:	f7fc fb83 	bl	80009ec <acc_diagnostic_log_scalar>
 80042e6:	486a      	ldr	r0, [pc, #424]	; (8004490 <acc_calibration_a121_calibrate+0x6b0>)
 80042e8:	f7fc fb28 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80042ec:	4650      	mov	r0, sl
 80042ee:	2150      	movs	r1, #80	; 0x50
 80042f0:	f7fc fb6c 	bl	80009cc <acc_diagnostic_log_data_i16>
 80042f4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80042f8:	f8cd 9010 	str.w	r9, [sp, #16]
 80042fc:	330a      	adds	r3, #10
 80042fe:	ee08 4a10 	vmov	s16, r4
 8004302:	f04f 0b30 	mov.w	fp, #48	; 0x30
 8004306:	4698      	mov	r8, r3
 8004308:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80044a0 <acc_calibration_a121_calibrate+0x6c0>
 800430c:	f9ba 2000 	ldrsh.w	r2, [sl]
 8004310:	f04f 0e00 	mov.w	lr, #0
 8004314:	f647 7cff 	movw	ip, #32767	; 0x7fff
 8004318:	4674      	mov	r4, lr
 800431a:	4666      	mov	r6, ip
 800431c:	4655      	mov	r5, sl
 800431e:	f64f 71ec 	movw	r1, #65516	; 0xffec
 8004322:	f06f 031b 	mvn.w	r3, #27
 8004326:	4648      	mov	r0, r9
 8004328:	e015      	b.n	8004356 <acc_calibration_a121_calibrate+0x576>
 800432a:	4562      	cmp	r2, ip
 800432c:	bfbc      	itt	lt
 800432e:	469e      	movlt	lr, r3
 8004330:	4694      	movlt	ip, r2
 8004332:	2924      	cmp	r1, #36	; 0x24
 8004334:	d017      	beq.n	8004366 <acc_calibration_a121_calibrate+0x586>
 8004336:	f935 2f02 	ldrsh.w	r2, [r5, #2]!
 800433a:	f835 3c02 	ldrh.w	r3, [r5, #-2]
 800433e:	1ad3      	subs	r3, r2, r3
 8004340:	b21b      	sxth	r3, r3
 8004342:	429e      	cmp	r6, r3
 8004344:	bfa8      	it	ge
 8004346:	461e      	movge	r6, r3
 8004348:	f101 0708 	add.w	r7, r1, #8
 800434c:	4298      	cmp	r0, r3
 800434e:	bfb8      	it	lt
 8004350:	4618      	movlt	r0, r3
 8004352:	b20b      	sxth	r3, r1
 8004354:	b2b9      	uxth	r1, r7
 8004356:	2a00      	cmp	r2, #0
 8004358:	dae7      	bge.n	800432a <acc_calibration_a121_calibrate+0x54a>
 800435a:	4591      	cmp	r9, r2
 800435c:	dae9      	bge.n	8004332 <acc_calibration_a121_calibrate+0x552>
 800435e:	2924      	cmp	r1, #36	; 0x24
 8004360:	461c      	mov	r4, r3
 8004362:	4691      	mov	r9, r2
 8004364:	d1e7      	bne.n	8004336 <acc_calibration_a121_calibrate+0x556>
 8004366:	f5a0 501c 	sub.w	r0, r0, #9984	; 0x2700
 800436a:	3810      	subs	r0, #16
 800436c:	b280      	uxth	r0, r0
 800436e:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004372:	4298      	cmp	r0, r3
 8004374:	f63f ad56 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004378:	2e00      	cmp	r6, #0
 800437a:	f47f ad53 	bne.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800437e:	f519 4f00 	cmn.w	r9, #32768	; 0x8000
 8004382:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8004386:	f000 85e5 	beq.w	8004f54 <acc_calibration_a121_calibrate+0x1174>
 800438a:	459c      	cmp	ip, r3
 800438c:	f000 86cd 	beq.w	800512a <acc_calibration_a121_calibrate+0x134a>
 8004390:	ebae 0e04 	sub.w	lr, lr, r4
 8004394:	f1be 0f08 	cmp.w	lr, #8
 8004398:	f47f ad44 	bne.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800439c:	ea4f 0ec9 	mov.w	lr, r9, lsl #3
 80043a0:	ebac 0c09 	sub.w	ip, ip, r9
 80043a4:	fb9e fcfc 	sdiv	ip, lr, ip
 80043a8:	eba4 0e0c 	sub.w	lr, r4, ip
 80043ac:	fa0f fe8e 	sxth.w	lr, lr
 80043b0:	f1be 0f00 	cmp.w	lr, #0
 80043b4:	f2c0 856a 	blt.w	8004e8c <acc_calibration_a121_calibrate+0x10ac>
 80043b8:	f1be 0f1f 	cmp.w	lr, #31
 80043bc:	f73f ad32 	bgt.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80043c0:	fa1f f58e 	uxth.w	r5, lr
 80043c4:	4833      	ldr	r0, [pc, #204]	; (8004494 <acc_calibration_a121_calibrate+0x6b4>)
 80043c6:	f880 b00d 	strb.w	fp, [r0, #13]
 80043ca:	f10b 0b01 	add.w	fp, fp, #1
 80043ce:	4629      	mov	r1, r5
 80043d0:	fa5f fb8b 	uxtb.w	fp, fp
 80043d4:	f7fc fb0a 	bl	80009ec <acc_diagnostic_log_scalar>
 80043d8:	f1bb 0f3a 	cmp.w	fp, #58	; 0x3a
 80043dc:	f828 5f02 	strh.w	r5, [r8, #2]!
 80043e0:	f10a 0a10 	add.w	sl, sl, #16
 80043e4:	d190      	bne.n	8004308 <acc_calibration_a121_calibrate+0x528>
 80043e6:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80043ea:	482b      	ldr	r0, [pc, #172]	; (8004498 <acc_calibration_a121_calibrate+0x6b8>)
 80043ec:	f7fc fb06 	bl	80009fc <acc_diagnostic_log_set_scope>
 80043f0:	2360      	movs	r3, #96	; 0x60
 80043f2:	9a03      	ldr	r2, [sp, #12]
 80043f4:	9300      	str	r3, [sp, #0]
 80043f6:	ee18 0a10 	vmov	r0, s16
 80043fa:	4b28      	ldr	r3, [pc, #160]	; (800449c <acc_calibration_a121_calibrate+0x6bc>)
 80043fc:	4649      	mov	r1, r9
 80043fe:	f7fe ff2f 	bl	8003260 <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004402:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004406:	4a1e      	ldr	r2, [pc, #120]	; (8004480 <acc_calibration_a121_calibrate+0x6a0>)
 8004408:	899b      	ldrh	r3, [r3, #12]
 800440a:	9300      	str	r3, [sp, #0]
 800440c:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004410:	491c      	ldr	r1, [pc, #112]	; (8004484 <acc_calibration_a121_calibrate+0x6a4>)
 8004412:	88dd      	ldrh	r5, [r3, #6]
 8004414:	ee18 0a10 	vmov	r0, s16
 8004418:	2307      	movs	r3, #7
 800441a:	f7ff fa3d 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 800441e:	4a18      	ldr	r2, [pc, #96]	; (8004480 <acc_calibration_a121_calibrate+0x6a0>)
 8004420:	4918      	ldr	r1, [pc, #96]	; (8004484 <acc_calibration_a121_calibrate+0x6a4>)
 8004422:	9500      	str	r5, [sp, #0]
 8004424:	2308      	movs	r3, #8
 8004426:	ee18 0a10 	vmov	r0, s16
 800442a:	f7ff fa35 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 800442e:	2303      	movs	r3, #3
 8004430:	4a13      	ldr	r2, [pc, #76]	; (8004480 <acc_calibration_a121_calibrate+0x6a0>)
 8004432:	4914      	ldr	r1, [pc, #80]	; (8004484 <acc_calibration_a121_calibrate+0x6a4>)
 8004434:	9300      	str	r3, [sp, #0]
 8004436:	ee18 0a10 	vmov	r0, s16
 800443a:	2309      	movs	r3, #9
 800443c:	f7ff fa2c 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004440:	2306      	movs	r3, #6
 8004442:	4a0f      	ldr	r2, [pc, #60]	; (8004480 <acc_calibration_a121_calibrate+0x6a0>)
 8004444:	490f      	ldr	r1, [pc, #60]	; (8004484 <acc_calibration_a121_calibrate+0x6a4>)
 8004446:	9300      	str	r3, [sp, #0]
 8004448:	ee18 0a10 	vmov	r0, s16
 800444c:	230a      	movs	r3, #10
 800444e:	f7ff fa23 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004452:	ee18 0a10 	vmov	r0, s16
 8004456:	f44f 7170 	mov.w	r1, #960	; 0x3c0
 800445a:	f7fc febf 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 800445e:	2407      	movs	r4, #7
 8004460:	2800      	cmp	r0, #0
 8004462:	f47f aef7 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004466:	e4dd      	b.n	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004468:	0800b200 	.word	0x0800b200
 800446c:	0800b254 	.word	0x0800b254
 8004470:	0800b260 	.word	0x0800b260
 8004474:	0800b61c 	.word	0x0800b61c
 8004478:	0800b628 	.word	0x0800b628
 800447c:	0800b630 	.word	0x0800b630
 8004480:	08008ad0 	.word	0x08008ad0
 8004484:	08008ee0 	.word	0x08008ee0
 8004488:	200000ac 	.word	0x200000ac
 800448c:	0800b304 	.word	0x0800b304
 8004490:	0800b348 	.word	0x0800b348
 8004494:	20000008 	.word	0x20000008
 8004498:	0800b360 	.word	0x0800b360
 800449c:	08008c10 	.word	0x08008c10
 80044a0:	ffff8000 	.word	0xffff8000
 80044a4:	f7fe fe6c 	bl	8003180 <acc_a121_cal_session_ack_program>
 80044a8:	2800      	cmp	r0, #0
 80044aa:	f43f acbb 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80044ae:	4649      	mov	r1, r9
 80044b0:	aa0b      	add	r2, sp, #44	; 0x2c
 80044b2:	4620      	mov	r0, r4
 80044b4:	f7ff f8a8 	bl	8003608 <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 80044b8:	ab0b      	add	r3, sp, #44	; 0x2c
 80044ba:	461d      	mov	r5, r3
 80044bc:	4886      	ldr	r0, [pc, #536]	; (80046d8 <acc_calibration_a121_calibrate+0x8f8>)
 80044be:	9307      	str	r3, [sp, #28]
 80044c0:	f7fc fa3c 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80044c4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80044c6:	f8df 9228 	ldr.w	r9, [pc, #552]	; 80046f0 <acc_calibration_a121_calibrate+0x910>
 80044ca:	f8df 8228 	ldr.w	r8, [pc, #552]	; 80046f4 <acc_calibration_a121_calibrate+0x914>
 80044ce:	f44f 7140 	mov.w	r1, #768	; 0x300
 80044d2:	f7fc fa7b 	bl	80009cc <acc_diagnostic_log_data_i16>
 80044d6:	682a      	ldr	r2, [r5, #0]
 80044d8:	9505      	str	r5, [sp, #20]
 80044da:	4613      	mov	r3, r2
 80044dc:	f502 62c0 	add.w	r2, r2, #1536	; 0x600
 80044e0:	9206      	str	r2, [sp, #24]
 80044e2:	2200      	movs	r2, #0
 80044e4:	9204      	str	r2, [sp, #16]
 80044e6:	ee07 4a90 	vmov	s15, r4
 80044ea:	aa44      	add	r2, sp, #272	; 0x110
 80044ec:	9203      	str	r2, [sp, #12]
 80044ee:	ae2c      	add	r6, sp, #176	; 0xb0
 80044f0:	af43      	add	r7, sp, #268	; 0x10c
 80044f2:	469a      	mov	sl, r3
 80044f4:	ac14      	add	r4, sp, #80	; 0x50
 80044f6:	4655      	mov	r5, sl
 80044f8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80044fc:	f935 0b04 	ldrsh.w	r0, [r5], #4
 8004500:	f7fd f8c2 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 8004504:	f844 0b04 	str.w	r0, [r4], #4
 8004508:	42a6      	cmp	r6, r4
 800450a:	d1f5      	bne.n	80044f8 <acc_calibration_a121_calibrate+0x718>
 800450c:	ac2b      	add	r4, sp, #172	; 0xac
 800450e:	46a3      	mov	fp, r4
 8004510:	4655      	mov	r5, sl
 8004512:	f9b5 1062 	ldrsh.w	r1, [r5, #98]	; 0x62
 8004516:	f9b5 0060 	ldrsh.w	r0, [r5, #96]	; 0x60
 800451a:	f7fd f8b5 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 800451e:	f84b 0f04 	str.w	r0, [fp, #4]!
 8004522:	455f      	cmp	r7, fp
 8004524:	f105 0504 	add.w	r5, r5, #4
 8004528:	d1f3      	bne.n	8004512 <acc_calibration_a121_calibrate+0x732>
 800452a:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 800452e:	ad13      	add	r5, sp, #76	; 0x4c
 8004530:	1898      	adds	r0, r3, r2
 8004532:	2100      	movs	r1, #0
 8004534:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8004538:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800453c:	1a9b      	subs	r3, r3, r2
 800453e:	454b      	cmp	r3, r9
 8004540:	f340 8462 	ble.w	8004e08 <acc_calibration_a121_calibrate+0x1028>
 8004544:	f5a3 23c9 	sub.w	r3, r3, #411648	; 0x64800
 8004548:	3b7e      	subs	r3, #126	; 0x7e
 800454a:	454b      	cmp	r3, r9
 800454c:	dcfa      	bgt.n	8004544 <acc_calibration_a121_calibrate+0x764>
 800454e:	2b00      	cmp	r3, #0
 8004550:	bfb8      	it	lt
 8004552:	425b      	neglt	r3, r3
 8004554:	4299      	cmp	r1, r3
 8004556:	bfb8      	it	lt
 8004558:	4619      	movlt	r1, r3
 800455a:	42a7      	cmp	r7, r4
 800455c:	f840 3b04 	str.w	r3, [r0], #4
 8004560:	d1e8      	bne.n	8004534 <acc_calibration_a121_calibrate+0x754>
 8004562:	9b05      	ldr	r3, [sp, #20]
 8004564:	1049      	asrs	r1, r1, #1
 8004566:	f843 1f04 	str.w	r1, [r3, #4]!
 800456a:	9305      	str	r3, [sp, #20]
 800456c:	9b04      	ldr	r3, [sp, #16]
 800456e:	3360      	adds	r3, #96	; 0x60
 8004570:	9304      	str	r3, [sp, #16]
 8004572:	9b06      	ldr	r3, [sp, #24]
 8004574:	f10a 0ac0 	add.w	sl, sl, #192	; 0xc0
 8004578:	4553      	cmp	r3, sl
 800457a:	d1bb      	bne.n	80044f4 <acc_calibration_a121_calibrate+0x714>
 800457c:	2000      	movs	r0, #0
 800457e:	ee17 4a90 	vmov	r4, s15
 8004582:	9d07      	ldr	r5, [sp, #28]
 8004584:	4601      	mov	r1, r0
 8004586:	4603      	mov	r3, r0
 8004588:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800458c:	428a      	cmp	r2, r1
 800458e:	bfc8      	it	gt
 8004590:	4618      	movgt	r0, r3
 8004592:	f103 0301 	add.w	r3, r3, #1
 8004596:	bfc8      	it	gt
 8004598:	4611      	movgt	r1, r2
 800459a:	2b08      	cmp	r3, #8
 800459c:	d1f4      	bne.n	8004588 <acc_calibration_a121_calibrate+0x7a8>
 800459e:	ab0c      	add	r3, sp, #48	; 0x30
 80045a0:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 80045a4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 80045a8:	9b03      	ldr	r3, [sp, #12]
 80045aa:	f10d 02af 	add.w	r2, sp, #175	; 0xaf
 80045ae:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 80045b2:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
 80045b6:	f851 3b04 	ldr.w	r3, [r1], #4
 80045ba:	42ab      	cmp	r3, r5
 80045bc:	bfac      	ite	ge
 80045be:	2300      	movge	r3, #0
 80045c0:	2301      	movlt	r3, #1
 80045c2:	f802 3f01 	strb.w	r3, [r2, #1]!
 80045c6:	4290      	cmp	r0, r2
 80045c8:	7613      	strb	r3, [r2, #24]
 80045ca:	d1f4      	bne.n	80045b6 <acc_calibration_a121_calibrate+0x7d6>
 80045cc:	2000      	movs	r0, #0
 80045ce:	4605      	mov	r5, r0
 80045d0:	2301      	movs	r3, #1
 80045d2:	2d00      	cmp	r5, #0
 80045d4:	f000 8432 	beq.w	8004e3c <acc_calibration_a121_calibrate+0x105c>
 80045d8:	5cf2      	ldrb	r2, [r6, r3]
 80045da:	2a00      	cmp	r2, #0
 80045dc:	f000 8426 	beq.w	8004e2c <acc_calibration_a121_calibrate+0x104c>
 80045e0:	3001      	adds	r0, #1
 80045e2:	3301      	adds	r3, #1
 80045e4:	2b30      	cmp	r3, #48	; 0x30
 80045e6:	d1f4      	bne.n	80045d2 <acc_calibration_a121_calibrate+0x7f2>
 80045e8:	f1a0 030c 	sub.w	r3, r0, #12
 80045ec:	2b08      	cmp	r3, #8
 80045ee:	f63f ac19 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80045f2:	eb05 0550 	add.w	r5, r5, r0, lsr #1
 80045f6:	2d17      	cmp	r5, #23
 80045f8:	d902      	bls.n	8004600 <acc_calibration_a121_calibrate+0x820>
 80045fa:	3d18      	subs	r5, #24
 80045fc:	2d17      	cmp	r5, #23
 80045fe:	d8fc      	bhi.n	80045fa <acc_calibration_a121_calibrate+0x81a>
 8004600:	4629      	mov	r1, r5
 8004602:	4836      	ldr	r0, [pc, #216]	; (80046dc <acc_calibration_a121_calibrate+0x8fc>)
 8004604:	f7fc f9f2 	bl	80009ec <acc_diagnostic_log_scalar>
 8004608:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800460c:	4834      	ldr	r0, [pc, #208]	; (80046e0 <acc_calibration_a121_calibrate+0x900>)
 800460e:	811d      	strh	r5, [r3, #8]
 8004610:	f7fc f9f4 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004614:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004618:	891b      	ldrh	r3, [r3, #8]
 800461a:	009b      	lsls	r3, r3, #2
 800461c:	b29b      	uxth	r3, r3
 800461e:	f103 0530 	add.w	r5, r3, #48	; 0x30
 8004622:	b2ad      	uxth	r5, r5
 8004624:	2d5f      	cmp	r5, #95	; 0x5f
 8004626:	f240 857a 	bls.w	800511e <acc_calibration_a121_calibrate+0x133e>
 800462a:	4a2e      	ldr	r2, [pc, #184]	; (80046e4 <acc_calibration_a121_calibrate+0x904>)
 800462c:	fba2 1205 	umull	r1, r2, r2, r5
 8004630:	0992      	lsrs	r2, r2, #6
 8004632:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8004636:	eba5 1242 	sub.w	r2, r5, r2, lsl #5
 800463a:	b292      	uxth	r2, r2
 800463c:	2600      	movs	r6, #0
 800463e:	461d      	mov	r5, r3
 8004640:	4637      	mov	r7, r6
 8004642:	4613      	mov	r3, r2
 8004644:	f04f 0801 	mov.w	r8, #1
 8004648:	4a27      	ldr	r2, [pc, #156]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 800464a:	4928      	ldr	r1, [pc, #160]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 800464c:	9300      	str	r3, [sp, #0]
 800464e:	4620      	mov	r0, r4
 8004650:	2321      	movs	r3, #33	; 0x21
 8004652:	f7ff f921 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004656:	4a24      	ldr	r2, [pc, #144]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 8004658:	4924      	ldr	r1, [pc, #144]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 800465a:	9500      	str	r5, [sp, #0]
 800465c:	2322      	movs	r3, #34	; 0x22
 800465e:	4620      	mov	r0, r4
 8004660:	f7ff f91a 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004664:	2503      	movs	r5, #3
 8004666:	4a20      	ldr	r2, [pc, #128]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 8004668:	4920      	ldr	r1, [pc, #128]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 800466a:	f8cd 8000 	str.w	r8, [sp]
 800466e:	2301      	movs	r3, #1
 8004670:	4620      	mov	r0, r4
 8004672:	f7ff f911 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004676:	4a1c      	ldr	r2, [pc, #112]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 8004678:	491c      	ldr	r1, [pc, #112]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 800467a:	9500      	str	r5, [sp, #0]
 800467c:	2302      	movs	r3, #2
 800467e:	4620      	mov	r0, r4
 8004680:	f7ff f90a 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004684:	4a18      	ldr	r2, [pc, #96]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 8004686:	4919      	ldr	r1, [pc, #100]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 8004688:	9700      	str	r7, [sp, #0]
 800468a:	462b      	mov	r3, r5
 800468c:	4620      	mov	r0, r4
 800468e:	f7ff f903 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004692:	4a15      	ldr	r2, [pc, #84]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 8004694:	4915      	ldr	r1, [pc, #84]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 8004696:	9600      	str	r6, [sp, #0]
 8004698:	2304      	movs	r3, #4
 800469a:	4620      	mov	r0, r4
 800469c:	f7ff f8fc 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 80046a0:	4a11      	ldr	r2, [pc, #68]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 80046a2:	4912      	ldr	r1, [pc, #72]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 80046a4:	f8cd 8000 	str.w	r8, [sp]
 80046a8:	2305      	movs	r3, #5
 80046aa:	4620      	mov	r0, r4
 80046ac:	f7ff f8f4 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 80046b0:	2300      	movs	r3, #0
 80046b2:	4a0d      	ldr	r2, [pc, #52]	; (80046e8 <acc_calibration_a121_calibrate+0x908>)
 80046b4:	490d      	ldr	r1, [pc, #52]	; (80046ec <acc_calibration_a121_calibrate+0x90c>)
 80046b6:	9300      	str	r3, [sp, #0]
 80046b8:	4620      	mov	r0, r4
 80046ba:	2306      	movs	r3, #6
 80046bc:	f7ff f8ec 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 80046c0:	4620      	mov	r0, r4
 80046c2:	f240 31d5 	movw	r1, #981	; 0x3d5
 80046c6:	f7fc fd89 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 80046ca:	2408      	movs	r4, #8
 80046cc:	2800      	cmp	r0, #0
 80046ce:	f47f adc1 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 80046d2:	f7ff bba7 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80046d6:	bf00      	nop
 80046d8:	0800b378 	.word	0x0800b378
 80046dc:	0800b39c 	.word	0x0800b39c
 80046e0:	0800b3a8 	.word	0x0800b3a8
 80046e4:	aaaaaaab 	.word	0xaaaaaaab
 80046e8:	08008ad0 	.word	0x08008ad0
 80046ec:	08008ee0 	.word	0x08008ee0
 80046f0:	0003243f 	.word	0x0003243f
 80046f4:	fffcdbc1 	.word	0xfffcdbc1
 80046f8:	f7fe fd42 	bl	8003180 <acc_a121_cal_session_ack_program>
 80046fc:	9005      	str	r0, [sp, #20]
 80046fe:	2800      	cmp	r0, #0
 8004700:	f43f ab90 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004704:	4bd1      	ldr	r3, [pc, #836]	; (8004a4c <acc_calibration_a121_calibrate+0xc6c>)
 8004706:	f8dd 1740 	ldr.w	r1, [sp, #1856]	; 0x740
 800470a:	4ad1      	ldr	r2, [pc, #836]	; (8004a50 <acc_calibration_a121_calibrate+0xc70>)
 800470c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800470e:	f8b1 507c 	ldrh.w	r5, [r1, #124]	; 0x7c
 8004712:	fba2 2303 	umull	r2, r3, r2, r3
 8004716:	099b      	lsrs	r3, r3, #6
 8004718:	4649      	mov	r1, r9
 800471a:	aa0c      	add	r2, sp, #48	; 0x30
 800471c:	4620      	mov	r0, r4
 800471e:	fb05 f503 	mul.w	r5, r5, r3
 8004722:	f7fe ff71 	bl	8003608 <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 8004726:	48cb      	ldr	r0, [pc, #812]	; (8004a54 <acc_calibration_a121_calibrate+0xc74>)
 8004728:	f7fc f908 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 800472c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800472e:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004732:	f7fc f94b 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004736:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004738:	ab44      	add	r3, sp, #272	; 0x110
 800473a:	9303      	str	r3, [sp, #12]
 800473c:	3602      	adds	r6, #2
 800473e:	f50d 7886 	add.w	r8, sp, #268	; 0x10c
 8004742:	f20d 770c 	addw	r7, sp, #1804	; 0x70c
 8004746:	f9b6 1000 	ldrsh.w	r1, [r6]
 800474a:	f936 0c02 	ldrsh.w	r0, [r6, #-2]
 800474e:	f7fc ff9b 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 8004752:	f848 0f04 	str.w	r0, [r8, #4]!
 8004756:	4547      	cmp	r7, r8
 8004758:	f106 0604 	add.w	r6, r6, #4
 800475c:	d1f3      	bne.n	8004746 <acc_calibration_a121_calibrate+0x966>
 800475e:	2300      	movs	r3, #0
 8004760:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8004764:	469a      	mov	sl, r3
 8004766:	e9cd 332c 	strd	r3, r3, [sp, #176]	; 0xb0
 800476a:	e9cd 332e 	strd	r3, r3, [sp, #184]	; 0xb8
 800476e:	e9cd 3330 	strd	r3, r3, [sp, #192]	; 0xc0
 8004772:	e9cd 3332 	strd	r3, r3, [sp, #200]	; 0xc8
 8004776:	9304      	str	r3, [sp, #16]
 8004778:	00d3      	lsls	r3, r2, #3
 800477a:	9a03      	ldr	r2, [sp, #12]
 800477c:	4fb6      	ldr	r7, [pc, #728]	; (8004a58 <acc_calibration_a121_calibrate+0xc78>)
 800477e:	ae2c      	add	r6, sp, #176	; 0xb0
 8004780:	f102 095c 	add.w	r9, r2, #92	; 0x5c
 8004784:	46b3      	mov	fp, r6
 8004786:	9606      	str	r6, [sp, #24]
 8004788:	4656      	mov	r6, sl
 800478a:	f8dd a014 	ldr.w	sl, [sp, #20]
 800478e:	ee07 4a90 	vmov	s15, r4
 8004792:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004796:	464c      	mov	r4, r9
 8004798:	4699      	mov	r9, r3
 800479a:	f1a4 005c 	sub.w	r0, r4, #92	; 0x5c
 800479e:	f7fc f8d9 	bl	8000954 <acc_cal_algorithms_phase_unwrap.constprop.0>
 80047a2:	f1a4 0c60 	sub.w	ip, r4, #96	; 0x60
 80047a6:	2000      	movs	r0, #0
 80047a8:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 80047ac:	f8dc 2060 	ldr.w	r2, [ip, #96]	; 0x60
 80047b0:	4564      	cmp	r4, ip
 80047b2:	eba3 0302 	sub.w	r3, r3, r2
 80047b6:	4418      	add	r0, r3
 80047b8:	d1f6      	bne.n	80047a8 <acc_calibration_a121_calibrate+0x9c8>
 80047ba:	2800      	cmp	r0, #0
 80047bc:	f2c0 8358 	blt.w	8004e70 <acc_calibration_a121_calibrate+0x1090>
 80047c0:	0980      	lsrs	r0, r0, #6
 80047c2:	f640 5394 	movw	r3, #3476	; 0xd94
 80047c6:	fb03 f000 	mul.w	r0, r3, r0
 80047ca:	0d40      	lsrs	r0, r0, #21
 80047cc:	fb05 f000 	mul.w	r0, r5, r0
 80047d0:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80047d4:	f8cb 0000 	str.w	r0, [fp]
 80047d8:	b126      	cbz	r6, 80047e4 <acc_calibration_a121_calibrate+0xa04>
 80047da:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 80047de:	4298      	cmp	r0, r3
 80047e0:	f080 851b 	bcs.w	800521a <acc_calibration_a121_calibrate+0x143a>
 80047e4:	f8db 3000 	ldr.w	r3, [fp]
 80047e8:	f1a3 7366 	sub.w	r3, r3, #60293120	; 0x3980000
 80047ec:	f5a3 334a 	sub.w	r3, r3, #206848	; 0x32800
 80047f0:	3b20      	subs	r3, #32
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	bfb8      	it	lt
 80047f6:	425b      	neglt	r3, r3
 80047f8:	42bb      	cmp	r3, r7
 80047fa:	d203      	bcs.n	8004804 <acc_calibration_a121_calibrate+0xa24>
 80047fc:	461f      	mov	r7, r3
 80047fe:	46b0      	mov	r8, r6
 8004800:	f8cd a010 	str.w	sl, [sp, #16]
 8004804:	1c72      	adds	r2, r6, #1
 8004806:	b296      	uxth	r6, r2
 8004808:	2e08      	cmp	r6, #8
 800480a:	f10b 0b04 	add.w	fp, fp, #4
 800480e:	f104 04c0 	add.w	r4, r4, #192	; 0xc0
 8004812:	d1c2      	bne.n	800479a <acc_calibration_a121_calibrate+0x9ba>
 8004814:	9a04      	ldr	r2, [sp, #16]
 8004816:	9e06      	ldr	r6, [sp, #24]
 8004818:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800481c:	ee17 4a90 	vmov	r4, s15
 8004820:	2a00      	cmp	r2, #0
 8004822:	bf08      	it	eq
 8004824:	4698      	moveq	r8, r3
 8004826:	4d8d      	ldr	r5, [pc, #564]	; (8004a5c <acc_calibration_a121_calibrate+0xc7c>)
 8004828:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800482c:	f105 0a18 	add.w	sl, r5, #24
 8004830:	2730      	movs	r7, #48	; 0x30
 8004832:	f885 7024 	strb.w	r7, [r5, #36]	; 0x24
 8004836:	3701      	adds	r7, #1
 8004838:	f859 1f04 	ldr.w	r1, [r9, #4]!
 800483c:	4650      	mov	r0, sl
 800483e:	b2ff      	uxtb	r7, r7
 8004840:	f7fc f8d4 	bl	80009ec <acc_diagnostic_log_scalar>
 8004844:	2f38      	cmp	r7, #56	; 0x38
 8004846:	d1f4      	bne.n	8004832 <acc_calibration_a121_calibrate+0xa52>
 8004848:	9b04      	ldr	r3, [sp, #16]
 800484a:	2b00      	cmp	r3, #0
 800484c:	f43f aaea 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004850:	4641      	mov	r1, r8
 8004852:	4883      	ldr	r0, [pc, #524]	; (8004a60 <acc_calibration_a121_calibrate+0xc80>)
 8004854:	f7fc f8ca 	bl	80009ec <acc_diagnostic_log_scalar>
 8004858:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 800485c:	4881      	ldr	r0, [pc, #516]	; (8004a64 <acc_calibration_a121_calibrate+0xc84>)
 800485e:	f8a3 8022 	strh.w	r8, [r3, #34]	; 0x22
 8004862:	f7fc f8cb 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004866:	4980      	ldr	r1, [pc, #512]	; (8004a68 <acc_calibration_a121_calibrate+0xc88>)
 8004868:	4a80      	ldr	r2, [pc, #512]	; (8004a6c <acc_calibration_a121_calibrate+0xc8c>)
 800486a:	f8cd 8000 	str.w	r8, [sp]
 800486e:	230c      	movs	r3, #12
 8004870:	4620      	mov	r0, r4
 8004872:	f7ff f811 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004876:	4620      	mov	r0, r4
 8004878:	f240 31fd 	movw	r1, #1021	; 0x3fd
 800487c:	f7fc fcae 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004880:	2800      	cmp	r0, #0
 8004882:	f43f aacf 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004886:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004888:	ed9f 6a79 	vldr	s12, [pc, #484]	; 8004a70 <acc_calibration_a121_calibrate+0xc90>
 800488c:	f102 00c0 	add.w	r0, r2, #192	; 0xc0
 8004890:	4607      	mov	r7, r0
 8004892:	f502 6ed8 	add.w	lr, r2, #1728	; 0x6c0
 8004896:	46b4      	mov	ip, r6
 8004898:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800489c:	f1a7 03c0 	sub.w	r3, r7, #192	; 0xc0
 80048a0:	2500      	movs	r5, #0
 80048a2:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 80048a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80048aa:	fb04 f404 	mul.w	r4, r4, r4
 80048ae:	3304      	adds	r3, #4
 80048b0:	fb01 4101 	mla	r1, r1, r1, r4
 80048b4:	429f      	cmp	r7, r3
 80048b6:	440d      	add	r5, r1
 80048b8:	d1f3      	bne.n	80048a2 <acc_calibration_a121_calibrate+0xac2>
 80048ba:	ee07 5a90 	vmov	s15, r5
 80048be:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80048c2:	37c0      	adds	r7, #192	; 0xc0
 80048c4:	eec7 7a06 	vdiv.f32	s15, s14, s12
 80048c8:	45be      	cmp	lr, r7
 80048ca:	eeb1 7ae7 	vsqrt.f32	s14, s15
 80048ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80048d2:	ecec 7a01 	vstmia	ip!, {s15}
 80048d6:	d1e1      	bne.n	800489c <acc_calibration_a121_calibrate+0xabc>
 80048d8:	9b03      	ldr	r3, [sp, #12]
 80048da:	f502 61c0 	add.w	r1, r2, #1536	; 0x600
 80048de:	e000      	b.n	80048e2 <acc_calibration_a121_calibrate+0xb02>
 80048e0:	30c0      	adds	r0, #192	; 0xc0
 80048e2:	f9b2 4000 	ldrsh.w	r4, [r2]
 80048e6:	ecf6 5a01 	vldmia	r6!, {s11}
 80048ea:	ee06 4a10 	vmov	s12, r4
 80048ee:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80048f2:	ee06 4a90 	vmov	s13, r4
 80048f6:	f9b2 4060 	ldrsh.w	r4, [r2, #96]	; 0x60
 80048fa:	f9b2 2062 	ldrsh.w	r2, [r2, #98]	; 0x62
 80048fe:	ee07 4a10 	vmov	s14, r4
 8004902:	ee07 2a90 	vmov	s15, r2
 8004906:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800490a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800490e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004912:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004916:	ee26 6a25 	vmul.f32	s12, s12, s11
 800491a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 800491e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8004922:	ee27 7a25 	vmul.f32	s14, s14, s11
 8004926:	ee26 5a06 	vmul.f32	s10, s12, s12
 800492a:	ee67 5a07 	vmul.f32	s11, s14, s14
 800492e:	ee26 6a26 	vmul.f32	s12, s12, s13
 8004932:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004936:	ee66 6aa6 	vmul.f32	s13, s13, s13
 800493a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800493e:	4281      	cmp	r1, r0
 8004940:	ed83 5a00 	vstr	s10, [r3]
 8004944:	ed83 6a01 	vstr	s12, [r3, #4]
 8004948:	edc3 6a02 	vstr	s13, [r3, #8]
 800494c:	edc3 5a18 	vstr	s11, [r3, #96]	; 0x60
 8004950:	ed83 7a19 	vstr	s14, [r3, #100]	; 0x64
 8004954:	edc3 7a1a 	vstr	s15, [r3, #104]	; 0x68
 8004958:	4602      	mov	r2, r0
 800495a:	f103 030c 	add.w	r3, r3, #12
 800495e:	d1bf      	bne.n	80048e0 <acc_calibration_a121_calibrate+0xb00>
 8004960:	9803      	ldr	r0, [sp, #12]
 8004962:	a914      	add	r1, sp, #80	; 0x50
 8004964:	2210      	movs	r2, #16
 8004966:	f7fc fdcd 	bl	8001504 <least_sqr_fit>
 800496a:	2800      	cmp	r0, #0
 800496c:	f43f aa5a 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004970:	ed9d 6a14 	vldr	s12, [sp, #80]	; 0x50
 8004974:	ed9d 5a15 	vldr	s10, [sp, #84]	; 0x54
 8004978:	ed9d 7a16 	vldr	s14, [sp, #88]	; 0x58
 800497c:	eddf 4a3d 	vldr	s9, [pc, #244]	; 8004a74 <acc_calibration_a121_calibrate+0xc94>
 8004980:	ed9f 4a3d 	vldr	s8, [pc, #244]	; 8004a78 <acc_calibration_a121_calibrate+0xc98>
 8004984:	eef1 6ac6 	vsqrt.f32	s13, s12
 8004988:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
 800498c:	ee26 6a27 	vmul.f32	s12, s12, s15
 8004990:	ee65 7a05 	vmul.f32	s15, s10, s10
 8004994:	ee26 6a07 	vmul.f32	s12, s12, s14
 8004998:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 800499c:	ee36 6a67 	vsub.f32	s12, s12, s15
 80049a0:	eec5 7aa6 	vdiv.f32	s15, s11, s13
 80049a4:	eeb1 7ac6 	vsqrt.f32	s14, s12
 80049a8:	eeb6 6a08 	vmov.f32	s12, #104	; 0x3f400000  0.750
 80049ac:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80049b0:	ee27 7a87 	vmul.f32	s14, s15, s14
 80049b4:	ee66 6aa4 	vmul.f32	s13, s13, s9
 80049b8:	ee67 7a85 	vmul.f32	s15, s15, s10
 80049bc:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 80049c0:	ee37 7a46 	vsub.f32	s14, s14, s12
 80049c4:	ee77 7a85 	vadd.f32	s15, s15, s10
 80049c8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80049cc:	eeb3 6a0f 	vmov.f32	s12, #63	; 0x41f80000  31.0
 80049d0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80049d4:	ee27 7a24 	vmul.f32	s14, s14, s9
 80049d8:	eef4 6ac6 	vcmpe.f32	s13, s12
 80049dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049e0:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80049e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80049e8:	f300 8240 	bgt.w	8004e6c <acc_calibration_a121_calibrate+0x108c>
 80049ec:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80049f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049f4:	bf48      	it	mi
 80049f6:	2100      	movmi	r1, #0
 80049f8:	f140 842d 	bpl.w	8005256 <acc_calibration_a121_calibrate+0x1476>
 80049fc:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8004a7c <acc_calibration_a121_calibrate+0xc9c>
 8004a00:	eef4 7ae6 	vcmpe.f32	s15, s13
 8004a04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a08:	f300 822e 	bgt.w	8004e68 <acc_calibration_a121_calibrate+0x1088>
 8004a0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a14:	bf48      	it	mi
 8004a16:	2300      	movmi	r3, #0
 8004a18:	f140 8414 	bpl.w	8005244 <acc_calibration_a121_calibrate+0x1464>
 8004a1c:	eef3 7a0f 	vmov.f32	s15, #63	; 0x41f80000  31.0
 8004a20:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a28:	f300 821b 	bgt.w	8004e62 <acc_calibration_a121_calibrate+0x1082>
 8004a2c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a34:	bf48      	it	mi
 8004a36:	2200      	movmi	r2, #0
 8004a38:	f140 83fb 	bpl.w	8005232 <acc_calibration_a121_calibrate+0x1452>
 8004a3c:	430b      	orrs	r3, r1
 8004a3e:	4313      	orrs	r3, r2
 8004a40:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004a44:	2409      	movs	r4, #9
 8004a46:	f8a2 3056 	strh.w	r3, [r2, #86]	; 0x56
 8004a4a:	e1ca      	b.n	8004de2 <acc_calibration_a121_calibrate+0x1002>
 8004a4c:	200000ac 	.word	0x200000ac
 8004a50:	10624dd3 	.word	0x10624dd3
 8004a54:	0800b3c4 	.word	0x0800b3c4
 8004a58:	000f4240 	.word	0x000f4240
 8004a5c:	20000000 	.word	0x20000000
 8004a60:	0800b3e8 	.word	0x0800b3e8
 8004a64:	0800b3f8 	.word	0x0800b3f8
 8004a68:	08008ee0 	.word	0x08008ee0
 8004a6c:	08008ad0 	.word	0x08008ad0
 8004a70:	42400000 	.word	0x42400000
 8004a74:	42800000 	.word	0x42800000
 8004a78:	42000000 	.word	0x42000000
 8004a7c:	427c0000 	.word	0x427c0000
 8004a80:	f7fe fb7e 	bl	8003180 <acc_a121_cal_session_ack_program>
 8004a84:	2800      	cmp	r0, #0
 8004a86:	f43f a9cd 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004a8a:	4649      	mov	r1, r9
 8004a8c:	2210      	movs	r2, #16
 8004a8e:	4620      	mov	r0, r4
 8004a90:	f7fe fd6e 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8004a94:	4680      	mov	r8, r0
 8004a96:	4872      	ldr	r0, [pc, #456]	; (8004c60 <acc_calibration_a121_calibrate+0xe80>)
 8004a98:	f7fb ff50 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004a9c:	4640      	mov	r0, r8
 8004a9e:	2110      	movs	r1, #16
 8004aa0:	f7fb ff94 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004aa4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004aa8:	f8b3 6056 	ldrh.w	r6, [r3, #86]	; 0x56
 8004aac:	2100      	movs	r1, #0
 8004aae:	f006 0c1f 	and.w	ip, r6, #31
 8004ab2:	f3c6 1044 	ubfx	r0, r6, #5, #5
 8004ab6:	0ab6      	lsrs	r6, r6, #10
 8004ab8:	f108 0e02 	add.w	lr, r8, #2
 8004abc:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
 8004ac0:	3030      	adds	r0, #48	; 0x30
 8004ac2:	3e20      	subs	r6, #32
 8004ac4:	9103      	str	r1, [sp, #12]
 8004ac6:	468b      	mov	fp, r1
 8004ac8:	468a      	mov	sl, r1
 8004aca:	460f      	mov	r7, r1
 8004acc:	e008      	b.n	8004ae0 <acc_calibration_a121_calibrate+0xd00>
 8004ace:	455b      	cmp	r3, fp
 8004ad0:	4657      	mov	r7, sl
 8004ad2:	f200 81e7 	bhi.w	8004ea4 <acc_calibration_a121_calibrate+0x10c4>
 8004ad6:	469a      	mov	sl, r3
 8004ad8:	3101      	adds	r1, #1
 8004ada:	2908      	cmp	r1, #8
 8004adc:	f000 81e6 	beq.w	8004eac <acc_calibration_a121_calibrate+0x10cc>
 8004ae0:	f938 2021 	ldrsh.w	r2, [r8, r1, lsl #2]
 8004ae4:	f93e 3021 	ldrsh.w	r3, [lr, r1, lsl #2]
 8004ae8:	fb0c f202 	mul.w	r2, ip, r2
 8004aec:	fb03 f906 	mul.w	r9, r3, r6
 8004af0:	2a00      	cmp	r2, #0
 8004af2:	fb03 f300 	mul.w	r3, r3, r0
 8004af6:	bfb8      	it	lt
 8004af8:	323f      	addlt	r2, #63	; 0x3f
 8004afa:	f1b9 0f00 	cmp.w	r9, #0
 8004afe:	bfb8      	it	lt
 8004b00:	f109 091f 	addlt.w	r9, r9, #31
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	bfb8      	it	lt
 8004b08:	333f      	addlt	r3, #63	; 0x3f
 8004b0a:	1192      	asrs	r2, r2, #6
 8004b0c:	eb02 1269 	add.w	r2, r2, r9, asr #5
 8004b10:	f343 138f 	sbfx	r3, r3, #6, #16
 8004b14:	b212      	sxth	r2, r2
 8004b16:	fb03 f303 	mul.w	r3, r3, r3
 8004b1a:	fb02 3302 	mla	r3, r2, r2, r3
 8004b1e:	42bb      	cmp	r3, r7
 8004b20:	b28d      	uxth	r5, r1
 8004b22:	d9d9      	bls.n	8004ad8 <acc_calibration_a121_calibrate+0xcf8>
 8004b24:	4553      	cmp	r3, sl
 8004b26:	d8d2      	bhi.n	8004ace <acc_calibration_a121_calibrate+0xcee>
 8004b28:	461f      	mov	r7, r3
 8004b2a:	e7d5      	b.n	8004ad8 <acc_calibration_a121_calibrate+0xcf8>
 8004b2c:	f7fe fb28 	bl	8003180 <acc_a121_cal_session_ack_program>
 8004b30:	2800      	cmp	r0, #0
 8004b32:	f43f a977 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004b36:	4649      	mov	r1, r9
 8004b38:	2260      	movs	r2, #96	; 0x60
 8004b3a:	4620      	mov	r0, r4
 8004b3c:	f7fe fd18 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8004b40:	4605      	mov	r5, r0
 8004b42:	4848      	ldr	r0, [pc, #288]	; (8004c64 <acc_calibration_a121_calibrate+0xe84>)
 8004b44:	f7fb fefa 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004b48:	4628      	mov	r0, r5
 8004b4a:	2160      	movs	r1, #96	; 0x60
 8004b4c:	f7fb ff3e 	bl	80009cc <acc_diagnostic_log_data_i16>
 8004b50:	ab44      	add	r3, sp, #272	; 0x110
 8004b52:	9303      	str	r3, [sp, #12]
 8004b54:	1caf      	adds	r7, r5, #2
 8004b56:	4699      	mov	r9, r3
 8004b58:	f04f 0800 	mov.w	r8, #0
 8004b5c:	f640 36b7 	movw	r6, #2999	; 0xbb7
 8004b60:	e007      	b.n	8004b72 <acc_calibration_a121_calibrate+0xd92>
 8004b62:	f7fc fd91 	bl	8001688 <acc_cal_algorithms_atan2_q16>
 8004b66:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
 8004b6a:	f849 0b04 	str.w	r0, [r9], #4
 8004b6e:	f000 82eb 	beq.w	8005148 <acc_calibration_a121_calibrate+0x1368>
 8004b72:	f937 1028 	ldrsh.w	r1, [r7, r8, lsl #2]
 8004b76:	f935 0028 	ldrsh.w	r0, [r5, r8, lsl #2]
 8004b7a:	fb01 f301 	mul.w	r3, r1, r1
 8004b7e:	fb00 3300 	mla	r3, r0, r0, r3
 8004b82:	42b3      	cmp	r3, r6
 8004b84:	f108 0801 	add.w	r8, r8, #1
 8004b88:	dceb      	bgt.n	8004b62 <acc_calibration_a121_calibrate+0xd82>
 8004b8a:	f7ff b94b 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004b8e:	f7fe faf7 	bl	8003180 <acc_a121_cal_session_ack_program>
 8004b92:	2800      	cmp	r0, #0
 8004b94:	f43f a946 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004b98:	aa0a      	add	r2, sp, #40	; 0x28
 8004b9a:	4649      	mov	r1, r9
 8004b9c:	4620      	mov	r0, r4
 8004b9e:	f7fe fd33 	bl	8003608 <acc_a121_cal_session_get_10_ps_wavelet_program_data>
 8004ba2:	4831      	ldr	r0, [pc, #196]	; (8004c68 <acc_calibration_a121_calibrate+0xe88>)
 8004ba4:	f7fb feca 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004ba8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004baa:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004bae:	f7fb ff15 	bl	80009dc <acc_diagnostic_log_data_u16>
 8004bb2:	ae0c      	add	r6, sp, #48	; 0x30
 8004bb4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8004bb6:	2500      	movs	r5, #0
 8004bb8:	e9cd 6500 	strd	r6, r5, [sp]
 8004bbc:	4638      	mov	r0, r7
 8004bbe:	ab0b      	add	r3, sp, #44	; 0x2c
 8004bc0:	aa44      	add	r2, sp, #272	; 0x110
 8004bc2:	f44f 7190 	mov.w	r1, #288	; 0x120
 8004bc6:	6035      	str	r5, [r6, #0]
 8004bc8:	950b      	str	r5, [sp, #44]	; 0x2c
 8004bca:	9514      	str	r5, [sp, #80]	; 0x50
 8004bcc:	952c      	str	r5, [sp, #176]	; 0xb0
 8004bce:	f7fb fdc5 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004bd2:	2800      	cmp	r0, #0
 8004bd4:	f43f a926 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004bd8:	ab2c      	add	r3, sp, #176	; 0xb0
 8004bda:	9300      	str	r3, [sp, #0]
 8004bdc:	9501      	str	r5, [sp, #4]
 8004bde:	ab14      	add	r3, sp, #80	; 0x50
 8004be0:	aa44      	add	r2, sp, #272	; 0x110
 8004be2:	f507 7010 	add.w	r0, r7, #576	; 0x240
 8004be6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004bea:	f7fb fdb7 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004bee:	2800      	cmp	r0, #0
 8004bf0:	f43f a918 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004bf4:	6836      	ldr	r6, [r6, #0]
 8004bf6:	9d2c      	ldr	r5, [sp, #176]	; 0xb0
 8004bf8:	4b1c      	ldr	r3, [pc, #112]	; (8004c6c <acc_calibration_a121_calibrate+0xe8c>)
 8004bfa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004bfc:	481c      	ldr	r0, [pc, #112]	; (8004c70 <acc_calibration_a121_calibrate+0xe90>)
 8004bfe:	1bad      	subs	r5, r5, r6
 8004c00:	f248 5155 	movw	r1, #34133	; 0x8555
 8004c04:	fb03 f305 	mul.w	r3, r3, r5
 8004c08:	fb01 f606 	mul.w	r6, r1, r6
 8004c0c:	fb01 f202 	mul.w	r2, r1, r2
 8004c10:	0c1b      	lsrs	r3, r3, #16
 8004c12:	fb01 f105 	mul.w	r1, r1, r5
 8004c16:	f8dd 5740 	ldr.w	r5, [sp, #1856]	; 0x740
 8004c1a:	0b52      	lsrs	r2, r2, #13
 8004c1c:	ebc3 3356 	rsb	r3, r3, r6, lsr #13
 8004c20:	e9c5 1217 	strd	r1, r2, [r5, #92]	; 0x5c
 8004c24:	65ab      	str	r3, [r5, #88]	; 0x58
 8004c26:	f7fb fee1 	bl	80009ec <acc_diagnostic_log_scalar>
 8004c2a:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c2e:	4811      	ldr	r0, [pc, #68]	; (8004c74 <acc_calibration_a121_calibrate+0xe94>)
 8004c30:	6d99      	ldr	r1, [r3, #88]	; 0x58
 8004c32:	f7fb fedb 	bl	80009ec <acc_diagnostic_log_scalar>
 8004c36:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004c3a:	480f      	ldr	r0, [pc, #60]	; (8004c78 <acc_calibration_a121_calibrate+0xe98>)
 8004c3c:	6e19      	ldr	r1, [r3, #96]	; 0x60
 8004c3e:	f7fb fed5 	bl	80009ec <acc_diagnostic_log_scalar>
 8004c42:	480e      	ldr	r0, [pc, #56]	; (8004c7c <acc_calibration_a121_calibrate+0xe9c>)
 8004c44:	f7fb feda 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004c48:	4620      	mov	r0, r4
 8004c4a:	f44f 6192 	mov.w	r1, #1168	; 0x490
 8004c4e:	f7fc fac5 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004c52:	240c      	movs	r4, #12
 8004c54:	2800      	cmp	r0, #0
 8004c56:	f47f aafd 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004c5a:	f7ff b8e3 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004c5e:	bf00      	nop
 8004c60:	0800b414 	.word	0x0800b414
 8004c64:	0800b438 	.word	0x0800b438
 8004c68:	0800b4c4 	.word	0x0800b4c4
 8004c6c:	00021554 	.word	0x00021554
 8004c70:	0800b4d8 	.word	0x0800b4d8
 8004c74:	0800b4ec 	.word	0x0800b4ec
 8004c78:	0800b500 	.word	0x0800b500
 8004c7c:	0800b510 	.word	0x0800b510
 8004c80:	f7fe fa7e 	bl	8003180 <acc_a121_cal_session_ack_program>
 8004c84:	2800      	cmp	r0, #0
 8004c86:	f43f a8cd 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004c8a:	4649      	mov	r1, r9
 8004c8c:	f44f 62d8 	mov.w	r2, #1728	; 0x6c0
 8004c90:	4620      	mov	r0, r4
 8004c92:	f7fe fc6d 	bl	8003570 <internal_buffer_processed_read.part.0.constprop.0>
 8004c96:	4604      	mov	r4, r0
 8004c98:	48c9      	ldr	r0, [pc, #804]	; (8004fc0 <acc_calibration_a121_calibrate+0x11e0>)
 8004c9a:	f7fb fe4f 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 8004c9e:	f04f 0900 	mov.w	r9, #0
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	f44f 61d8 	mov.w	r1, #1728	; 0x6c0
 8004ca8:	f10d 082c 	add.w	r8, sp, #44	; 0x2c
 8004cac:	f7fb fe96 	bl	80009dc <acc_diagnostic_log_data_u16>
 8004cb0:	e9cd 8900 	strd	r8, r9, [sp]
 8004cb4:	1ca0      	adds	r0, r4, #2
 8004cb6:	ab0a      	add	r3, sp, #40	; 0x28
 8004cb8:	aa44      	add	r2, sp, #272	; 0x110
 8004cba:	f240 213f 	movw	r1, #575	; 0x23f
 8004cbe:	f7fb fd4d 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004cc2:	2800      	cmp	r0, #0
 8004cc4:	f43f a8ae 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004cc8:	af14      	add	r7, sp, #80	; 0x50
 8004cca:	ae0c      	add	r6, sp, #48	; 0x30
 8004ccc:	e9cd 6700 	strd	r6, r7, [sp]
 8004cd0:	ab09      	add	r3, sp, #36	; 0x24
 8004cd2:	aa44      	add	r2, sp, #272	; 0x110
 8004cd4:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004cd8:	f504 6090 	add.w	r0, r4, #1152	; 0x480
 8004cdc:	f7fb fd3e 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004ce0:	2800      	cmp	r0, #0
 8004ce2:	f43f a89f 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004ce6:	ad2c      	add	r5, sp, #176	; 0xb0
 8004ce8:	f8cd 9000 	str.w	r9, [sp]
 8004cec:	464b      	mov	r3, r9
 8004cee:	aa44      	add	r2, sp, #272	; 0x110
 8004cf0:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 8004cf4:	9501      	str	r5, [sp, #4]
 8004cf6:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004cfa:	f7fb fd2f 	bl	800075c <acc_cal_algorithms_calc_pulse_params.constprop.0>
 8004cfe:	2800      	cmp	r0, #0
 8004d00:	f43f a890 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004d04:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	; 0x24
 8004d08:	f8d6 c000 	ldr.w	ip, [r6]
 8004d0c:	682b      	ldr	r3, [r5, #0]
 8004d0e:	f8d8 e000 	ldr.w	lr, [r8]
 8004d12:	683f      	ldr	r7, [r7, #0]
 8004d14:	4cab      	ldr	r4, [pc, #684]	; (8004fc4 <acc_calibration_a121_calibrate+0x11e4>)
 8004d16:	49ac      	ldr	r1, [pc, #688]	; (8004fc8 <acc_calibration_a121_calibrate+0x11e8>)
 8004d18:	4dac      	ldr	r5, [pc, #688]	; (8004fcc <acc_calibration_a121_calibrate+0x11ec>)
 8004d1a:	1a16      	subs	r6, r2, r0
 8004d1c:	ebac 020e 	sub.w	r2, ip, lr
 8004d20:	eba3 0c07 	sub.w	ip, r3, r7
 8004d24:	fb04 f40c 	mul.w	r4, r4, ip
 8004d28:	f248 5355 	movw	r3, #34133	; 0x8555
 8004d2c:	fb03 f707 	mul.w	r7, r3, r7
 8004d30:	fb01 f106 	mul.w	r1, r1, r6
 8004d34:	0c24      	lsrs	r4, r4, #16
 8004d36:	fb03 f000 	mul.w	r0, r3, r0
 8004d3a:	ebc4 3457 	rsb	r4, r4, r7, lsr #13
 8004d3e:	0c09      	lsrs	r1, r1, #16
 8004d40:	f8dd 7740 	ldr.w	r7, [sp, #1856]	; 0x740
 8004d44:	fb05 f502 	mul.w	r5, r5, r2
 8004d48:	ebc1 3150 	rsb	r1, r1, r0, lsr #13
 8004d4c:	fb03 f606 	mul.w	r6, r3, r6
 8004d50:	fb03 fe0e 	mul.w	lr, r3, lr
 8004d54:	0c2d      	lsrs	r5, r5, #16
 8004d56:	e9c7 1619 	strd	r1, r6, [r7, #100]	; 0x64
 8004d5a:	ebc5 355e 	rsb	r5, r5, lr, lsr #13
 8004d5e:	fb03 f202 	mul.w	r2, r3, r2
 8004d62:	489b      	ldr	r0, [pc, #620]	; (8004fd0 <acc_calibration_a121_calibrate+0x11f0>)
 8004d64:	66fd      	str	r5, [r7, #108]	; 0x6c
 8004d66:	fb03 f30c 	mul.w	r3, r3, ip
 8004d6a:	67bb      	str	r3, [r7, #120]	; 0x78
 8004d6c:	677c      	str	r4, [r7, #116]	; 0x74
 8004d6e:	673a      	str	r2, [r7, #112]	; 0x70
 8004d70:	1e7c      	subs	r4, r7, #1
 8004d72:	f107 0587 	add.w	r5, r7, #135	; 0x87
 8004d76:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004d7a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8004d7e:	4053      	eors	r3, r2
 8004d80:	2208      	movs	r2, #8
 8004d82:	07de      	lsls	r6, r3, #31
 8004d84:	bf4c      	ite	mi
 8004d86:	ea80 0353 	eormi.w	r3, r0, r3, lsr #1
 8004d8a:	085b      	lsrpl	r3, r3, #1
 8004d8c:	3a01      	subs	r2, #1
 8004d8e:	d1f8      	bne.n	8004d82 <acc_calibration_a121_calibrate+0xfa2>
 8004d90:	42a5      	cmp	r5, r4
 8004d92:	d1f2      	bne.n	8004d7a <acc_calibration_a121_calibrate+0xf9a>
 8004d94:	f8dd 2740 	ldr.w	r2, [sp, #1856]	; 0x740
 8004d98:	488e      	ldr	r0, [pc, #568]	; (8004fd4 <acc_calibration_a121_calibrate+0x11f4>)
 8004d9a:	43db      	mvns	r3, r3
 8004d9c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004da0:	f7fb fe24 	bl	80009ec <acc_diagnostic_log_scalar>
 8004da4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004da8:	488b      	ldr	r0, [pc, #556]	; (8004fd8 <acc_calibration_a121_calibrate+0x11f8>)
 8004daa:	6e99      	ldr	r1, [r3, #104]	; 0x68
 8004dac:	f7fb fe1e 	bl	80009ec <acc_diagnostic_log_scalar>
 8004db0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004db4:	4889      	ldr	r0, [pc, #548]	; (8004fdc <acc_calibration_a121_calibrate+0x11fc>)
 8004db6:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 8004db8:	f7fb fe18 	bl	80009ec <acc_diagnostic_log_scalar>
 8004dbc:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004dc0:	4887      	ldr	r0, [pc, #540]	; (8004fe0 <acc_calibration_a121_calibrate+0x1200>)
 8004dc2:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8004dc4:	f7fb fe12 	bl	80009ec <acc_diagnostic_log_scalar>
 8004dc8:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004dcc:	4885      	ldr	r0, [pc, #532]	; (8004fe4 <acc_calibration_a121_calibrate+0x1204>)
 8004dce:	6f59      	ldr	r1, [r3, #116]	; 0x74
 8004dd0:	f7fb fe0c 	bl	80009ec <acc_diagnostic_log_scalar>
 8004dd4:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004dd8:	4883      	ldr	r0, [pc, #524]	; (8004fe8 <acc_calibration_a121_calibrate+0x1208>)
 8004dda:	6f99      	ldr	r1, [r3, #120]	; 0x78
 8004ddc:	f7fb fe06 	bl	80009ec <acc_diagnostic_log_scalar>
 8004de0:	240d      	movs	r4, #13
 8004de2:	4b82      	ldr	r3, [pc, #520]	; (8004fec <acc_calibration_a121_calibrate+0x120c>)
 8004de4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8004de8:	2a03      	cmp	r2, #3
 8004dea:	f67f aa39 	bls.w	8004260 <acc_calibration_a121_calibrate+0x480>
 8004dee:	6c1d      	ldr	r5, [r3, #64]	; 0x40
 8004df0:	9b02      	ldr	r3, [sp, #8]
 8004df2:	4a7f      	ldr	r2, [pc, #508]	; (8004ff0 <acc_calibration_a121_calibrate+0x1210>)
 8004df4:	781b      	ldrb	r3, [r3, #0]
 8004df6:	497f      	ldr	r1, [pc, #508]	; (8004ff4 <acc_calibration_a121_calibrate+0x1214>)
 8004df8:	2004      	movs	r0, #4
 8004dfa:	47a8      	blx	r5
 8004dfc:	2001      	movs	r0, #1
 8004dfe:	f7ff b81b 	b.w	8003e38 <acc_calibration_a121_calibrate+0x58>
 8004e02:	f503 23c9 	add.w	r3, r3, #411648	; 0x64800
 8004e06:	337e      	adds	r3, #126	; 0x7e
 8004e08:	4543      	cmp	r3, r8
 8004e0a:	dbfa      	blt.n	8004e02 <acc_calibration_a121_calibrate+0x1022>
 8004e0c:	f7ff bb9f 	b.w	800454e <acc_calibration_a121_calibrate+0x76e>
 8004e10:	4879      	ldr	r0, [pc, #484]	; (8004ff8 <acc_calibration_a121_calibrate+0x1218>)
 8004e12:	f7fb fdf3 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004e16:	4620      	mov	r0, r4
 8004e18:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8004e1c:	f7fc f9de 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004e20:	2402      	movs	r4, #2
 8004e22:	2800      	cmp	r0, #0
 8004e24:	f47f aa16 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004e28:	f7fe bffc 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004e2c:	280b      	cmp	r0, #11
 8004e2e:	f63f abdb 	bhi.w	80045e8 <acc_calibration_a121_calibrate+0x808>
 8004e32:	3301      	adds	r3, #1
 8004e34:	2b30      	cmp	r3, #48	; 0x30
 8004e36:	f43e aff5 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004e3a:	4610      	mov	r0, r2
 8004e3c:	1e5a      	subs	r2, r3, #1
 8004e3e:	4432      	add	r2, r6
 8004e40:	1c59      	adds	r1, r3, #1
 8004e42:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8004e46:	1e4b      	subs	r3, r1, #1
 8004e48:	b135      	cbz	r5, 8004e58 <acc_calibration_a121_calibrate+0x1078>
 8004e4a:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8004e4e:	b91d      	cbnz	r5, 8004e58 <acc_calibration_a121_calibrate+0x1078>
 8004e50:	461d      	mov	r5, r3
 8004e52:	2001      	movs	r0, #1
 8004e54:	f7ff bbc5 	b.w	80045e2 <acc_calibration_a121_calibrate+0x802>
 8004e58:	2930      	cmp	r1, #48	; 0x30
 8004e5a:	f000 81d6 	beq.w	800520a <acc_calibration_a121_calibrate+0x142a>
 8004e5e:	3101      	adds	r1, #1
 8004e60:	e7ef      	b.n	8004e42 <acc_calibration_a121_calibrate+0x1062>
 8004e62:	f44f 7278 	mov.w	r2, #992	; 0x3e0
 8004e66:	e5e9      	b.n	8004a3c <acc_calibration_a121_calibrate+0xc5c>
 8004e68:	4b64      	ldr	r3, [pc, #400]	; (8004ffc <acc_calibration_a121_calibrate+0x121c>)
 8004e6a:	e5d7      	b.n	8004a1c <acc_calibration_a121_calibrate+0xc3c>
 8004e6c:	211f      	movs	r1, #31
 8004e6e:	e5c5      	b.n	80049fc <acc_calibration_a121_calibrate+0xc1c>
 8004e70:	4240      	negs	r0, r0
 8004e72:	0980      	lsrs	r0, r0, #6
 8004e74:	f640 5394 	movw	r3, #3476	; 0xd94
 8004e78:	fb03 f000 	mul.w	r0, r3, r0
 8004e7c:	0d40      	lsrs	r0, r0, #21
 8004e7e:	fb05 f000 	mul.w	r0, r5, r0
 8004e82:	eba9 2010 	sub.w	r0, r9, r0, lsr #8
 8004e86:	f8cb 0000 	str.w	r0, [fp]
 8004e8a:	e4a5      	b.n	80047d8 <acc_calibration_a121_calibrate+0x9f8>
 8004e8c:	f1ce 0e00 	rsb	lr, lr, #0
 8004e90:	fa1f fe8e 	uxth.w	lr, lr
 8004e94:	f1be 0f1f 	cmp.w	lr, #31
 8004e98:	f63e afc4 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004e9c:	f04e 0520 	orr.w	r5, lr, #32
 8004ea0:	f7ff ba90 	b.w	80043c4 <acc_calibration_a121_calibrate+0x5e4>
 8004ea4:	46da      	mov	sl, fp
 8004ea6:	9503      	str	r5, [sp, #12]
 8004ea8:	469b      	mov	fp, r3
 8004eaa:	e615      	b.n	8004ad8 <acc_calibration_a121_calibrate+0xcf8>
 8004eac:	ebb7 0f9b 	cmp.w	r7, fp, lsr #2
 8004eb0:	f4be afb8 	bcs.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004eb4:	9d03      	ldr	r5, [sp, #12]
 8004eb6:	4852      	ldr	r0, [pc, #328]	; (8005000 <acc_calibration_a121_calibrate+0x1220>)
 8004eb8:	4629      	mov	r1, r5
 8004eba:	f7fb fd97 	bl	80009ec <acc_diagnostic_log_scalar>
 8004ebe:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004ec2:	4850      	ldr	r0, [pc, #320]	; (8005004 <acc_calibration_a121_calibrate+0x1224>)
 8004ec4:	841d      	strh	r5, [r3, #32]
 8004ec6:	f7fb fd99 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004eca:	4a4f      	ldr	r2, [pc, #316]	; (8005008 <acc_calibration_a121_calibrate+0x1228>)
 8004ecc:	494f      	ldr	r1, [pc, #316]	; (800500c <acc_calibration_a121_calibrate+0x122c>)
 8004ece:	9500      	str	r5, [sp, #0]
 8004ed0:	230b      	movs	r3, #11
 8004ed2:	4620      	mov	r0, r4
 8004ed4:	f7fe fce0 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004ed8:	2300      	movs	r3, #0
 8004eda:	4a4b      	ldr	r2, [pc, #300]	; (8005008 <acc_calibration_a121_calibrate+0x1228>)
 8004edc:	494b      	ldr	r1, [pc, #300]	; (800500c <acc_calibration_a121_calibrate+0x122c>)
 8004ede:	9300      	str	r3, [sp, #0]
 8004ee0:	4620      	mov	r0, r4
 8004ee2:	2309      	movs	r3, #9
 8004ee4:	f7fe fcd8 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004ee8:	237e      	movs	r3, #126	; 0x7e
 8004eea:	4a47      	ldr	r2, [pc, #284]	; (8005008 <acc_calibration_a121_calibrate+0x1228>)
 8004eec:	4947      	ldr	r1, [pc, #284]	; (800500c <acc_calibration_a121_calibrate+0x122c>)
 8004eee:	9300      	str	r3, [sp, #0]
 8004ef0:	4620      	mov	r0, r4
 8004ef2:	230a      	movs	r3, #10
 8004ef4:	f7fe fcd0 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004ef8:	4620      	mov	r0, r4
 8004efa:	f240 4137 	movw	r1, #1079	; 0x437
 8004efe:	f7fc f96d 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004f02:	240a      	movs	r4, #10
 8004f04:	2800      	cmp	r0, #0
 8004f06:	f47f a9a5 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004f0a:	f7fe bf8b 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004f0e:	ee17 4a90 	vmov	r4, s15
 8004f12:	2d00      	cmp	r5, #0
 8004f14:	f43e af86 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004f18:	f087 0730 	eor.w	r7, r7, #48	; 0x30
 8004f1c:	4639      	mov	r1, r7
 8004f1e:	483c      	ldr	r0, [pc, #240]	; (8005010 <acc_calibration_a121_calibrate+0x1230>)
 8004f20:	f7fb fd64 	bl	80009ec <acc_diagnostic_log_scalar>
 8004f24:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f28:	483a      	ldr	r0, [pc, #232]	; (8005014 <acc_calibration_a121_calibrate+0x1234>)
 8004f2a:	809f      	strh	r7, [r3, #4]
 8004f2c:	f7fb fd66 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004f30:	4a35      	ldr	r2, [pc, #212]	; (8005008 <acc_calibration_a121_calibrate+0x1228>)
 8004f32:	4936      	ldr	r1, [pc, #216]	; (800500c <acc_calibration_a121_calibrate+0x122c>)
 8004f34:	9700      	str	r7, [sp, #0]
 8004f36:	2324      	movs	r3, #36	; 0x24
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f7fe fcad 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004f3e:	4620      	mov	r0, r4
 8004f40:	f240 2147 	movw	r1, #583	; 0x247
 8004f44:	f7fc f94a 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004f48:	2404      	movs	r4, #4
 8004f4a:	2800      	cmp	r0, #0
 8004f4c:	f47f a982 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004f50:	f7fe bf68 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004f54:	459c      	cmp	ip, r3
 8004f56:	f47f aa2b 	bne.w	80043b0 <acc_calibration_a121_calibrate+0x5d0>
 8004f5a:	f7fe bf63 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004f5e:	4626      	mov	r6, r4
 8004f60:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8004f64:	ee17 4a90 	vmov	r4, s15
 8004f68:	f1b8 0f00 	cmp.w	r8, #0
 8004f6c:	f43e af5a 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004f70:	4631      	mov	r1, r6
 8004f72:	4829      	ldr	r0, [pc, #164]	; (8005018 <acc_calibration_a121_calibrate+0x1238>)
 8004f74:	f7fb fd3a 	bl	80009ec <acc_diagnostic_log_scalar>
 8004f78:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8004f7c:	4827      	ldr	r0, [pc, #156]	; (800501c <acc_calibration_a121_calibrate+0x123c>)
 8004f7e:	815e      	strh	r6, [r3, #10]
 8004f80:	f7fb fd3c 	bl	80009fc <acc_diagnostic_log_set_scope>
 8004f84:	2301      	movs	r3, #1
 8004f86:	4620      	mov	r0, r4
 8004f88:	9a03      	ldr	r2, [sp, #12]
 8004f8a:	9300      	str	r3, [sp, #0]
 8004f8c:	4649      	mov	r1, r9
 8004f8e:	ab44      	add	r3, sp, #272	; 0x110
 8004f90:	f44f 557e 	mov.w	r5, #16256	; 0x3f80
 8004f94:	f8ad 5110 	strh.w	r5, [sp, #272]	; 0x110
 8004f98:	f7fe f962 	bl	8003260 <acc_sensor_a121_lut_buffer_write.constprop.0>
 8004f9c:	4a1a      	ldr	r2, [pc, #104]	; (8005008 <acc_calibration_a121_calibrate+0x1228>)
 8004f9e:	491b      	ldr	r1, [pc, #108]	; (800500c <acc_calibration_a121_calibrate+0x122c>)
 8004fa0:	9600      	str	r6, [sp, #0]
 8004fa2:	2326      	movs	r3, #38	; 0x26
 8004fa4:	4620      	mov	r0, r4
 8004fa6:	f7fe fc77 	bl	8003898 <acc_confprogram_live_patch.constprop.0>
 8004faa:	4620      	mov	r0, r4
 8004fac:	f240 21b2 	movw	r1, #690	; 0x2b2
 8004fb0:	f7fc f914 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8004fb4:	2405      	movs	r4, #5
 8004fb6:	2800      	cmp	r0, #0
 8004fb8:	f47f a94c 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8004fbc:	f7fe bf32 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8004fc0:	0800b528 	.word	0x0800b528
 8004fc4:	0005baa7 	.word	0x0005baa7
 8004fc8:	00010aaa 	.word	0x00010aaa
 8004fcc:	0003a553 	.word	0x0003a553
 8004fd0:	edb88320 	.word	0xedb88320
 8004fd4:	0800b53c 	.word	0x0800b53c
 8004fd8:	0800b550 	.word	0x0800b550
 8004fdc:	0800b564 	.word	0x0800b564
 8004fe0:	0800b578 	.word	0x0800b578
 8004fe4:	0800b58c 	.word	0x0800b58c
 8004fe8:	0800b5a4 	.word	0x0800b5a4
 8004fec:	200000ac 	.word	0x200000ac
 8004ff0:	0800b5bc 	.word	0x0800b5bc
 8004ff4:	0800b5e4 	.word	0x0800b5e4
 8004ff8:	0800b244 	.word	0x0800b244
 8004ffc:	fffffc00 	.word	0xfffffc00
 8005000:	0800b63c 	.word	0x0800b63c
 8005004:	0800b64c 	.word	0x0800b64c
 8005008:	08008ad0 	.word	0x08008ad0
 800500c:	08008ee0 	.word	0x08008ee0
 8005010:	0800b29c 	.word	0x0800b29c
 8005014:	0800b2a8 	.word	0x0800b2a8
 8005018:	0800b2e0 	.word	0x0800b2e0
 800501c:	0800b2ec 	.word	0x0800b2ec
 8005020:	2f07      	cmp	r7, #7
 8005022:	f200 80ea 	bhi.w	80051fa <acc_calibration_a121_calibrate+0x141a>
 8005026:	2300      	movs	r3, #0
 8005028:	f107 0208 	add.w	r2, r7, #8
 800502c:	1ad2      	subs	r2, r2, r3
 800502e:	2a00      	cmp	r2, #0
 8005030:	f000 80fc 	beq.w	800522c <acc_calibration_a121_calibrate+0x144c>
 8005034:	a944      	add	r1, sp, #272	; 0x110
 8005036:	18d0      	adds	r0, r2, r3
 8005038:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800503c:	9103      	str	r1, [sp, #12]
 800503e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8005042:	f935 6b02 	ldrsh.w	r6, [r5], #2
 8005046:	ee07 6a10 	vmov	s14, r6
 800504a:	fb03 f603 	mul.w	r6, r3, r3
 800504e:	ee06 3a90 	vmov	s13, r3
 8005052:	ee07 6a90 	vmov	s15, r6
 8005056:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800505a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800505e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8005062:	42a8      	cmp	r0, r5
 8005064:	ed81 7a00 	vstr	s14, [r1]
 8005068:	edc1 7a01 	vstr	s15, [r1, #4]
 800506c:	edc1 6a02 	vstr	s13, [r1, #8]
 8005070:	f103 0301 	add.w	r3, r3, #1
 8005074:	f101 010c 	add.w	r1, r1, #12
 8005078:	d1e3      	bne.n	8005042 <acc_calibration_a121_calibrate+0x1262>
 800507a:	9803      	ldr	r0, [sp, #12]
 800507c:	a92c      	add	r1, sp, #176	; 0xb0
 800507e:	f7fc fa41 	bl	8001504 <least_sqr_fit>
 8005082:	2800      	cmp	r0, #0
 8005084:	f43e aece 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8005088:	ed9d 6a2c 	vldr	s12, [sp, #176]	; 0xb0
 800508c:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8005090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005094:	f43e aec6 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8005098:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 800509c:	eef5 6a40 	vcmp.f32	s13, #0.0
 80050a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050a4:	f43e aebe 	beq.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80050a8:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80050ac:	eeb1 7a47 	vneg.f32	s14, s14
 80050b0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80050b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050bc:	f6fe aeb2 	blt.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80050c0:	eef1 6a66 	vneg.f32	s13, s13
 80050c4:	ee86 7a86 	vdiv.f32	s14, s13, s12
 80050c8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80050cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050d0:	f57e aea8 	bpl.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80050d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80050d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050dc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80050e0:	ee17 5a90 	vmov	r5, s15
 80050e4:	b2ab      	uxth	r3, r5
 80050e6:	2b3f      	cmp	r3, #63	; 0x3f
 80050e8:	f3c5 054e 	ubfx	r5, r5, #1, #15
 80050ec:	f63e ae9a 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80050f0:	f085 0510 	eor.w	r5, r5, #16
 80050f4:	4629      	mov	r1, r5
 80050f6:	485b      	ldr	r0, [pc, #364]	; (8005264 <acc_calibration_a121_calibrate+0x1484>)
 80050f8:	f7fb fc78 	bl	80009ec <acc_diagnostic_log_scalar>
 80050fc:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 8005100:	4859      	ldr	r0, [pc, #356]	; (8005268 <acc_calibration_a121_calibrate+0x1488>)
 8005102:	80dd      	strh	r5, [r3, #6]
 8005104:	f7fb fc7a 	bl	80009fc <acc_diagnostic_log_set_scope>
 8005108:	4620      	mov	r0, r4
 800510a:	f240 21ff 	movw	r1, #767	; 0x2ff
 800510e:	f7fc f865 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 8005112:	2406      	movs	r4, #6
 8005114:	2800      	cmp	r0, #0
 8005116:	f47f a89d 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 800511a:	f7fe be83 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 800511e:	2603      	movs	r6, #3
 8005120:	2701      	movs	r7, #1
 8005122:	f04f 0800 	mov.w	r8, #0
 8005126:	f7ff ba8f 	b.w	8004648 <acc_calibration_a121_calibrate+0x868>
 800512a:	46a6      	mov	lr, r4
 800512c:	f7ff b940 	b.w	80043b0 <acc_calibration_a121_calibrate+0x5d0>
 8005130:	ee18 0a10 	vmov	r0, s16
 8005134:	f240 1145 	movw	r1, #325	; 0x145
 8005138:	f7fc f850 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 800513c:	2401      	movs	r4, #1
 800513e:	2800      	cmp	r0, #0
 8005140:	f47f a888 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 8005144:	f7fe be6e 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8005148:	9b03      	ldr	r3, [sp, #12]
 800514a:	ad43      	add	r5, sp, #268	; 0x10c
 800514c:	f10d 06ae 	add.w	r6, sp, #174	; 0xae
 8005150:	4629      	mov	r1, r5
 8005152:	4632      	mov	r2, r6
 8005154:	f103 075c 	add.w	r7, r3, #92	; 0x5c
 8005158:	f851 3f04 	ldr.w	r3, [r1, #4]!
 800515c:	2b00      	cmp	r3, #0
 800515e:	bfb8      	it	lt
 8005160:	330f      	addlt	r3, #15
 8005162:	3202      	adds	r2, #2
 8005164:	111b      	asrs	r3, r3, #4
 8005166:	428f      	cmp	r7, r1
 8005168:	8013      	strh	r3, [r2, #0]
 800516a:	d1f5      	bne.n	8005158 <acc_calibration_a121_calibrate+0x1378>
 800516c:	9803      	ldr	r0, [sp, #12]
 800516e:	f7fb fbf1 	bl	8000954 <acc_cal_algorithms_phase_unwrap.constprop.0>
 8005172:	2100      	movs	r1, #0
 8005174:	f855 3f04 	ldr.w	r3, [r5, #4]!
 8005178:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 800517a:	42af      	cmp	r7, r5
 800517c:	eba3 0302 	sub.w	r3, r3, r2
 8005180:	4419      	add	r1, r3
 8005182:	d1f7      	bne.n	8005174 <acc_calibration_a121_calibrate+0x1394>
 8005184:	4b39      	ldr	r3, [pc, #228]	; (800526c <acc_calibration_a121_calibrate+0x148c>)
 8005186:	17c8      	asrs	r0, r1, #31
 8005188:	fb83 3101 	smull	r3, r1, r3, r1
 800518c:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 8005190:	f500 4399 	add.w	r3, r0, #19584	; 0x4c80
 8005194:	3330      	adds	r3, #48	; 0x30
 8005196:	f64c 1262 	movw	r2, #51554	; 0xc962
 800519a:	4293      	cmp	r3, r2
 800519c:	f63e ae42 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80051a0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80051a4:	f10d 01de 	add.w	r1, sp, #222	; 0xde
 80051a8:	f103 0524 	add.w	r5, r3, #36	; 0x24
 80051ac:	3322      	adds	r3, #34	; 0x22
 80051ae:	f836 2f02 	ldrh.w	r2, [r6, #2]!
 80051b2:	f823 2f02 	strh.w	r2, [r3, #2]!
 80051b6:	42b1      	cmp	r1, r6
 80051b8:	d1f9      	bne.n	80051ae <acc_calibration_a121_calibrate+0x13ce>
 80051ba:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80051be:	f8a3 0054 	strh.w	r0, [r3, #84]	; 0x54
 80051c2:	482b      	ldr	r0, [pc, #172]	; (8005270 <acc_calibration_a121_calibrate+0x1490>)
 80051c4:	f7fb fbba 	bl	800093c <acc_diagnostic_log_array.constprop.0>
 80051c8:	4628      	mov	r0, r5
 80051ca:	2118      	movs	r1, #24
 80051cc:	f7fb fbfe 	bl	80009cc <acc_diagnostic_log_data_i16>
 80051d0:	f8dd 3740 	ldr.w	r3, [sp, #1856]	; 0x740
 80051d4:	4827      	ldr	r0, [pc, #156]	; (8005274 <acc_calibration_a121_calibrate+0x1494>)
 80051d6:	f9b3 1054 	ldrsh.w	r1, [r3, #84]	; 0x54
 80051da:	f7fb fc07 	bl	80009ec <acc_diagnostic_log_scalar>
 80051de:	4826      	ldr	r0, [pc, #152]	; (8005278 <acc_calibration_a121_calibrate+0x1498>)
 80051e0:	f7fb fc0c 	bl	80009fc <acc_diagnostic_log_set_scope>
 80051e4:	4620      	mov	r0, r4
 80051e6:	f240 415e 	movw	r1, #1118	; 0x45e
 80051ea:	f7fb fff7 	bl	80011dc <acc_sensor_protocol_a121_run_program>
 80051ee:	240b      	movs	r4, #11
 80051f0:	2800      	cmp	r0, #0
 80051f2:	f47f a82f 	bne.w	8004254 <acc_calibration_a121_calibrate+0x474>
 80051f6:	f7fe be15 	b.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 80051fa:	1ffb      	subs	r3, r7, #7
 80051fc:	2f17      	cmp	r7, #23
 80051fe:	bf88      	it	hi
 8005200:	f1c3 0220 	rsbhi	r2, r3, #32
 8005204:	f63f af13 	bhi.w	800502e <acc_calibration_a121_calibrate+0x124e>
 8005208:	e70e      	b.n	8005028 <acc_calibration_a121_calibrate+0x1248>
 800520a:	f1a0 030c 	sub.w	r3, r0, #12
 800520e:	2b08      	cmp	r3, #8
 8005210:	f63e ae08 	bhi.w	8003e24 <acc_calibration_a121_calibrate+0x44>
 8005214:	0845      	lsrs	r5, r0, #1
 8005216:	f7ff b9f3 	b.w	8004600 <acc_calibration_a121_calibrate+0x820>
 800521a:	2300      	movs	r3, #0
 800521c:	ee17 4a90 	vmov	r4, s15
 8005220:	9e06      	ldr	r6, [sp, #24]
 8005222:	9304      	str	r3, [sp, #16]
 8005224:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8005228:	f7ff bafd 	b.w	8004826 <acc_calibration_a121_calibrate+0xa46>
 800522c:	ab44      	add	r3, sp, #272	; 0x110
 800522e:	9303      	str	r3, [sp, #12]
 8005230:	e723      	b.n	800507a <acc_calibration_a121_calibrate+0x129a>
 8005232:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8005236:	ee17 2a90 	vmov	r2, s15
 800523a:	f342 020a 	sbfx	r2, r2, #0, #11
 800523e:	0152      	lsls	r2, r2, #5
 8005240:	f7ff bbfc 	b.w	8004a3c <acc_calibration_a121_calibrate+0xc5c>
 8005244:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005248:	ee17 2a90 	vmov	r2, s15
 800524c:	f342 0205 	sbfx	r2, r2, #0, #6
 8005250:	0293      	lsls	r3, r2, #10
 8005252:	f7ff bbe3 	b.w	8004a1c <acc_calibration_a121_calibrate+0xc3c>
 8005256:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 800525a:	ee16 3a90 	vmov	r3, s13
 800525e:	b219      	sxth	r1, r3
 8005260:	f7ff bbcc 	b.w	80049fc <acc_calibration_a121_calibrate+0xc1c>
 8005264:	0800b328 	.word	0x0800b328
 8005268:	0800b334 	.word	0x0800b334
 800526c:	2aaaaaab 	.word	0x2aaaaaab
 8005270:	0800b464 	.word	0x0800b464
 8005274:	0800b490 	.word	0x0800b490
 8005278:	0800b4ac 	.word	0x0800b4ac

0800527c <test_sensor_calibration>:
 800527c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005280:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005282:	b087      	sub	sp, #28
 8005284:	b1f3      	cbz	r3, 80052c4 <test_sensor_calibration+0x48>
 8005286:	2b01      	cmp	r3, #1
 8005288:	4604      	mov	r4, r0
 800528a:	d02c      	beq.n	80052e6 <test_sensor_calibration+0x6a>
 800528c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800528e:	b125      	cbz	r5, 800529a <test_sensor_calibration+0x1e>
 8005290:	4b7f      	ldr	r3, [pc, #508]	; (8005490 <test_sensor_calibration+0x214>)
 8005292:	682a      	ldr	r2, [r5, #0]
 8005294:	429a      	cmp	r2, r3
 8005296:	f000 809a 	beq.w	80053ce <test_sensor_calibration+0x152>
 800529a:	f8df 8208 	ldr.w	r8, [pc, #520]	; 80054a4 <test_sensor_calibration+0x228>
 800529e:	4a7d      	ldr	r2, [pc, #500]	; (8005494 <test_sensor_calibration+0x218>)
 80052a0:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80052a4:	497c      	ldr	r1, [pc, #496]	; (8005498 <test_sensor_calibration+0x21c>)
 80052a6:	2000      	movs	r0, #0
 80052a8:	4798      	blx	r3
 80052aa:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80052ae:	4a7b      	ldr	r2, [pc, #492]	; (800549c <test_sensor_calibration+0x220>)
 80052b0:	497b      	ldr	r1, [pc, #492]	; (80054a0 <test_sensor_calibration+0x224>)
 80052b2:	2000      	movs	r0, #0
 80052b4:	4798      	blx	r3
 80052b6:	6e20      	ldr	r0, [r4, #96]	; 0x60
 80052b8:	f7fc fc6c 	bl	8001b94 <acc_sensor_destroy>
 80052bc:	2004      	movs	r0, #4
 80052be:	b007      	add	sp, #28
 80052c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80052c4:	4b77      	ldr	r3, [pc, #476]	; (80054a4 <test_sensor_calibration+0x228>)
 80052c6:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80052ca:	2a01      	cmp	r2, #1
 80052cc:	d904      	bls.n	80052d8 <test_sensor_calibration+0x5c>
 80052ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052d0:	4a75      	ldr	r2, [pc, #468]	; (80054a8 <test_sensor_calibration+0x22c>)
 80052d2:	4973      	ldr	r1, [pc, #460]	; (80054a0 <test_sensor_calibration+0x224>)
 80052d4:	2002      	movs	r0, #2
 80052d6:	4798      	blx	r3
 80052d8:	4874      	ldr	r0, [pc, #464]	; (80054ac <test_sensor_calibration+0x230>)
 80052da:	f7fb fb8f 	bl	80009fc <acc_diagnostic_log_set_scope>
 80052de:	2001      	movs	r0, #1
 80052e0:	b007      	add	sp, #28
 80052e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80052e6:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80054a4 <test_sensor_calibration+0x228>
 80052ea:	f898 3048 	ldrb.w	r3, [r8, #72]	; 0x48
 80052ee:	2b01      	cmp	r3, #1
 80052f0:	d905      	bls.n	80052fe <test_sensor_calibration+0x82>
 80052f2:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80052f6:	4a6e      	ldr	r2, [pc, #440]	; (80054b0 <test_sensor_calibration+0x234>)
 80052f8:	4969      	ldr	r1, [pc, #420]	; (80054a0 <test_sensor_calibration+0x224>)
 80052fa:	2002      	movs	r0, #2
 80052fc:	4798      	blx	r3
 80052fe:	4966      	ldr	r1, [pc, #408]	; (8005498 <test_sensor_calibration+0x21c>)
 8005300:	f8d4 9000 	ldr.w	r9, [r4]
 8005304:	223b      	movs	r2, #59	; 0x3b
 8005306:	2014      	movs	r0, #20
 8005308:	f7fb fe22 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 800530c:	4605      	mov	r5, r0
 800530e:	2800      	cmp	r0, #0
 8005310:	f000 80b4 	beq.w	800547c <test_sensor_calibration+0x200>
 8005314:	2600      	movs	r6, #0
 8005316:	6006      	str	r6, [r0, #0]
 8005318:	6046      	str	r6, [r0, #4]
 800531a:	6086      	str	r6, [r0, #8]
 800531c:	60c6      	str	r6, [r0, #12]
 800531e:	6106      	str	r6, [r0, #16]
 8005320:	4964      	ldr	r1, [pc, #400]	; (80054b4 <test_sensor_calibration+0x238>)
 8005322:	2273      	movs	r2, #115	; 0x73
 8005324:	f44f 70fe 	mov.w	r0, #508	; 0x1fc
 8005328:	f7fb fe12 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 800532c:	4607      	mov	r7, r0
 800532e:	2800      	cmp	r0, #0
 8005330:	f000 80a0 	beq.w	8005474 <test_sensor_calibration+0x1f8>
 8005334:	f44f 72fe 	mov.w	r2, #508	; 0x1fc
 8005338:	4631      	mov	r1, r6
 800533a:	f001 fddc 	bl	8006ef6 <memset>
 800533e:	2301      	movs	r3, #1
 8005340:	4953      	ldr	r1, [pc, #332]	; (8005490 <test_sensor_calibration+0x214>)
 8005342:	f8a7 31c4 	strh.w	r3, [r7, #452]	; 0x1c4
 8005346:	f887 31c6 	strb.w	r3, [r7, #454]	; 0x1c6
 800534a:	f10d 0216 	add.w	r2, sp, #22
 800534e:	6029      	str	r1, [r5, #0]
 8005350:	e9c5 6901 	strd	r6, r9, [r5, #4]
 8005354:	4631      	mov	r1, r6
 8005356:	612f      	str	r7, [r5, #16]
 8005358:	736e      	strb	r6, [r5, #13]
 800535a:	4648      	mov	r0, r9
 800535c:	f8ad 6016 	strh.w	r6, [sp, #22]
 8005360:	f7fb ff26 	bl	80011b0 <acc_sensor_reg_read>
 8005364:	4854      	ldr	r0, [pc, #336]	; (80054b8 <test_sensor_calibration+0x23c>)
 8005366:	f7fb fb49 	bl	80009fc <acc_diagnostic_log_set_scope>
 800536a:	4854      	ldr	r0, [pc, #336]	; (80054bc <test_sensor_calibration+0x240>)
 800536c:	4649      	mov	r1, r9
 800536e:	f7fb fb3d 	bl	80009ec <acc_diagnostic_log_scalar>
 8005372:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8005376:	4850      	ldr	r0, [pc, #320]	; (80054b8 <test_sensor_calibration+0x23c>)
 8005378:	f7fb fb38 	bl	80009ec <acc_diagnostic_log_scalar>
 800537c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8005380:	f241 2210 	movw	r2, #4624	; 0x1210
 8005384:	4293      	cmp	r3, r2
 8005386:	d036      	beq.n	80053f6 <test_sensor_calibration+0x17a>
 8005388:	4a4d      	ldr	r2, [pc, #308]	; (80054c0 <test_sensor_calibration+0x244>)
 800538a:	494e      	ldr	r1, [pc, #312]	; (80054c4 <test_sensor_calibration+0x248>)
 800538c:	f8d8 7040 	ldr.w	r7, [r8, #64]	; 0x40
 8005390:	4630      	mov	r0, r6
 8005392:	47b8      	blx	r7
 8005394:	4628      	mov	r0, r5
 8005396:	f7fc fbfd 	bl	8001b94 <acc_sensor_destroy>
 800539a:	f10d 0216 	add.w	r2, sp, #22
 800539e:	4648      	mov	r0, r9
 80053a0:	211c      	movs	r1, #28
 80053a2:	f8ad 6016 	strh.w	r6, [sp, #22]
 80053a6:	f7fb ff03 	bl	80011b0 <acc_sensor_reg_read>
 80053aa:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80053ae:	051b      	lsls	r3, r3, #20
 80053b0:	d564      	bpl.n	800547c <test_sensor_calibration+0x200>
 80053b2:	4635      	mov	r5, r6
 80053b4:	f8d8 3040 	ldr.w	r3, [r8, #64]	; 0x40
 80053b8:	4a43      	ldr	r2, [pc, #268]	; (80054c8 <test_sensor_calibration+0x24c>)
 80053ba:	4937      	ldr	r1, [pc, #220]	; (8005498 <test_sensor_calibration+0x21c>)
 80053bc:	2000      	movs	r0, #0
 80053be:	4798      	blx	r3
 80053c0:	4628      	mov	r0, r5
 80053c2:	f7fc fbe7 	bl	8001b94 <acc_sensor_destroy>
 80053c6:	2300      	movs	r3, #0
 80053c8:	6623      	str	r3, [r4, #96]	; 0x60
 80053ca:	2004      	movs	r0, #4
 80053cc:	e788      	b.n	80052e0 <test_sensor_calibration+0x64>
 80053ce:	6841      	ldr	r1, [r0, #4]
 80053d0:	b171      	cbz	r1, 80053f0 <test_sensor_calibration+0x174>
 80053d2:	f104 0364 	add.w	r3, r4, #100	; 0x64
 80053d6:	68a8      	ldr	r0, [r5, #8]
 80053d8:	68a2      	ldr	r2, [r4, #8]
 80053da:	9300      	str	r3, [sp, #0]
 80053dc:	f105 030d 	add.w	r3, r5, #13
 80053e0:	f7fe fcfe 	bl	8003de0 <acc_calibration_a121_calibrate>
 80053e4:	b120      	cbz	r0, 80053f0 <test_sensor_calibration+0x174>
 80053e6:	7b6b      	ldrb	r3, [r5, #13]
 80053e8:	2b0d      	cmp	r3, #13
 80053ea:	d04b      	beq.n	8005484 <test_sensor_calibration+0x208>
 80053ec:	2002      	movs	r0, #2
 80053ee:	e777      	b.n	80052e0 <test_sensor_calibration+0x64>
 80053f0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80054a4 <test_sensor_calibration+0x228>
 80053f4:	e759      	b.n	80052aa <test_sensor_calibration+0x2e>
 80053f6:	4648      	mov	r0, r9
 80053f8:	f10d 0216 	add.w	r2, sp, #22
 80053fc:	211c      	movs	r1, #28
 80053fe:	f8ad 6016 	strh.w	r6, [sp, #22]
 8005402:	f7fb fed5 	bl	80011b0 <acc_sensor_reg_read>
 8005406:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800540a:	f410 6600 	ands.w	r6, r0, #2048	; 0x800
 800540e:	d1d1      	bne.n	80053b4 <test_sensor_calibration+0x138>
 8005410:	68a8      	ldr	r0, [r5, #8]
 8005412:	f7fb fea3 	bl	800115c <acc_sensor_protocol_a121_init_interrupts>
 8005416:	2203      	movs	r2, #3
 8005418:	68a8      	ldr	r0, [r5, #8]
 800541a:	9200      	str	r2, [sp, #0]
 800541c:	4631      	mov	r1, r6
 800541e:	f240 1349 	movw	r3, #329	; 0x149
 8005422:	9003      	str	r0, [sp, #12]
 8005424:	f7fb fe6c 	bl	8001100 <acc_sensor_reg_field_write>
 8005428:	9803      	ldr	r0, [sp, #12]
 800542a:	9600      	str	r6, [sp, #0]
 800542c:	f240 1349 	movw	r3, #329	; 0x149
 8005430:	2204      	movs	r2, #4
 8005432:	2102      	movs	r1, #2
 8005434:	f7fb fe64 	bl	8001100 <acc_sensor_reg_field_write>
 8005438:	9803      	ldr	r0, [sp, #12]
 800543a:	9600      	str	r6, [sp, #0]
 800543c:	f240 1349 	movw	r3, #329	; 0x149
 8005440:	2210      	movs	r2, #16
 8005442:	2104      	movs	r1, #4
 8005444:	f7fb fe5c 	bl	8001100 <acc_sensor_reg_field_write>
 8005448:	9803      	ldr	r0, [sp, #12]
 800544a:	9600      	str	r6, [sp, #0]
 800544c:	f240 1349 	movw	r3, #329	; 0x149
 8005450:	2220      	movs	r2, #32
 8005452:	2105      	movs	r1, #5
 8005454:	f7fb fe54 	bl	8001100 <acc_sensor_reg_field_write>
 8005458:	9803      	ldr	r0, [sp, #12]
 800545a:	9600      	str	r6, [sp, #0]
 800545c:	f240 1349 	movw	r3, #329	; 0x149
 8005460:	f44f 527f 	mov.w	r2, #16320	; 0x3fc0
 8005464:	2106      	movs	r1, #6
 8005466:	f7fb fe4b 	bl	8001100 <acc_sensor_reg_field_write>
 800546a:	4630      	mov	r0, r6
 800546c:	6625      	str	r5, [r4, #96]	; 0x60
 800546e:	b007      	add	sp, #28
 8005470:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005474:	6128      	str	r0, [r5, #16]
 8005476:	4628      	mov	r0, r5
 8005478:	f7fb fd62 	bl	8000f40 <acc_rss_integration_mem_free>
 800547c:	2300      	movs	r3, #0
 800547e:	6623      	str	r3, [r4, #96]	; 0x60
 8005480:	2004      	movs	r0, #4
 8005482:	e72d      	b.n	80052e0 <test_sensor_calibration+0x64>
 8005484:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8005486:	f7fc fb85 	bl	8001b94 <acc_sensor_destroy>
 800548a:	2003      	movs	r0, #3
 800548c:	e728      	b.n	80052e0 <test_sensor_calibration+0x64>
 800548e:	bf00      	nop
 8005490:	1337b00e 	.word	0x1337b00e
 8005494:	0800abc8 	.word	0x0800abc8
 8005498:	0800abe0 	.word	0x0800abe0
 800549c:	0800b71c 	.word	0x0800b71c
 80054a0:	0800a938 	.word	0x0800a938
 80054a4:	200000ac 	.word	0x200000ac
 80054a8:	0800b66c 	.word	0x0800b66c
 80054ac:	0800b68c 	.word	0x0800b68c
 80054b0:	0800b6a4 	.word	0x0800b6a4
 80054b4:	0800b6c4 	.word	0x0800b6c4
 80054b8:	0800b6d8 	.word	0x0800b6d8
 80054bc:	0800b200 	.word	0x0800b200
 80054c0:	0800b6e0 	.word	0x0800b6e0
 80054c4:	0800a7b0 	.word	0x0800a7b0
 80054c8:	0800b700 	.word	0x0800b700

080054cc <acc_integration_log>:
 80054cc:	b40c      	push	{r2, r3}
 80054ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054d2:	b0ac      	sub	sp, #176	; 0xb0
 80054d4:	ab32      	add	r3, sp, #200	; 0xc8
 80054d6:	f10d 0818 	add.w	r8, sp, #24
 80054da:	f853 2b04 	ldr.w	r2, [r3], #4
 80054de:	9305      	str	r3, [sp, #20]
 80054e0:	4606      	mov	r6, r0
 80054e2:	460f      	mov	r7, r1
 80054e4:	4640      	mov	r0, r8
 80054e6:	2196      	movs	r1, #150	; 0x96
 80054e8:	f001 fecc 	bl	8007284 <__wrap_vsnprintf>
 80054ec:	2895      	cmp	r0, #149	; 0x95
 80054ee:	dd06      	ble.n	80054fe <acc_integration_log+0x32>
 80054f0:	f642 622e 	movw	r2, #11822	; 0x2e2e
 80054f4:	232e      	movs	r3, #46	; 0x2e
 80054f6:	f8ad 20aa 	strh.w	r2, [sp, #170]	; 0xaa
 80054fa:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 80054fe:	4b1d      	ldr	r3, [pc, #116]	; (8005574 <acc_integration_log+0xa8>)
 8005500:	4a1d      	ldr	r2, [pc, #116]	; (8005578 <acc_integration_log+0xac>)
 8005502:	6818      	ldr	r0, [r3, #0]
 8005504:	4d1d      	ldr	r5, [pc, #116]	; (800557c <acc_integration_log+0xb0>)
 8005506:	4b1e      	ldr	r3, [pc, #120]	; (8005580 <acc_integration_log+0xb4>)
 8005508:	4c1e      	ldr	r4, [pc, #120]	; (8005584 <acc_integration_log+0xb8>)
 800550a:	fba2 1200 	umull	r1, r2, r2, r0
 800550e:	fba5 1500 	umull	r1, r5, r5, r0
 8005512:	ea4f 3c92 	mov.w	ip, r2, lsr #14
 8005516:	09ad      	lsrs	r5, r5, #6
 8005518:	fba3 120c 	umull	r1, r2, r3, ip
 800551c:	fba3 1305 	umull	r1, r3, r3, r5
 8005520:	095b      	lsrs	r3, r3, #5
 8005522:	fba4 1400 	umull	r1, r4, r4, r0
 8005526:	2e04      	cmp	r6, #4
 8005528:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800552c:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 8005530:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8005534:	fb01 0515 	mls	r5, r1, r5, r0
 8005538:	bf98      	it	ls
 800553a:	4813      	ldrls	r0, [pc, #76]	; (8005588 <acc_integration_log+0xbc>)
 800553c:	ea4f 1252 	mov.w	r2, r2, lsr #5
 8005540:	bf94      	ite	ls
 8005542:	5d80      	ldrbls	r0, [r0, r6]
 8005544:	203f      	movhi	r0, #63	; 0x3f
 8005546:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
 800554a:	e9cd 5000 	strd	r5, r0, [sp]
 800554e:	ebac 0282 	sub.w	r2, ip, r2, lsl #2
 8005552:	0d61      	lsrs	r1, r4, #21
 8005554:	e9cd 7802 	strd	r7, r8, [sp, #8]
 8005558:	480c      	ldr	r0, [pc, #48]	; (800558c <acc_integration_log+0xc0>)
 800555a:	f001 fe6d 	bl	8007238 <__wrap_printf>
 800555e:	4b0c      	ldr	r3, [pc, #48]	; (8005590 <acc_integration_log+0xc4>)
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	6898      	ldr	r0, [r3, #8]
 8005564:	f001 fb98 	bl	8006c98 <fflush>
 8005568:	b02c      	add	sp, #176	; 0xb0
 800556a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800556e:	b002      	add	sp, #8
 8005570:	4770      	bx	lr
 8005572:	bf00      	nop
 8005574:	200000ac 	.word	0x200000ac
 8005578:	45e7b273 	.word	0x45e7b273
 800557c:	10624dd3 	.word	0x10624dd3
 8005580:	88888889 	.word	0x88888889
 8005584:	95217cb1 	.word	0x95217cb1
 8005588:	0800b760 	.word	0x0800b760
 800558c:	0800b73c 	.word	0x0800b73c
 8005590:	20000028 	.word	0x20000028

08005594 <HAL_UART_Transmit>:
 8005594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005598:	4604      	mov	r4, r0
 800559a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800559c:	2820      	cmp	r0, #32
 800559e:	d142      	bne.n	8005626 <HAL_UART_Transmit+0x92>
 80055a0:	460d      	mov	r5, r1
 80055a2:	2900      	cmp	r1, #0
 80055a4:	d03c      	beq.n	8005620 <HAL_UART_Transmit+0x8c>
 80055a6:	2a00      	cmp	r2, #0
 80055a8:	d03a      	beq.n	8005620 <HAL_UART_Transmit+0x8c>
 80055aa:	461e      	mov	r6, r3
 80055ac:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 80055b0:	2b01      	cmp	r3, #1
 80055b2:	d038      	beq.n	8005626 <HAL_UART_Transmit+0x92>
 80055b4:	2321      	movs	r3, #33	; 0x21
 80055b6:	2700      	movs	r7, #0
 80055b8:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
 80055bc:	67a3      	str	r3, [r4, #120]	; 0x78
 80055be:	68a3      	ldr	r3, [r4, #8]
 80055c0:	4924      	ldr	r1, [pc, #144]	; (8005654 <HAL_UART_Transmit+0xc0>)
 80055c2:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 80055c6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80055ca:	f8d1 8000 	ldr.w	r8, [r1]
 80055ce:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80055d2:	d02b      	beq.n	800562c <HAL_UART_Transmit+0x98>
 80055d4:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 80055d8:	2200      	movs	r2, #0
 80055da:	b29b      	uxth	r3, r3
 80055dc:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
 80055e0:	b973      	cbnz	r3, 8005600 <HAL_UART_Transmit+0x6c>
 80055e2:	e02c      	b.n	800563e <HAL_UART_Transmit+0xaa>
 80055e4:	6823      	ldr	r3, [r4, #0]
 80055e6:	f815 2b01 	ldrb.w	r2, [r5], #1
 80055ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80055ec:	f8b4 0052 	ldrh.w	r0, [r4, #82]	; 0x52
 80055f0:	3801      	subs	r0, #1
 80055f2:	b280      	uxth	r0, r0
 80055f4:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 80055f8:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 80055fc:	b289      	uxth	r1, r1
 80055fe:	b1f1      	cbz	r1, 800563e <HAL_UART_Transmit+0xaa>
 8005600:	4633      	mov	r3, r6
 8005602:	4642      	mov	r2, r8
 8005604:	2180      	movs	r1, #128	; 0x80
 8005606:	4620      	mov	r0, r4
 8005608:	f7fa fe0e 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800560c:	b9a0      	cbnz	r0, 8005638 <HAL_UART_Transmit+0xa4>
 800560e:	2d00      	cmp	r5, #0
 8005610:	d1e8      	bne.n	80055e4 <HAL_UART_Transmit+0x50>
 8005612:	f837 3b02 	ldrh.w	r3, [r7], #2
 8005616:	6822      	ldr	r2, [r4, #0]
 8005618:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800561c:	8513      	strh	r3, [r2, #40]	; 0x28
 800561e:	e7e5      	b.n	80055ec <HAL_UART_Transmit+0x58>
 8005620:	2001      	movs	r0, #1
 8005622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005626:	2002      	movs	r0, #2
 8005628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800562c:	6923      	ldr	r3, [r4, #16]
 800562e:	2b00      	cmp	r3, #0
 8005630:	d1d0      	bne.n	80055d4 <HAL_UART_Transmit+0x40>
 8005632:	462f      	mov	r7, r5
 8005634:	461d      	mov	r5, r3
 8005636:	e7cd      	b.n	80055d4 <HAL_UART_Transmit+0x40>
 8005638:	2003      	movs	r0, #3
 800563a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800563e:	4633      	mov	r3, r6
 8005640:	4642      	mov	r2, r8
 8005642:	2140      	movs	r1, #64	; 0x40
 8005644:	4620      	mov	r0, r4
 8005646:	f7fa fdef 	bl	8000228 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800564a:	2800      	cmp	r0, #0
 800564c:	d1f4      	bne.n	8005638 <HAL_UART_Transmit+0xa4>
 800564e:	2320      	movs	r3, #32
 8005650:	67a3      	str	r3, [r4, #120]	; 0x78
 8005652:	e7e6      	b.n	8005622 <HAL_UART_Transmit+0x8e>
 8005654:	200000ac 	.word	0x200000ac

08005658 <SystemInit>:
 8005658:	4a03      	ldr	r2, [pc, #12]	; (8005668 <SystemInit+0x10>)
 800565a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800565e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005662:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8005666:	4770      	bx	lr
 8005668:	e000ed00 	.word	0xe000ed00

0800566c <RTC_Alarm_IRQHandler>:
 800566c:	b510      	push	{r4, lr}
 800566e:	4c18      	ldr	r4, [pc, #96]	; (80056d0 <RTC_Alarm_IRQHandler+0x64>)
 8005670:	4a18      	ldr	r2, [pc, #96]	; (80056d4 <RTC_Alarm_IRQHandler+0x68>)
 8005672:	6863      	ldr	r3, [r4, #4]
 8005674:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8005678:	6151      	str	r1, [r2, #20]
 800567a:	689a      	ldr	r2, [r3, #8]
 800567c:	04d2      	lsls	r2, r2, #19
 800567e:	d502      	bpl.n	8005686 <RTC_Alarm_IRQHandler+0x1a>
 8005680:	68da      	ldr	r2, [r3, #12]
 8005682:	05d0      	lsls	r0, r2, #23
 8005684:	d409      	bmi.n	800569a <RTC_Alarm_IRQHandler+0x2e>
 8005686:	689a      	ldr	r2, [r3, #8]
 8005688:	0491      	lsls	r1, r2, #18
 800568a:	d502      	bpl.n	8005692 <RTC_Alarm_IRQHandler+0x26>
 800568c:	68da      	ldr	r2, [r3, #12]
 800568e:	0592      	lsls	r2, r2, #22
 8005690:	d412      	bmi.n	80056b8 <RTC_Alarm_IRQHandler+0x4c>
 8005692:	2301      	movs	r3, #1
 8005694:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8005698:	bd10      	pop	{r4, pc}
 800569a:	68da      	ldr	r2, [r3, #12]
 800569c:	b2d2      	uxtb	r2, r2
 800569e:	f462 72c0 	orn	r2, r2, #384	; 0x180
 80056a2:	60da      	str	r2, [r3, #12]
 80056a4:	2301      	movs	r3, #1
 80056a6:	f884 3148 	strb.w	r3, [r4, #328]	; 0x148
 80056aa:	f7fd fd2d 	bl	8003108 <HAL_RTC_DeactivateAlarm.constprop.0>
 80056ae:	b960      	cbnz	r0, 80056ca <RTC_Alarm_IRQHandler+0x5e>
 80056b0:	6863      	ldr	r3, [r4, #4]
 80056b2:	f884 0148 	strb.w	r0, [r4, #328]	; 0x148
 80056b6:	e7e6      	b.n	8005686 <RTC_Alarm_IRQHandler+0x1a>
 80056b8:	68da      	ldr	r2, [r3, #12]
 80056ba:	b2d2      	uxtb	r2, r2
 80056bc:	f462 7220 	orn	r2, r2, #640	; 0x280
 80056c0:	60da      	str	r2, [r3, #12]
 80056c2:	2301      	movs	r3, #1
 80056c4:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 80056c8:	bd10      	pop	{r4, pc}
 80056ca:	f7fc ff99 	bl	8002600 <__NVIC_SystemReset>
 80056ce:	bf00      	nop
 80056d0:	200000ac 	.word	0x200000ac
 80056d4:	40010400 	.word	0x40010400

080056d8 <EXTI15_10_IRQHandler>:
 80056d8:	4b03      	ldr	r3, [pc, #12]	; (80056e8 <EXTI15_10_IRQHandler+0x10>)
 80056da:	695a      	ldr	r2, [r3, #20]
 80056dc:	0512      	lsls	r2, r2, #20
 80056de:	bf44      	itt	mi
 80056e0:	f44f 6200 	movmi.w	r2, #2048	; 0x800
 80056e4:	615a      	strmi	r2, [r3, #20]
 80056e6:	4770      	bx	lr
 80056e8:	40010400 	.word	0x40010400

080056ec <USART2_IRQHandler>:
 80056ec:	b570      	push	{r4, r5, r6, lr}
 80056ee:	4ca9      	ldr	r4, [pc, #676]	; (8005994 <USART2_IRQHandler+0x2a8>)
 80056f0:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80056f4:	69da      	ldr	r2, [r3, #28]
 80056f6:	6819      	ldr	r1, [r3, #0]
 80056f8:	689d      	ldr	r5, [r3, #8]
 80056fa:	f640 000f 	movw	r0, #2063	; 0x80f
 80056fe:	4202      	tst	r2, r0
 8005700:	d14c      	bne.n	800579c <USART2_IRQHandler+0xb0>
 8005702:	0690      	lsls	r0, r2, #26
 8005704:	d502      	bpl.n	800570c <USART2_IRQHandler+0x20>
 8005706:	068e      	lsls	r6, r1, #26
 8005708:	f100 80e9 	bmi.w	80058de <USART2_IRQHandler+0x1f2>
 800570c:	f8d4 01ac 	ldr.w	r0, [r4, #428]	; 0x1ac
 8005710:	2801      	cmp	r0, #1
 8005712:	d025      	beq.n	8005760 <USART2_IRQHandler+0x74>
 8005714:	02d6      	lsls	r6, r2, #11
 8005716:	d502      	bpl.n	800571e <USART2_IRQHandler+0x32>
 8005718:	0268      	lsls	r0, r5, #9
 800571a:	f100 80ea 	bmi.w	80058f2 <USART2_IRQHandler+0x206>
 800571e:	0616      	lsls	r6, r2, #24
 8005720:	d414      	bmi.n	800574c <USART2_IRQHandler+0x60>
 8005722:	0650      	lsls	r0, r2, #25
 8005724:	d501      	bpl.n	800572a <USART2_IRQHandler+0x3e>
 8005726:	064a      	lsls	r2, r1, #25
 8005728:	d402      	bmi.n	8005730 <USART2_IRQHandler+0x44>
 800572a:	bd70      	pop	{r4, r5, r6, pc}
 800572c:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005730:	e853 2f00 	ldrex	r2, [r3]
 8005734:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005738:	e843 2100 	strex	r1, r2, [r3]
 800573c:	2900      	cmp	r1, #0
 800573e:	d1f5      	bne.n	800572c <USART2_IRQHandler+0x40>
 8005740:	2320      	movs	r3, #32
 8005742:	f8c4 11b4 	str.w	r1, [r4, #436]	; 0x1b4
 8005746:	f8c4 31c4 	str.w	r3, [r4, #452]	; 0x1c4
 800574a:	bd70      	pop	{r4, r5, r6, pc}
 800574c:	060d      	lsls	r5, r1, #24
 800574e:	d5e8      	bpl.n	8005722 <USART2_IRQHandler+0x36>
 8005750:	f8d4 31b4 	ldr.w	r3, [r4, #436]	; 0x1b4
 8005754:	2b00      	cmp	r3, #0
 8005756:	d0e8      	beq.n	800572a <USART2_IRQHandler+0x3e>
 8005758:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800575c:	488e      	ldr	r0, [pc, #568]	; (8005998 <USART2_IRQHandler+0x2ac>)
 800575e:	4718      	bx	r3
 8005760:	06d6      	lsls	r6, r2, #27
 8005762:	d5d7      	bpl.n	8005714 <USART2_IRQHandler+0x28>
 8005764:	06c8      	lsls	r0, r1, #27
 8005766:	d5d5      	bpl.n	8005714 <USART2_IRQHandler+0x28>
 8005768:	2210      	movs	r2, #16
 800576a:	621a      	str	r2, [r3, #32]
 800576c:	689a      	ldr	r2, [r3, #8]
 800576e:	0651      	lsls	r1, r2, #25
 8005770:	f140 80d7 	bpl.w	8005922 <USART2_IRQHandler+0x236>
 8005774:	f8d4 21bc 	ldr.w	r2, [r4, #444]	; 0x1bc
 8005778:	6811      	ldr	r1, [r2, #0]
 800577a:	684a      	ldr	r2, [r1, #4]
 800577c:	b292      	uxth	r2, r2
 800577e:	2a00      	cmp	r2, #0
 8005780:	d0d3      	beq.n	800572a <USART2_IRQHandler+0x3e>
 8005782:	f8b4 01a4 	ldrh.w	r0, [r4, #420]	; 0x1a4
 8005786:	4290      	cmp	r0, r2
 8005788:	d9cf      	bls.n	800572a <USART2_IRQHandler+0x3e>
 800578a:	f8a4 21a6 	strh.w	r2, [r4, #422]	; 0x1a6
 800578e:	680a      	ldr	r2, [r1, #0]
 8005790:	0692      	lsls	r2, r2, #26
 8005792:	f140 8109 	bpl.w	80059a8 <USART2_IRQHandler+0x2bc>
 8005796:	f8b4 31a6 	ldrh.w	r3, [r4, #422]	; 0x1a6
 800579a:	bd70      	pop	{r4, r5, r6, pc}
 800579c:	487f      	ldr	r0, [pc, #508]	; (800599c <USART2_IRQHandler+0x2b0>)
 800579e:	f005 0601 	and.w	r6, r5, #1
 80057a2:	4008      	ands	r0, r1
 80057a4:	4330      	orrs	r0, r6
 80057a6:	d0b1      	beq.n	800570c <USART2_IRQHandler+0x20>
 80057a8:	07d5      	lsls	r5, r2, #31
 80057aa:	d509      	bpl.n	80057c0 <USART2_IRQHandler+0xd4>
 80057ac:	05c8      	lsls	r0, r1, #23
 80057ae:	d507      	bpl.n	80057c0 <USART2_IRQHandler+0xd4>
 80057b0:	2001      	movs	r0, #1
 80057b2:	6218      	str	r0, [r3, #32]
 80057b4:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80057b8:	f040 0001 	orr.w	r0, r0, #1
 80057bc:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80057c0:	0795      	lsls	r5, r2, #30
 80057c2:	d57f      	bpl.n	80058c4 <USART2_IRQHandler+0x1d8>
 80057c4:	b14e      	cbz	r6, 80057da <USART2_IRQHandler+0xee>
 80057c6:	2002      	movs	r0, #2
 80057c8:	6218      	str	r0, [r3, #32]
 80057ca:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80057ce:	f040 0004 	orr.w	r0, r0, #4
 80057d2:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80057d6:	0750      	lsls	r0, r2, #29
 80057d8:	d478      	bmi.n	80058cc <USART2_IRQHandler+0x1e0>
 80057da:	0710      	lsls	r0, r2, #28
 80057dc:	d50b      	bpl.n	80057f6 <USART2_IRQHandler+0x10a>
 80057de:	f001 0020 	and.w	r0, r1, #32
 80057e2:	4330      	orrs	r0, r6
 80057e4:	d007      	beq.n	80057f6 <USART2_IRQHandler+0x10a>
 80057e6:	2008      	movs	r0, #8
 80057e8:	6218      	str	r0, [r3, #32]
 80057ea:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80057ee:	f040 0008 	orr.w	r0, r0, #8
 80057f2:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80057f6:	0516      	lsls	r6, r2, #20
 80057f8:	d50a      	bpl.n	8005810 <USART2_IRQHandler+0x124>
 80057fa:	014d      	lsls	r5, r1, #5
 80057fc:	d508      	bpl.n	8005810 <USART2_IRQHandler+0x124>
 80057fe:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8005802:	6218      	str	r0, [r3, #32]
 8005804:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005808:	f040 0020 	orr.w	r0, r0, #32
 800580c:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 8005810:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 8005814:	2800      	cmp	r0, #0
 8005816:	d088      	beq.n	800572a <USART2_IRQHandler+0x3e>
 8005818:	0690      	lsls	r0, r2, #26
 800581a:	d501      	bpl.n	8005820 <USART2_IRQHandler+0x134>
 800581c:	068a      	lsls	r2, r1, #26
 800581e:	d477      	bmi.n	8005910 <USART2_IRQHandler+0x224>
 8005820:	f8d4 11cc 	ldr.w	r1, [r4, #460]	; 0x1cc
 8005824:	689a      	ldr	r2, [r3, #8]
 8005826:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800582a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800582e:	430a      	orrs	r2, r1
 8005830:	d102      	bne.n	8005838 <USART2_IRQHandler+0x14c>
 8005832:	e0f5      	b.n	8005a20 <USART2_IRQHandler+0x334>
 8005834:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005838:	e853 2f00 	ldrex	r2, [r3]
 800583c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005840:	e843 2100 	strex	r1, r2, [r3]
 8005844:	2900      	cmp	r1, #0
 8005846:	d1f5      	bne.n	8005834 <USART2_IRQHandler+0x148>
 8005848:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800584c:	f102 0308 	add.w	r3, r2, #8
 8005850:	e853 3f00 	ldrex	r3, [r3]
 8005854:	f023 0301 	bic.w	r3, r3, #1
 8005858:	3208      	adds	r2, #8
 800585a:	e842 3100 	strex	r1, r3, [r2]
 800585e:	2900      	cmp	r1, #0
 8005860:	d1f2      	bne.n	8005848 <USART2_IRQHandler+0x15c>
 8005862:	f8d4 31ac 	ldr.w	r3, [r4, #428]	; 0x1ac
 8005866:	2b01      	cmp	r3, #1
 8005868:	d047      	beq.n	80058fa <USART2_IRQHandler+0x20e>
 800586a:	2300      	movs	r3, #0
 800586c:	2120      	movs	r1, #32
 800586e:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005872:	f8c4 11c8 	str.w	r1, [r4, #456]	; 0x1c8
 8005876:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
 800587a:	6891      	ldr	r1, [r2, #8]
 800587c:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
 8005880:	064b      	lsls	r3, r1, #25
 8005882:	d402      	bmi.n	800588a <USART2_IRQHandler+0x19e>
 8005884:	e751      	b.n	800572a <USART2_IRQHandler+0x3e>
 8005886:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800588a:	f102 0308 	add.w	r3, r2, #8
 800588e:	e853 3f00 	ldrex	r3, [r3]
 8005892:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005896:	3208      	adds	r2, #8
 8005898:	e842 3100 	strex	r1, r3, [r2]
 800589c:	2900      	cmp	r1, #0
 800589e:	d1f2      	bne.n	8005886 <USART2_IRQHandler+0x19a>
 80058a0:	f8d4 01bc 	ldr.w	r0, [r4, #444]	; 0x1bc
 80058a4:	2800      	cmp	r0, #0
 80058a6:	f43f af40 	beq.w	800572a <USART2_IRQHandler+0x3e>
 80058aa:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80058ae:	4a3c      	ldr	r2, [pc, #240]	; (80059a0 <USART2_IRQHandler+0x2b4>)
 80058b0:	6382      	str	r2, [r0, #56]	; 0x38
 80058b2:	2b02      	cmp	r3, #2
 80058b4:	f000 80b7 	beq.w	8005a26 <USART2_IRQHandler+0x33a>
 80058b8:	2304      	movs	r3, #4
 80058ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80058be:	63c3      	str	r3, [r0, #60]	; 0x3c
 80058c0:	f7fc b98a 	b.w	8001bd8 <UART_DMAAbortOnError>
 80058c4:	0755      	lsls	r5, r2, #29
 80058c6:	d588      	bpl.n	80057da <USART2_IRQHandler+0xee>
 80058c8:	2e00      	cmp	r6, #0
 80058ca:	d086      	beq.n	80057da <USART2_IRQHandler+0xee>
 80058cc:	2004      	movs	r0, #4
 80058ce:	6218      	str	r0, [r3, #32]
 80058d0:	f8d4 01cc 	ldr.w	r0, [r4, #460]	; 0x1cc
 80058d4:	f040 0002 	orr.w	r0, r0, #2
 80058d8:	f8c4 01cc 	str.w	r0, [r4, #460]	; 0x1cc
 80058dc:	e77d      	b.n	80057da <USART2_IRQHandler+0xee>
 80058de:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	f43f af21 	beq.w	800572a <USART2_IRQHandler+0x3e>
 80058e8:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 80058ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80058f0:	4718      	bx	r3
 80058f2:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80058f6:	621a      	str	r2, [r3, #32]
 80058f8:	bd70      	pop	{r4, r5, r6, pc}
 80058fa:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80058fe:	e852 3f00 	ldrex	r3, [r2]
 8005902:	f023 0310 	bic.w	r3, r3, #16
 8005906:	e842 3100 	strex	r1, r3, [r2]
 800590a:	2900      	cmp	r1, #0
 800590c:	d1f5      	bne.n	80058fa <USART2_IRQHandler+0x20e>
 800590e:	e7ac      	b.n	800586a <USART2_IRQHandler+0x17e>
 8005910:	f8d4 21b0 	ldr.w	r2, [r4, #432]	; 0x1b0
 8005914:	2a00      	cmp	r2, #0
 8005916:	d083      	beq.n	8005820 <USART2_IRQHandler+0x134>
 8005918:	481f      	ldr	r0, [pc, #124]	; (8005998 <USART2_IRQHandler+0x2ac>)
 800591a:	4790      	blx	r2
 800591c:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005920:	e77e      	b.n	8005820 <USART2_IRQHandler+0x134>
 8005922:	f8b4 11a6 	ldrh.w	r1, [r4, #422]	; 0x1a6
 8005926:	f8b4 21a6 	ldrh.w	r2, [r4, #422]	; 0x1a6
 800592a:	b292      	uxth	r2, r2
 800592c:	b289      	uxth	r1, r1
 800592e:	2a00      	cmp	r2, #0
 8005930:	f43f aefb 	beq.w	800572a <USART2_IRQHandler+0x3e>
 8005934:	f8b4 21a4 	ldrh.w	r2, [r4, #420]	; 0x1a4
 8005938:	428a      	cmp	r2, r1
 800593a:	f43f aef6 	beq.w	800572a <USART2_IRQHandler+0x3e>
 800593e:	e001      	b.n	8005944 <USART2_IRQHandler+0x258>
 8005940:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 8005944:	e853 2f00 	ldrex	r2, [r3]
 8005948:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800594c:	e843 2100 	strex	r1, r2, [r3]
 8005950:	2900      	cmp	r1, #0
 8005952:	d1f5      	bne.n	8005940 <USART2_IRQHandler+0x254>
 8005954:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005958:	f102 0308 	add.w	r3, r2, #8
 800595c:	e853 3f00 	ldrex	r3, [r3]
 8005960:	f023 0301 	bic.w	r3, r3, #1
 8005964:	3208      	adds	r2, #8
 8005966:	e842 3100 	strex	r1, r3, [r2]
 800596a:	2900      	cmp	r1, #0
 800596c:	d1f2      	bne.n	8005954 <USART2_IRQHandler+0x268>
 800596e:	2320      	movs	r3, #32
 8005970:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 8005974:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
 8005978:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 800597c:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8005980:	e852 3f00 	ldrex	r3, [r2]
 8005984:	f023 0310 	bic.w	r3, r3, #16
 8005988:	e842 3100 	strex	r1, r3, [r2]
 800598c:	2900      	cmp	r1, #0
 800598e:	d1f5      	bne.n	800597c <USART2_IRQHandler+0x290>
 8005990:	bd70      	pop	{r4, r5, r6, pc}
 8005992:	bf00      	nop
 8005994:	200000ac 	.word	0x200000ac
 8005998:	200001f8 	.word	0x200001f8
 800599c:	04000120 	.word	0x04000120
 80059a0:	08001bd9 	.word	0x08001bd9
 80059a4:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
 80059a8:	e853 2f00 	ldrex	r2, [r3]
 80059ac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80059b0:	e843 2100 	strex	r1, r2, [r3]
 80059b4:	2900      	cmp	r1, #0
 80059b6:	d1f5      	bne.n	80059a4 <USART2_IRQHandler+0x2b8>
 80059b8:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80059bc:	f102 0308 	add.w	r3, r2, #8
 80059c0:	e853 3f00 	ldrex	r3, [r3]
 80059c4:	f023 0301 	bic.w	r3, r3, #1
 80059c8:	3208      	adds	r2, #8
 80059ca:	e842 3100 	strex	r1, r3, [r2]
 80059ce:	2900      	cmp	r1, #0
 80059d0:	d1f2      	bne.n	80059b8 <USART2_IRQHandler+0x2cc>
 80059d2:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80059d6:	f102 0308 	add.w	r3, r2, #8
 80059da:	e853 3f00 	ldrex	r3, [r3]
 80059de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80059e2:	3208      	adds	r2, #8
 80059e4:	e842 3100 	strex	r1, r3, [r2]
 80059e8:	2900      	cmp	r1, #0
 80059ea:	d1f2      	bne.n	80059d2 <USART2_IRQHandler+0x2e6>
 80059ec:	2320      	movs	r3, #32
 80059ee:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 80059f2:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
 80059f6:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80059fa:	e852 3f00 	ldrex	r3, [r2]
 80059fe:	f023 0310 	bic.w	r3, r3, #16
 8005a02:	e842 3100 	strex	r1, r3, [r2]
 8005a06:	2900      	cmp	r1, #0
 8005a08:	d1f5      	bne.n	80059f6 <USART2_IRQHandler+0x30a>
 8005a0a:	f8d4 31bc 	ldr.w	r3, [r4, #444]	; 0x1bc
 8005a0e:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 8005a12:	2a02      	cmp	r2, #2
 8005a14:	d020      	beq.n	8005a58 <USART2_IRQHandler+0x36c>
 8005a16:	2204      	movs	r2, #4
 8005a18:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8005a1c:	63da      	str	r2, [r3, #60]	; 0x3c
 8005a1e:	e6ba      	b.n	8005796 <USART2_IRQHandler+0xaa>
 8005a20:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
 8005a24:	bd70      	pop	{r4, r5, r6, pc}
 8005a26:	6802      	ldr	r2, [r0, #0]
 8005a28:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8005a2a:	6814      	ldr	r4, [r2, #0]
 8005a2c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005a2e:	f024 040e 	bic.w	r4, r4, #14
 8005a32:	6014      	str	r4, [r2, #0]
 8005a34:	6814      	ldr	r4, [r2, #0]
 8005a36:	f024 0401 	bic.w	r4, r4, #1
 8005a3a:	6014      	str	r4, [r2, #0]
 8005a3c:	f003 031c 	and.w	r3, r3, #28
 8005a40:	2201      	movs	r2, #1
 8005a42:	fa02 f303 	lsl.w	r3, r2, r3
 8005a46:	606b      	str	r3, [r5, #4]
 8005a48:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8005a4c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8005a50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005a54:	f7fc b8c0 	b.w	8001bd8 <UART_DMAAbortOnError>
 8005a58:	6818      	ldr	r0, [r3, #0]
 8005a5a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005a5c:	6805      	ldr	r5, [r0, #0]
 8005a5e:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8005a60:	f025 050e 	bic.w	r5, r5, #14
 8005a64:	6005      	str	r5, [r0, #0]
 8005a66:	6805      	ldr	r5, [r0, #0]
 8005a68:	f025 0501 	bic.w	r5, r5, #1
 8005a6c:	6005      	str	r5, [r0, #0]
 8005a6e:	f002 021c 	and.w	r2, r2, #28
 8005a72:	2001      	movs	r0, #1
 8005a74:	fa00 f202 	lsl.w	r2, r0, r2
 8005a78:	6072      	str	r2, [r6, #4]
 8005a7a:	f883 0025 	strb.w	r0, [r3, #37]	; 0x25
 8005a7e:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8005a82:	e688      	b.n	8005796 <USART2_IRQHandler+0xaa>

08005a84 <I2C2_EV_IRQHandler>:
 8005a84:	4808      	ldr	r0, [pc, #32]	; (8005aa8 <I2C2_EV_IRQHandler+0x24>)
 8005a86:	b410      	push	{r4}
 8005a88:	f8d0 31d0 	ldr.w	r3, [r0, #464]	; 0x1d0
 8005a8c:	f8d0 4204 	ldr.w	r4, [r0, #516]	; 0x204
 8005a90:	6999      	ldr	r1, [r3, #24]
 8005a92:	681a      	ldr	r2, [r3, #0]
 8005a94:	b12c      	cbz	r4, 8005aa2 <I2C2_EV_IRQHandler+0x1e>
 8005a96:	4623      	mov	r3, r4
 8005a98:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
 8005a9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005aa0:	4718      	bx	r3
 8005aa2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005aa6:	4770      	bx	lr
 8005aa8:	200000ac 	.word	0x200000ac

08005aac <DMA1_Channel7_IRQHandler>:
 8005aac:	4801      	ldr	r0, [pc, #4]	; (8005ab4 <DMA1_Channel7_IRQHandler+0x8>)
 8005aae:	f7fc bcdd 	b.w	800246c <HAL_DMA_IRQHandler>
 8005ab2:	bf00      	nop
 8005ab4:	20000148 	.word	0x20000148

08005ab8 <DMA1_Channel6_IRQHandler>:
 8005ab8:	4801      	ldr	r0, [pc, #4]	; (8005ac0 <DMA1_Channel6_IRQHandler+0x8>)
 8005aba:	f7fc bcd7 	b.w	800246c <HAL_DMA_IRQHandler>
 8005abe:	bf00      	nop
 8005ac0:	20000100 	.word	0x20000100

08005ac4 <DMA1_Channel3_IRQHandler>:
 8005ac4:	4801      	ldr	r0, [pc, #4]	; (8005acc <DMA1_Channel3_IRQHandler+0x8>)
 8005ac6:	f7fc bcd1 	b.w	800246c <HAL_DMA_IRQHandler>
 8005aca:	bf00      	nop
 8005acc:	200002d0 	.word	0x200002d0

08005ad0 <DMA1_Channel2_IRQHandler>:
 8005ad0:	4801      	ldr	r0, [pc, #4]	; (8005ad8 <DMA1_Channel2_IRQHandler+0x8>)
 8005ad2:	f7fc bccb 	b.w	800246c <HAL_DMA_IRQHandler>
 8005ad6:	bf00      	nop
 8005ad8:	20000318 	.word	0x20000318

08005adc <EXTI3_IRQHandler>:
 8005adc:	4b03      	ldr	r3, [pc, #12]	; (8005aec <EXTI3_IRQHandler+0x10>)
 8005ade:	695a      	ldr	r2, [r3, #20]
 8005ae0:	0712      	lsls	r2, r2, #28
 8005ae2:	bf44      	itt	mi
 8005ae4:	2208      	movmi	r2, #8
 8005ae6:	615a      	strmi	r2, [r3, #20]
 8005ae8:	4770      	bx	lr
 8005aea:	bf00      	nop
 8005aec:	40010400 	.word	0x40010400

08005af0 <RTC_WKUP_IRQHandler>:
 8005af0:	4b0c      	ldr	r3, [pc, #48]	; (8005b24 <RTC_WKUP_IRQHandler+0x34>)
 8005af2:	490d      	ldr	r1, [pc, #52]	; (8005b28 <RTC_WKUP_IRQHandler+0x38>)
 8005af4:	685a      	ldr	r2, [r3, #4]
 8005af6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8005afa:	6148      	str	r0, [r1, #20]
 8005afc:	68d1      	ldr	r1, [r2, #12]
 8005afe:	0549      	lsls	r1, r1, #21
 8005b00:	d403      	bmi.n	8005b0a <RTC_WKUP_IRQHandler+0x1a>
 8005b02:	2201      	movs	r2, #1
 8005b04:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8005b08:	4770      	bx	lr
 8005b0a:	68d1      	ldr	r1, [r2, #12]
 8005b0c:	b2c9      	uxtb	r1, r1
 8005b0e:	f461 6190 	orn	r1, r1, #1152	; 0x480
 8005b12:	60d1      	str	r1, [r2, #12]
 8005b14:	2001      	movs	r0, #1
 8005b16:	2201      	movs	r2, #1
 8005b18:	f883 0051 	strb.w	r0, [r3, #81]	; 0x51
 8005b1c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8005b20:	4770      	bx	lr
 8005b22:	bf00      	nop
 8005b24:	200000ac 	.word	0x200000ac
 8005b28:	40010400 	.word	0x40010400

08005b2c <SysTick_Handler>:
 8005b2c:	4a02      	ldr	r2, [pc, #8]	; (8005b38 <SysTick_Handler+0xc>)
 8005b2e:	6813      	ldr	r3, [r2, #0]
 8005b30:	3301      	adds	r3, #1
 8005b32:	6013      	str	r3, [r2, #0]
 8005b34:	4770      	bx	lr
 8005b36:	bf00      	nop
 8005b38:	200000ac 	.word	0x200000ac

08005b3c <PendSV_Handler>:
 8005b3c:	4770      	bx	lr
 8005b3e:	bf00      	nop

08005b40 <SVC_Handler>:
 8005b40:	4770      	bx	lr
 8005b42:	bf00      	nop

08005b44 <DebugMon_Handler>:
 8005b44:	4770      	bx	lr
 8005b46:	bf00      	nop

08005b48 <UsageFault_Handler>:
 8005b48:	e7fe      	b.n	8005b48 <UsageFault_Handler>
 8005b4a:	bf00      	nop

08005b4c <BusFault_Handler>:
 8005b4c:	e7fe      	b.n	8005b4c <BusFault_Handler>
 8005b4e:	bf00      	nop

08005b50 <MemManage_Handler>:
 8005b50:	e7fe      	b.n	8005b50 <MemManage_Handler>
 8005b52:	bf00      	nop

08005b54 <HardFault_Handler>:
 8005b54:	e7fe      	b.n	8005b54 <HardFault_Handler>
 8005b56:	bf00      	nop

08005b58 <NMI_Handler>:
 8005b58:	e7fe      	b.n	8005b58 <NMI_Handler>
 8005b5a:	bf00      	nop

08005b5c <strlen>:
 8005b5c:	4603      	mov	r3, r0
 8005b5e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005b62:	2a00      	cmp	r2, #0
 8005b64:	d1fb      	bne.n	8005b5e <strlen+0x2>
 8005b66:	1a18      	subs	r0, r3, r0
 8005b68:	3801      	subs	r0, #1
 8005b6a:	4770      	bx	lr

08005b6c <__aeabi_uldivmod>:
 8005b6c:	b953      	cbnz	r3, 8005b84 <__aeabi_uldivmod+0x18>
 8005b6e:	b94a      	cbnz	r2, 8005b84 <__aeabi_uldivmod+0x18>
 8005b70:	2900      	cmp	r1, #0
 8005b72:	bf08      	it	eq
 8005b74:	2800      	cmpeq	r0, #0
 8005b76:	bf1c      	itt	ne
 8005b78:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8005b7c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8005b80:	f000 b96e 	b.w	8005e60 <__aeabi_idiv0>
 8005b84:	f1ad 0c08 	sub.w	ip, sp, #8
 8005b88:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8005b8c:	f000 f806 	bl	8005b9c <__udivmoddi4>
 8005b90:	f8dd e004 	ldr.w	lr, [sp, #4]
 8005b94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005b98:	b004      	add	sp, #16
 8005b9a:	4770      	bx	lr

08005b9c <__udivmoddi4>:
 8005b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ba0:	9d08      	ldr	r5, [sp, #32]
 8005ba2:	4604      	mov	r4, r0
 8005ba4:	468c      	mov	ip, r1
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	f040 8083 	bne.w	8005cb2 <__udivmoddi4+0x116>
 8005bac:	428a      	cmp	r2, r1
 8005bae:	4617      	mov	r7, r2
 8005bb0:	d947      	bls.n	8005c42 <__udivmoddi4+0xa6>
 8005bb2:	fab2 f282 	clz	r2, r2
 8005bb6:	b142      	cbz	r2, 8005bca <__udivmoddi4+0x2e>
 8005bb8:	f1c2 0020 	rsb	r0, r2, #32
 8005bbc:	fa24 f000 	lsr.w	r0, r4, r0
 8005bc0:	4091      	lsls	r1, r2
 8005bc2:	4097      	lsls	r7, r2
 8005bc4:	ea40 0c01 	orr.w	ip, r0, r1
 8005bc8:	4094      	lsls	r4, r2
 8005bca:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8005bce:	0c23      	lsrs	r3, r4, #16
 8005bd0:	fbbc f6f8 	udiv	r6, ip, r8
 8005bd4:	fa1f fe87 	uxth.w	lr, r7
 8005bd8:	fb08 c116 	mls	r1, r8, r6, ip
 8005bdc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005be0:	fb06 f10e 	mul.w	r1, r6, lr
 8005be4:	4299      	cmp	r1, r3
 8005be6:	d909      	bls.n	8005bfc <__udivmoddi4+0x60>
 8005be8:	18fb      	adds	r3, r7, r3
 8005bea:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8005bee:	f080 8119 	bcs.w	8005e24 <__udivmoddi4+0x288>
 8005bf2:	4299      	cmp	r1, r3
 8005bf4:	f240 8116 	bls.w	8005e24 <__udivmoddi4+0x288>
 8005bf8:	3e02      	subs	r6, #2
 8005bfa:	443b      	add	r3, r7
 8005bfc:	1a5b      	subs	r3, r3, r1
 8005bfe:	b2a4      	uxth	r4, r4
 8005c00:	fbb3 f0f8 	udiv	r0, r3, r8
 8005c04:	fb08 3310 	mls	r3, r8, r0, r3
 8005c08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8005c0c:	fb00 fe0e 	mul.w	lr, r0, lr
 8005c10:	45a6      	cmp	lr, r4
 8005c12:	d909      	bls.n	8005c28 <__udivmoddi4+0x8c>
 8005c14:	193c      	adds	r4, r7, r4
 8005c16:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005c1a:	f080 8105 	bcs.w	8005e28 <__udivmoddi4+0x28c>
 8005c1e:	45a6      	cmp	lr, r4
 8005c20:	f240 8102 	bls.w	8005e28 <__udivmoddi4+0x28c>
 8005c24:	3802      	subs	r0, #2
 8005c26:	443c      	add	r4, r7
 8005c28:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8005c2c:	eba4 040e 	sub.w	r4, r4, lr
 8005c30:	2600      	movs	r6, #0
 8005c32:	b11d      	cbz	r5, 8005c3c <__udivmoddi4+0xa0>
 8005c34:	40d4      	lsrs	r4, r2
 8005c36:	2300      	movs	r3, #0
 8005c38:	e9c5 4300 	strd	r4, r3, [r5]
 8005c3c:	4631      	mov	r1, r6
 8005c3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c42:	b902      	cbnz	r2, 8005c46 <__udivmoddi4+0xaa>
 8005c44:	deff      	udf	#255	; 0xff
 8005c46:	fab2 f282 	clz	r2, r2
 8005c4a:	2a00      	cmp	r2, #0
 8005c4c:	d150      	bne.n	8005cf0 <__udivmoddi4+0x154>
 8005c4e:	1bcb      	subs	r3, r1, r7
 8005c50:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005c54:	fa1f f887 	uxth.w	r8, r7
 8005c58:	2601      	movs	r6, #1
 8005c5a:	fbb3 fcfe 	udiv	ip, r3, lr
 8005c5e:	0c21      	lsrs	r1, r4, #16
 8005c60:	fb0e 331c 	mls	r3, lr, ip, r3
 8005c64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005c68:	fb08 f30c 	mul.w	r3, r8, ip
 8005c6c:	428b      	cmp	r3, r1
 8005c6e:	d907      	bls.n	8005c80 <__udivmoddi4+0xe4>
 8005c70:	1879      	adds	r1, r7, r1
 8005c72:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8005c76:	d202      	bcs.n	8005c7e <__udivmoddi4+0xe2>
 8005c78:	428b      	cmp	r3, r1
 8005c7a:	f200 80e9 	bhi.w	8005e50 <__udivmoddi4+0x2b4>
 8005c7e:	4684      	mov	ip, r0
 8005c80:	1ac9      	subs	r1, r1, r3
 8005c82:	b2a3      	uxth	r3, r4
 8005c84:	fbb1 f0fe 	udiv	r0, r1, lr
 8005c88:	fb0e 1110 	mls	r1, lr, r0, r1
 8005c8c:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8005c90:	fb08 f800 	mul.w	r8, r8, r0
 8005c94:	45a0      	cmp	r8, r4
 8005c96:	d907      	bls.n	8005ca8 <__udivmoddi4+0x10c>
 8005c98:	193c      	adds	r4, r7, r4
 8005c9a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005c9e:	d202      	bcs.n	8005ca6 <__udivmoddi4+0x10a>
 8005ca0:	45a0      	cmp	r8, r4
 8005ca2:	f200 80d9 	bhi.w	8005e58 <__udivmoddi4+0x2bc>
 8005ca6:	4618      	mov	r0, r3
 8005ca8:	eba4 0408 	sub.w	r4, r4, r8
 8005cac:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8005cb0:	e7bf      	b.n	8005c32 <__udivmoddi4+0x96>
 8005cb2:	428b      	cmp	r3, r1
 8005cb4:	d909      	bls.n	8005cca <__udivmoddi4+0x12e>
 8005cb6:	2d00      	cmp	r5, #0
 8005cb8:	f000 80b1 	beq.w	8005e1e <__udivmoddi4+0x282>
 8005cbc:	2600      	movs	r6, #0
 8005cbe:	e9c5 0100 	strd	r0, r1, [r5]
 8005cc2:	4630      	mov	r0, r6
 8005cc4:	4631      	mov	r1, r6
 8005cc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005cca:	fab3 f683 	clz	r6, r3
 8005cce:	2e00      	cmp	r6, #0
 8005cd0:	d14a      	bne.n	8005d68 <__udivmoddi4+0x1cc>
 8005cd2:	428b      	cmp	r3, r1
 8005cd4:	d302      	bcc.n	8005cdc <__udivmoddi4+0x140>
 8005cd6:	4282      	cmp	r2, r0
 8005cd8:	f200 80b8 	bhi.w	8005e4c <__udivmoddi4+0x2b0>
 8005cdc:	1a84      	subs	r4, r0, r2
 8005cde:	eb61 0103 	sbc.w	r1, r1, r3
 8005ce2:	2001      	movs	r0, #1
 8005ce4:	468c      	mov	ip, r1
 8005ce6:	2d00      	cmp	r5, #0
 8005ce8:	d0a8      	beq.n	8005c3c <__udivmoddi4+0xa0>
 8005cea:	e9c5 4c00 	strd	r4, ip, [r5]
 8005cee:	e7a5      	b.n	8005c3c <__udivmoddi4+0xa0>
 8005cf0:	f1c2 0320 	rsb	r3, r2, #32
 8005cf4:	fa20 f603 	lsr.w	r6, r0, r3
 8005cf8:	4097      	lsls	r7, r2
 8005cfa:	fa01 f002 	lsl.w	r0, r1, r2
 8005cfe:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8005d02:	40d9      	lsrs	r1, r3
 8005d04:	4330      	orrs	r0, r6
 8005d06:	0c03      	lsrs	r3, r0, #16
 8005d08:	fbb1 f6fe 	udiv	r6, r1, lr
 8005d0c:	fa1f f887 	uxth.w	r8, r7
 8005d10:	fb0e 1116 	mls	r1, lr, r6, r1
 8005d14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005d18:	fb06 f108 	mul.w	r1, r6, r8
 8005d1c:	4299      	cmp	r1, r3
 8005d1e:	fa04 f402 	lsl.w	r4, r4, r2
 8005d22:	d909      	bls.n	8005d38 <__udivmoddi4+0x19c>
 8005d24:	18fb      	adds	r3, r7, r3
 8005d26:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8005d2a:	f080 808d 	bcs.w	8005e48 <__udivmoddi4+0x2ac>
 8005d2e:	4299      	cmp	r1, r3
 8005d30:	f240 808a 	bls.w	8005e48 <__udivmoddi4+0x2ac>
 8005d34:	3e02      	subs	r6, #2
 8005d36:	443b      	add	r3, r7
 8005d38:	1a5b      	subs	r3, r3, r1
 8005d3a:	b281      	uxth	r1, r0
 8005d3c:	fbb3 f0fe 	udiv	r0, r3, lr
 8005d40:	fb0e 3310 	mls	r3, lr, r0, r3
 8005d44:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8005d48:	fb00 f308 	mul.w	r3, r0, r8
 8005d4c:	428b      	cmp	r3, r1
 8005d4e:	d907      	bls.n	8005d60 <__udivmoddi4+0x1c4>
 8005d50:	1879      	adds	r1, r7, r1
 8005d52:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8005d56:	d273      	bcs.n	8005e40 <__udivmoddi4+0x2a4>
 8005d58:	428b      	cmp	r3, r1
 8005d5a:	d971      	bls.n	8005e40 <__udivmoddi4+0x2a4>
 8005d5c:	3802      	subs	r0, #2
 8005d5e:	4439      	add	r1, r7
 8005d60:	1acb      	subs	r3, r1, r3
 8005d62:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8005d66:	e778      	b.n	8005c5a <__udivmoddi4+0xbe>
 8005d68:	f1c6 0c20 	rsb	ip, r6, #32
 8005d6c:	fa03 f406 	lsl.w	r4, r3, r6
 8005d70:	fa22 f30c 	lsr.w	r3, r2, ip
 8005d74:	431c      	orrs	r4, r3
 8005d76:	fa20 f70c 	lsr.w	r7, r0, ip
 8005d7a:	fa01 f306 	lsl.w	r3, r1, r6
 8005d7e:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8005d82:	fa21 f10c 	lsr.w	r1, r1, ip
 8005d86:	431f      	orrs	r7, r3
 8005d88:	0c3b      	lsrs	r3, r7, #16
 8005d8a:	fbb1 f9fe 	udiv	r9, r1, lr
 8005d8e:	fa1f f884 	uxth.w	r8, r4
 8005d92:	fb0e 1119 	mls	r1, lr, r9, r1
 8005d96:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8005d9a:	fb09 fa08 	mul.w	sl, r9, r8
 8005d9e:	458a      	cmp	sl, r1
 8005da0:	fa02 f206 	lsl.w	r2, r2, r6
 8005da4:	fa00 f306 	lsl.w	r3, r0, r6
 8005da8:	d908      	bls.n	8005dbc <__udivmoddi4+0x220>
 8005daa:	1861      	adds	r1, r4, r1
 8005dac:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8005db0:	d248      	bcs.n	8005e44 <__udivmoddi4+0x2a8>
 8005db2:	458a      	cmp	sl, r1
 8005db4:	d946      	bls.n	8005e44 <__udivmoddi4+0x2a8>
 8005db6:	f1a9 0902 	sub.w	r9, r9, #2
 8005dba:	4421      	add	r1, r4
 8005dbc:	eba1 010a 	sub.w	r1, r1, sl
 8005dc0:	b2bf      	uxth	r7, r7
 8005dc2:	fbb1 f0fe 	udiv	r0, r1, lr
 8005dc6:	fb0e 1110 	mls	r1, lr, r0, r1
 8005dca:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8005dce:	fb00 f808 	mul.w	r8, r0, r8
 8005dd2:	45b8      	cmp	r8, r7
 8005dd4:	d907      	bls.n	8005de6 <__udivmoddi4+0x24a>
 8005dd6:	19e7      	adds	r7, r4, r7
 8005dd8:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8005ddc:	d22e      	bcs.n	8005e3c <__udivmoddi4+0x2a0>
 8005dde:	45b8      	cmp	r8, r7
 8005de0:	d92c      	bls.n	8005e3c <__udivmoddi4+0x2a0>
 8005de2:	3802      	subs	r0, #2
 8005de4:	4427      	add	r7, r4
 8005de6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8005dea:	eba7 0708 	sub.w	r7, r7, r8
 8005dee:	fba0 8902 	umull	r8, r9, r0, r2
 8005df2:	454f      	cmp	r7, r9
 8005df4:	46c6      	mov	lr, r8
 8005df6:	4649      	mov	r1, r9
 8005df8:	d31a      	bcc.n	8005e30 <__udivmoddi4+0x294>
 8005dfa:	d017      	beq.n	8005e2c <__udivmoddi4+0x290>
 8005dfc:	b15d      	cbz	r5, 8005e16 <__udivmoddi4+0x27a>
 8005dfe:	ebb3 020e 	subs.w	r2, r3, lr
 8005e02:	eb67 0701 	sbc.w	r7, r7, r1
 8005e06:	fa07 fc0c 	lsl.w	ip, r7, ip
 8005e0a:	40f2      	lsrs	r2, r6
 8005e0c:	ea4c 0202 	orr.w	r2, ip, r2
 8005e10:	40f7      	lsrs	r7, r6
 8005e12:	e9c5 2700 	strd	r2, r7, [r5]
 8005e16:	2600      	movs	r6, #0
 8005e18:	4631      	mov	r1, r6
 8005e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005e1e:	462e      	mov	r6, r5
 8005e20:	4628      	mov	r0, r5
 8005e22:	e70b      	b.n	8005c3c <__udivmoddi4+0xa0>
 8005e24:	4606      	mov	r6, r0
 8005e26:	e6e9      	b.n	8005bfc <__udivmoddi4+0x60>
 8005e28:	4618      	mov	r0, r3
 8005e2a:	e6fd      	b.n	8005c28 <__udivmoddi4+0x8c>
 8005e2c:	4543      	cmp	r3, r8
 8005e2e:	d2e5      	bcs.n	8005dfc <__udivmoddi4+0x260>
 8005e30:	ebb8 0e02 	subs.w	lr, r8, r2
 8005e34:	eb69 0104 	sbc.w	r1, r9, r4
 8005e38:	3801      	subs	r0, #1
 8005e3a:	e7df      	b.n	8005dfc <__udivmoddi4+0x260>
 8005e3c:	4608      	mov	r0, r1
 8005e3e:	e7d2      	b.n	8005de6 <__udivmoddi4+0x24a>
 8005e40:	4660      	mov	r0, ip
 8005e42:	e78d      	b.n	8005d60 <__udivmoddi4+0x1c4>
 8005e44:	4681      	mov	r9, r0
 8005e46:	e7b9      	b.n	8005dbc <__udivmoddi4+0x220>
 8005e48:	4666      	mov	r6, ip
 8005e4a:	e775      	b.n	8005d38 <__udivmoddi4+0x19c>
 8005e4c:	4630      	mov	r0, r6
 8005e4e:	e74a      	b.n	8005ce6 <__udivmoddi4+0x14a>
 8005e50:	f1ac 0c02 	sub.w	ip, ip, #2
 8005e54:	4439      	add	r1, r7
 8005e56:	e713      	b.n	8005c80 <__udivmoddi4+0xe4>
 8005e58:	3802      	subs	r0, #2
 8005e5a:	443c      	add	r4, r7
 8005e5c:	e724      	b.n	8005ca8 <__udivmoddi4+0x10c>
 8005e5e:	bf00      	nop

08005e60 <__aeabi_idiv0>:
 8005e60:	4770      	bx	lr
 8005e62:	bf00      	nop

08005e64 <main>:
 8005e64:	4945      	ldr	r1, [pc, #276]	; (8005f7c <main+0x118>)
 8005e66:	4b46      	ldr	r3, [pc, #280]	; (8005f80 <main+0x11c>)
 8005e68:	68ca      	ldr	r2, [r1, #12]
 8005e6a:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8005e6e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
 8005e72:	4002      	ands	r2, r0
 8005e74:	4313      	orrs	r3, r2
 8005e76:	b0d1      	sub	sp, #324	; 0x144
 8005e78:	60cb      	str	r3, [r1, #12]
 8005e7a:	200f      	movs	r0, #15
 8005e7c:	f7fc fb96 	bl	80025ac <HAL_InitTick>
 8005e80:	2800      	cmp	r0, #0
 8005e82:	f000 8305 	beq.w	8006490 <main+0x62c>
 8005e86:	4a3f      	ldr	r2, [pc, #252]	; (8005f84 <main+0x120>)
 8005e88:	6813      	ldr	r3, [r2, #0]
 8005e8a:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005e8e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005e92:	d01e      	beq.n	8005ed2 <main+0x6e>
 8005e94:	6813      	ldr	r3, [r2, #0]
 8005e96:	493c      	ldr	r1, [pc, #240]	; (8005f88 <main+0x124>)
 8005e98:	483c      	ldr	r0, [pc, #240]	; (8005f8c <main+0x128>)
 8005e9a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005e9e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005ea2:	6013      	str	r3, [r2, #0]
 8005ea4:	680c      	ldr	r4, [r1, #0]
 8005ea6:	6951      	ldr	r1, [r2, #20]
 8005ea8:	2332      	movs	r3, #50	; 0x32
 8005eaa:	fb03 f304 	mul.w	r3, r3, r4
 8005eae:	fbb3 f3f0 	udiv	r3, r3, r0
 8005eb2:	0548      	lsls	r0, r1, #21
 8005eb4:	f103 0301 	add.w	r3, r3, #1
 8005eb8:	d506      	bpl.n	8005ec8 <main+0x64>
 8005eba:	e000      	b.n	8005ebe <main+0x5a>
 8005ebc:	b123      	cbz	r3, 8005ec8 <main+0x64>
 8005ebe:	6951      	ldr	r1, [r2, #20]
 8005ec0:	0549      	lsls	r1, r1, #21
 8005ec2:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8005ec6:	d4f9      	bmi.n	8005ebc <main+0x58>
 8005ec8:	4b2e      	ldr	r3, [pc, #184]	; (8005f84 <main+0x120>)
 8005eca:	695b      	ldr	r3, [r3, #20]
 8005ecc:	055f      	lsls	r7, r3, #21
 8005ece:	f100 82dd 	bmi.w	800648c <main+0x628>
 8005ed2:	4b2f      	ldr	r3, [pc, #188]	; (8005f90 <main+0x12c>)
 8005ed4:	6899      	ldr	r1, [r3, #8]
 8005ed6:	68db      	ldr	r3, [r3, #12]
 8005ed8:	f001 010c 	and.w	r1, r1, #12
 8005edc:	2904      	cmp	r1, #4
 8005ede:	f000 82f0 	beq.w	80064c2 <main+0x65e>
 8005ee2:	290c      	cmp	r1, #12
 8005ee4:	f000 82e8 	beq.w	80064b8 <main+0x654>
 8005ee8:	4b29      	ldr	r3, [pc, #164]	; (8005f90 <main+0x12c>)
 8005eea:	4c2a      	ldr	r4, [pc, #168]	; (8005f94 <main+0x130>)
 8005eec:	681a      	ldr	r2, [r3, #0]
 8005eee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ef2:	601a      	str	r2, [r3, #0]
 8005ef4:	6820      	ldr	r0, [r4, #0]
 8005ef6:	e004      	b.n	8005f02 <main+0x9e>
 8005ef8:	6822      	ldr	r2, [r4, #0]
 8005efa:	1a12      	subs	r2, r2, r0
 8005efc:	2a02      	cmp	r2, #2
 8005efe:	f200 82c5 	bhi.w	800648c <main+0x628>
 8005f02:	681a      	ldr	r2, [r3, #0]
 8005f04:	0556      	lsls	r6, r2, #21
 8005f06:	d5f7      	bpl.n	8005ef8 <main+0x94>
 8005f08:	685a      	ldr	r2, [r3, #4]
 8005f0a:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
 8005f0e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005f12:	605a      	str	r2, [r3, #4]
 8005f14:	e2de      	b.n	80064d4 <main+0x670>
 8005f16:	f402 40fe 	and.w	r0, r2, #32512	; 0x7f00
 8005f1a:	f5b0 6f20 	cmp.w	r0, #2560	; 0xa00
 8005f1e:	f040 82f0 	bne.w	8006502 <main+0x69e>
 8005f22:	f002 4078 	and.w	r0, r2, #4160749568	; 0xf8000000
 8005f26:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
 8005f2a:	f040 82ea 	bne.w	8006502 <main+0x69e>
 8005f2e:	481a      	ldr	r0, [pc, #104]	; (8005f98 <main+0x134>)
 8005f30:	4202      	tst	r2, r0
 8005f32:	f040 82e6 	bne.w	8006502 <main+0x69e>
 8005f36:	681a      	ldr	r2, [r3, #0]
 8005f38:	0195      	lsls	r5, r2, #6
 8005f3a:	f140 83e1 	bpl.w	8006700 <main+0x89c>
 8005f3e:	4a17      	ldr	r2, [pc, #92]	; (8005f9c <main+0x138>)
 8005f40:	6813      	ldr	r3, [r2, #0]
 8005f42:	0759      	lsls	r1, r3, #29
 8005f44:	d40b      	bmi.n	8005f5e <main+0xfa>
 8005f46:	6813      	ldr	r3, [r2, #0]
 8005f48:	f023 0307 	bic.w	r3, r3, #7
 8005f4c:	f043 0304 	orr.w	r3, r3, #4
 8005f50:	6013      	str	r3, [r2, #0]
 8005f52:	6813      	ldr	r3, [r2, #0]
 8005f54:	f003 0307 	and.w	r3, r3, #7
 8005f58:	2b04      	cmp	r3, #4
 8005f5a:	f040 8297 	bne.w	800648c <main+0x628>
 8005f5e:	4b0c      	ldr	r3, [pc, #48]	; (8005f90 <main+0x12c>)
 8005f60:	689a      	ldr	r2, [r3, #8]
 8005f62:	681a      	ldr	r2, [r3, #0]
 8005f64:	0192      	lsls	r2, r2, #6
 8005f66:	f140 8291 	bpl.w	800648c <main+0x628>
 8005f6a:	689a      	ldr	r2, [r3, #8]
 8005f6c:	f042 0203 	orr.w	r2, r2, #3
 8005f70:	609a      	str	r2, [r3, #8]
 8005f72:	6820      	ldr	r0, [r4, #0]
 8005f74:	f241 3188 	movw	r1, #5000	; 0x1388
 8005f78:	e017      	b.n	8005faa <main+0x146>
 8005f7a:	bf00      	nop
 8005f7c:	e000ed00 	.word	0xe000ed00
 8005f80:	05fa0300 	.word	0x05fa0300
 8005f84:	40007000 	.word	0x40007000
 8005f88:	20000000 	.word	0x20000000
 8005f8c:	000f4240 	.word	0x000f4240
 8005f90:	40021000 	.word	0x40021000
 8005f94:	200000ac 	.word	0x200000ac
 8005f98:	06600070 	.word	0x06600070
 8005f9c:	40022000 	.word	0x40022000
 8005fa0:	6822      	ldr	r2, [r4, #0]
 8005fa2:	1a12      	subs	r2, r2, r0
 8005fa4:	428a      	cmp	r2, r1
 8005fa6:	f200 8271 	bhi.w	800648c <main+0x628>
 8005faa:	689a      	ldr	r2, [r3, #8]
 8005fac:	f002 020c 	and.w	r2, r2, #12
 8005fb0:	2a0c      	cmp	r2, #12
 8005fb2:	d1f5      	bne.n	8005fa0 <main+0x13c>
 8005fb4:	689a      	ldr	r2, [r3, #8]
 8005fb6:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8005fba:	d003      	beq.n	8005fc4 <main+0x160>
 8005fbc:	689a      	ldr	r2, [r3, #8]
 8005fbe:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005fc2:	609a      	str	r2, [r3, #8]
 8005fc4:	4a9b      	ldr	r2, [pc, #620]	; (8006234 <main+0x3d0>)
 8005fc6:	6813      	ldr	r3, [r2, #0]
 8005fc8:	f003 0307 	and.w	r3, r3, #7
 8005fcc:	2b04      	cmp	r3, #4
 8005fce:	d90b      	bls.n	8005fe8 <main+0x184>
 8005fd0:	6813      	ldr	r3, [r2, #0]
 8005fd2:	f023 0307 	bic.w	r3, r3, #7
 8005fd6:	f043 0304 	orr.w	r3, r3, #4
 8005fda:	6013      	str	r3, [r2, #0]
 8005fdc:	6813      	ldr	r3, [r2, #0]
 8005fde:	f003 0307 	and.w	r3, r3, #7
 8005fe2:	2b04      	cmp	r3, #4
 8005fe4:	f040 8252 	bne.w	800648c <main+0x628>
 8005fe8:	4d93      	ldr	r5, [pc, #588]	; (8006238 <main+0x3d4>)
 8005fea:	4e94      	ldr	r6, [pc, #592]	; (800623c <main+0x3d8>)
 8005fec:	68ab      	ldr	r3, [r5, #8]
 8005fee:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005ff2:	60ab      	str	r3, [r5, #8]
 8005ff4:	68ab      	ldr	r3, [r5, #8]
 8005ff6:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8005ffa:	60ab      	str	r3, [r5, #8]
 8005ffc:	f7fc f8f4 	bl	80021e8 <HAL_RCC_GetSysClockFreq>
 8006000:	68a9      	ldr	r1, [r5, #8]
 8006002:	4a8f      	ldr	r2, [pc, #572]	; (8006240 <main+0x3dc>)
 8006004:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8006008:	440a      	add	r2, r1
 800600a:	4603      	mov	r3, r0
 800600c:	f892 2f90 	ldrb.w	r2, [r2, #3984]	; 0xf90
 8006010:	6870      	ldr	r0, [r6, #4]
 8006012:	f002 021f 	and.w	r2, r2, #31
 8006016:	40d3      	lsrs	r3, r2
 8006018:	6033      	str	r3, [r6, #0]
 800601a:	f7fc fac7 	bl	80025ac <HAL_InitTick>
 800601e:	4606      	mov	r6, r0
 8006020:	2800      	cmp	r0, #0
 8006022:	f040 8233 	bne.w	800648c <main+0x628>
 8006026:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 800602a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 800602c:	4b85      	ldr	r3, [pc, #532]	; (8006244 <main+0x3e0>)
 800602e:	f042 0202 	orr.w	r2, r2, #2
 8006032:	64ea      	str	r2, [r5, #76]	; 0x4c
 8006034:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8006036:	f002 0202 	and.w	r2, r2, #2
 800603a:	9206      	str	r2, [sp, #24]
 800603c:	9a06      	ldr	r2, [sp, #24]
 800603e:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8006040:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006044:	64ea      	str	r2, [r5, #76]	; 0x4c
 8006046:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8006048:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800604c:	9205      	str	r2, [sp, #20]
 800604e:	9a05      	ldr	r2, [sp, #20]
 8006050:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 8006052:	f042 0201 	orr.w	r2, r2, #1
 8006056:	64ea      	str	r2, [r5, #76]	; 0x4c
 8006058:	6cea      	ldr	r2, [r5, #76]	; 0x4c
 800605a:	f002 0201 	and.w	r2, r2, #1
 800605e:	9204      	str	r2, [sp, #16]
 8006060:	f04f 4a90 	mov.w	sl, #1207959552	; 0x48000000
 8006064:	9a04      	ldr	r2, [sp, #16]
 8006066:	f04f 0810 	mov.w	r8, #16
 800606a:	f241 2201 	movw	r2, #4609	; 0x1201
 800606e:	629a      	str	r2, [r3, #40]	; 0x28
 8006070:	2702      	movs	r7, #2
 8006072:	f44f 1288 	mov.w	r2, #1114112	; 0x110000
 8006076:	4618      	mov	r0, r3
 8006078:	f8ca 8028 	str.w	r8, [sl, #40]	; 0x28
 800607c:	2308      	movs	r3, #8
 800607e:	a939      	add	r1, sp, #228	; 0xe4
 8006080:	e9cd 3239 	strd	r3, r2, [sp, #228]	; 0xe4
 8006084:	f04f 0b09 	mov.w	fp, #9
 8006088:	973b      	str	r7, [sp, #236]	; 0xec
 800608a:	f7fc f903 	bl	8002294 <HAL_GPIO_Init>
 800608e:	486e      	ldr	r0, [pc, #440]	; (8006248 <main+0x3e4>)
 8006090:	f8cd b0e4 	str.w	fp, [sp, #228]	; 0xe4
 8006094:	a939      	add	r1, sp, #228	; 0xe4
 8006096:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 800609a:	f7fc f8fb 	bl	8002294 <HAL_GPIO_Init>
 800609e:	f44f 1244 	mov.w	r2, #3211264	; 0x310000
 80060a2:	f44f 6c00 	mov.w	ip, #2048	; 0x800
 80060a6:	a939      	add	r1, sp, #228	; 0xe4
 80060a8:	4650      	mov	r0, sl
 80060aa:	e9cd c239 	strd	ip, r2, [sp, #228]	; 0xe4
 80060ae:	973b      	str	r7, [sp, #236]	; 0xec
 80060b0:	f7fc f8f0 	bl	8002294 <HAL_GPIO_Init>
 80060b4:	4b63      	ldr	r3, [pc, #396]	; (8006244 <main+0x3e0>)
 80060b6:	4618      	mov	r0, r3
 80060b8:	f241 2301 	movw	r3, #4609	; 0x1201
 80060bc:	f04f 0901 	mov.w	r9, #1
 80060c0:	a939      	add	r1, sp, #228	; 0xe4
 80060c2:	9339      	str	r3, [sp, #228]	; 0xe4
 80060c4:	2303      	movs	r3, #3
 80060c6:	933c      	str	r3, [sp, #240]	; 0xf0
 80060c8:	e9cd 963a 	strd	r9, r6, [sp, #232]	; 0xe8
 80060cc:	f7fc f8e2 	bl	8002294 <HAL_GPIO_Init>
 80060d0:	4b5c      	ldr	r3, [pc, #368]	; (8006244 <main+0x3e0>)
 80060d2:	9739      	str	r7, [sp, #228]	; 0xe4
 80060d4:	4618      	mov	r0, r3
 80060d6:	a939      	add	r1, sp, #228	; 0xe4
 80060d8:	e9cd 673a 	strd	r6, r7, [sp, #232]	; 0xe8
 80060dc:	f7fc f8da 	bl	8002294 <HAL_GPIO_Init>
 80060e0:	2303      	movs	r3, #3
 80060e2:	a939      	add	r1, sp, #228	; 0xe4
 80060e4:	4650      	mov	r0, sl
 80060e6:	933c      	str	r3, [sp, #240]	; 0xf0
 80060e8:	e9cd 8939 	strd	r8, r9, [sp, #228]	; 0xe4
 80060ec:	973b      	str	r7, [sp, #236]	; 0xec
 80060ee:	f7fc f8d1 	bl	8002294 <HAL_GPIO_Init>
 80060f2:	4631      	mov	r1, r6
 80060f4:	4658      	mov	r0, fp
 80060f6:	f7fa f86b 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80060fa:	4658      	mov	r0, fp
 80060fc:	f7fc fa4a 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 8006100:	4631      	mov	r1, r6
 8006102:	2028      	movs	r0, #40	; 0x28
 8006104:	f7fa f864 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006108:	2028      	movs	r0, #40	; 0x28
 800610a:	f7fc fa43 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 800610e:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8006110:	ea43 0309 	orr.w	r3, r3, r9
 8006114:	64ab      	str	r3, [r5, #72]	; 0x48
 8006116:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8006118:	ea03 0309 	and.w	r3, r3, r9
 800611c:	4631      	mov	r1, r6
 800611e:	9303      	str	r3, [sp, #12]
 8006120:	200c      	movs	r0, #12
 8006122:	9b03      	ldr	r3, [sp, #12]
 8006124:	f7fa f854 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006128:	200c      	movs	r0, #12
 800612a:	f7fc fa33 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 800612e:	4631      	mov	r1, r6
 8006130:	200d      	movs	r0, #13
 8006132:	f7fa f84d 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006136:	200d      	movs	r0, #13
 8006138:	f7fc fa2c 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 800613c:	4631      	mov	r1, r6
 800613e:	4640      	mov	r0, r8
 8006140:	f7fa f846 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006144:	4640      	mov	r0, r8
 8006146:	f7fc fa25 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 800614a:	4631      	mov	r1, r6
 800614c:	2011      	movs	r0, #17
 800614e:	f7fa f83f 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006152:	2011      	movs	r0, #17
 8006154:	f7fc fa1e 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 8006158:	f8df e100 	ldr.w	lr, [pc, #256]	; 800625c <main+0x3f8>
 800615c:	483b      	ldr	r0, [pc, #236]	; (800624c <main+0x3e8>)
 800615e:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8006162:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006166:	210c      	movs	r1, #12
 8006168:	f44f 7340 	mov.w	r3, #768	; 0x300
 800616c:	e9c4 6656 	strd	r6, r6, [r4, #344]	; 0x158
 8006170:	e9c4 665a 	strd	r6, r6, [r4, #360]	; 0x168
 8006174:	e9c4 e253 	strd	lr, r2, [r4, #332]	; 0x14c
 8006178:	e9c4 1358 	strd	r1, r3, [r4, #352]	; 0x160
 800617c:	f8c4 6170 	str.w	r6, [r4, #368]	; 0x170
 8006180:	f7fc fafa 	bl	8002778 <HAL_UART_Init.constprop.0>
 8006184:	2800      	cmp	r0, #0
 8006186:	f040 8181 	bne.w	800648c <main+0x628>
 800618a:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 800618e:	2208      	movs	r2, #8
 8006190:	f894 3141 	ldrb.w	r3, [r4, #321]	; 0x141
 8006194:	492e      	ldr	r1, [pc, #184]	; (8006250 <main+0x3ec>)
 8006196:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
 800619a:	f44f 7c82 	mov.w	ip, #260	; 0x104
 800619e:	f44f 7200 	mov.w	r2, #512	; 0x200
 80061a2:	f8c4 60f0 	str.w	r6, [r4, #240]	; 0xf0
 80061a6:	2607      	movs	r6, #7
 80061a8:	e9c4 003d 	strd	r0, r0, [r4, #244]	; 0xf4
 80061ac:	e9c4 0040 	strd	r0, r0, [r4, #256]	; 0x100
 80061b0:	e9c4 0042 	strd	r0, r0, [r4, #264]	; 0x108
 80061b4:	e9c4 1c39 	strd	r1, ip, [r4, #228]	; 0xe4
 80061b8:	f8c4 00ec 	str.w	r0, [r4, #236]	; 0xec
 80061bc:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 80061c0:	f003 0bff 	and.w	fp, r3, #255	; 0xff
 80061c4:	f8c4 20fc 	str.w	r2, [r4, #252]	; 0xfc
 80061c8:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	f000 8383 	beq.w	80068d8 <main+0xa74>
 80061d2:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 80061d6:	680b      	ldr	r3, [r1, #0]
 80061d8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80061dc:	600b      	str	r3, [r1, #0]
 80061de:	460f      	mov	r7, r1
 80061e0:	f44f 7341 	mov.w	r3, #772	; 0x304
 80061e4:	f640 7208 	movw	r2, #3848	; 0xf08
 80061e8:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
 80061ec:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80061f0:	4310      	orrs	r0, r2
 80061f2:	4319      	orrs	r1, r3
 80061f4:	2601      	movs	r6, #1
 80061f6:	2300      	movs	r3, #0
 80061f8:	6039      	str	r1, [r7, #0]
 80061fa:	6078      	str	r0, [r7, #4]
 80061fc:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8006200:	f884 6141 	strb.w	r6, [r4, #321]	; 0x141
 8006204:	f894 2211 	ldrb.w	r2, [r4, #529]	; 0x211
 8006208:	4912      	ldr	r1, [pc, #72]	; (8006254 <main+0x3f0>)
 800620a:	4813      	ldr	r0, [pc, #76]	; (8006258 <main+0x3f4>)
 800620c:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8006210:	e9c4 3378 	strd	r3, r3, [r4, #480]	; 0x1e0
 8006214:	e9c4 337a 	strd	r3, r3, [r4, #488]	; 0x1e8
 8006218:	23a4      	movs	r3, #164	; 0xa4
 800621a:	e9c4 1375 	strd	r1, r3, [r4, #468]	; 0x1d4
 800621e:	f8c4 61dc 	str.w	r6, [r4, #476]	; 0x1dc
 8006222:	f002 05ff 	and.w	r5, r2, #255	; 0xff
 8006226:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
 800622a:	2a00      	cmp	r2, #0
 800622c:	f000 82f1 	beq.w	8006812 <main+0x9ae>
 8006230:	e016      	b.n	8006260 <main+0x3fc>
 8006232:	bf00      	nop
 8006234:	40022000 	.word	0x40022000
 8006238:	40021000 	.word	0x40021000
 800623c:	20000000 	.word	0x20000000
 8006240:	08007d40 	.word	0x08007d40
 8006244:	48000400 	.word	0x48000400
 8006248:	48001c00 	.word	0x48001c00
 800624c:	200001f8 	.word	0x200001f8
 8006250:	40013000 	.word	0x40013000
 8006254:	10909cec 	.word	0x10909cec
 8006258:	40005800 	.word	0x40005800
 800625c:	40004400 	.word	0x40004400
 8006260:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
 8006264:	f8d4 01dc 	ldr.w	r0, [r4, #476]	; 0x1dc
 8006268:	2224      	movs	r2, #36	; 0x24
 800626a:	f884 2211 	strb.w	r2, [r4, #529]	; 0x211
 800626e:	6819      	ldr	r1, [r3, #0]
 8006270:	f8d4 21d4 	ldr.w	r2, [r4, #468]	; 0x1d4
 8006274:	f021 0101 	bic.w	r1, r1, #1
 8006278:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800627c:	6019      	str	r1, [r3, #0]
 800627e:	611a      	str	r2, [r3, #16]
 8006280:	689a      	ldr	r2, [r3, #8]
 8006282:	2801      	cmp	r0, #1
 8006284:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006288:	609a      	str	r2, [r3, #8]
 800628a:	f8d4 21d8 	ldr.w	r2, [r4, #472]	; 0x1d8
 800628e:	f000 82bc 	beq.w	800680a <main+0x9a6>
 8006292:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8006296:	2802      	cmp	r0, #2
 8006298:	609a      	str	r2, [r3, #8]
 800629a:	bf04      	itt	eq
 800629c:	f44f 6200 	moveq.w	r2, #2048	; 0x800
 80062a0:	605a      	streq	r2, [r3, #4]
 80062a2:	6859      	ldr	r1, [r3, #4]
 80062a4:	f8d4 51e8 	ldr.w	r5, [r4, #488]	; 0x1e8
 80062a8:	e9d4 2678 	ldrd	r2, r6, [r4, #480]	; 0x1e0
 80062ac:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
 80062b0:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80062b4:	6059      	str	r1, [r3, #4]
 80062b6:	4332      	orrs	r2, r6
 80062b8:	68d8      	ldr	r0, [r3, #12]
 80062ba:	f8d4 11ec 	ldr.w	r1, [r4, #492]	; 0x1ec
 80062be:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80062c2:	f8d4 51f0 	ldr.w	r5, [r4, #496]	; 0x1f0
 80062c6:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 80062ca:	4329      	orrs	r1, r5
 80062cc:	60d8      	str	r0, [r3, #12]
 80062ce:	60da      	str	r2, [r3, #12]
 80062d0:	6019      	str	r1, [r3, #0]
 80062d2:	6819      	ldr	r1, [r3, #0]
 80062d4:	2200      	movs	r2, #0
 80062d6:	f041 0101 	orr.w	r1, r1, #1
 80062da:	2020      	movs	r0, #32
 80062dc:	6019      	str	r1, [r3, #0]
 80062de:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
 80062e2:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 80062e6:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200
 80062ea:	f884 2212 	strb.w	r2, [r4, #530]	; 0x212
 80062ee:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 80062f2:	4281      	cmp	r1, r0
 80062f4:	b2cd      	uxtb	r5, r1
 80062f6:	f040 80c9 	bne.w	800648c <main+0x628>
 80062fa:	f894 1210 	ldrb.w	r1, [r4, #528]	; 0x210
 80062fe:	2901      	cmp	r1, #1
 8006300:	f000 80c4 	beq.w	800648c <main+0x628>
 8006304:	2024      	movs	r0, #36	; 0x24
 8006306:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 800630a:	6819      	ldr	r1, [r3, #0]
 800630c:	f021 0101 	bic.w	r1, r1, #1
 8006310:	6019      	str	r1, [r3, #0]
 8006312:	6819      	ldr	r1, [r3, #0]
 8006314:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8006318:	6019      	str	r1, [r3, #0]
 800631a:	6819      	ldr	r1, [r3, #0]
 800631c:	6019      	str	r1, [r3, #0]
 800631e:	6819      	ldr	r1, [r3, #0]
 8006320:	f041 0101 	orr.w	r1, r1, #1
 8006324:	6019      	str	r1, [r3, #0]
 8006326:	f884 5211 	strb.w	r5, [r4, #529]	; 0x211
 800632a:	f894 1211 	ldrb.w	r1, [r4, #529]	; 0x211
 800632e:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 8006332:	2920      	cmp	r1, #32
 8006334:	b2ce      	uxtb	r6, r1
 8006336:	f040 80a9 	bne.w	800648c <main+0x628>
 800633a:	f884 0211 	strb.w	r0, [r4, #529]	; 0x211
 800633e:	6819      	ldr	r1, [r3, #0]
 8006340:	4886      	ldr	r0, [pc, #536]	; (800655c <main+0x6f8>)
 8006342:	4d87      	ldr	r5, [pc, #540]	; (8006560 <main+0x6fc>)
 8006344:	f021 0101 	bic.w	r1, r1, #1
 8006348:	6019      	str	r1, [r3, #0]
 800634a:	6819      	ldr	r1, [r3, #0]
 800634c:	f421 6170 	bic.w	r1, r1, #3840	; 0xf00
 8006350:	6019      	str	r1, [r3, #0]
 8006352:	6819      	ldr	r1, [r3, #0]
 8006354:	f041 0101 	orr.w	r1, r1, #1
 8006358:	6019      	str	r1, [r3, #0]
 800635a:	f44f 2161 	mov.w	r1, #921600	; 0xe1000
 800635e:	230c      	movs	r3, #12
 8006360:	e9c0 5100 	strd	r5, r1, [r0]
 8006364:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8006368:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800636c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8006370:	f884 6211 	strb.w	r6, [r4, #529]	; 0x211
 8006374:	f884 2210 	strb.w	r2, [r4, #528]	; 0x210
 8006378:	6102      	str	r2, [r0, #16]
 800637a:	6143      	str	r3, [r0, #20]
 800637c:	f7fc f9fc 	bl	8002778 <HAL_UART_Init.constprop.0>
 8006380:	4605      	mov	r5, r0
 8006382:	2800      	cmp	r0, #0
 8006384:	f040 8082 	bne.w	800648c <main+0x628>
 8006388:	222c      	movs	r2, #44	; 0x2c
 800638a:	4629      	mov	r1, r5
 800638c:	a817      	add	r0, sp, #92	; 0x5c
 800638e:	f000 fdb2 	bl	8006ef6 <memset>
 8006392:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8006396:	4e73      	ldr	r6, [pc, #460]	; (8006564 <main+0x700>)
 8006398:	60a5      	str	r5, [r4, #8]
 800639a:	201f      	movs	r0, #31
 800639c:	f240 32e7 	movw	r2, #999	; 0x3e7
 80063a0:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80063a4:	e9c4 5507 	strd	r5, r5, [r4, #28]
 80063a8:	e9c4 0203 	strd	r0, r2, [r4, #12]
 80063ac:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 80063b0:	6066      	str	r6, [r4, #4]
 80063b2:	2b00      	cmp	r3, #0
 80063b4:	f000 8200 	beq.w	80067b8 <main+0x954>
 80063b8:	6863      	ldr	r3, [r4, #4]
 80063ba:	2702      	movs	r7, #2
 80063bc:	f04f 08ca 	mov.w	r8, #202	; 0xca
 80063c0:	2653      	movs	r6, #83	; 0x53
 80063c2:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 80063c6:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
 80063ca:	625e      	str	r6, [r3, #36]	; 0x24
 80063cc:	f7fa f8e6 	bl	800059c <RTC_EnterInitMode.constprop.0>
 80063d0:	2800      	cmp	r0, #0
 80063d2:	d15b      	bne.n	800648c <main+0x628>
 80063d4:	e9d4 1301 	ldrd	r1, r3, [r4, #4]
 80063d8:	688a      	ldr	r2, [r1, #8]
 80063da:	6965      	ldr	r5, [r4, #20]
 80063dc:	69e0      	ldr	r0, [r4, #28]
 80063de:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 80063e2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80063e6:	608a      	str	r2, [r1, #8]
 80063e8:	688a      	ldr	r2, [r1, #8]
 80063ea:	432b      	orrs	r3, r5
 80063ec:	4303      	orrs	r3, r0
 80063ee:	4313      	orrs	r3, r2
 80063f0:	6922      	ldr	r2, [r4, #16]
 80063f2:	608b      	str	r3, [r1, #8]
 80063f4:	610a      	str	r2, [r1, #16]
 80063f6:	690b      	ldr	r3, [r1, #16]
 80063f8:	68e2      	ldr	r2, [r4, #12]
 80063fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80063fe:	610b      	str	r3, [r1, #16]
 8006400:	f7fa f8a4 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006404:	2800      	cmp	r0, #0
 8006406:	d141      	bne.n	800648c <main+0x628>
 8006408:	6860      	ldr	r0, [r4, #4]
 800640a:	6a23      	ldr	r3, [r4, #32]
 800640c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800640e:	69a1      	ldr	r1, [r4, #24]
 8006410:	f894 c024 	ldrb.w	ip, [r4, #36]	; 0x24
 8006414:	f022 0203 	bic.w	r2, r2, #3
 8006418:	64c2      	str	r2, [r0, #76]	; 0x4c
 800641a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800641c:	2501      	movs	r5, #1
 800641e:	430b      	orrs	r3, r1
 8006420:	4313      	orrs	r3, r2
 8006422:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8006426:	45ac      	cmp	ip, r5
 8006428:	64c3      	str	r3, [r0, #76]	; 0x4c
 800642a:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 800642e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8006432:	d02b      	beq.n	800648c <main+0x628>
 8006434:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8006438:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800643c:	6246      	str	r6, [r0, #36]	; 0x24
 800643e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006442:	f7fa f8ab 	bl	800059c <RTC_EnterInitMode.constprop.0>
 8006446:	6863      	ldr	r3, [r4, #4]
 8006448:	b9d8      	cbnz	r0, 8006482 <main+0x61e>
 800644a:	689a      	ldr	r2, [r3, #8]
 800644c:	6018      	str	r0, [r3, #0]
 800644e:	689a      	ldr	r2, [r3, #8]
 8006450:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8006454:	609a      	str	r2, [r3, #8]
 8006456:	689a      	ldr	r2, [r3, #8]
 8006458:	609a      	str	r2, [r3, #8]
 800645a:	f7fa f877 	bl	800054c <RTC_ExitInitMode.constprop.0>
 800645e:	6863      	ldr	r3, [r4, #4]
 8006460:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8006464:	b978      	cbnz	r0, 8006486 <main+0x622>
 8006466:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800646a:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 800646e:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
 8006472:	625e      	str	r6, [r3, #36]	; 0x24
 8006474:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006478:	f7fa f890 	bl	800059c <RTC_EnterInitMode.constprop.0>
 800647c:	6863      	ldr	r3, [r4, #4]
 800647e:	2800      	cmp	r0, #0
 8006480:	d07a      	beq.n	8006578 <main+0x714>
 8006482:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 8006486:	2300      	movs	r3, #0
 8006488:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800648c:	f7fc f8b8 	bl	8002600 <__NVIC_SystemReset>
 8006490:	4b35      	ldr	r3, [pc, #212]	; (8006568 <main+0x704>)
 8006492:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006494:	f042 0201 	orr.w	r2, r2, #1
 8006498:	661a      	str	r2, [r3, #96]	; 0x60
 800649a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800649c:	f002 0201 	and.w	r2, r2, #1
 80064a0:	9208      	str	r2, [sp, #32]
 80064a2:	9a08      	ldr	r2, [sp, #32]
 80064a4:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80064a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80064aa:	659a      	str	r2, [r3, #88]	; 0x58
 80064ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80064ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80064b2:	9307      	str	r3, [sp, #28]
 80064b4:	9b07      	ldr	r3, [sp, #28]
 80064b6:	e4e6      	b.n	8005e86 <main+0x22>
 80064b8:	f003 0303 	and.w	r3, r3, #3
 80064bc:	2b02      	cmp	r3, #2
 80064be:	f47f ad13 	bne.w	8005ee8 <main+0x84>
 80064c2:	4a29      	ldr	r2, [pc, #164]	; (8006568 <main+0x704>)
 80064c4:	4c29      	ldr	r4, [pc, #164]	; (800656c <main+0x708>)
 80064c6:	6813      	ldr	r3, [r2, #0]
 80064c8:	6853      	ldr	r3, [r2, #4]
 80064ca:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 80064ce:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80064d2:	6053      	str	r3, [r2, #4]
 80064d4:	4b24      	ldr	r3, [pc, #144]	; (8006568 <main+0x704>)
 80064d6:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80064da:	f042 0201 	orr.w	r2, r2, #1
 80064de:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80064e2:	6820      	ldr	r0, [r4, #0]
 80064e4:	e003      	b.n	80064ee <main+0x68a>
 80064e6:	6822      	ldr	r2, [r4, #0]
 80064e8:	1a12      	subs	r2, r2, r0
 80064ea:	2a02      	cmp	r2, #2
 80064ec:	d8ce      	bhi.n	800648c <main+0x628>
 80064ee:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80064f2:	0795      	lsls	r5, r2, #30
 80064f4:	d5f7      	bpl.n	80064e6 <main+0x682>
 80064f6:	68da      	ldr	r2, [r3, #12]
 80064f8:	f002 0003 	and.w	r0, r2, #3
 80064fc:	2802      	cmp	r0, #2
 80064fe:	f43f ad0a 	beq.w	8005f16 <main+0xb2>
 8006502:	290c      	cmp	r1, #12
 8006504:	d0c2      	beq.n	800648c <main+0x628>
 8006506:	4b18      	ldr	r3, [pc, #96]	; (8006568 <main+0x704>)
 8006508:	681a      	ldr	r2, [r3, #0]
 800650a:	0152      	lsls	r2, r2, #5
 800650c:	d4be      	bmi.n	800648c <main+0x628>
 800650e:	681a      	ldr	r2, [r3, #0]
 8006510:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8006514:	601a      	str	r2, [r3, #0]
 8006516:	6821      	ldr	r1, [r4, #0]
 8006518:	e003      	b.n	8006522 <main+0x6be>
 800651a:	6822      	ldr	r2, [r4, #0]
 800651c:	1a52      	subs	r2, r2, r1
 800651e:	2a02      	cmp	r2, #2
 8006520:	d8b4      	bhi.n	800648c <main+0x628>
 8006522:	681a      	ldr	r2, [r3, #0]
 8006524:	0197      	lsls	r7, r2, #6
 8006526:	d4f8      	bmi.n	800651a <main+0x6b6>
 8006528:	68d8      	ldr	r0, [r3, #12]
 800652a:	4911      	ldr	r1, [pc, #68]	; (8006570 <main+0x70c>)
 800652c:	4a11      	ldr	r2, [pc, #68]	; (8006574 <main+0x710>)
 800652e:	4d0e      	ldr	r5, [pc, #56]	; (8006568 <main+0x704>)
 8006530:	4001      	ands	r1, r0
 8006532:	430a      	orrs	r2, r1
 8006534:	60da      	str	r2, [r3, #12]
 8006536:	681a      	ldr	r2, [r3, #0]
 8006538:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800653c:	601a      	str	r2, [r3, #0]
 800653e:	68da      	ldr	r2, [r3, #12]
 8006540:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006544:	60da      	str	r2, [r3, #12]
 8006546:	6822      	ldr	r2, [r4, #0]
 8006548:	682b      	ldr	r3, [r5, #0]
 800654a:	019e      	lsls	r6, r3, #6
 800654c:	f53f acf7 	bmi.w	8005f3e <main+0xda>
 8006550:	6823      	ldr	r3, [r4, #0]
 8006552:	1a9b      	subs	r3, r3, r2
 8006554:	2b02      	cmp	r3, #2
 8006556:	d9f7      	bls.n	8006548 <main+0x6e4>
 8006558:	e798      	b.n	800648c <main+0x628>
 800655a:	bf00      	nop
 800655c:	2000036c 	.word	0x2000036c
 8006560:	40013800 	.word	0x40013800
 8006564:	40002800 	.word	0x40002800
 8006568:	40021000 	.word	0x40021000
 800656c:	200000ac 	.word	0x200000ac
 8006570:	019d808c 	.word	0x019d808c
 8006574:	38000a02 	.word	0x38000a02
 8006578:	f242 1201 	movw	r2, #8449	; 0x2101
 800657c:	605a      	str	r2, [r3, #4]
 800657e:	f7f9 ffe5 	bl	800054c <RTC_ExitInitMode.constprop.0>
 8006582:	6862      	ldr	r2, [r4, #4]
 8006584:	4603      	mov	r3, r0
 8006586:	f8c2 9024 	str.w	r9, [r2, #36]	; 0x24
 800658a:	2800      	cmp	r0, #0
 800658c:	f47f af7b 	bne.w	8006486 <main+0x622>
 8006590:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006594:	a817      	add	r0, sp, #92	; 0x5c
 8006596:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
 800659a:	e9cd 331e 	strd	r3, r3, [sp, #120]	; 0x78
 800659e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80065a2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80065a6:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80065aa:	f88d 305e 	strb.w	r3, [sp, #94]	; 0x5e
 80065ae:	9318      	str	r3, [sp, #96]	; 0x60
 80065b0:	931c      	str	r3, [sp, #112]	; 0x70
 80065b2:	f88d 5080 	strb.w	r5, [sp, #128]	; 0x80
 80065b6:	9221      	str	r2, [sp, #132]	; 0x84
 80065b8:	f7f9 fee0 	bl	800037c <HAL_RTC_SetAlarm_IT.constprop.0>
 80065bc:	2800      	cmp	r0, #0
 80065be:	f47f af65 	bne.w	800648c <main+0x628>
 80065c2:	4eb3      	ldr	r6, [pc, #716]	; (8006890 <main+0xa2c>)
 80065c4:	49b3      	ldr	r1, [pc, #716]	; (8006894 <main+0xa30>)
 80065c6:	48b4      	ldr	r0, [pc, #720]	; (8006898 <main+0xa34>)
 80065c8:	4db4      	ldr	r5, [pc, #720]	; (800689c <main+0xa38>)
 80065ca:	f000 fe35 	bl	8007238 <__wrap_printf>
 80065ce:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80065d0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80065d2:	e896 0003 	ldmia.w	r6, {r0, r1}
 80065d6:	f8df c2fc 	ldr.w	ip, [pc, #764]	; 80068d4 <main+0xa70>
 80065da:	f884 7048 	strb.w	r7, [r4, #72]	; 0x48
 80065de:	e885 0003 	stmia.w	r5, {r0, r1}
 80065e2:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80065e6:	f8c4 c04c 	str.w	ip, [r4, #76]	; 0x4c
 80065ea:	f000 fdeb 	bl	80071c4 <malloc>
 80065ee:	4606      	mov	r6, r0
 80065f0:	2800      	cmp	r0, #0
 80065f2:	f000 80dd 	beq.w	80067b0 <main+0x94c>
 80065f6:	49aa      	ldr	r1, [pc, #680]	; (80068a0 <main+0xa3c>)
 80065f8:	22c8      	movs	r2, #200	; 0xc8
 80065fa:	f44f 7092 	mov.w	r0, #292	; 0x124
 80065fe:	f7fa fca7 	bl	8000f50 <acc_rss_integration_mem_alloc_debug>
 8006602:	4605      	mov	r5, r0
 8006604:	2800      	cmp	r0, #0
 8006606:	f000 80cc 	beq.w	80067a2 <main+0x93e>
 800660a:	f44f 7292 	mov.w	r2, #292	; 0x124
 800660e:	2100      	movs	r1, #0
 8006610:	f000 fc71 	bl	8006ef6 <memset>
 8006614:	2101      	movs	r1, #1
 8006616:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
 800661a:	f240 1301 	movw	r3, #257	; 0x101
 800661e:	6029      	str	r1, [r5, #0]
 8006620:	61ea      	str	r2, [r5, #28]
 8006622:	842b      	strh	r3, [r5, #32]
 8006624:	462a      	mov	r2, r5
 8006626:	f105 0130 	add.w	r1, r5, #48	; 0x30
 800662a:	2300      	movs	r3, #0
 800662c:	6313      	str	r3, [r2, #48]	; 0x30
 800662e:	f882 3034 	strb.w	r3, [r2, #52]	; 0x34
 8006632:	3208      	adds	r2, #8
 8006634:	428a      	cmp	r2, r1
 8006636:	d1f9      	bne.n	800662c <main+0x7c8>
 8006638:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800663c:	f506 6100 	add.w	r1, r6, #2048	; 0x800
 8006640:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006644:	846b      	strh	r3, [r5, #34]	; 0x22
 8006646:	626b      	str	r3, [r5, #36]	; 0x24
 8006648:	852b      	strh	r3, [r5, #40]	; 0x28
 800664a:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 800664e:	e9c5 2104 	strd	r2, r1, [r5, #16]
 8006652:	61ab      	str	r3, [r5, #24]
 8006654:	e9c5 0602 	strd	r0, r6, [r5, #8]
 8006658:	606e      	str	r6, [r5, #4]
 800665a:	4628      	mov	r0, r5
 800665c:	f7fb fa8a 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 8006660:	2100      	movs	r1, #0
 8006662:	f7fb fa65 	bl	8001b30 <acc_rss_assembly_test_enable>
 8006666:	4628      	mov	r0, r5
 8006668:	f7fc fc52 	bl	8002f10 <run_test.constprop.0>
 800666c:	4607      	mov	r7, r0
 800666e:	2800      	cmp	r0, #0
 8006670:	f000 8093 	beq.w	800679a <main+0x936>
 8006674:	4628      	mov	r0, r5
 8006676:	f7fb fa7d 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 800667a:	2101      	movs	r1, #1
 800667c:	f7fb fa58 	bl	8001b30 <acc_rss_assembly_test_enable>
 8006680:	4628      	mov	r0, r5
 8006682:	f7fc fc45 	bl	8002f10 <run_test.constprop.0>
 8006686:	4680      	mov	r8, r0
 8006688:	2800      	cmp	r0, #0
 800668a:	f000 8081 	beq.w	8006790 <main+0x92c>
 800668e:	4628      	mov	r0, r5
 8006690:	f7fb fa70 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 8006694:	2102      	movs	r1, #2
 8006696:	f7fb fa4b 	bl	8001b30 <acc_rss_assembly_test_enable>
 800669a:	4628      	mov	r0, r5
 800669c:	f7fc fc38 	bl	8002f10 <run_test.constprop.0>
 80066a0:	4680      	mov	r8, r0
 80066a2:	2800      	cmp	r0, #0
 80066a4:	d06f      	beq.n	8006786 <main+0x922>
 80066a6:	4628      	mov	r0, r5
 80066a8:	f7fb fa64 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 80066ac:	2103      	movs	r1, #3
 80066ae:	f7fb fa3f 	bl	8001b30 <acc_rss_assembly_test_enable>
 80066b2:	4628      	mov	r0, r5
 80066b4:	f7fc fc2c 	bl	8002f10 <run_test.constprop.0>
 80066b8:	4680      	mov	r8, r0
 80066ba:	2800      	cmp	r0, #0
 80066bc:	d05e      	beq.n	800677c <main+0x918>
 80066be:	4628      	mov	r0, r5
 80066c0:	f7fb fa58 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 80066c4:	2104      	movs	r1, #4
 80066c6:	f7fb fa33 	bl	8001b30 <acc_rss_assembly_test_enable>
 80066ca:	4628      	mov	r0, r5
 80066cc:	f7fc fc20 	bl	8002f10 <run_test.constprop.0>
 80066d0:	4680      	mov	r8, r0
 80066d2:	2800      	cmp	r0, #0
 80066d4:	d03b      	beq.n	800674e <main+0x8ea>
 80066d6:	4628      	mov	r0, r5
 80066d8:	f7fb fa4c 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 80066dc:	2105      	movs	r1, #5
 80066de:	f7fb fa27 	bl	8001b30 <acc_rss_assembly_test_enable>
 80066e2:	4628      	mov	r0, r5
 80066e4:	f7fc fc14 	bl	8002f10 <run_test.constprop.0>
 80066e8:	b320      	cbz	r0, 8006734 <main+0x8d0>
 80066ea:	4628      	mov	r0, r5
 80066ec:	f7fa fc28 	bl	8000f40 <acc_rss_integration_mem_free>
 80066f0:	2300      	movs	r3, #0
 80066f2:	4630      	mov	r0, r6
 80066f4:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 80066f8:	f000 fd6c 	bl	80071d4 <free>
 80066fc:	b99f      	cbnz	r7, 8006726 <main+0x8c2>
 80066fe:	e7fe      	b.n	80066fe <main+0x89a>
 8006700:	681a      	ldr	r2, [r3, #0]
 8006702:	4968      	ldr	r1, [pc, #416]	; (80068a4 <main+0xa40>)
 8006704:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006708:	601a      	str	r2, [r3, #0]
 800670a:	68da      	ldr	r2, [r3, #12]
 800670c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006710:	60da      	str	r2, [r3, #12]
 8006712:	6822      	ldr	r2, [r4, #0]
 8006714:	680b      	ldr	r3, [r1, #0]
 8006716:	0198      	lsls	r0, r3, #6
 8006718:	f53f ac11 	bmi.w	8005f3e <main+0xda>
 800671c:	6823      	ldr	r3, [r4, #0]
 800671e:	1a9b      	subs	r3, r3, r2
 8006720:	2b02      	cmp	r3, #2
 8006722:	d9f7      	bls.n	8006714 <main+0x8b0>
 8006724:	e6b2      	b.n	800648c <main+0x628>
 8006726:	4860      	ldr	r0, [pc, #384]	; (80068a8 <main+0xa44>)
 8006728:	f000 fd70 	bl	800720c <__wrap_puts>
 800672c:	485f      	ldr	r0, [pc, #380]	; (80068ac <main+0xa48>)
 800672e:	f000 fd6d 	bl	800720c <__wrap_puts>
 8006732:	e7e4      	b.n	80066fe <main+0x89a>
 8006734:	485e      	ldr	r0, [pc, #376]	; (80068b0 <main+0xa4c>)
 8006736:	f000 fd69 	bl	800720c <__wrap_puts>
 800673a:	4628      	mov	r0, r5
 800673c:	f7fa fc00 	bl	8000f40 <acc_rss_integration_mem_free>
 8006740:	2300      	movs	r3, #0
 8006742:	4630      	mov	r0, r6
 8006744:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 8006748:	f000 fd44 	bl	80071d4 <free>
 800674c:	e7d7      	b.n	80066fe <main+0x89a>
 800674e:	4859      	ldr	r0, [pc, #356]	; (80068b4 <main+0xa50>)
 8006750:	f000 fd5c 	bl	800720c <__wrap_puts>
 8006754:	4628      	mov	r0, r5
 8006756:	f7fb fa0d 	bl	8001b74 <acc_rss_assembly_test_disable_all_tests>
 800675a:	2105      	movs	r1, #5
 800675c:	f7fb f9e8 	bl	8001b30 <acc_rss_assembly_test_enable>
 8006760:	4628      	mov	r0, r5
 8006762:	f7fc fbd5 	bl	8002f10 <run_test.constprop.0>
 8006766:	2800      	cmp	r0, #0
 8006768:	d0e4      	beq.n	8006734 <main+0x8d0>
 800676a:	4628      	mov	r0, r5
 800676c:	f7fa fbe8 	bl	8000f40 <acc_rss_integration_mem_free>
 8006770:	4630      	mov	r0, r6
 8006772:	e9c4 880a 	strd	r8, r8, [r4, #40]	; 0x28
 8006776:	f000 fd2d 	bl	80071d4 <free>
 800677a:	e7c0      	b.n	80066fe <main+0x89a>
 800677c:	484e      	ldr	r0, [pc, #312]	; (80068b8 <main+0xa54>)
 800677e:	f000 fd45 	bl	800720c <__wrap_puts>
 8006782:	4647      	mov	r7, r8
 8006784:	e79b      	b.n	80066be <main+0x85a>
 8006786:	484d      	ldr	r0, [pc, #308]	; (80068bc <main+0xa58>)
 8006788:	f000 fd40 	bl	800720c <__wrap_puts>
 800678c:	4647      	mov	r7, r8
 800678e:	e78a      	b.n	80066a6 <main+0x842>
 8006790:	484b      	ldr	r0, [pc, #300]	; (80068c0 <main+0xa5c>)
 8006792:	f000 fd3b 	bl	800720c <__wrap_puts>
 8006796:	4647      	mov	r7, r8
 8006798:	e779      	b.n	800668e <main+0x82a>
 800679a:	484a      	ldr	r0, [pc, #296]	; (80068c4 <main+0xa60>)
 800679c:	f000 fd36 	bl	800720c <__wrap_puts>
 80067a0:	e768      	b.n	8006674 <main+0x810>
 80067a2:	4849      	ldr	r0, [pc, #292]	; (80068c8 <main+0xa64>)
 80067a4:	f000 fd32 	bl	800720c <__wrap_puts>
 80067a8:	4630      	mov	r0, r6
 80067aa:	f000 fd13 	bl	80071d4 <free>
 80067ae:	e7a6      	b.n	80066fe <main+0x89a>
 80067b0:	4846      	ldr	r0, [pc, #280]	; (80068cc <main+0xa68>)
 80067b2:	f000 fd2b 	bl	800720c <__wrap_puts>
 80067b6:	e7a2      	b.n	80066fe <main+0x89a>
 80067b8:	2254      	movs	r2, #84	; 0x54
 80067ba:	a83a      	add	r0, sp, #232	; 0xe8
 80067bc:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80067c0:	f000 fb99 	bl	8006ef6 <memset>
 80067c4:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80067c8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80067cc:	a839      	add	r0, sp, #228	; 0xe4
 80067ce:	9239      	str	r2, [sp, #228]	; 0xe4
 80067d0:	934f      	str	r3, [sp, #316]	; 0x13c
 80067d2:	f7fb fb49 	bl	8001e68 <HAL_RCCEx_PeriphCLKConfig>
 80067d6:	4601      	mov	r1, r0
 80067d8:	2800      	cmp	r0, #0
 80067da:	f47f ae57 	bne.w	800648c <main+0x628>
 80067de:	4a31      	ldr	r2, [pc, #196]	; (80068a4 <main+0xa40>)
 80067e0:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80067e4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80067e8:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80067ec:	9001      	str	r0, [sp, #4]
 80067ee:	2003      	movs	r0, #3
 80067f0:	f7f9 fcee 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 80067f4:	2003      	movs	r0, #3
 80067f6:	f7fb fecd 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 80067fa:	9901      	ldr	r1, [sp, #4]
 80067fc:	2029      	movs	r0, #41	; 0x29
 80067fe:	f7f9 fce7 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006802:	2029      	movs	r0, #41	; 0x29
 8006804:	f7fb fec6 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 8006808:	e5d6      	b.n	80063b8 <main+0x554>
 800680a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800680e:	609a      	str	r2, [r3, #8]
 8006810:	e547      	b.n	80062a2 <main+0x43e>
 8006812:	4629      	mov	r1, r5
 8006814:	2258      	movs	r2, #88	; 0x58
 8006816:	a823      	add	r0, sp, #140	; 0x8c
 8006818:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 800681c:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 8006820:	f884 5210 	strb.w	r5, [r4, #528]	; 0x210
 8006824:	9516      	str	r5, [sp, #88]	; 0x58
 8006826:	f000 fb66 	bl	8006ef6 <memset>
 800682a:	2380      	movs	r3, #128	; 0x80
 800682c:	a822      	add	r0, sp, #136	; 0x88
 800682e:	952f      	str	r5, [sp, #188]	; 0xbc
 8006830:	9322      	str	r3, [sp, #136]	; 0x88
 8006832:	f7fb fb19 	bl	8001e68 <HAL_RCCEx_PeriphCLKConfig>
 8006836:	4605      	mov	r5, r0
 8006838:	2800      	cmp	r0, #0
 800683a:	f47f ae27 	bne.w	800648c <main+0x628>
 800683e:	4f19      	ldr	r7, [pc, #100]	; (80068a4 <main+0xa40>)
 8006840:	4823      	ldr	r0, [pc, #140]	; (80068d0 <main+0xa6c>)
 8006842:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006844:	f043 0302 	orr.w	r3, r3, #2
 8006848:	64fb      	str	r3, [r7, #76]	; 0x4c
 800684a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800684c:	9614      	str	r6, [sp, #80]	; 0x50
 800684e:	f003 0302 	and.w	r3, r3, #2
 8006852:	930c      	str	r3, [sp, #48]	; 0x30
 8006854:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8006858:	9312      	str	r3, [sp, #72]	; 0x48
 800685a:	2312      	movs	r3, #18
 800685c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800685e:	9313      	str	r3, [sp, #76]	; 0x4c
 8006860:	2203      	movs	r2, #3
 8006862:	a912      	add	r1, sp, #72	; 0x48
 8006864:	2304      	movs	r3, #4
 8006866:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
 800686a:	f7fb fd13 	bl	8002294 <HAL_GPIO_Init>
 800686e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8006870:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006874:	65bb      	str	r3, [r7, #88]	; 0x58
 8006876:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8006878:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800687c:	930b      	str	r3, [sp, #44]	; 0x2c
 800687e:	4629      	mov	r1, r5
 8006880:	2021      	movs	r0, #33	; 0x21
 8006882:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006884:	f7f9 fca4 	bl	80001d0 <HAL_NVIC_SetPriority.constprop.0>
 8006888:	2021      	movs	r0, #33	; 0x21
 800688a:	f7fb fe83 	bl	8002594 <HAL_NVIC_EnableIRQ.part.0>
 800688e:	e4e7      	b.n	8006260 <main+0x3fc>
 8006890:	08008d38 	.word	0x08008d38
 8006894:	08008ce0 	.word	0x08008ce0
 8006898:	0800b768 	.word	0x0800b768
 800689c:	200000dc 	.word	0x200000dc
 80068a0:	0800a938 	.word	0x0800a938
 80068a4:	40021000 	.word	0x40021000
 80068a8:	0800b884 	.word	0x0800b884
 80068ac:	0800b8a0 	.word	0x0800b8a0
 80068b0:	0800b860 	.word	0x0800b860
 80068b4:	0800b838 	.word	0x0800b838
 80068b8:	0800b818 	.word	0x0800b818
 80068bc:	0800b7f8 	.word	0x0800b7f8
 80068c0:	0800b7d4 	.word	0x0800b7d4
 80068c4:	0800b7b0 	.word	0x0800b7b0
 80068c8:	0800b8b8 	.word	0x0800b8b8
 80068cc:	0800b788 	.word	0x0800b788
 80068d0:	48000400 	.word	0x48000400
 80068d4:	016e3600 	.word	0x016e3600
 80068d8:	f884 b140 	strb.w	fp, [r4, #320]	; 0x140
 80068dc:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80068de:	4e56      	ldr	r6, [pc, #344]	; (8006a38 <main+0xbd4>)
 80068e0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80068e4:	662b      	str	r3, [r5, #96]	; 0x60
 80068e6:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80068e8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80068ec:	930a      	str	r3, [sp, #40]	; 0x28
 80068ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80068f0:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80068f2:	f043 0301 	orr.w	r3, r3, #1
 80068f6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80068f8:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80068fa:	970e      	str	r7, [sp, #56]	; 0x38
 80068fc:	f003 0301 	and.w	r3, r3, #1
 8006900:	9309      	str	r3, [sp, #36]	; 0x24
 8006902:	2203      	movs	r2, #3
 8006904:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006906:	9210      	str	r2, [sp, #64]	; 0x40
 8006908:	2305      	movs	r3, #5
 800690a:	4650      	mov	r0, sl
 800690c:	25e0      	movs	r5, #224	; 0xe0
 800690e:	a90d      	add	r1, sp, #52	; 0x34
 8006910:	950d      	str	r5, [sp, #52]	; 0x34
 8006912:	9311      	str	r3, [sp, #68]	; 0x44
 8006914:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 8006918:	2580      	movs	r5, #128	; 0x80
 800691a:	f7fb fcbb 	bl	8002294 <HAL_GPIO_Init>
 800691e:	4947      	ldr	r1, [pc, #284]	; (8006a3c <main+0xbd8>)
 8006920:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 8006924:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006928:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800692c:	4630      	mov	r0, r6
 800692e:	e9c4 bb9d 	strd	fp, fp, [r4, #628]	; 0x274
 8006932:	e9c4 bba2 	strd	fp, fp, [r4, #648]	; 0x288
 8006936:	e9c4 529f 	strd	r5, r2, [r4, #636]	; 0x27c
 800693a:	f8c4 9270 	str.w	r9, [r4, #624]	; 0x270
 800693e:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 8006942:	f7f9 fcc9 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8006946:	4601      	mov	r1, r0
 8006948:	2800      	cmp	r0, #0
 800694a:	f47f ad9f 	bne.w	800648c <main+0x628>
 800694e:	f1a6 0a48 	sub.w	sl, r6, #72	; 0x48
 8006952:	f8df c0ec 	ldr.w	ip, [pc, #236]	; 8006a40 <main+0xbdc>
 8006956:	f8c4 613c 	str.w	r6, [r4, #316]	; 0x13c
 800695a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800695e:	f5a6 76c4 	sub.w	r6, r6, #392	; 0x188
 8006962:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006966:	4650      	mov	r0, sl
 8006968:	e9c4 158c 	strd	r1, r5, [r4, #560]	; 0x230
 800696c:	e9c4 238e 	strd	r2, r3, [r4, #568]	; 0x238
 8006970:	e9c4 1190 	strd	r1, r1, [r4, #576]	; 0x240
 8006974:	f8c4 9228 	str.w	r9, [r4, #552]	; 0x228
 8006978:	f8c4 822c 	str.w	r8, [r4, #556]	; 0x22c
 800697c:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
 8006980:	f8c4 c224 	str.w	ip, [r4, #548]	; 0x224
 8006984:	f7f9 fca8 	bl	80002d8 <HAL_DMA_Init.constprop.0>
 8006988:	2800      	cmp	r0, #0
 800698a:	f47f ad7f 	bne.w	800648c <main+0x628>
 800698e:	e9d4 313a 	ldrd	r3, r1, [r4, #232]	; 0xe8
 8006992:	f8d4 20f4 	ldr.w	r2, [r4, #244]	; 0xf4
 8006996:	f8d4 c0fc 	ldr.w	ip, [r4, #252]	; 0xfc
 800699a:	f8c4 624c 	str.w	r6, [r4, #588]	; 0x24c
 800699e:	f401 4504 	and.w	r5, r1, #33792	; 0x8400
 80069a2:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80069a6:	f8d4 10f8 	ldr.w	r1, [r4, #248]	; 0xf8
 80069aa:	f8d4 6118 	ldr.w	r6, [r4, #280]	; 0x118
 80069ae:	f884 7141 	strb.w	r7, [r4, #321]	; 0x141
 80069b2:	432b      	orrs	r3, r5
 80069b4:	f002 0202 	and.w	r2, r2, #2
 80069b8:	4313      	orrs	r3, r2
 80069ba:	f001 0101 	and.w	r1, r1, #1
 80069be:	430b      	orrs	r3, r1
 80069c0:	f40c 7100 	and.w	r1, ip, #512	; 0x200
 80069c4:	ea43 0e01 	orr.w	lr, r3, r1
 80069c8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80069cc:	f8d4 5108 	ldr.w	r5, [r4, #264]	; 0x108
 80069d0:	f8d4 70e4 	ldr.w	r7, [r4, #228]	; 0xe4
 80069d4:	f8c4 a138 	str.w	sl, [r4, #312]	; 0x138
 80069d8:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80069dc:	f003 0c38 	and.w	ip, r3, #56	; 0x38
 80069e0:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 80069e4:	f005 0210 	and.w	r2, r5, #16
 80069e8:	f006 0608 	and.w	r6, r6, #8
 80069ec:	f8d4 50f0 	ldr.w	r5, [r4, #240]	; 0xf0
 80069f0:	4332      	orrs	r2, r6
 80069f2:	ea4e 0e0c 	orr.w	lr, lr, ip
 80069f6:	683e      	ldr	r6, [r7, #0]
 80069f8:	f003 0c80 	and.w	ip, r3, #128	; 0x80
 80069fc:	ea4e 030c 	orr.w	r3, lr, ip
 8006a00:	f405 6c70 	and.w	ip, r5, #3840	; 0xf00
 8006a04:	f001 0104 	and.w	r1, r1, #4
 8006a08:	f026 0640 	bic.w	r6, r6, #64	; 0x40
 8006a0c:	ea42 020c 	orr.w	r2, r2, ip
 8006a10:	f5b5 6fe0 	cmp.w	r5, #1792	; 0x700
 8006a14:	ea42 0201 	orr.w	r2, r2, r1
 8006a18:	603e      	str	r6, [r7, #0]
 8006a1a:	d808      	bhi.n	8006a2e <main+0xbca>
 8006a1c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006a20:	f43f abe2 	beq.w	80061e8 <main+0x384>
 8006a24:	2100      	movs	r1, #0
 8006a26:	f8c4 110c 	str.w	r1, [r4, #268]	; 0x10c
 8006a2a:	f7ff bbdd 	b.w	80061e8 <main+0x384>
 8006a2e:	f5b5 6f70 	cmp.w	r5, #3840	; 0xf00
 8006a32:	d1f7      	bne.n	8006a24 <main+0xbc0>
 8006a34:	f7ff bbd8 	b.w	80061e8 <main+0x384>
 8006a38:	20000318 	.word	0x20000318
 8006a3c:	4002001c 	.word	0x4002001c
 8006a40:	40020030 	.word	0x40020030

08006a44 <_close>:
int _close(int file)
{
	(void)file;

	return -1;
}
 8006a44:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a48:	4770      	bx	lr
 8006a4a:	bf00      	nop

08006a4c <_lseek>:
	(void)file;
	(void)ptr;
	(void)dir;

	return 0;
}
 8006a4c:	2000      	movs	r0, #0
 8006a4e:	4770      	bx	lr

08006a50 <_read>:
	(void)file;
	(void)ptr;
	(void)len;

	return -1;
}
 8006a50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a54:	4770      	bx	lr
 8006a56:	bf00      	nop

08006a58 <_write>:


int _write(int file, char *ptr, int len)
{
 8006a58:	b510      	push	{r4, lr}
	(void)file;
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 8006a5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
{
 8006a5e:	4614      	mov	r4, r2
	HAL_UART_Transmit(&DEBUG_UART_HANDLE, (uint8_t *)ptr, len, 0xFFFF);
 8006a60:	4802      	ldr	r0, [pc, #8]	; (8006a6c <_write+0x14>)
 8006a62:	b292      	uxth	r2, r2
 8006a64:	f7fe fd96 	bl	8005594 <HAL_UART_Transmit>
	return len;
}
 8006a68:	4620      	mov	r0, r4
 8006a6a:	bd10      	pop	{r4, pc}
 8006a6c:	2000036c 	.word	0x2000036c

08006a70 <Reset_Handler>:
 8006a70:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006aa8 <LoopForever+0x2>
 8006a74:	f7fe fdf0 	bl	8005658 <SystemInit>
 8006a78:	480c      	ldr	r0, [pc, #48]	; (8006aac <LoopForever+0x6>)
 8006a7a:	490d      	ldr	r1, [pc, #52]	; (8006ab0 <LoopForever+0xa>)
 8006a7c:	4a0d      	ldr	r2, [pc, #52]	; (8006ab4 <LoopForever+0xe>)
 8006a7e:	2300      	movs	r3, #0
 8006a80:	e002      	b.n	8006a88 <LoopCopyDataInit>

08006a82 <CopyDataInit>:
 8006a82:	58d4      	ldr	r4, [r2, r3]
 8006a84:	50c4      	str	r4, [r0, r3]
 8006a86:	3304      	adds	r3, #4

08006a88 <LoopCopyDataInit>:
 8006a88:	18c4      	adds	r4, r0, r3
 8006a8a:	428c      	cmp	r4, r1
 8006a8c:	d3f9      	bcc.n	8006a82 <CopyDataInit>
 8006a8e:	4a0a      	ldr	r2, [pc, #40]	; (8006ab8 <LoopForever+0x12>)
 8006a90:	4c0a      	ldr	r4, [pc, #40]	; (8006abc <LoopForever+0x16>)
 8006a92:	2300      	movs	r3, #0
 8006a94:	e001      	b.n	8006a9a <LoopFillZerobss>

08006a96 <FillZerobss>:
 8006a96:	6013      	str	r3, [r2, #0]
 8006a98:	3204      	adds	r2, #4

08006a9a <LoopFillZerobss>:
 8006a9a:	42a2      	cmp	r2, r4
 8006a9c:	d3fb      	bcc.n	8006a96 <FillZerobss>
 8006a9e:	f000 fa03 	bl	8006ea8 <__libc_init_array>
 8006aa2:	f7ff f9df 	bl	8005e64 <main>

08006aa6 <LoopForever>:
 8006aa6:	e7fe      	b.n	8006aa6 <LoopForever>
 8006aa8:	20010000 	.word	0x20010000
 8006aac:	20000000 	.word	0x20000000
 8006ab0:	20000090 	.word	0x20000090
 8006ab4:	0800b9d8 	.word	0x0800b9d8
 8006ab8:	20000090 	.word	0x20000090
 8006abc:	20000400 	.word	0x20000400

08006ac0 <ADC1_IRQHandler>:
 8006ac0:	e7fe      	b.n	8006ac0 <ADC1_IRQHandler>
	...

08006ac4 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8006ac4:	490c      	ldr	r1, [pc, #48]	; (8006af8 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006ac6:	4a0d      	ldr	r2, [pc, #52]	; (8006afc <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8006ac8:	680b      	ldr	r3, [r1, #0]
{
 8006aca:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006acc:	4c0c      	ldr	r4, [pc, #48]	; (8006b00 <_sbrk+0x3c>)
 8006ace:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8006ad0:	b12b      	cbz	r3, 8006ade <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8006ad2:	4418      	add	r0, r3
 8006ad4:	4290      	cmp	r0, r2
 8006ad6:	d807      	bhi.n	8006ae8 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8006ad8:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8006ada:	4618      	mov	r0, r3
 8006adc:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8006ade:	4b09      	ldr	r3, [pc, #36]	; (8006b04 <_sbrk+0x40>)
 8006ae0:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8006ae2:	4418      	add	r0, r3
 8006ae4:	4290      	cmp	r0, r2
 8006ae6:	d9f7      	bls.n	8006ad8 <_sbrk+0x14>
    errno = ENOMEM;
 8006ae8:	f000 f80e 	bl	8006b08 <__errno>
 8006aec:	230c      	movs	r3, #12
 8006aee:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8006af0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8006af4:	4618      	mov	r0, r3
 8006af6:	bd10      	pop	{r4, pc}
 8006af8:	20000360 	.word	0x20000360
 8006afc:	20010000 	.word	0x20010000
 8006b00:	00001400 	.word	0x00001400
 8006b04:	20000400 	.word	0x20000400

08006b08 <__errno>:
 8006b08:	4b01      	ldr	r3, [pc, #4]	; (8006b10 <__errno+0x8>)
 8006b0a:	6818      	ldr	r0, [r3, #0]
 8006b0c:	4770      	bx	lr
 8006b0e:	bf00      	nop
 8006b10:	20000028 	.word	0x20000028

08006b14 <__sflush_r>:
 8006b14:	898a      	ldrh	r2, [r1, #12]
 8006b16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b1a:	4605      	mov	r5, r0
 8006b1c:	0710      	lsls	r0, r2, #28
 8006b1e:	460c      	mov	r4, r1
 8006b20:	d458      	bmi.n	8006bd4 <__sflush_r+0xc0>
 8006b22:	684b      	ldr	r3, [r1, #4]
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	dc05      	bgt.n	8006b34 <__sflush_r+0x20>
 8006b28:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006b2a:	2b00      	cmp	r3, #0
 8006b2c:	dc02      	bgt.n	8006b34 <__sflush_r+0x20>
 8006b2e:	2000      	movs	r0, #0
 8006b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b34:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006b36:	2e00      	cmp	r6, #0
 8006b38:	d0f9      	beq.n	8006b2e <__sflush_r+0x1a>
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006b40:	682f      	ldr	r7, [r5, #0]
 8006b42:	602b      	str	r3, [r5, #0]
 8006b44:	d032      	beq.n	8006bac <__sflush_r+0x98>
 8006b46:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006b48:	89a3      	ldrh	r3, [r4, #12]
 8006b4a:	075a      	lsls	r2, r3, #29
 8006b4c:	d505      	bpl.n	8006b5a <__sflush_r+0x46>
 8006b4e:	6863      	ldr	r3, [r4, #4]
 8006b50:	1ac0      	subs	r0, r0, r3
 8006b52:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006b54:	b10b      	cbz	r3, 8006b5a <__sflush_r+0x46>
 8006b56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b58:	1ac0      	subs	r0, r0, r3
 8006b5a:	2300      	movs	r3, #0
 8006b5c:	4602      	mov	r2, r0
 8006b5e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006b60:	6a21      	ldr	r1, [r4, #32]
 8006b62:	4628      	mov	r0, r5
 8006b64:	47b0      	blx	r6
 8006b66:	1c43      	adds	r3, r0, #1
 8006b68:	89a3      	ldrh	r3, [r4, #12]
 8006b6a:	d106      	bne.n	8006b7a <__sflush_r+0x66>
 8006b6c:	6829      	ldr	r1, [r5, #0]
 8006b6e:	291d      	cmp	r1, #29
 8006b70:	d82c      	bhi.n	8006bcc <__sflush_r+0xb8>
 8006b72:	4a2a      	ldr	r2, [pc, #168]	; (8006c1c <__sflush_r+0x108>)
 8006b74:	40ca      	lsrs	r2, r1
 8006b76:	07d6      	lsls	r6, r2, #31
 8006b78:	d528      	bpl.n	8006bcc <__sflush_r+0xb8>
 8006b7a:	2200      	movs	r2, #0
 8006b7c:	6062      	str	r2, [r4, #4]
 8006b7e:	04d9      	lsls	r1, r3, #19
 8006b80:	6922      	ldr	r2, [r4, #16]
 8006b82:	6022      	str	r2, [r4, #0]
 8006b84:	d504      	bpl.n	8006b90 <__sflush_r+0x7c>
 8006b86:	1c42      	adds	r2, r0, #1
 8006b88:	d101      	bne.n	8006b8e <__sflush_r+0x7a>
 8006b8a:	682b      	ldr	r3, [r5, #0]
 8006b8c:	b903      	cbnz	r3, 8006b90 <__sflush_r+0x7c>
 8006b8e:	6560      	str	r0, [r4, #84]	; 0x54
 8006b90:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006b92:	602f      	str	r7, [r5, #0]
 8006b94:	2900      	cmp	r1, #0
 8006b96:	d0ca      	beq.n	8006b2e <__sflush_r+0x1a>
 8006b98:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006b9c:	4299      	cmp	r1, r3
 8006b9e:	d002      	beq.n	8006ba6 <__sflush_r+0x92>
 8006ba0:	4628      	mov	r0, r5
 8006ba2:	f000 f9b1 	bl	8006f08 <_free_r>
 8006ba6:	2000      	movs	r0, #0
 8006ba8:	6360      	str	r0, [r4, #52]	; 0x34
 8006baa:	e7c1      	b.n	8006b30 <__sflush_r+0x1c>
 8006bac:	6a21      	ldr	r1, [r4, #32]
 8006bae:	2301      	movs	r3, #1
 8006bb0:	4628      	mov	r0, r5
 8006bb2:	47b0      	blx	r6
 8006bb4:	1c41      	adds	r1, r0, #1
 8006bb6:	d1c7      	bne.n	8006b48 <__sflush_r+0x34>
 8006bb8:	682b      	ldr	r3, [r5, #0]
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d0c4      	beq.n	8006b48 <__sflush_r+0x34>
 8006bbe:	2b1d      	cmp	r3, #29
 8006bc0:	d001      	beq.n	8006bc6 <__sflush_r+0xb2>
 8006bc2:	2b16      	cmp	r3, #22
 8006bc4:	d101      	bne.n	8006bca <__sflush_r+0xb6>
 8006bc6:	602f      	str	r7, [r5, #0]
 8006bc8:	e7b1      	b.n	8006b2e <__sflush_r+0x1a>
 8006bca:	89a3      	ldrh	r3, [r4, #12]
 8006bcc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006bd0:	81a3      	strh	r3, [r4, #12]
 8006bd2:	e7ad      	b.n	8006b30 <__sflush_r+0x1c>
 8006bd4:	690f      	ldr	r7, [r1, #16]
 8006bd6:	2f00      	cmp	r7, #0
 8006bd8:	d0a9      	beq.n	8006b2e <__sflush_r+0x1a>
 8006bda:	0793      	lsls	r3, r2, #30
 8006bdc:	680e      	ldr	r6, [r1, #0]
 8006bde:	bf08      	it	eq
 8006be0:	694b      	ldreq	r3, [r1, #20]
 8006be2:	600f      	str	r7, [r1, #0]
 8006be4:	bf18      	it	ne
 8006be6:	2300      	movne	r3, #0
 8006be8:	eba6 0807 	sub.w	r8, r6, r7
 8006bec:	608b      	str	r3, [r1, #8]
 8006bee:	f1b8 0f00 	cmp.w	r8, #0
 8006bf2:	dd9c      	ble.n	8006b2e <__sflush_r+0x1a>
 8006bf4:	6a21      	ldr	r1, [r4, #32]
 8006bf6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006bf8:	4643      	mov	r3, r8
 8006bfa:	463a      	mov	r2, r7
 8006bfc:	4628      	mov	r0, r5
 8006bfe:	47b0      	blx	r6
 8006c00:	2800      	cmp	r0, #0
 8006c02:	dc06      	bgt.n	8006c12 <__sflush_r+0xfe>
 8006c04:	89a3      	ldrh	r3, [r4, #12]
 8006c06:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006c0a:	81a3      	strh	r3, [r4, #12]
 8006c0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006c10:	e78e      	b.n	8006b30 <__sflush_r+0x1c>
 8006c12:	4407      	add	r7, r0
 8006c14:	eba8 0800 	sub.w	r8, r8, r0
 8006c18:	e7e9      	b.n	8006bee <__sflush_r+0xda>
 8006c1a:	bf00      	nop
 8006c1c:	20400001 	.word	0x20400001

08006c20 <_fflush_r>:
 8006c20:	b538      	push	{r3, r4, r5, lr}
 8006c22:	690b      	ldr	r3, [r1, #16]
 8006c24:	4605      	mov	r5, r0
 8006c26:	460c      	mov	r4, r1
 8006c28:	b913      	cbnz	r3, 8006c30 <_fflush_r+0x10>
 8006c2a:	2500      	movs	r5, #0
 8006c2c:	4628      	mov	r0, r5
 8006c2e:	bd38      	pop	{r3, r4, r5, pc}
 8006c30:	b118      	cbz	r0, 8006c3a <_fflush_r+0x1a>
 8006c32:	6983      	ldr	r3, [r0, #24]
 8006c34:	b90b      	cbnz	r3, 8006c3a <_fflush_r+0x1a>
 8006c36:	f000 f899 	bl	8006d6c <__sinit>
 8006c3a:	4b14      	ldr	r3, [pc, #80]	; (8006c8c <_fflush_r+0x6c>)
 8006c3c:	429c      	cmp	r4, r3
 8006c3e:	d11b      	bne.n	8006c78 <_fflush_r+0x58>
 8006c40:	686c      	ldr	r4, [r5, #4]
 8006c42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	d0ef      	beq.n	8006c2a <_fflush_r+0xa>
 8006c4a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006c4c:	07d0      	lsls	r0, r2, #31
 8006c4e:	d404      	bmi.n	8006c5a <_fflush_r+0x3a>
 8006c50:	0599      	lsls	r1, r3, #22
 8006c52:	d402      	bmi.n	8006c5a <_fflush_r+0x3a>
 8006c54:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006c56:	f000 f94c 	bl	8006ef2 <__retarget_lock_acquire_recursive>
 8006c5a:	4628      	mov	r0, r5
 8006c5c:	4621      	mov	r1, r4
 8006c5e:	f7ff ff59 	bl	8006b14 <__sflush_r>
 8006c62:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006c64:	07da      	lsls	r2, r3, #31
 8006c66:	4605      	mov	r5, r0
 8006c68:	d4e0      	bmi.n	8006c2c <_fflush_r+0xc>
 8006c6a:	89a3      	ldrh	r3, [r4, #12]
 8006c6c:	059b      	lsls	r3, r3, #22
 8006c6e:	d4dd      	bmi.n	8006c2c <_fflush_r+0xc>
 8006c70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006c72:	f000 f93f 	bl	8006ef4 <__retarget_lock_release_recursive>
 8006c76:	e7d9      	b.n	8006c2c <_fflush_r+0xc>
 8006c78:	4b05      	ldr	r3, [pc, #20]	; (8006c90 <_fflush_r+0x70>)
 8006c7a:	429c      	cmp	r4, r3
 8006c7c:	d101      	bne.n	8006c82 <_fflush_r+0x62>
 8006c7e:	68ac      	ldr	r4, [r5, #8]
 8006c80:	e7df      	b.n	8006c42 <_fflush_r+0x22>
 8006c82:	4b04      	ldr	r3, [pc, #16]	; (8006c94 <_fflush_r+0x74>)
 8006c84:	429c      	cmp	r4, r3
 8006c86:	bf08      	it	eq
 8006c88:	68ec      	ldreq	r4, [r5, #12]
 8006c8a:	e7da      	b.n	8006c42 <_fflush_r+0x22>
 8006c8c:	0800b978 	.word	0x0800b978
 8006c90:	0800b998 	.word	0x0800b998
 8006c94:	0800b958 	.word	0x0800b958

08006c98 <fflush>:
 8006c98:	4601      	mov	r1, r0
 8006c9a:	b920      	cbnz	r0, 8006ca6 <fflush+0xe>
 8006c9c:	4b04      	ldr	r3, [pc, #16]	; (8006cb0 <fflush+0x18>)
 8006c9e:	4905      	ldr	r1, [pc, #20]	; (8006cb4 <fflush+0x1c>)
 8006ca0:	6818      	ldr	r0, [r3, #0]
 8006ca2:	f000 b8e1 	b.w	8006e68 <_fwalk_reent>
 8006ca6:	4b04      	ldr	r3, [pc, #16]	; (8006cb8 <fflush+0x20>)
 8006ca8:	6818      	ldr	r0, [r3, #0]
 8006caa:	f7ff bfb9 	b.w	8006c20 <_fflush_r>
 8006cae:	bf00      	nop
 8006cb0:	0800b9b8 	.word	0x0800b9b8
 8006cb4:	08006c21 	.word	0x08006c21
 8006cb8:	20000028 	.word	0x20000028

08006cbc <std>:
 8006cbc:	2300      	movs	r3, #0
 8006cbe:	b510      	push	{r4, lr}
 8006cc0:	4604      	mov	r4, r0
 8006cc2:	e9c0 3300 	strd	r3, r3, [r0]
 8006cc6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006cca:	6083      	str	r3, [r0, #8]
 8006ccc:	8181      	strh	r1, [r0, #12]
 8006cce:	6643      	str	r3, [r0, #100]	; 0x64
 8006cd0:	81c2      	strh	r2, [r0, #14]
 8006cd2:	6183      	str	r3, [r0, #24]
 8006cd4:	4619      	mov	r1, r3
 8006cd6:	2208      	movs	r2, #8
 8006cd8:	305c      	adds	r0, #92	; 0x5c
 8006cda:	f000 f90c 	bl	8006ef6 <memset>
 8006cde:	4b05      	ldr	r3, [pc, #20]	; (8006cf4 <std+0x38>)
 8006ce0:	6263      	str	r3, [r4, #36]	; 0x24
 8006ce2:	4b05      	ldr	r3, [pc, #20]	; (8006cf8 <std+0x3c>)
 8006ce4:	62a3      	str	r3, [r4, #40]	; 0x28
 8006ce6:	4b05      	ldr	r3, [pc, #20]	; (8006cfc <std+0x40>)
 8006ce8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006cea:	4b05      	ldr	r3, [pc, #20]	; (8006d00 <std+0x44>)
 8006cec:	6224      	str	r4, [r4, #32]
 8006cee:	6323      	str	r3, [r4, #48]	; 0x30
 8006cf0:	bd10      	pop	{r4, pc}
 8006cf2:	bf00      	nop
 8006cf4:	0800707d 	.word	0x0800707d
 8006cf8:	0800709f 	.word	0x0800709f
 8006cfc:	080070d7 	.word	0x080070d7
 8006d00:	080070fb 	.word	0x080070fb

08006d04 <_cleanup_r>:
 8006d04:	4901      	ldr	r1, [pc, #4]	; (8006d0c <_cleanup_r+0x8>)
 8006d06:	f000 b8af 	b.w	8006e68 <_fwalk_reent>
 8006d0a:	bf00      	nop
 8006d0c:	08006c21 	.word	0x08006c21

08006d10 <__sfmoreglue>:
 8006d10:	b570      	push	{r4, r5, r6, lr}
 8006d12:	1e4a      	subs	r2, r1, #1
 8006d14:	2568      	movs	r5, #104	; 0x68
 8006d16:	4355      	muls	r5, r2
 8006d18:	460e      	mov	r6, r1
 8006d1a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8006d1e:	f000 f943 	bl	8006fa8 <_malloc_r>
 8006d22:	4604      	mov	r4, r0
 8006d24:	b140      	cbz	r0, 8006d38 <__sfmoreglue+0x28>
 8006d26:	2100      	movs	r1, #0
 8006d28:	e9c0 1600 	strd	r1, r6, [r0]
 8006d2c:	300c      	adds	r0, #12
 8006d2e:	60a0      	str	r0, [r4, #8]
 8006d30:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006d34:	f000 f8df 	bl	8006ef6 <memset>
 8006d38:	4620      	mov	r0, r4
 8006d3a:	bd70      	pop	{r4, r5, r6, pc}

08006d3c <__sfp_lock_acquire>:
 8006d3c:	4801      	ldr	r0, [pc, #4]	; (8006d44 <__sfp_lock_acquire+0x8>)
 8006d3e:	f000 b8d8 	b.w	8006ef2 <__retarget_lock_acquire_recursive>
 8006d42:	bf00      	nop
 8006d44:	200003f8 	.word	0x200003f8

08006d48 <__sfp_lock_release>:
 8006d48:	4801      	ldr	r0, [pc, #4]	; (8006d50 <__sfp_lock_release+0x8>)
 8006d4a:	f000 b8d3 	b.w	8006ef4 <__retarget_lock_release_recursive>
 8006d4e:	bf00      	nop
 8006d50:	200003f8 	.word	0x200003f8

08006d54 <__sinit_lock_acquire>:
 8006d54:	4801      	ldr	r0, [pc, #4]	; (8006d5c <__sinit_lock_acquire+0x8>)
 8006d56:	f000 b8cc 	b.w	8006ef2 <__retarget_lock_acquire_recursive>
 8006d5a:	bf00      	nop
 8006d5c:	200003f3 	.word	0x200003f3

08006d60 <__sinit_lock_release>:
 8006d60:	4801      	ldr	r0, [pc, #4]	; (8006d68 <__sinit_lock_release+0x8>)
 8006d62:	f000 b8c7 	b.w	8006ef4 <__retarget_lock_release_recursive>
 8006d66:	bf00      	nop
 8006d68:	200003f3 	.word	0x200003f3

08006d6c <__sinit>:
 8006d6c:	b510      	push	{r4, lr}
 8006d6e:	4604      	mov	r4, r0
 8006d70:	f7ff fff0 	bl	8006d54 <__sinit_lock_acquire>
 8006d74:	69a3      	ldr	r3, [r4, #24]
 8006d76:	b11b      	cbz	r3, 8006d80 <__sinit+0x14>
 8006d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d7c:	f7ff bff0 	b.w	8006d60 <__sinit_lock_release>
 8006d80:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8006d84:	6523      	str	r3, [r4, #80]	; 0x50
 8006d86:	4b13      	ldr	r3, [pc, #76]	; (8006dd4 <__sinit+0x68>)
 8006d88:	4a13      	ldr	r2, [pc, #76]	; (8006dd8 <__sinit+0x6c>)
 8006d8a:	681b      	ldr	r3, [r3, #0]
 8006d8c:	62a2      	str	r2, [r4, #40]	; 0x28
 8006d8e:	42a3      	cmp	r3, r4
 8006d90:	bf04      	itt	eq
 8006d92:	2301      	moveq	r3, #1
 8006d94:	61a3      	streq	r3, [r4, #24]
 8006d96:	4620      	mov	r0, r4
 8006d98:	f000 f820 	bl	8006ddc <__sfp>
 8006d9c:	6060      	str	r0, [r4, #4]
 8006d9e:	4620      	mov	r0, r4
 8006da0:	f000 f81c 	bl	8006ddc <__sfp>
 8006da4:	60a0      	str	r0, [r4, #8]
 8006da6:	4620      	mov	r0, r4
 8006da8:	f000 f818 	bl	8006ddc <__sfp>
 8006dac:	2200      	movs	r2, #0
 8006dae:	60e0      	str	r0, [r4, #12]
 8006db0:	2104      	movs	r1, #4
 8006db2:	6860      	ldr	r0, [r4, #4]
 8006db4:	f7ff ff82 	bl	8006cbc <std>
 8006db8:	68a0      	ldr	r0, [r4, #8]
 8006dba:	2201      	movs	r2, #1
 8006dbc:	2109      	movs	r1, #9
 8006dbe:	f7ff ff7d 	bl	8006cbc <std>
 8006dc2:	68e0      	ldr	r0, [r4, #12]
 8006dc4:	2202      	movs	r2, #2
 8006dc6:	2112      	movs	r1, #18
 8006dc8:	f7ff ff78 	bl	8006cbc <std>
 8006dcc:	2301      	movs	r3, #1
 8006dce:	61a3      	str	r3, [r4, #24]
 8006dd0:	e7d2      	b.n	8006d78 <__sinit+0xc>
 8006dd2:	bf00      	nop
 8006dd4:	0800b9b8 	.word	0x0800b9b8
 8006dd8:	08006d05 	.word	0x08006d05

08006ddc <__sfp>:
 8006ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006dde:	4607      	mov	r7, r0
 8006de0:	f7ff ffac 	bl	8006d3c <__sfp_lock_acquire>
 8006de4:	4b1e      	ldr	r3, [pc, #120]	; (8006e60 <__sfp+0x84>)
 8006de6:	681e      	ldr	r6, [r3, #0]
 8006de8:	69b3      	ldr	r3, [r6, #24]
 8006dea:	b913      	cbnz	r3, 8006df2 <__sfp+0x16>
 8006dec:	4630      	mov	r0, r6
 8006dee:	f7ff ffbd 	bl	8006d6c <__sinit>
 8006df2:	3648      	adds	r6, #72	; 0x48
 8006df4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006df8:	3b01      	subs	r3, #1
 8006dfa:	d503      	bpl.n	8006e04 <__sfp+0x28>
 8006dfc:	6833      	ldr	r3, [r6, #0]
 8006dfe:	b30b      	cbz	r3, 8006e44 <__sfp+0x68>
 8006e00:	6836      	ldr	r6, [r6, #0]
 8006e02:	e7f7      	b.n	8006df4 <__sfp+0x18>
 8006e04:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006e08:	b9d5      	cbnz	r5, 8006e40 <__sfp+0x64>
 8006e0a:	4b16      	ldr	r3, [pc, #88]	; (8006e64 <__sfp+0x88>)
 8006e0c:	60e3      	str	r3, [r4, #12]
 8006e0e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006e12:	6665      	str	r5, [r4, #100]	; 0x64
 8006e14:	f000 f86c 	bl	8006ef0 <__retarget_lock_init_recursive>
 8006e18:	f7ff ff96 	bl	8006d48 <__sfp_lock_release>
 8006e1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006e20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006e24:	6025      	str	r5, [r4, #0]
 8006e26:	61a5      	str	r5, [r4, #24]
 8006e28:	2208      	movs	r2, #8
 8006e2a:	4629      	mov	r1, r5
 8006e2c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006e30:	f000 f861 	bl	8006ef6 <memset>
 8006e34:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006e38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006e3c:	4620      	mov	r0, r4
 8006e3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e40:	3468      	adds	r4, #104	; 0x68
 8006e42:	e7d9      	b.n	8006df8 <__sfp+0x1c>
 8006e44:	2104      	movs	r1, #4
 8006e46:	4638      	mov	r0, r7
 8006e48:	f7ff ff62 	bl	8006d10 <__sfmoreglue>
 8006e4c:	4604      	mov	r4, r0
 8006e4e:	6030      	str	r0, [r6, #0]
 8006e50:	2800      	cmp	r0, #0
 8006e52:	d1d5      	bne.n	8006e00 <__sfp+0x24>
 8006e54:	f7ff ff78 	bl	8006d48 <__sfp_lock_release>
 8006e58:	230c      	movs	r3, #12
 8006e5a:	603b      	str	r3, [r7, #0]
 8006e5c:	e7ee      	b.n	8006e3c <__sfp+0x60>
 8006e5e:	bf00      	nop
 8006e60:	0800b9b8 	.word	0x0800b9b8
 8006e64:	ffff0001 	.word	0xffff0001

08006e68 <_fwalk_reent>:
 8006e68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006e6c:	4606      	mov	r6, r0
 8006e6e:	4688      	mov	r8, r1
 8006e70:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006e74:	2700      	movs	r7, #0
 8006e76:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006e7a:	f1b9 0901 	subs.w	r9, r9, #1
 8006e7e:	d505      	bpl.n	8006e8c <_fwalk_reent+0x24>
 8006e80:	6824      	ldr	r4, [r4, #0]
 8006e82:	2c00      	cmp	r4, #0
 8006e84:	d1f7      	bne.n	8006e76 <_fwalk_reent+0xe>
 8006e86:	4638      	mov	r0, r7
 8006e88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006e8c:	89ab      	ldrh	r3, [r5, #12]
 8006e8e:	2b01      	cmp	r3, #1
 8006e90:	d907      	bls.n	8006ea2 <_fwalk_reent+0x3a>
 8006e92:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006e96:	3301      	adds	r3, #1
 8006e98:	d003      	beq.n	8006ea2 <_fwalk_reent+0x3a>
 8006e9a:	4629      	mov	r1, r5
 8006e9c:	4630      	mov	r0, r6
 8006e9e:	47c0      	blx	r8
 8006ea0:	4307      	orrs	r7, r0
 8006ea2:	3568      	adds	r5, #104	; 0x68
 8006ea4:	e7e9      	b.n	8006e7a <_fwalk_reent+0x12>
	...

08006ea8 <__libc_init_array>:
 8006ea8:	b570      	push	{r4, r5, r6, lr}
 8006eaa:	4d0d      	ldr	r5, [pc, #52]	; (8006ee0 <__libc_init_array+0x38>)
 8006eac:	4c0d      	ldr	r4, [pc, #52]	; (8006ee4 <__libc_init_array+0x3c>)
 8006eae:	1b64      	subs	r4, r4, r5
 8006eb0:	10a4      	asrs	r4, r4, #2
 8006eb2:	2600      	movs	r6, #0
 8006eb4:	42a6      	cmp	r6, r4
 8006eb6:	d109      	bne.n	8006ecc <__libc_init_array+0x24>
 8006eb8:	4d0b      	ldr	r5, [pc, #44]	; (8006ee8 <__libc_init_array+0x40>)
 8006eba:	4c0c      	ldr	r4, [pc, #48]	; (8006eec <__libc_init_array+0x44>)
 8006ebc:	f000 ff34 	bl	8007d28 <_init>
 8006ec0:	1b64      	subs	r4, r4, r5
 8006ec2:	10a4      	asrs	r4, r4, #2
 8006ec4:	2600      	movs	r6, #0
 8006ec6:	42a6      	cmp	r6, r4
 8006ec8:	d105      	bne.n	8006ed6 <__libc_init_array+0x2e>
 8006eca:	bd70      	pop	{r4, r5, r6, pc}
 8006ecc:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ed0:	4798      	blx	r3
 8006ed2:	3601      	adds	r6, #1
 8006ed4:	e7ee      	b.n	8006eb4 <__libc_init_array+0xc>
 8006ed6:	f855 3b04 	ldr.w	r3, [r5], #4
 8006eda:	4798      	blx	r3
 8006edc:	3601      	adds	r6, #1
 8006ede:	e7f2      	b.n	8006ec6 <__libc_init_array+0x1e>
 8006ee0:	0800b9c8 	.word	0x0800b9c8
 8006ee4:	0800b9c8 	.word	0x0800b9c8
 8006ee8:	0800b9c8 	.word	0x0800b9c8
 8006eec:	0800b9cc 	.word	0x0800b9cc

08006ef0 <__retarget_lock_init_recursive>:
 8006ef0:	4770      	bx	lr

08006ef2 <__retarget_lock_acquire_recursive>:
 8006ef2:	4770      	bx	lr

08006ef4 <__retarget_lock_release_recursive>:
 8006ef4:	4770      	bx	lr

08006ef6 <memset>:
 8006ef6:	4402      	add	r2, r0
 8006ef8:	4603      	mov	r3, r0
 8006efa:	4293      	cmp	r3, r2
 8006efc:	d100      	bne.n	8006f00 <memset+0xa>
 8006efe:	4770      	bx	lr
 8006f00:	f803 1b01 	strb.w	r1, [r3], #1
 8006f04:	e7f9      	b.n	8006efa <memset+0x4>
	...

08006f08 <_free_r>:
 8006f08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006f0a:	2900      	cmp	r1, #0
 8006f0c:	d048      	beq.n	8006fa0 <_free_r+0x98>
 8006f0e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006f12:	9001      	str	r0, [sp, #4]
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	f1a1 0404 	sub.w	r4, r1, #4
 8006f1a:	bfb8      	it	lt
 8006f1c:	18e4      	addlt	r4, r4, r3
 8006f1e:	f000 f933 	bl	8007188 <__malloc_lock>
 8006f22:	4a20      	ldr	r2, [pc, #128]	; (8006fa4 <_free_r+0x9c>)
 8006f24:	9801      	ldr	r0, [sp, #4]
 8006f26:	6813      	ldr	r3, [r2, #0]
 8006f28:	4615      	mov	r5, r2
 8006f2a:	b933      	cbnz	r3, 8006f3a <_free_r+0x32>
 8006f2c:	6063      	str	r3, [r4, #4]
 8006f2e:	6014      	str	r4, [r2, #0]
 8006f30:	b003      	add	sp, #12
 8006f32:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006f36:	f000 b92d 	b.w	8007194 <__malloc_unlock>
 8006f3a:	42a3      	cmp	r3, r4
 8006f3c:	d90b      	bls.n	8006f56 <_free_r+0x4e>
 8006f3e:	6821      	ldr	r1, [r4, #0]
 8006f40:	1862      	adds	r2, r4, r1
 8006f42:	4293      	cmp	r3, r2
 8006f44:	bf04      	itt	eq
 8006f46:	681a      	ldreq	r2, [r3, #0]
 8006f48:	685b      	ldreq	r3, [r3, #4]
 8006f4a:	6063      	str	r3, [r4, #4]
 8006f4c:	bf04      	itt	eq
 8006f4e:	1852      	addeq	r2, r2, r1
 8006f50:	6022      	streq	r2, [r4, #0]
 8006f52:	602c      	str	r4, [r5, #0]
 8006f54:	e7ec      	b.n	8006f30 <_free_r+0x28>
 8006f56:	461a      	mov	r2, r3
 8006f58:	685b      	ldr	r3, [r3, #4]
 8006f5a:	b10b      	cbz	r3, 8006f60 <_free_r+0x58>
 8006f5c:	42a3      	cmp	r3, r4
 8006f5e:	d9fa      	bls.n	8006f56 <_free_r+0x4e>
 8006f60:	6811      	ldr	r1, [r2, #0]
 8006f62:	1855      	adds	r5, r2, r1
 8006f64:	42a5      	cmp	r5, r4
 8006f66:	d10b      	bne.n	8006f80 <_free_r+0x78>
 8006f68:	6824      	ldr	r4, [r4, #0]
 8006f6a:	4421      	add	r1, r4
 8006f6c:	1854      	adds	r4, r2, r1
 8006f6e:	42a3      	cmp	r3, r4
 8006f70:	6011      	str	r1, [r2, #0]
 8006f72:	d1dd      	bne.n	8006f30 <_free_r+0x28>
 8006f74:	681c      	ldr	r4, [r3, #0]
 8006f76:	685b      	ldr	r3, [r3, #4]
 8006f78:	6053      	str	r3, [r2, #4]
 8006f7a:	4421      	add	r1, r4
 8006f7c:	6011      	str	r1, [r2, #0]
 8006f7e:	e7d7      	b.n	8006f30 <_free_r+0x28>
 8006f80:	d902      	bls.n	8006f88 <_free_r+0x80>
 8006f82:	230c      	movs	r3, #12
 8006f84:	6003      	str	r3, [r0, #0]
 8006f86:	e7d3      	b.n	8006f30 <_free_r+0x28>
 8006f88:	6825      	ldr	r5, [r4, #0]
 8006f8a:	1961      	adds	r1, r4, r5
 8006f8c:	428b      	cmp	r3, r1
 8006f8e:	bf04      	itt	eq
 8006f90:	6819      	ldreq	r1, [r3, #0]
 8006f92:	685b      	ldreq	r3, [r3, #4]
 8006f94:	6063      	str	r3, [r4, #4]
 8006f96:	bf04      	itt	eq
 8006f98:	1949      	addeq	r1, r1, r5
 8006f9a:	6021      	streq	r1, [r4, #0]
 8006f9c:	6054      	str	r4, [r2, #4]
 8006f9e:	e7c7      	b.n	8006f30 <_free_r+0x28>
 8006fa0:	b003      	add	sp, #12
 8006fa2:	bd30      	pop	{r4, r5, pc}
 8006fa4:	20000364 	.word	0x20000364

08006fa8 <_malloc_r>:
 8006fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006faa:	1ccd      	adds	r5, r1, #3
 8006fac:	f025 0503 	bic.w	r5, r5, #3
 8006fb0:	3508      	adds	r5, #8
 8006fb2:	2d0c      	cmp	r5, #12
 8006fb4:	bf38      	it	cc
 8006fb6:	250c      	movcc	r5, #12
 8006fb8:	2d00      	cmp	r5, #0
 8006fba:	4606      	mov	r6, r0
 8006fbc:	db01      	blt.n	8006fc2 <_malloc_r+0x1a>
 8006fbe:	42a9      	cmp	r1, r5
 8006fc0:	d903      	bls.n	8006fca <_malloc_r+0x22>
 8006fc2:	230c      	movs	r3, #12
 8006fc4:	6033      	str	r3, [r6, #0]
 8006fc6:	2000      	movs	r0, #0
 8006fc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006fca:	f000 f8dd 	bl	8007188 <__malloc_lock>
 8006fce:	4921      	ldr	r1, [pc, #132]	; (8007054 <_malloc_r+0xac>)
 8006fd0:	680a      	ldr	r2, [r1, #0]
 8006fd2:	4614      	mov	r4, r2
 8006fd4:	b99c      	cbnz	r4, 8006ffe <_malloc_r+0x56>
 8006fd6:	4f20      	ldr	r7, [pc, #128]	; (8007058 <_malloc_r+0xb0>)
 8006fd8:	683b      	ldr	r3, [r7, #0]
 8006fda:	b923      	cbnz	r3, 8006fe6 <_malloc_r+0x3e>
 8006fdc:	4621      	mov	r1, r4
 8006fde:	4630      	mov	r0, r6
 8006fe0:	f000 f83c 	bl	800705c <_sbrk_r>
 8006fe4:	6038      	str	r0, [r7, #0]
 8006fe6:	4629      	mov	r1, r5
 8006fe8:	4630      	mov	r0, r6
 8006fea:	f000 f837 	bl	800705c <_sbrk_r>
 8006fee:	1c43      	adds	r3, r0, #1
 8006ff0:	d123      	bne.n	800703a <_malloc_r+0x92>
 8006ff2:	230c      	movs	r3, #12
 8006ff4:	6033      	str	r3, [r6, #0]
 8006ff6:	4630      	mov	r0, r6
 8006ff8:	f000 f8cc 	bl	8007194 <__malloc_unlock>
 8006ffc:	e7e3      	b.n	8006fc6 <_malloc_r+0x1e>
 8006ffe:	6823      	ldr	r3, [r4, #0]
 8007000:	1b5b      	subs	r3, r3, r5
 8007002:	d417      	bmi.n	8007034 <_malloc_r+0x8c>
 8007004:	2b0b      	cmp	r3, #11
 8007006:	d903      	bls.n	8007010 <_malloc_r+0x68>
 8007008:	6023      	str	r3, [r4, #0]
 800700a:	441c      	add	r4, r3
 800700c:	6025      	str	r5, [r4, #0]
 800700e:	e004      	b.n	800701a <_malloc_r+0x72>
 8007010:	6863      	ldr	r3, [r4, #4]
 8007012:	42a2      	cmp	r2, r4
 8007014:	bf0c      	ite	eq
 8007016:	600b      	streq	r3, [r1, #0]
 8007018:	6053      	strne	r3, [r2, #4]
 800701a:	4630      	mov	r0, r6
 800701c:	f000 f8ba 	bl	8007194 <__malloc_unlock>
 8007020:	f104 000b 	add.w	r0, r4, #11
 8007024:	1d23      	adds	r3, r4, #4
 8007026:	f020 0007 	bic.w	r0, r0, #7
 800702a:	1ac2      	subs	r2, r0, r3
 800702c:	d0cc      	beq.n	8006fc8 <_malloc_r+0x20>
 800702e:	1a1b      	subs	r3, r3, r0
 8007030:	50a3      	str	r3, [r4, r2]
 8007032:	e7c9      	b.n	8006fc8 <_malloc_r+0x20>
 8007034:	4622      	mov	r2, r4
 8007036:	6864      	ldr	r4, [r4, #4]
 8007038:	e7cc      	b.n	8006fd4 <_malloc_r+0x2c>
 800703a:	1cc4      	adds	r4, r0, #3
 800703c:	f024 0403 	bic.w	r4, r4, #3
 8007040:	42a0      	cmp	r0, r4
 8007042:	d0e3      	beq.n	800700c <_malloc_r+0x64>
 8007044:	1a21      	subs	r1, r4, r0
 8007046:	4630      	mov	r0, r6
 8007048:	f000 f808 	bl	800705c <_sbrk_r>
 800704c:	3001      	adds	r0, #1
 800704e:	d1dd      	bne.n	800700c <_malloc_r+0x64>
 8007050:	e7cf      	b.n	8006ff2 <_malloc_r+0x4a>
 8007052:	bf00      	nop
 8007054:	20000364 	.word	0x20000364
 8007058:	20000368 	.word	0x20000368

0800705c <_sbrk_r>:
 800705c:	b538      	push	{r3, r4, r5, lr}
 800705e:	4d06      	ldr	r5, [pc, #24]	; (8007078 <_sbrk_r+0x1c>)
 8007060:	2300      	movs	r3, #0
 8007062:	4604      	mov	r4, r0
 8007064:	4608      	mov	r0, r1
 8007066:	602b      	str	r3, [r5, #0]
 8007068:	f7ff fd2c 	bl	8006ac4 <_sbrk>
 800706c:	1c43      	adds	r3, r0, #1
 800706e:	d102      	bne.n	8007076 <_sbrk_r+0x1a>
 8007070:	682b      	ldr	r3, [r5, #0]
 8007072:	b103      	cbz	r3, 8007076 <_sbrk_r+0x1a>
 8007074:	6023      	str	r3, [r4, #0]
 8007076:	bd38      	pop	{r3, r4, r5, pc}
 8007078:	200003fc 	.word	0x200003fc

0800707c <__sread>:
 800707c:	b510      	push	{r4, lr}
 800707e:	460c      	mov	r4, r1
 8007080:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007084:	f000 f88c 	bl	80071a0 <_read_r>
 8007088:	2800      	cmp	r0, #0
 800708a:	bfab      	itete	ge
 800708c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800708e:	89a3      	ldrhlt	r3, [r4, #12]
 8007090:	181b      	addge	r3, r3, r0
 8007092:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007096:	bfac      	ite	ge
 8007098:	6563      	strge	r3, [r4, #84]	; 0x54
 800709a:	81a3      	strhlt	r3, [r4, #12]
 800709c:	bd10      	pop	{r4, pc}

0800709e <__swrite>:
 800709e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80070a2:	461f      	mov	r7, r3
 80070a4:	898b      	ldrh	r3, [r1, #12]
 80070a6:	05db      	lsls	r3, r3, #23
 80070a8:	4605      	mov	r5, r0
 80070aa:	460c      	mov	r4, r1
 80070ac:	4616      	mov	r6, r2
 80070ae:	d505      	bpl.n	80070bc <__swrite+0x1e>
 80070b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80070b4:	2302      	movs	r3, #2
 80070b6:	2200      	movs	r2, #0
 80070b8:	f000 f846 	bl	8007148 <_lseek_r>
 80070bc:	89a3      	ldrh	r3, [r4, #12]
 80070be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80070c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80070c6:	81a3      	strh	r3, [r4, #12]
 80070c8:	4632      	mov	r2, r6
 80070ca:	463b      	mov	r3, r7
 80070cc:	4628      	mov	r0, r5
 80070ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80070d2:	f000 b817 	b.w	8007104 <_write_r>

080070d6 <__sseek>:
 80070d6:	b510      	push	{r4, lr}
 80070d8:	460c      	mov	r4, r1
 80070da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80070de:	f000 f833 	bl	8007148 <_lseek_r>
 80070e2:	1c43      	adds	r3, r0, #1
 80070e4:	89a3      	ldrh	r3, [r4, #12]
 80070e6:	bf15      	itete	ne
 80070e8:	6560      	strne	r0, [r4, #84]	; 0x54
 80070ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80070ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80070f2:	81a3      	strheq	r3, [r4, #12]
 80070f4:	bf18      	it	ne
 80070f6:	81a3      	strhne	r3, [r4, #12]
 80070f8:	bd10      	pop	{r4, pc}

080070fa <__sclose>:
 80070fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80070fe:	f000 b813 	b.w	8007128 <_close_r>
	...

08007104 <_write_r>:
 8007104:	b538      	push	{r3, r4, r5, lr}
 8007106:	4d07      	ldr	r5, [pc, #28]	; (8007124 <_write_r+0x20>)
 8007108:	4604      	mov	r4, r0
 800710a:	4608      	mov	r0, r1
 800710c:	4611      	mov	r1, r2
 800710e:	2200      	movs	r2, #0
 8007110:	602a      	str	r2, [r5, #0]
 8007112:	461a      	mov	r2, r3
 8007114:	f7ff fca0 	bl	8006a58 <_write>
 8007118:	1c43      	adds	r3, r0, #1
 800711a:	d102      	bne.n	8007122 <_write_r+0x1e>
 800711c:	682b      	ldr	r3, [r5, #0]
 800711e:	b103      	cbz	r3, 8007122 <_write_r+0x1e>
 8007120:	6023      	str	r3, [r4, #0]
 8007122:	bd38      	pop	{r3, r4, r5, pc}
 8007124:	200003fc 	.word	0x200003fc

08007128 <_close_r>:
 8007128:	b538      	push	{r3, r4, r5, lr}
 800712a:	4d06      	ldr	r5, [pc, #24]	; (8007144 <_close_r+0x1c>)
 800712c:	2300      	movs	r3, #0
 800712e:	4604      	mov	r4, r0
 8007130:	4608      	mov	r0, r1
 8007132:	602b      	str	r3, [r5, #0]
 8007134:	f7ff fc86 	bl	8006a44 <_close>
 8007138:	1c43      	adds	r3, r0, #1
 800713a:	d102      	bne.n	8007142 <_close_r+0x1a>
 800713c:	682b      	ldr	r3, [r5, #0]
 800713e:	b103      	cbz	r3, 8007142 <_close_r+0x1a>
 8007140:	6023      	str	r3, [r4, #0]
 8007142:	bd38      	pop	{r3, r4, r5, pc}
 8007144:	200003fc 	.word	0x200003fc

08007148 <_lseek_r>:
 8007148:	b538      	push	{r3, r4, r5, lr}
 800714a:	4d07      	ldr	r5, [pc, #28]	; (8007168 <_lseek_r+0x20>)
 800714c:	4604      	mov	r4, r0
 800714e:	4608      	mov	r0, r1
 8007150:	4611      	mov	r1, r2
 8007152:	2200      	movs	r2, #0
 8007154:	602a      	str	r2, [r5, #0]
 8007156:	461a      	mov	r2, r3
 8007158:	f7ff fc78 	bl	8006a4c <_lseek>
 800715c:	1c43      	adds	r3, r0, #1
 800715e:	d102      	bne.n	8007166 <_lseek_r+0x1e>
 8007160:	682b      	ldr	r3, [r5, #0]
 8007162:	b103      	cbz	r3, 8007166 <_lseek_r+0x1e>
 8007164:	6023      	str	r3, [r4, #0]
 8007166:	bd38      	pop	{r3, r4, r5, pc}
 8007168:	200003fc 	.word	0x200003fc

0800716c <memcpy>:
 800716c:	440a      	add	r2, r1
 800716e:	4291      	cmp	r1, r2
 8007170:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007174:	d100      	bne.n	8007178 <memcpy+0xc>
 8007176:	4770      	bx	lr
 8007178:	b510      	push	{r4, lr}
 800717a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800717e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007182:	4291      	cmp	r1, r2
 8007184:	d1f9      	bne.n	800717a <memcpy+0xe>
 8007186:	bd10      	pop	{r4, pc}

08007188 <__malloc_lock>:
 8007188:	4801      	ldr	r0, [pc, #4]	; (8007190 <__malloc_lock+0x8>)
 800718a:	f7ff beb2 	b.w	8006ef2 <__retarget_lock_acquire_recursive>
 800718e:	bf00      	nop
 8007190:	200003f4 	.word	0x200003f4

08007194 <__malloc_unlock>:
 8007194:	4801      	ldr	r0, [pc, #4]	; (800719c <__malloc_unlock+0x8>)
 8007196:	f7ff bead 	b.w	8006ef4 <__retarget_lock_release_recursive>
 800719a:	bf00      	nop
 800719c:	200003f4 	.word	0x200003f4

080071a0 <_read_r>:
 80071a0:	b538      	push	{r3, r4, r5, lr}
 80071a2:	4d07      	ldr	r5, [pc, #28]	; (80071c0 <_read_r+0x20>)
 80071a4:	4604      	mov	r4, r0
 80071a6:	4608      	mov	r0, r1
 80071a8:	4611      	mov	r1, r2
 80071aa:	2200      	movs	r2, #0
 80071ac:	602a      	str	r2, [r5, #0]
 80071ae:	461a      	mov	r2, r3
 80071b0:	f7ff fc4e 	bl	8006a50 <_read>
 80071b4:	1c43      	adds	r3, r0, #1
 80071b6:	d102      	bne.n	80071be <_read_r+0x1e>
 80071b8:	682b      	ldr	r3, [r5, #0]
 80071ba:	b103      	cbz	r3, 80071be <_read_r+0x1e>
 80071bc:	6023      	str	r3, [r4, #0]
 80071be:	bd38      	pop	{r3, r4, r5, pc}
 80071c0:	200003fc 	.word	0x200003fc

080071c4 <malloc>:
 80071c4:	4b02      	ldr	r3, [pc, #8]	; (80071d0 <malloc+0xc>)
 80071c6:	4601      	mov	r1, r0
 80071c8:	6818      	ldr	r0, [r3, #0]
 80071ca:	f7ff beed 	b.w	8006fa8 <_malloc_r>
 80071ce:	bf00      	nop
 80071d0:	20000028 	.word	0x20000028

080071d4 <free>:
 80071d4:	4b02      	ldr	r3, [pc, #8]	; (80071e0 <free+0xc>)
 80071d6:	4601      	mov	r1, r0
 80071d8:	6818      	ldr	r0, [r3, #0]
 80071da:	f7ff be95 	b.w	8006f08 <_free_r>
 80071de:	bf00      	nop
 80071e0:	20000028 	.word	0x20000028

080071e4 <out_func>:

static void out_func(char character, void *arg)
{
	print_buffer_t *buf = arg;

	buf->buffer[buf->position++] = character;
 80071e4:	f8b1 30c8 	ldrh.w	r3, [r1, #200]	; 0xc8
 80071e8:	1c5a      	adds	r2, r3, #1
 80071ea:	b292      	uxth	r2, r2
	if (buf->position == BUF_SIZE)
 80071ec:	2ac8      	cmp	r2, #200	; 0xc8
	buf->buffer[buf->position++] = character;
 80071ee:	f8a1 20c8 	strh.w	r2, [r1, #200]	; 0xc8
 80071f2:	54c8      	strb	r0, [r1, r3]
	if (buf->position == BUF_SIZE)
 80071f4:	d000      	beq.n	80071f8 <out_func+0x14>
 80071f6:	4770      	bx	lr
{
 80071f8:	b510      	push	{r4, lr}
	{
		_write(0, buf->buffer, BUF_SIZE);
 80071fa:	2000      	movs	r0, #0
 80071fc:	460c      	mov	r4, r1
 80071fe:	f7ff fc2b 	bl	8006a58 <_write>
		buf->position = 0;
 8007202:	2300      	movs	r3, #0
 8007204:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
	}
}
 8007208:	bd10      	pop	{r4, pc}
 800720a:	bf00      	nop

0800720c <__wrap_puts>:


int __wrap_puts(const char *str)
{
 800720c:	b500      	push	{lr}
 800720e:	b083      	sub	sp, #12
 8007210:	9001      	str	r0, [sp, #4]
	size_t len = strlen(str);
 8007212:	f7fe fca3 	bl	8005b5c <strlen>

	_write(0, str, len);
 8007216:	9901      	ldr	r1, [sp, #4]
	size_t len = strlen(str);
 8007218:	4602      	mov	r2, r0
	_write(0, str, len);
 800721a:	2000      	movs	r0, #0
 800721c:	f7ff fc1c 	bl	8006a58 <_write>
	_write(0, "\n", 1);
 8007220:	4904      	ldr	r1, [pc, #16]	; (8007234 <__wrap_puts+0x28>)
 8007222:	2201      	movs	r2, #1
 8007224:	2000      	movs	r0, #0
 8007226:	f7ff fc17 	bl	8006a58 <_write>
	return 0;
}
 800722a:	2000      	movs	r0, #0
 800722c:	b003      	add	sp, #12
 800722e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007232:	bf00      	nop
 8007234:	0800b75c 	.word	0x0800b75c

08007238 <__wrap_printf>:
	return 0;
}


int __wrap_printf(const char *format, ...)
{
 8007238:	b40f      	push	{r0, r1, r2, r3}
 800723a:	b530      	push	{r4, r5, lr}
 800723c:	b0b5      	sub	sp, #212	; 0xd4
 800723e:	ac38      	add	r4, sp, #224	; 0xe0
	print_buffer_t buf = {
 8007240:	490e      	ldr	r1, [pc, #56]	; (800727c <__wrap_printf+0x44>)
{
 8007242:	f854 5b04 	ldr.w	r5, [r4], #4
	print_buffer_t buf = {
 8007246:	22ca      	movs	r2, #202	; 0xca
 8007248:	a801      	add	r0, sp, #4
 800724a:	f7ff ff8f 	bl	800716c <memcpy>
		.buffer   = {0}
	};
	va_list        va;

	va_start(va, format);
	int ret = fctvprintf(out_func, &buf, format, va);
 800724e:	462a      	mov	r2, r5
 8007250:	4623      	mov	r3, r4
 8007252:	480b      	ldr	r0, [pc, #44]	; (8007280 <__wrap_printf+0x48>)
	va_start(va, format);
 8007254:	9400      	str	r4, [sp, #0]
	int ret = fctvprintf(out_func, &buf, format, va);
 8007256:	a901      	add	r1, sp, #4
 8007258:	f000 fd54 	bl	8007d04 <fctvprintf>
	if (buf.position != 0)
 800725c:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
	int ret = fctvprintf(out_func, &buf, format, va);
 8007260:	4604      	mov	r4, r0
	if (buf.position != 0)
 8007262:	b92a      	cbnz	r2, 8007270 <__wrap_printf+0x38>
	}

	va_end(va);

	return ret;
}
 8007264:	4620      	mov	r0, r4
 8007266:	b035      	add	sp, #212	; 0xd4
 8007268:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800726c:	b004      	add	sp, #16
 800726e:	4770      	bx	lr
		_write(0, buf.buffer, buf.position);
 8007270:	a901      	add	r1, sp, #4
 8007272:	2000      	movs	r0, #0
 8007274:	f7ff fbf0 	bl	8006a58 <_write>
	return ret;
 8007278:	e7f4      	b.n	8007264 <__wrap_printf+0x2c>
 800727a:	bf00      	nop
 800727c:	0800a4d8 	.word	0x0800a4d8
 8007280:	080071e5 	.word	0x080071e5

08007284 <__wrap_vsnprintf>:
}


int __wrap_vsnprintf(char *buffer, size_t count, const char *format, va_list va)
{
	return vsnprintf_(buffer, count, format, va);
 8007284:	f000 bd2e 	b.w	8007ce4 <vsnprintf_>

08007288 <_out_buffer>:


// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
{
  if (idx < maxlen) {
 8007288:	429a      	cmp	r2, r3
    ((char*)buffer)[idx] = character;
 800728a:	bf38      	it	cc
 800728c:	5488      	strbcc	r0, [r1, r2]
  }
}
 800728e:	4770      	bx	lr

08007290 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
 8007290:	4770      	bx	lr
 8007292:	bf00      	nop

08007294 <_ntoa_format>:
}


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8007294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007298:	b083      	sub	sp, #12
 800729a:	4617      	mov	r7, r2
 800729c:	f8dd c048 	ldr.w	ip, [sp, #72]	; 0x48
 80072a0:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
 80072a4:	f01c 0202 	ands.w	r2, ip, #2
{
 80072a8:	e9dd 840c 	ldrd	r8, r4, [sp, #48]	; 0x30
 80072ac:	e9dd e610 	ldrd	lr, r6, [sp, #64]	; 0x40
 80072b0:	4605      	mov	r5, r0
 80072b2:	4689      	mov	r9, r1
  if (!(flags & FLAGS_LEFT)) {
 80072b4:	9200      	str	r2, [sp, #0]
 80072b6:	d12a      	bne.n	800730e <_ntoa_format+0x7a>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 80072b8:	2e00      	cmp	r6, #0
 80072ba:	f040 80ae 	bne.w	800741a <_ntoa_format+0x186>
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072be:	4574      	cmp	r4, lr
 80072c0:	f00c 0001 	and.w	r0, ip, #1
 80072c4:	f080 811a 	bcs.w	80074fc <_ntoa_format+0x268>
 80072c8:	2c1f      	cmp	r4, #31
 80072ca:	bf88      	it	hi
 80072cc:	2420      	movhi	r4, #32
 80072ce:	f200 8115 	bhi.w	80074fc <_ntoa_format+0x268>
 80072d2:	1e62      	subs	r2, r4, #1
 80072d4:	4442      	add	r2, r8
      buf[len++] = '0';
 80072d6:	f04f 0b30 	mov.w	fp, #48	; 0x30
 80072da:	e001      	b.n	80072e0 <_ntoa_format+0x4c>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072dc:	2c20      	cmp	r4, #32
 80072de:	d004      	beq.n	80072ea <_ntoa_format+0x56>
      buf[len++] = '0';
 80072e0:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072e2:	45a6      	cmp	lr, r4
      buf[len++] = '0';
 80072e4:	f802 bf01 	strb.w	fp, [r2, #1]!
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072e8:	d8f8      	bhi.n	80072dc <_ntoa_format+0x48>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072ea:	b180      	cbz	r0, 800730e <_ntoa_format+0x7a>
 80072ec:	42a6      	cmp	r6, r4
 80072ee:	d90e      	bls.n	800730e <_ntoa_format+0x7a>
 80072f0:	2c20      	cmp	r4, #32
 80072f2:	f000 80a3 	beq.w	800743c <_ntoa_format+0x1a8>
 80072f6:	1e62      	subs	r2, r4, #1
 80072f8:	4442      	add	r2, r8
      buf[len++] = '0';
 80072fa:	2030      	movs	r0, #48	; 0x30
 80072fc:	e002      	b.n	8007304 <_ntoa_format+0x70>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80072fe:	2c20      	cmp	r4, #32
 8007300:	f000 809c 	beq.w	800743c <_ntoa_format+0x1a8>
      buf[len++] = '0';
 8007304:	3401      	adds	r4, #1
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007306:	42b4      	cmp	r4, r6
      buf[len++] = '0';
 8007308:	f802 0f01 	strb.w	r0, [r2, #1]!
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800730c:	d1f7      	bne.n	80072fe <_ntoa_format+0x6a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
 800730e:	f01c 0f10 	tst.w	ip, #16
 8007312:	d033      	beq.n	800737c <_ntoa_format+0xe8>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 8007314:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8007318:	f040 809c 	bne.w	8007454 <_ntoa_format+0x1c0>
 800731c:	2c00      	cmp	r4, #0
 800731e:	f040 8095 	bne.w	800744c <_ntoa_format+0x1b8>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007322:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007324:	2a10      	cmp	r2, #16
 8007326:	f000 80ce 	beq.w	80074c6 <_ntoa_format+0x232>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800732a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800732c:	2a02      	cmp	r2, #2
 800732e:	f000 80e0 	beq.w	80074f2 <_ntoa_format+0x25e>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
 8007332:	2230      	movs	r2, #48	; 0x30
 8007334:	f888 2000 	strb.w	r2, [r8]
 8007338:	2401      	movs	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
    if (negative) {
 800733a:	f1ba 0f00 	cmp.w	sl, #0
 800733e:	f000 8096 	beq.w	800746e <_ntoa_format+0x1da>
      buf[len++] = '-';
 8007342:	222d      	movs	r2, #45	; 0x2d
 8007344:	f808 2004 	strb.w	r2, [r8, r4]
 8007348:	3401      	adds	r4, #1
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 800734a:	f01c 0f03 	tst.w	ip, #3
 800734e:	d101      	bne.n	8007354 <_ntoa_format+0xc0>
    for (size_t i = len; i < width; i++) {
 8007350:	42b4      	cmp	r4, r6
 8007352:	d31b      	bcc.n	800738c <_ntoa_format+0xf8>
 8007354:	46ba      	mov	sl, r7
 8007356:	e02f      	b.n	80073b8 <_ntoa_format+0x124>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007358:	f01c 0f20 	tst.w	ip, #32
 800735c:	f040 80bb 	bne.w	80074d6 <_ntoa_format+0x242>
 8007360:	2c20      	cmp	r4, #32
 8007362:	d00d      	beq.n	8007380 <_ntoa_format+0xec>
 8007364:	eb08 0004 	add.w	r0, r8, r4
 8007368:	3401      	adds	r4, #1
      buf[len++] = 'x';
 800736a:	2278      	movs	r2, #120	; 0x78
 800736c:	7002      	strb	r2, [r0, #0]
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
 800736e:	2c20      	cmp	r4, #32
 8007370:	d006      	beq.n	8007380 <_ntoa_format+0xec>
 8007372:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = '0';
 8007376:	2030      	movs	r0, #48	; 0x30
 8007378:	3401      	adds	r4, #1
 800737a:	7010      	strb	r0, [r2, #0]
  if (len < PRINTF_NTOA_BUFFER_SIZE) {
 800737c:	2c20      	cmp	r4, #32
 800737e:	d1dc      	bne.n	800733a <_ntoa_format+0xa6>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8007380:	f01c 0f03 	tst.w	ip, #3
 8007384:	d116      	bne.n	80073b4 <_ntoa_format+0x120>
 8007386:	2420      	movs	r4, #32
    for (size_t i = len; i < width; i++) {
 8007388:	42a6      	cmp	r6, r4
 800738a:	d979      	bls.n	8007480 <_ntoa_format+0x1ec>
 800738c:	eb07 0a06 	add.w	sl, r7, r6
 8007390:	ebaa 0a04 	sub.w	sl, sl, r4
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 8007394:	9401      	str	r4, [sp, #4]
 8007396:	46bb      	mov	fp, r7
 8007398:	461c      	mov	r4, r3
      out(' ', buffer, idx++, maxlen);
 800739a:	465a      	mov	r2, fp
 800739c:	4623      	mov	r3, r4
 800739e:	f10b 0b01 	add.w	fp, fp, #1
 80073a2:	4649      	mov	r1, r9
 80073a4:	2020      	movs	r0, #32
 80073a6:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
 80073a8:	45d3      	cmp	fp, sl
 80073aa:	d1f6      	bne.n	800739a <_ntoa_format+0x106>
  while (len) {
 80073ac:	4623      	mov	r3, r4
 80073ae:	9c01      	ldr	r4, [sp, #4]
 80073b0:	b914      	cbnz	r4, 80073b8 <_ntoa_format+0x124>
 80073b2:	e012      	b.n	80073da <_ntoa_format+0x146>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80073b4:	46ba      	mov	sl, r7
 80073b6:	2420      	movs	r4, #32
 80073b8:	44a2      	add	sl, r4
 80073ba:	9611      	str	r6, [sp, #68]	; 0x44
 80073bc:	4444      	add	r4, r8
 80073be:	eb08 0b0a 	add.w	fp, r8, sl
 80073c2:	461e      	mov	r6, r3
 80073c4:	ebab 0204 	sub.w	r2, fp, r4
    out(buf[--len], buffer, idx++, maxlen);
 80073c8:	f814 0d01 	ldrb.w	r0, [r4, #-1]!
 80073cc:	4633      	mov	r3, r6
 80073ce:	4649      	mov	r1, r9
 80073d0:	47a8      	blx	r5
  while (len) {
 80073d2:	4544      	cmp	r4, r8
 80073d4:	d1f6      	bne.n	80073c4 <_ntoa_format+0x130>
 80073d6:	4633      	mov	r3, r6
 80073d8:	9e11      	ldr	r6, [sp, #68]	; 0x44
  if (flags & FLAGS_LEFT) {
 80073da:	9a00      	ldr	r2, [sp, #0]
 80073dc:	b1ca      	cbz	r2, 8007412 <_ntoa_format+0x17e>
    while (idx - start_idx < width) {
 80073de:	ebaa 0407 	sub.w	r4, sl, r7
 80073e2:	42a6      	cmp	r6, r4
 80073e4:	d915      	bls.n	8007412 <_ntoa_format+0x17e>
 80073e6:	4698      	mov	r8, r3
      out(' ', buffer, idx++, maxlen);
 80073e8:	193a      	adds	r2, r7, r4
 80073ea:	4643      	mov	r3, r8
 80073ec:	4649      	mov	r1, r9
 80073ee:	3401      	adds	r4, #1
 80073f0:	2020      	movs	r0, #32
 80073f2:	47a8      	blx	r5
    while (idx - start_idx < width) {
 80073f4:	42a6      	cmp	r6, r4
 80073f6:	d8f7      	bhi.n	80073e8 <_ntoa_format+0x154>
 80073f8:	1e7b      	subs	r3, r7, #1
 80073fa:	4433      	add	r3, r6
 80073fc:	f1c7 0701 	rsb	r7, r7, #1
 8007400:	eba3 030a 	sub.w	r3, r3, sl
 8007404:	4457      	add	r7, sl
 8007406:	42b7      	cmp	r7, r6
 8007408:	bf88      	it	hi
 800740a:	2300      	movhi	r3, #0
 800740c:	f10a 0a01 	add.w	sl, sl, #1
 8007410:	449a      	add	sl, r3
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
 8007412:	4650      	mov	r0, sl
 8007414:	b003      	add	sp, #12
 8007416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 800741a:	f01c 0001 	ands.w	r0, ip, #1
 800741e:	d033      	beq.n	8007488 <_ntoa_format+0x1f4>
 8007420:	f1ba 0f00 	cmp.w	sl, #0
 8007424:	d13d      	bne.n	80074a2 <_ntoa_format+0x20e>
 8007426:	f01c 0f0c 	tst.w	ip, #12
 800742a:	d13a      	bne.n	80074a2 <_ntoa_format+0x20e>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800742c:	4574      	cmp	r4, lr
 800742e:	f4bf af5d 	bcs.w	80072ec <_ntoa_format+0x58>
 8007432:	2c1f      	cmp	r4, #31
 8007434:	f67f af4d 	bls.w	80072d2 <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007438:	2e20      	cmp	r6, #32
 800743a:	d92b      	bls.n	8007494 <_ntoa_format+0x200>
  if (flags & FLAGS_HASH) {
 800743c:	f01c 0f10 	tst.w	ip, #16
 8007440:	d09e      	beq.n	8007380 <_ntoa_format+0xec>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 8007442:	f41c 6f80 	tst.w	ip, #1024	; 0x400
 8007446:	f04f 0420 	mov.w	r4, #32
 800744a:	d103      	bne.n	8007454 <_ntoa_format+0x1c0>
 800744c:	45a6      	cmp	lr, r4
 800744e:	d02a      	beq.n	80074a6 <_ntoa_format+0x212>
 8007450:	42b4      	cmp	r4, r6
 8007452:	d028      	beq.n	80074a6 <_ntoa_format+0x212>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007454:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007456:	2a10      	cmp	r2, #16
 8007458:	f43f af7e 	beq.w	8007358 <_ntoa_format+0xc4>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800745c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800745e:	2a02      	cmp	r2, #2
 8007460:	d185      	bne.n	800736e <_ntoa_format+0xda>
 8007462:	2c20      	cmp	r4, #32
 8007464:	d08c      	beq.n	8007380 <_ntoa_format+0xec>
 8007466:	eb08 0204 	add.w	r2, r8, r4
 800746a:	3401      	adds	r4, #1
 800746c:	e054      	b.n	8007518 <_ntoa_format+0x284>
    else if (flags & FLAGS_PLUS) {
 800746e:	f01c 0f04 	tst.w	ip, #4
 8007472:	d111      	bne.n	8007498 <_ntoa_format+0x204>
    else if (flags & FLAGS_SPACE) {
 8007474:	f01c 0f08 	tst.w	ip, #8
 8007478:	d120      	bne.n	80074bc <_ntoa_format+0x228>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 800747a:	f01c 0f03 	tst.w	ip, #3
 800747e:	d083      	beq.n	8007388 <_ntoa_format+0xf4>
    for (size_t i = len; i < width; i++) {
 8007480:	46ba      	mov	sl, r7
  while (len) {
 8007482:	2c00      	cmp	r4, #0
 8007484:	d198      	bne.n	80073b8 <_ntoa_format+0x124>
 8007486:	e7a8      	b.n	80073da <_ntoa_format+0x146>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007488:	4574      	cmp	r4, lr
 800748a:	f4bf af40 	bcs.w	800730e <_ntoa_format+0x7a>
 800748e:	2c1f      	cmp	r4, #31
 8007490:	f67f af1f 	bls.w	80072d2 <_ntoa_format+0x3e>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007494:	2420      	movs	r4, #32
 8007496:	e73a      	b.n	800730e <_ntoa_format+0x7a>
      buf[len++] = '+';  // ignore the space if the '+' exists
 8007498:	222b      	movs	r2, #43	; 0x2b
 800749a:	f808 2004 	strb.w	r2, [r8, r4]
 800749e:	3401      	adds	r4, #1
 80074a0:	e753      	b.n	800734a <_ntoa_format+0xb6>
      width--;
 80074a2:	3e01      	subs	r6, #1
 80074a4:	e7c2      	b.n	800742c <_ntoa_format+0x198>
      if (len && (base == 16U)) {
 80074a6:	1e62      	subs	r2, r4, #1
 80074a8:	f43f af3b 	beq.w	8007322 <_ntoa_format+0x8e>
 80074ac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80074ae:	2910      	cmp	r1, #16
 80074b0:	d028      	beq.n	8007504 <_ntoa_format+0x270>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80074b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80074b4:	2902      	cmp	r1, #2
 80074b6:	d02e      	beq.n	8007516 <_ntoa_format+0x282>
 80074b8:	4614      	mov	r4, r2
 80074ba:	e75a      	b.n	8007372 <_ntoa_format+0xde>
      buf[len++] = ' ';
 80074bc:	2220      	movs	r2, #32
 80074be:	f808 2004 	strb.w	r2, [r8, r4]
 80074c2:	3401      	adds	r4, #1
 80074c4:	e741      	b.n	800734a <_ntoa_format+0xb6>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80074c6:	f01c 0f20 	tst.w	ip, #32
 80074ca:	d10d      	bne.n	80074e8 <_ntoa_format+0x254>
      buf[len++] = 'x';
 80074cc:	2278      	movs	r2, #120	; 0x78
 80074ce:	f888 2000 	strb.w	r2, [r8]
 80074d2:	2401      	movs	r4, #1
 80074d4:	e74d      	b.n	8007372 <_ntoa_format+0xde>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80074d6:	2c20      	cmp	r4, #32
 80074d8:	f43f af52 	beq.w	8007380 <_ntoa_format+0xec>
 80074dc:	eb08 0204 	add.w	r2, r8, r4
      buf[len++] = 'X';
 80074e0:	2058      	movs	r0, #88	; 0x58
 80074e2:	3401      	adds	r4, #1
 80074e4:	7010      	strb	r0, [r2, #0]
 80074e6:	e742      	b.n	800736e <_ntoa_format+0xda>
 80074e8:	2258      	movs	r2, #88	; 0x58
 80074ea:	f888 2000 	strb.w	r2, [r8]
 80074ee:	2401      	movs	r4, #1
 80074f0:	e73f      	b.n	8007372 <_ntoa_format+0xde>
      buf[len++] = 'b';
 80074f2:	2262      	movs	r2, #98	; 0x62
 80074f4:	f888 2000 	strb.w	r2, [r8]
 80074f8:	2401      	movs	r4, #1
 80074fa:	e73a      	b.n	8007372 <_ntoa_format+0xde>
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80074fc:	2800      	cmp	r0, #0
 80074fe:	bf08      	it	eq
 8007500:	2600      	moveq	r6, #0
 8007502:	e704      	b.n	800730e <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8007504:	f01c 0f20 	tst.w	ip, #32
        len--;
 8007508:	f1a4 0402 	sub.w	r4, r4, #2
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800750c:	d1e6      	bne.n	80074dc <_ntoa_format+0x248>
 800750e:	eb08 0004 	add.w	r0, r8, r4
 8007512:	4614      	mov	r4, r2
 8007514:	e729      	b.n	800736a <_ntoa_format+0xd6>
 8007516:	4442      	add	r2, r8
      buf[len++] = 'b';
 8007518:	2062      	movs	r0, #98	; 0x62
 800751a:	7010      	strb	r0, [r2, #0]
 800751c:	e727      	b.n	800736e <_ntoa_format+0xda>
 800751e:	bf00      	nop

08007520 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8007520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007524:	b093      	sub	sp, #76	; 0x4c
 8007526:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8007528:	f89d 4074 	ldrb.w	r4, [sp, #116]	; 0x74
 800752c:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 800752e:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 8007532:	9409      	str	r4, [sp, #36]	; 0x24
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 8007534:	b92d      	cbnz	r5, 8007542 <_ntoa_long+0x22>
    flags &= ~FLAGS_HASH;
 8007536:	f02a 0410 	bic.w	r4, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 800753a:	f41a 6f80 	tst.w	sl, #1024	; 0x400
    flags &= ~FLAGS_HASH;
 800753e:	46a2      	mov	sl, r4
  if (!(flags & FLAGS_PRECISION) || value) {
 8007540:	d134      	bne.n	80075ac <_ntoa_long+0x8c>
 8007542:	f01a 0f20 	tst.w	sl, #32
 8007546:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800754a:	bf14      	ite	ne
 800754c:	f04f 0937 	movne.w	r9, #55	; 0x37
 8007550:	f04f 0957 	moveq.w	r9, #87	; 0x57
 8007554:	46d8      	mov	r8, fp
 8007556:	2700      	movs	r7, #0
 8007558:	e002      	b.n	8007560 <_ntoa_long+0x40>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800755a:	2f20      	cmp	r7, #32
 800755c:	d015      	beq.n	800758a <_ntoa_long+0x6a>
      value /= base;
 800755e:	4675      	mov	r5, lr
      const char digit = (char)(value % base);
 8007560:	fbb5 fef6 	udiv	lr, r5, r6
 8007564:	fb06 5c1e 	mls	ip, r6, lr, r5
 8007568:	fa5f f48c 	uxtb.w	r4, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800756c:	f1bc 0f09 	cmp.w	ip, #9
 8007570:	f104 0c30 	add.w	ip, r4, #48	; 0x30
 8007574:	bf8a      	itet	hi
 8007576:	444c      	addhi	r4, r9
 8007578:	fa5f f48c 	uxtbls.w	r4, ip
 800757c:	b2e4      	uxtbhi	r4, r4
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800757e:	42b5      	cmp	r5, r6
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007580:	f808 4b01 	strb.w	r4, [r8], #1
 8007584:	f107 0701 	add.w	r7, r7, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007588:	d2e7      	bcs.n	800755a <_ntoa_long+0x3a>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 800758a:	9c20      	ldr	r4, [sp, #128]	; 0x80
 800758c:	9405      	str	r4, [sp, #20]
 800758e:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8007590:	f8cd a018 	str.w	sl, [sp, #24]
 8007594:	e9cd 6403 	strd	r6, r4, [sp, #12]
 8007598:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800759a:	f8cd b000 	str.w	fp, [sp]
 800759e:	e9cd 7401 	strd	r7, r4, [sp, #4]
 80075a2:	f7ff fe77 	bl	8007294 <_ntoa_format>
}
 80075a6:	b013      	add	sp, #76	; 0x4c
 80075a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  size_t len = 0U;
 80075ac:	462f      	mov	r7, r5
 80075ae:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 80075b2:	e7ea      	b.n	800758a <_ntoa_long+0x6a>

080075b4 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 80075b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075b8:	ed2d 8b04 	vpush	{d8-d9}
 80075bc:	b093      	sub	sp, #76	; 0x4c
 80075be:	e9dd 4520 	ldrd	r4, r5, [sp, #128]	; 0x80
 80075c2:	469b      	mov	fp, r3
 80075c4:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 80075c8:	9308      	str	r3, [sp, #32]
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
 80075ca:	ea54 0305 	orrs.w	r3, r4, r5
{
 80075ce:	e9dd 8924 	ldrd	r8, r9, [sp, #144]	; 0x90
 80075d2:	ee08 0a10 	vmov	s16, r0
 80075d6:	ee08 1a90 	vmov	s17, r1
 80075da:	ee09 2a10 	vmov	s18, r2
  if (!value) {
 80075de:	d106      	bne.n	80075ee <_ntoa_long_long+0x3a>
    flags &= ~FLAGS_HASH;
 80075e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 80075e2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    flags &= ~FLAGS_HASH;
 80075e4:	f023 0310 	bic.w	r3, r3, #16
 80075e8:	9328      	str	r3, [sp, #160]	; 0xa0
  if (!(flags & FLAGS_PRECISION) || value) {
 80075ea:	0553      	lsls	r3, r2, #21
 80075ec:	d440      	bmi.n	8007670 <_ntoa_long_long+0xbc>
 80075ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80075f0:	f013 0f20 	tst.w	r3, #32
 80075f4:	ab0a      	add	r3, sp, #40	; 0x28
 80075f6:	9309      	str	r3, [sp, #36]	; 0x24
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 80075f8:	bf14      	ite	ne
 80075fa:	f04f 0a37 	movne.w	sl, #55	; 0x37
 80075fe:	f04f 0a57 	moveq.w	sl, #87	; 0x57
 8007602:	461f      	mov	r7, r3
 8007604:	2600      	movs	r6, #0
 8007606:	e003      	b.n	8007610 <_ntoa_long_long+0x5c>
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8007608:	2e20      	cmp	r6, #32
 800760a:	d017      	beq.n	800763c <_ntoa_long_long+0x88>
      value /= base;
 800760c:	4604      	mov	r4, r0
 800760e:	460d      	mov	r5, r1
      const char digit = (char)(value % base);
 8007610:	4642      	mov	r2, r8
 8007612:	464b      	mov	r3, r9
 8007614:	4620      	mov	r0, r4
 8007616:	4629      	mov	r1, r5
 8007618:	f7fe faa8 	bl	8005b6c <__aeabi_uldivmod>
 800761c:	b2d2      	uxtb	r2, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800761e:	2a09      	cmp	r2, #9
 8007620:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8007624:	bf8a      	itet	hi
 8007626:	4452      	addhi	r2, sl
 8007628:	b2da      	uxtbls	r2, r3
 800762a:	b2d2      	uxtbhi	r2, r2
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800762c:	454d      	cmp	r5, r9
 800762e:	bf08      	it	eq
 8007630:	4544      	cmpeq	r4, r8
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 8007632:	f807 2b01 	strb.w	r2, [r7], #1
 8007636:	f106 0601 	add.w	r6, r6, #1
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 800763a:	d2e5      	bcs.n	8007608 <_ntoa_long_long+0x54>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 800763c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800763e:	9306      	str	r3, [sp, #24]
 8007640:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8007642:	9305      	str	r3, [sp, #20]
 8007644:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007646:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800764a:	9b08      	ldr	r3, [sp, #32]
 800764c:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8007650:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007652:	9300      	str	r3, [sp, #0]
 8007654:	ee19 2a10 	vmov	r2, s18
 8007658:	ee18 1a90 	vmov	r1, s17
 800765c:	ee18 0a10 	vmov	r0, s16
 8007660:	465b      	mov	r3, fp
 8007662:	f7ff fe17 	bl	8007294 <_ntoa_format>
}
 8007666:	b013      	add	sp, #76	; 0x4c
 8007668:	ecbd 8b04 	vpop	{d8-d9}
 800766c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007670:	ab0a      	add	r3, sp, #40	; 0x28
  size_t len = 0U;
 8007672:	2600      	movs	r6, #0
 8007674:	9309      	str	r3, [sp, #36]	; 0x24
 8007676:	e7e1      	b.n	800763c <_ntoa_long_long+0x88>

08007678 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
 8007678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
 800767c:	4eca      	ldr	r6, [pc, #808]	; (80079a8 <_vsnprintf+0x330>)
{
 800767e:	b091      	sub	sp, #68	; 0x44
 8007680:	461c      	mov	r4, r3
  }

  while (*format)
 8007682:	781b      	ldrb	r3, [r3, #0]
 8007684:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    out = _out_null;
 8007686:	f1b1 0a00 	subs.w	sl, r1, #0
{
 800768a:	4691      	mov	r9, r2
    out = _out_null;
 800768c:	bf14      	ite	ne
 800768e:	4683      	movne	fp, r0
 8007690:	46b3      	moveq	fp, r6
  while (*format)
 8007692:	2b00      	cmp	r3, #0
 8007694:	f000 8279 	beq.w	8007b8a <_vsnprintf+0x512>
 8007698:	f04f 0800 	mov.w	r8, #0
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 800769c:	4618      	mov	r0, r3
 800769e:	e00a      	b.n	80076b6 <_vsnprintf+0x3e>
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default :
        out(*format, buffer, idx++, maxlen);
 80076a0:	4642      	mov	r2, r8
 80076a2:	464b      	mov	r3, r9
 80076a4:	4651      	mov	r1, sl
 80076a6:	f108 0801 	add.w	r8, r8, #1
        format++;
 80076aa:	3401      	adds	r4, #1
        out(*format, buffer, idx++, maxlen);
 80076ac:	47d8      	blx	fp
  while (*format)
 80076ae:	7820      	ldrb	r0, [r4, #0]
 80076b0:	2800      	cmp	r0, #0
 80076b2:	f000 8125 	beq.w	8007900 <_vsnprintf+0x288>
    if (*format != '%') {
 80076b6:	2825      	cmp	r0, #37	; 0x25
 80076b8:	d1f2      	bne.n	80076a0 <_vsnprintf+0x28>
      format++;
 80076ba:	1c63      	adds	r3, r4, #1
    flags = 0U;
 80076bc:	2100      	movs	r1, #0
 80076be:	461c      	mov	r4, r3
      switch (*format) {
 80076c0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80076c4:	f1a0 0220 	sub.w	r2, r0, #32
 80076c8:	2a10      	cmp	r2, #16
 80076ca:	d80a      	bhi.n	80076e2 <_vsnprintf+0x6a>
 80076cc:	e8df f002 	tbb	[pc, r2]
 80076d0:	3809093b 	.word	0x3809093b
 80076d4:	09090909 	.word	0x09090909
 80076d8:	35090909 	.word	0x35090909
 80076dc:	09093209 	.word	0x09093209
 80076e0:	2f          	.byte	0x2f
 80076e1:	00          	.byte	0x00
    if (_is_digit(*format)) {
 80076e2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80076e6:	2b09      	cmp	r3, #9
 80076e8:	f240 80eb 	bls.w	80078c2 <_vsnprintf+0x24a>
    else if (*format == '*') {
 80076ec:	282a      	cmp	r0, #42	; 0x2a
 80076ee:	f000 8115 	beq.w	800791c <_vsnprintf+0x2a4>
    width = 0U;
 80076f2:	2600      	movs	r6, #0
    if (*format == '.') {
 80076f4:	282e      	cmp	r0, #46	; 0x2e
 80076f6:	f000 80f4 	beq.w	80078e2 <_vsnprintf+0x26a>
    precision = 0U;
 80076fa:	2700      	movs	r7, #0
    switch (*format) {
 80076fc:	f1a0 0368 	sub.w	r3, r0, #104	; 0x68
 8007700:	2b12      	cmp	r3, #18
 8007702:	d82a      	bhi.n	800775a <_vsnprintf+0xe2>
 8007704:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007708:	00290152 	.word	0x00290152
 800770c:	0029014a 	.word	0x0029014a
 8007710:	00290022 	.word	0x00290022
 8007714:	00290029 	.word	0x00290029
 8007718:	00290029 	.word	0x00290029
 800771c:	00290029 	.word	0x00290029
 8007720:	002900d8 	.word	0x002900d8
 8007724:	00290029 	.word	0x00290029
 8007728:	00290029 	.word	0x00290029
 800772c:	00d8      	.short	0x00d8
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 800772e:	f041 0101 	orr.w	r1, r1, #1
    } while (n);
 8007732:	e7c4      	b.n	80076be <_vsnprintf+0x46>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 8007734:	f041 0102 	orr.w	r1, r1, #2
    } while (n);
 8007738:	e7c1      	b.n	80076be <_vsnprintf+0x46>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 800773a:	f041 0104 	orr.w	r1, r1, #4
    } while (n);
 800773e:	e7be      	b.n	80076be <_vsnprintf+0x46>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 8007740:	f041 0110 	orr.w	r1, r1, #16
    } while (n);
 8007744:	e7bb      	b.n	80076be <_vsnprintf+0x46>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 8007746:	f041 0108 	orr.w	r1, r1, #8
    } while (n);
 800774a:	e7b8      	b.n	80076be <_vsnprintf+0x46>
        if (*format == 'l') {
 800774c:	7860      	ldrb	r0, [r4, #1]
 800774e:	286c      	cmp	r0, #108	; 0x6c
 8007750:	f000 820e 	beq.w	8007b70 <_vsnprintf+0x4f8>
        flags |= FLAGS_LONG;
 8007754:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 8007758:	3401      	adds	r4, #1
    switch (*format) {
 800775a:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
 800775e:	2b53      	cmp	r3, #83	; 0x53
 8007760:	d89e      	bhi.n	80076a0 <_vsnprintf+0x28>
 8007762:	a201      	add	r2, pc, #4	; (adr r2, 8007768 <_vsnprintf+0xf0>)
 8007764:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007768:	080079bd 	.word	0x080079bd
 800776c:	080076a1 	.word	0x080076a1
 8007770:	080076a1 	.word	0x080076a1
 8007774:	080076a1 	.word	0x080076a1
 8007778:	080076a1 	.word	0x080076a1
 800777c:	080076a1 	.word	0x080076a1
 8007780:	080076a1 	.word	0x080076a1
 8007784:	080076a1 	.word	0x080076a1
 8007788:	080076a1 	.word	0x080076a1
 800778c:	080076a1 	.word	0x080076a1
 8007790:	080076a1 	.word	0x080076a1
 8007794:	080076a1 	.word	0x080076a1
 8007798:	080076a1 	.word	0x080076a1
 800779c:	080076a1 	.word	0x080076a1
 80077a0:	080076a1 	.word	0x080076a1
 80077a4:	080076a1 	.word	0x080076a1
 80077a8:	080076a1 	.word	0x080076a1
 80077ac:	080076a1 	.word	0x080076a1
 80077b0:	080076a1 	.word	0x080076a1
 80077b4:	080076a1 	.word	0x080076a1
 80077b8:	080076a1 	.word	0x080076a1
 80077bc:	080076a1 	.word	0x080076a1
 80077c0:	080076a1 	.word	0x080076a1
 80077c4:	080076a1 	.word	0x080076a1
 80077c8:	080076a1 	.word	0x080076a1
 80077cc:	080076a1 	.word	0x080076a1
 80077d0:	080076a1 	.word	0x080076a1
 80077d4:	080076a1 	.word	0x080076a1
 80077d8:	080076a1 	.word	0x080076a1
 80077dc:	080076a1 	.word	0x080076a1
 80077e0:	080076a1 	.word	0x080076a1
 80077e4:	080076a1 	.word	0x080076a1
 80077e8:	080076a1 	.word	0x080076a1
 80077ec:	080076a1 	.word	0x080076a1
 80077f0:	080076a1 	.word	0x080076a1
 80077f4:	080076a1 	.word	0x080076a1
 80077f8:	080076a1 	.word	0x080076a1
 80077fc:	080076a1 	.word	0x080076a1
 8007800:	080076a1 	.word	0x080076a1
 8007804:	080076a1 	.word	0x080076a1
 8007808:	080076a1 	.word	0x080076a1
 800780c:	080076a1 	.word	0x080076a1
 8007810:	080076a1 	.word	0x080076a1
 8007814:	080076a1 	.word	0x080076a1
 8007818:	080076a1 	.word	0x080076a1
 800781c:	080076a1 	.word	0x080076a1
 8007820:	080076a1 	.word	0x080076a1
 8007824:	080076a1 	.word	0x080076a1
 8007828:	080076a1 	.word	0x080076a1
 800782c:	080076a1 	.word	0x080076a1
 8007830:	080076a1 	.word	0x080076a1
 8007834:	08007931 	.word	0x08007931
 8007838:	080076a1 	.word	0x080076a1
 800783c:	080076a1 	.word	0x080076a1
 8007840:	080076a1 	.word	0x080076a1
 8007844:	080076a1 	.word	0x080076a1
 8007848:	080076a1 	.word	0x080076a1
 800784c:	080076a1 	.word	0x080076a1
 8007850:	080076a1 	.word	0x080076a1
 8007854:	080076a1 	.word	0x080076a1
 8007858:	080076a1 	.word	0x080076a1
 800785c:	08007931 	.word	0x08007931
 8007860:	08007a91 	.word	0x08007a91
 8007864:	08007931 	.word	0x08007931
 8007868:	080076a1 	.word	0x080076a1
 800786c:	080076a1 	.word	0x080076a1
 8007870:	080076a1 	.word	0x080076a1
 8007874:	080076a1 	.word	0x080076a1
 8007878:	08007931 	.word	0x08007931
 800787c:	080076a1 	.word	0x080076a1
 8007880:	080076a1 	.word	0x080076a1
 8007884:	080076a1 	.word	0x080076a1
 8007888:	080076a1 	.word	0x080076a1
 800788c:	080076a1 	.word	0x080076a1
 8007890:	08007931 	.word	0x08007931
 8007894:	08007a65 	.word	0x08007a65
 8007898:	080076a1 	.word	0x080076a1
 800789c:	080076a1 	.word	0x080076a1
 80078a0:	080079d1 	.word	0x080079d1
 80078a4:	080076a1 	.word	0x080076a1
 80078a8:	08007931 	.word	0x08007931
 80078ac:	080076a1 	.word	0x080076a1
 80078b0:	080076a1 	.word	0x080076a1
 80078b4:	08007931 	.word	0x08007931
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 80078b8:	7860      	ldrb	r0, [r4, #1]
 80078ba:	f441 7180 	orr.w	r1, r1, #256	; 0x100
        format++;
 80078be:	3401      	adds	r4, #1
        break;
 80078c0:	e74b      	b.n	800775a <_vsnprintf+0xe2>
  unsigned int i = 0U;
 80078c2:	2600      	movs	r6, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 80078c4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 80078c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
  while (_is_digit(**str)) {
 80078cc:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80078d0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80078d4:	2b09      	cmp	r3, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 80078d6:	f1a6 0630 	sub.w	r6, r6, #48	; 0x30
  while (_is_digit(**str)) {
 80078da:	d9f3      	bls.n	80078c4 <_vsnprintf+0x24c>
    if (*format == '.') {
 80078dc:	282e      	cmp	r0, #46	; 0x2e
 80078de:	f47f af0c 	bne.w	80076fa <_vsnprintf+0x82>
      if (_is_digit(*format)) {
 80078e2:	7860      	ldrb	r0, [r4, #1]
 80078e4:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 80078e8:	2a09      	cmp	r2, #9
      flags |= FLAGS_PRECISION;
 80078ea:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
      format++;
 80078ee:	f104 0301 	add.w	r3, r4, #1
      if (_is_digit(*format)) {
 80078f2:	f240 80e7 	bls.w	8007ac4 <_vsnprintf+0x44c>
      else if (*format == '*') {
 80078f6:	282a      	cmp	r0, #42	; 0x2a
 80078f8:	f000 80f3 	beq.w	8007ae2 <_vsnprintf+0x46a>
      format++;
 80078fc:	461c      	mov	r4, r3
 80078fe:	e6fc      	b.n	80076fa <_vsnprintf+0x82>
 8007900:	4644      	mov	r4, r8
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 8007902:	45c1      	cmp	r9, r8
 8007904:	d801      	bhi.n	800790a <_vsnprintf+0x292>
 8007906:	f109 38ff 	add.w	r8, r9, #4294967295	; 0xffffffff
 800790a:	464b      	mov	r3, r9
 800790c:	4642      	mov	r2, r8
 800790e:	4651      	mov	r1, sl
 8007910:	2000      	movs	r0, #0
 8007912:	47d8      	blx	fp

  // return written chars without terminating \0
  return (int)idx;
}
 8007914:	4620      	mov	r0, r4
 8007916:	b011      	add	sp, #68	; 0x44
 8007918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      const int w = va_arg(va, int);
 800791c:	f855 6b04 	ldr.w	r6, [r5], #4
      if (w < 0) {
 8007920:	7860      	ldrb	r0, [r4, #1]
 8007922:	2e00      	cmp	r6, #0
        flags |= FLAGS_LEFT;    // reverse padding
 8007924:	bfbc      	itt	lt
 8007926:	f041 0102 	orrlt.w	r1, r1, #2
        width = (unsigned int)-w;
 800792a:	4276      	neglt	r6, r6
      format++;
 800792c:	3401      	adds	r4, #1
 800792e:	e6e1      	b.n	80076f4 <_vsnprintf+0x7c>
        if (*format == 'x' || *format == 'X') {
 8007930:	2878      	cmp	r0, #120	; 0x78
 8007932:	f000 8122 	beq.w	8007b7a <_vsnprintf+0x502>
 8007936:	2858      	cmp	r0, #88	; 0x58
 8007938:	f000 80e1 	beq.w	8007afe <_vsnprintf+0x486>
        else if (*format == 'o') {
 800793c:	286f      	cmp	r0, #111	; 0x6f
 800793e:	f000 818a 	beq.w	8007c56 <_vsnprintf+0x5de>
        else if (*format == 'b') {
 8007942:	2862      	cmp	r0, #98	; 0x62
 8007944:	f000 80e5 	beq.w	8007b12 <_vsnprintf+0x49a>
        if ((*format != 'i') && (*format != 'd')) {
 8007948:	2869      	cmp	r0, #105	; 0x69
          flags &= ~FLAGS_HASH;   // no hash for dec format
 800794a:	f021 0310 	bic.w	r3, r1, #16
          base = 10U;
 800794e:	f04f 0c0a 	mov.w	ip, #10
        if ((*format != 'i') && (*format != 'd')) {
 8007952:	f040 80e1 	bne.w	8007b18 <_vsnprintf+0x4a0>
        if (flags & FLAGS_PRECISION) {
 8007956:	054a      	lsls	r2, r1, #21
 8007958:	f140 80e5 	bpl.w	8007b26 <_vsnprintf+0x4ae>
          flags &= ~FLAGS_ZEROPAD;
 800795c:	f023 0301 	bic.w	r3, r3, #1
        if ((*format == 'i') || (*format == 'd')) {
 8007960:	2869      	cmp	r0, #105	; 0x69
 8007962:	f000 80e0 	beq.w	8007b26 <_vsnprintf+0x4ae>
 8007966:	2864      	cmp	r0, #100	; 0x64
 8007968:	f000 80dd 	beq.w	8007b26 <_vsnprintf+0x4ae>
          if (flags & FLAGS_LONG_LONG) {
 800796c:	f413 7200 	ands.w	r2, r3, #512	; 0x200
 8007970:	f040 8175 	bne.w	8007c5e <_vsnprintf+0x5e6>
          else if (flags & FLAGS_LONG) {
 8007974:	05d8      	lsls	r0, r3, #23
 8007976:	f100 819a 	bmi.w	8007cae <_vsnprintf+0x636>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
 800797a:	0659      	lsls	r1, r3, #25
 800797c:	f855 2b04 	ldr.w	r2, [r5], #4
 8007980:	f100 817f 	bmi.w	8007c82 <_vsnprintf+0x60a>
 8007984:	0618      	lsls	r0, r3, #24
 8007986:	bf48      	it	mi
 8007988:	b292      	uxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 800798a:	2100      	movs	r1, #0
 800798c:	9200      	str	r2, [sp, #0]
 800798e:	e9cd 6304 	strd	r6, r3, [sp, #16]
 8007992:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007996:	4642      	mov	r2, r8
 8007998:	9101      	str	r1, [sp, #4]
 800799a:	e0dd      	b.n	8007b58 <_vsnprintf+0x4e0>
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 800799c:	7860      	ldrb	r0, [r4, #1]
 800799e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
        format++;
 80079a2:	3401      	adds	r4, #1
        break;
 80079a4:	e6d9      	b.n	800775a <_vsnprintf+0xe2>
 80079a6:	bf00      	nop
 80079a8:	08007291 	.word	0x08007291
        if (*format == 'h') {
 80079ac:	7860      	ldrb	r0, [r4, #1]
 80079ae:	2868      	cmp	r0, #104	; 0x68
 80079b0:	f000 80d9 	beq.w	8007b66 <_vsnprintf+0x4ee>
        flags |= FLAGS_SHORT;
 80079b4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
        format++;
 80079b8:	3401      	adds	r4, #1
 80079ba:	e6ce      	b.n	800775a <_vsnprintf+0xe2>
        out('%', buffer, idx++, maxlen);
 80079bc:	f108 0601 	add.w	r6, r8, #1
 80079c0:	4642      	mov	r2, r8
 80079c2:	464b      	mov	r3, r9
 80079c4:	4651      	mov	r1, sl
 80079c6:	2025      	movs	r0, #37	; 0x25
        format++;
 80079c8:	3401      	adds	r4, #1
        out('%', buffer, idx++, maxlen);
 80079ca:	46b0      	mov	r8, r6
 80079cc:	47d8      	blx	fp
        break;
 80079ce:	e66e      	b.n	80076ae <_vsnprintf+0x36>
        const char* p = va_arg(va, char*);
 80079d0:	462a      	mov	r2, r5
 80079d2:	f852 3b04 	ldr.w	r3, [r2], #4
 80079d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80079d8:	920d      	str	r2, [sp, #52]	; 0x34
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 80079da:	2f00      	cmp	r7, #0
 80079dc:	f040 8088 	bne.w	8007af0 <_vsnprintf+0x478>
  for (s = str; *s && maxsize--; ++s);
 80079e0:	7818      	ldrb	r0, [r3, #0]
 80079e2:	f06f 0501 	mvn.w	r5, #1
 80079e6:	2800      	cmp	r0, #0
 80079e8:	f000 8174 	beq.w	8007cd4 <_vsnprintf+0x65c>
 80079ec:	1c6b      	adds	r3, r5, #1
 80079ee:	461a      	mov	r2, r3
 80079f0:	930c      	str	r3, [sp, #48]	; 0x30
 80079f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80079f4:	189d      	adds	r5, r3, r2
 80079f6:	e001      	b.n	80079fc <_vsnprintf+0x384>
 80079f8:	429d      	cmp	r5, r3
 80079fa:	d006      	beq.n	8007a0a <_vsnprintf+0x392>
 80079fc:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8007a00:	2a00      	cmp	r2, #0
 8007a02:	d1f9      	bne.n	80079f8 <_vsnprintf+0x380>
 8007a04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007a06:	1a9b      	subs	r3, r3, r2
 8007a08:	930c      	str	r3, [sp, #48]	; 0x30
        if (flags & FLAGS_PRECISION) {
 8007a0a:	f411 6380 	ands.w	r3, r1, #1024	; 0x400
 8007a0e:	930e      	str	r3, [sp, #56]	; 0x38
 8007a10:	d004      	beq.n	8007a1c <_vsnprintf+0x3a4>
          l = (l < precision ? l : precision);
 8007a12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007a14:	42bb      	cmp	r3, r7
 8007a16:	bf28      	it	cs
 8007a18:	463b      	movcs	r3, r7
 8007a1a:	930c      	str	r3, [sp, #48]	; 0x30
        if (!(flags & FLAGS_LEFT)) {
 8007a1c:	f011 0302 	ands.w	r3, r1, #2
 8007a20:	930f      	str	r3, [sp, #60]	; 0x3c
 8007a22:	f000 80e0 	beq.w	8007be6 <_vsnprintf+0x56e>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007a26:	2800      	cmp	r0, #0
 8007a28:	f000 80cb 	beq.w	8007bc2 <_vsnprintf+0x54a>
 8007a2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007a2e:	960b      	str	r6, [sp, #44]	; 0x2c
 8007a30:	4642      	mov	r2, r8
 8007a32:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8007a34:	e000      	b.n	8007a38 <_vsnprintf+0x3c0>
          out(*(p++), buffer, idx++, maxlen);
 8007a36:	4642      	mov	r2, r8
 8007a38:	464b      	mov	r3, r9
 8007a3a:	4651      	mov	r1, sl
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007a3c:	b11e      	cbz	r6, 8007a46 <_vsnprintf+0x3ce>
 8007a3e:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8007a42:	b13f      	cbz	r7, 8007a54 <_vsnprintf+0x3dc>
 8007a44:	4667      	mov	r7, ip
          out(*(p++), buffer, idx++, maxlen);
 8007a46:	47d8      	blx	fp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007a48:	f815 0f01 	ldrb.w	r0, [r5, #1]!
          out(*(p++), buffer, idx++, maxlen);
 8007a4c:	f108 0801 	add.w	r8, r8, #1
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007a50:	2800      	cmp	r0, #0
 8007a52:	d1f0      	bne.n	8007a36 <_vsnprintf+0x3be>
        if (flags & FLAGS_LEFT) {
 8007a54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007a56:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8007a58:	2b00      	cmp	r3, #0
 8007a5a:	f040 80b2 	bne.w	8007bc2 <_vsnprintf+0x54a>
        const char* p = va_arg(va, char*);
 8007a5e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
        format++;
 8007a60:	3401      	adds	r4, #1
        break;
 8007a62:	e624      	b.n	80076ae <_vsnprintf+0x36>
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8007a64:	2208      	movs	r2, #8
 8007a66:	e9cd 7203 	strd	r7, r2, [sp, #12]
 8007a6a:	2300      	movs	r3, #0
 8007a6c:	2210      	movs	r2, #16
 8007a6e:	e9cd 3201 	strd	r3, r2, [sp, #4]
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 8007a72:	f041 0121 	orr.w	r1, r1, #33	; 0x21
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8007a76:	9105      	str	r1, [sp, #20]
 8007a78:	f855 3b04 	ldr.w	r3, [r5], #4
 8007a7c:	9300      	str	r3, [sp, #0]
 8007a7e:	4642      	mov	r2, r8
 8007a80:	464b      	mov	r3, r9
 8007a82:	4651      	mov	r1, sl
 8007a84:	4658      	mov	r0, fp
 8007a86:	f7ff fd4b 	bl	8007520 <_ntoa_long>
        format++;
 8007a8a:	3401      	adds	r4, #1
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8007a8c:	4680      	mov	r8, r0
        break;
 8007a8e:	e60e      	b.n	80076ae <_vsnprintf+0x36>
        if (!(flags & FLAGS_LEFT)) {
 8007a90:	0789      	lsls	r1, r1, #30
 8007a92:	d57d      	bpl.n	8007b90 <_vsnprintf+0x518>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007a94:	f855 0b04 	ldr.w	r0, [r5], #4
 8007a98:	464b      	mov	r3, r9
 8007a9a:	4642      	mov	r2, r8
 8007a9c:	b2c0      	uxtb	r0, r0
 8007a9e:	4651      	mov	r1, sl
 8007aa0:	47d8      	blx	fp
          while (l++ < width) {
 8007aa2:	2e01      	cmp	r6, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007aa4:	f108 0701 	add.w	r7, r8, #1
          while (l++ < width) {
 8007aa8:	bf88      	it	hi
 8007aaa:	4446      	addhi	r6, r8
 8007aac:	d907      	bls.n	8007abe <_vsnprintf+0x446>
            out(' ', buffer, idx++, maxlen);
 8007aae:	463a      	mov	r2, r7
 8007ab0:	464b      	mov	r3, r9
 8007ab2:	3701      	adds	r7, #1
 8007ab4:	4651      	mov	r1, sl
 8007ab6:	2020      	movs	r0, #32
 8007ab8:	47d8      	blx	fp
          while (l++ < width) {
 8007aba:	42b7      	cmp	r7, r6
 8007abc:	d1f7      	bne.n	8007aae <_vsnprintf+0x436>
 8007abe:	46b8      	mov	r8, r7
        format++;
 8007ac0:	3401      	adds	r4, #1
        break;
 8007ac2:	e5f4      	b.n	80076ae <_vsnprintf+0x36>
  unsigned int i = 0U;
 8007ac4:	2700      	movs	r7, #0
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007ac6:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 8007aca:	eb00 0747 	add.w	r7, r0, r7, lsl #1
  while (_is_digit(**str)) {
 8007ace:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8007ad2:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
 8007ad6:	2a09      	cmp	r2, #9
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8007ad8:	f1a7 0730 	sub.w	r7, r7, #48	; 0x30
  while (_is_digit(**str)) {
 8007adc:	d9f3      	bls.n	8007ac6 <_vsnprintf+0x44e>
 8007ade:	461c      	mov	r4, r3
 8007ae0:	e60c      	b.n	80076fc <_vsnprintf+0x84>
        precision = prec > 0 ? (unsigned int)prec : 0U;
 8007ae2:	f855 7b04 	ldr.w	r7, [r5], #4
 8007ae6:	78a0      	ldrb	r0, [r4, #2]
 8007ae8:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
        format++;
 8007aec:	3402      	adds	r4, #2
 8007aee:	e605      	b.n	80076fc <_vsnprintf+0x84>
  for (s = str; *s && maxsize--; ++s);
 8007af0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007af2:	7818      	ldrb	r0, [r3, #0]
 8007af4:	2800      	cmp	r0, #0
 8007af6:	f000 80eb 	beq.w	8007cd0 <_vsnprintf+0x658>
 8007afa:	1e7d      	subs	r5, r7, #1
 8007afc:	e776      	b.n	80079ec <_vsnprintf+0x374>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007afe:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 8007b02:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007b04:	f043 0320 	orr.w	r3, r3, #32
          base = 16U;
 8007b08:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 8007b0c:	f53f af26 	bmi.w	800795c <_vsnprintf+0x2e4>
 8007b10:	e72c      	b.n	800796c <_vsnprintf+0x2f4>
          base =  2U;
 8007b12:	f04f 0c02 	mov.w	ip, #2
        format++;
 8007b16:	460b      	mov	r3, r1
        if ((*format != 'i') && (*format != 'd')) {
 8007b18:	2864      	cmp	r0, #100	; 0x64
 8007b1a:	bf18      	it	ne
 8007b1c:	4619      	movne	r1, r3
 8007b1e:	d12e      	bne.n	8007b7e <_vsnprintf+0x506>
        if (flags & FLAGS_PRECISION) {
 8007b20:	0559      	lsls	r1, r3, #21
 8007b22:	f53f af1b 	bmi.w	800795c <_vsnprintf+0x2e4>
          if (flags & FLAGS_LONG_LONG) {
 8007b26:	0599      	lsls	r1, r3, #22
 8007b28:	d476      	bmi.n	8007c18 <_vsnprintf+0x5a0>
          else if (flags & FLAGS_LONG) {
 8007b2a:	05da      	lsls	r2, r3, #23
 8007b2c:	f100 80b0 	bmi.w	8007c90 <_vsnprintf+0x618>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8007b30:	0658      	lsls	r0, r3, #25
 8007b32:	f855 2b04 	ldr.w	r2, [r5], #4
 8007b36:	f100 80a2 	bmi.w	8007c7e <_vsnprintf+0x606>
 8007b3a:	0619      	lsls	r1, r3, #24
 8007b3c:	bf48      	it	mi
 8007b3e:	b212      	sxthmi	r2, r2
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007b40:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
 8007b44:	0fd0      	lsrs	r0, r2, #31
 8007b46:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
 8007b4a:	e9cd 6304 	strd	r6, r3, [sp, #16]
 8007b4e:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007b52:	e9cd 1000 	strd	r1, r0, [sp]
 8007b56:	4642      	mov	r2, r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 8007b58:	464b      	mov	r3, r9
 8007b5a:	4651      	mov	r1, sl
 8007b5c:	4658      	mov	r0, fp
 8007b5e:	f7ff fcdf 	bl	8007520 <_ntoa_long>
 8007b62:	4680      	mov	r8, r0
        format++;
 8007b64:	e7ac      	b.n	8007ac0 <_vsnprintf+0x448>
          flags |= FLAGS_CHAR;
 8007b66:	78a0      	ldrb	r0, [r4, #2]
 8007b68:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
          format++;
 8007b6c:	3402      	adds	r4, #2
 8007b6e:	e5f4      	b.n	800775a <_vsnprintf+0xe2>
          flags |= FLAGS_LONG_LONG;
 8007b70:	78a0      	ldrb	r0, [r4, #2]
 8007b72:	f441 7140 	orr.w	r1, r1, #768	; 0x300
          format++;
 8007b76:	3402      	adds	r4, #2
 8007b78:	e5ef      	b.n	800775a <_vsnprintf+0xe2>
          base = 16U;
 8007b7a:	f04f 0c10 	mov.w	ip, #16
        if (flags & FLAGS_PRECISION) {
 8007b7e:	054a      	lsls	r2, r1, #21
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8007b80:	f021 030c 	bic.w	r3, r1, #12
        if (flags & FLAGS_PRECISION) {
 8007b84:	f53f aeea 	bmi.w	800795c <_vsnprintf+0x2e4>
 8007b88:	e6ea      	b.n	8007960 <_vsnprintf+0x2e8>
  while (*format)
 8007b8a:	461c      	mov	r4, r3
 8007b8c:	4698      	mov	r8, r3
 8007b8e:	e6b8      	b.n	8007902 <_vsnprintf+0x28a>
          while (l++ < width) {
 8007b90:	2e01      	cmp	r6, #1
 8007b92:	f240 809b 	bls.w	8007ccc <_vsnprintf+0x654>
 8007b96:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8007b9a:	441e      	add	r6, r3
            out(' ', buffer, idx++, maxlen);
 8007b9c:	4642      	mov	r2, r8
 8007b9e:	464b      	mov	r3, r9
 8007ba0:	f108 0801 	add.w	r8, r8, #1
 8007ba4:	4651      	mov	r1, sl
 8007ba6:	2020      	movs	r0, #32
 8007ba8:	47d8      	blx	fp
          while (l++ < width) {
 8007baa:	45b0      	cmp	r8, r6
 8007bac:	d1f6      	bne.n	8007b9c <_vsnprintf+0x524>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8007bae:	f855 0b04 	ldr.w	r0, [r5], #4
 8007bb2:	464b      	mov	r3, r9
 8007bb4:	4632      	mov	r2, r6
 8007bb6:	b2c0      	uxtb	r0, r0
 8007bb8:	4651      	mov	r1, sl
 8007bba:	f106 0801 	add.w	r8, r6, #1
 8007bbe:	47d8      	blx	fp
        if (flags & FLAGS_LEFT) {
 8007bc0:	e77e      	b.n	8007ac0 <_vsnprintf+0x448>
          while (l++ < width) {
 8007bc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007bc4:	429e      	cmp	r6, r3
 8007bc6:	4645      	mov	r5, r8
 8007bc8:	f67f af49 	bls.w	8007a5e <_vsnprintf+0x3e6>
 8007bcc:	eb06 0008 	add.w	r0, r6, r8
 8007bd0:	eba0 0803 	sub.w	r8, r0, r3
            out(' ', buffer, idx++, maxlen);
 8007bd4:	462a      	mov	r2, r5
 8007bd6:	464b      	mov	r3, r9
 8007bd8:	3501      	adds	r5, #1
 8007bda:	4651      	mov	r1, sl
 8007bdc:	2020      	movs	r0, #32
 8007bde:	47d8      	blx	fp
          while (l++ < width) {
 8007be0:	4545      	cmp	r5, r8
 8007be2:	d1f7      	bne.n	8007bd4 <_vsnprintf+0x55c>
 8007be4:	e73b      	b.n	8007a5e <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007be6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007be8:	4296      	cmp	r6, r2
 8007bea:	f102 0301 	add.w	r3, r2, #1
 8007bee:	d968      	bls.n	8007cc2 <_vsnprintf+0x64a>
 8007bf0:	eb06 0508 	add.w	r5, r6, r8
 8007bf4:	1aad      	subs	r5, r5, r2
            out(' ', buffer, idx++, maxlen);
 8007bf6:	4642      	mov	r2, r8
 8007bf8:	464b      	mov	r3, r9
 8007bfa:	f108 0801 	add.w	r8, r8, #1
 8007bfe:	4651      	mov	r1, sl
 8007c00:	2020      	movs	r0, #32
 8007c02:	47d8      	blx	fp
          while (l++ < width) {
 8007c04:	45a8      	cmp	r8, r5
 8007c06:	d1f6      	bne.n	8007bf6 <_vsnprintf+0x57e>
 8007c08:	1c73      	adds	r3, r6, #1
 8007c0a:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007c0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007c0e:	7818      	ldrb	r0, [r3, #0]
 8007c10:	2800      	cmp	r0, #0
 8007c12:	f47f af0b 	bne.w	8007a2c <_vsnprintf+0x3b4>
 8007c16:	e722      	b.n	8007a5e <_vsnprintf+0x3e6>
            const long long value = va_arg(va, long long);
 8007c18:	3507      	adds	r5, #7
 8007c1a:	f025 0507 	bic.w	r5, r5, #7
 8007c1e:	686a      	ldr	r2, [r5, #4]
 8007c20:	f855 eb08 	ldr.w	lr, [r5], #8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007c24:	9308      	str	r3, [sp, #32]
 8007c26:	4670      	mov	r0, lr
 8007c28:	4611      	mov	r1, r2
 8007c2a:	2300      	movs	r3, #0
 8007c2c:	2800      	cmp	r0, #0
 8007c2e:	e9cd c304 	strd	ip, r3, [sp, #16]
 8007c32:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8007c36:	f171 0300 	sbcs.w	r3, r1, #0
 8007c3a:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8007c3e:	9202      	str	r2, [sp, #8]
 8007c40:	db21      	blt.n	8007c86 <_vsnprintf+0x60e>
 8007c42:	e9cd 0100 	strd	r0, r1, [sp]
 8007c46:	4642      	mov	r2, r8
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 8007c48:	464b      	mov	r3, r9
 8007c4a:	4651      	mov	r1, sl
 8007c4c:	4658      	mov	r0, fp
 8007c4e:	f7ff fcb1 	bl	80075b4 <_ntoa_long_long>
 8007c52:	4680      	mov	r8, r0
 8007c54:	e734      	b.n	8007ac0 <_vsnprintf+0x448>
          base =  8U;
 8007c56:	f04f 0c08 	mov.w	ip, #8
        format++;
 8007c5a:	460b      	mov	r3, r1
 8007c5c:	e75c      	b.n	8007b18 <_vsnprintf+0x4a0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
 8007c5e:	2200      	movs	r2, #0
 8007c60:	e9cd c204 	strd	ip, r2, [sp, #16]
 8007c64:	e9cd 6307 	strd	r6, r3, [sp, #28]
 8007c68:	3507      	adds	r5, #7
 8007c6a:	9202      	str	r2, [sp, #8]
 8007c6c:	f025 0507 	bic.w	r5, r5, #7
 8007c70:	9706      	str	r7, [sp, #24]
 8007c72:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8007c76:	4642      	mov	r2, r8
 8007c78:	e9cd 0100 	strd	r0, r1, [sp]
 8007c7c:	e7e4      	b.n	8007c48 <_vsnprintf+0x5d0>
            const int value = (flags & FLAGS_CHAR) ? (signed char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8007c7e:	b252      	sxtb	r2, r2
 8007c80:	e75e      	b.n	8007b40 <_vsnprintf+0x4c8>
 8007c82:	b2d2      	uxtb	r2, r2
 8007c84:	e681      	b.n	800798a <_vsnprintf+0x312>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007c86:	f1de 0000 	rsbs	r0, lr, #0
 8007c8a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007c8e:	e7d8      	b.n	8007c42 <_vsnprintf+0x5ca>
            const long value = va_arg(va, long);
 8007c90:	f855 1b04 	ldr.w	r1, [r5], #4
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8007c94:	9305      	str	r3, [sp, #20]
 8007c96:	2900      	cmp	r1, #0
 8007c98:	ea4f 73d1 	mov.w	r3, r1, lsr #31
 8007c9c:	bfb8      	it	lt
 8007c9e:	4249      	neglt	r1, r1
 8007ca0:	e9cd 7603 	strd	r7, r6, [sp, #12]
 8007ca4:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 8007ca8:	4642      	mov	r2, r8
 8007caa:	9100      	str	r1, [sp, #0]
 8007cac:	e754      	b.n	8007b58 <_vsnprintf+0x4e0>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
 8007cae:	e9cd 6304 	strd	r6, r3, [sp, #16]
 8007cb2:	e9cd c702 	strd	ip, r7, [sp, #8]
 8007cb6:	9201      	str	r2, [sp, #4]
 8007cb8:	f855 3b04 	ldr.w	r3, [r5], #4
 8007cbc:	9300      	str	r3, [sp, #0]
 8007cbe:	4642      	mov	r2, r8
 8007cc0:	e74a      	b.n	8007b58 <_vsnprintf+0x4e0>
          while (l++ < width) {
 8007cc2:	930c      	str	r3, [sp, #48]	; 0x30
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8007cc4:	2800      	cmp	r0, #0
 8007cc6:	f47f aeb1 	bne.w	8007a2c <_vsnprintf+0x3b4>
 8007cca:	e6c8      	b.n	8007a5e <_vsnprintf+0x3e6>
          while (l++ < width) {
 8007ccc:	4646      	mov	r6, r8
 8007cce:	e76e      	b.n	8007bae <_vsnprintf+0x536>
  for (s = str; *s && maxsize--; ++s);
 8007cd0:	900c      	str	r0, [sp, #48]	; 0x30
 8007cd2:	e69a      	b.n	8007a0a <_vsnprintf+0x392>
 8007cd4:	970c      	str	r7, [sp, #48]	; 0x30
 8007cd6:	e698      	b.n	8007a0a <_vsnprintf+0x392>

08007cd8 <_out_fct>:
  if (character) {
 8007cd8:	b110      	cbz	r0, 8007ce0 <_out_fct+0x8>
    ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 8007cda:	e9d1 3100 	ldrd	r3, r1, [r1]
 8007cde:	4718      	bx	r3
}
 8007ce0:	4770      	bx	lr
 8007ce2:	bf00      	nop

08007ce4 <vsnprintf_>:
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
}


int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
{
 8007ce4:	b530      	push	{r4, r5, lr}
 8007ce6:	b083      	sub	sp, #12
 8007ce8:	460d      	mov	r5, r1
 8007cea:	4614      	mov	r4, r2
  return _vsnprintf(_out_buffer, buffer, count, format, va);
 8007cec:	4601      	mov	r1, r0
 8007cee:	9300      	str	r3, [sp, #0]
 8007cf0:	462a      	mov	r2, r5
 8007cf2:	4623      	mov	r3, r4
 8007cf4:	4802      	ldr	r0, [pc, #8]	; (8007d00 <vsnprintf_+0x1c>)
 8007cf6:	f7ff fcbf 	bl	8007678 <_vsnprintf>
}
 8007cfa:	b003      	add	sp, #12
 8007cfc:	bd30      	pop	{r4, r5, pc}
 8007cfe:	bf00      	nop
 8007d00:	08007289 	.word	0x08007289

08007d04 <fctvprintf>:
  va_end(va);
  return ret;
}

int fctvprintf(void (*out)(char character, void* arg), void* arg, const char* format, va_list va)
{
 8007d04:	b530      	push	{r4, r5, lr}
 8007d06:	b085      	sub	sp, #20
 8007d08:	4605      	mov	r5, r0
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007d0a:	9300      	str	r3, [sp, #0]
{
 8007d0c:	460c      	mov	r4, r1
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007d0e:	4613      	mov	r3, r2
 8007d10:	a902      	add	r1, sp, #8
 8007d12:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007d16:	4803      	ldr	r0, [pc, #12]	; (8007d24 <fctvprintf+0x20>)
  const out_fct_wrap_type out_fct_wrap = { out, arg };
 8007d18:	e9cd 5402 	strd	r5, r4, [sp, #8]
  return _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 8007d1c:	f7ff fcac 	bl	8007678 <_vsnprintf>
}
 8007d20:	b005      	add	sp, #20
 8007d22:	bd30      	pop	{r4, r5, pc}
 8007d24:	08007cd9 	.word	0x08007cd9

08007d28 <_init>:
 8007d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d2a:	bf00      	nop
 8007d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007d2e:	bc08      	pop	{r3}
 8007d30:	469e      	mov	lr, r3
 8007d32:	4770      	bx	lr

08007d34 <_fini>:
 8007d34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d36:	bf00      	nop
 8007d38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007d3a:	bc08      	pop	{r3}
 8007d3c:	469e      	mov	lr, r3
 8007d3e:	4770      	bx	lr
